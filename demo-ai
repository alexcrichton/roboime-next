#!/usr/bin/env python3
import sys
from math import sin, cos
print('started', file=sys.stderr)

# INITIAL INPUT:
magic, version = input().split()
if int(version) == 1:
    print('COMPATIBLE 1')
else:
    print('NOT_COMPATIBLE 1')
print('compatible', file=sys.stderr)
i = iter(input().split())
field_with = float(next(i))
field_height = float(next(i))
goal_width = float(next(i))
center_circle_radius = float(next(i))
defense_radius = float(next(i))
defense_stretch = float(next(i))
free_kick_from_defense_dist = float(next(i))
penalty_spot_from_field_line_dist = float(next(i))
penalty_line_from_spot_dist = float(next(i))
print('initialized', file=sys.stderr)

while True:
    # STATE:
    x, y, w = 0, 0, 0
    tx, ty, tw = 0, 0, 0

    # INPUT:
    i = iter(input().split())
    counter = int(next(i))
    timestamp = float(next(i))
    our_score = int(next(i))
    opponent_score = int(next(i))
    ref_state = next(i)
    ref_time_left = float(next(i))
    goalkeeper_id = int(next(i))
    num_robots = int(next(i))
    opponent_num_robots = int(next(i))
    ball_x, ball_y, ball_vx, ball_vy = map(float, input().split())
    for _ in range(num_robots):
        robot_id, robot_x, robot_y, robot_w, robot_vx, robot_vy, robot_vw = map(float, input().split())
        robot_id = int(robot_id)
        if robot_id == 0:
            x, y, w = robot_x, robot_y, robot_w
    for _ in range(opponent_num_robots):
        robot_id, robot_x, robot_y, robot_w, robot_vx, robot_vy, robot_vw = map(float, input().split())
        robot_id = int(robot_id)

    tx, ty, tw = ball_x, ball_y, 0

    # OUTPUT:
    print(counter)
    for i in range(num_robots):
        if i == 0:
            p1 = 0.0004
            p2 = 0.8000
            v_tan  = p1 * ((tx - x) * cos(w) + (ty - y) * sin(w))
            v_norm = p1 * ((ty - y) * cos(w) - (tx - x) * sin(w))
            v_ang = p2 * (tw - w)
            kick_x = 4.0
            kick_z = 0.0
            spin = 1
            print(v_tan, v_norm, v_ang, kick_x, kick_z, spin)
        else:
            v_tan = 0.0
            v_norm = 0.0
            v_ang = 0.0
            kick_x = 0.0
            kick_z = 0.0
            spin = 0
            print(v_tan, v_norm, v_ang, kick_x, kick_z, spin)
