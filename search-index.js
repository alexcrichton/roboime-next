var searchIndex = {};
searchIndex["roboime_next_gui"] = {"doc":"","items":[],"paths":[]};
searchIndex["roboime_next"] = {"doc":"A library for abstracting the most common interfaces and filtering for making an AI for the\nRoboCup&#39;s SSL robot soccer game.","items":[[3,"Error","roboime_next","The error type for this crate.",null,null],[4,"ErrorKind","","General category of errors.",null,null],[13,"Io","","Usually an `io::Error`.",0,null],[13,"Parse","","Usually an `num::Parse*Error`.",0,null],[13,"AiProtocol","","A protocol error communicating with a subprocess AI",0,null],[13,"Sync","","An OS Synchronization error, like `std::sync::PoisonError` or `std::sync::mpsc::RecvError`",0,null],[13,"Other","","Any other error category.",0,null],[11,"from","","",1,{"inputs":[{"name":"ioerror"}],"output":{"name":"self"}}],[11,"from","","",1,{"inputs":[{"name":"parsefloaterror"}],"output":{"name":"self"}}],[11,"from","","",1,{"inputs":[{"name":"parseinterror"}],"output":{"name":"self"}}],[11,"from","","",1,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"self"}}],[11,"from","","",1,{"inputs":[{"name":"poisonerror"}],"output":{"name":"self"}}],[11,"from","","",1,{"inputs":[{"name":"recverror"}],"output":{"name":"self"}}],[11,"from","","",1,{"inputs":[{"name":"senderror"}],"output":{"name":"self"}}],[11,"from","","",1,{"inputs":[{"name":"protobuferror"}],"output":{"name":"self"}}],[11,"from","","",1,{"inputs":[{"name":"addrparseerror"}],"output":{"name":"self"}}],[11,"from","","",1,{"inputs":[{"name":"setloggererror"}],"output":{"name":"self"}}],[11,"from","","",1,{"inputs":[{"name":"varerror"}],"output":{"name":"self"}}],[11,"from","","",1,{"inputs":[{"name":"box"}],"output":{"name":"self"}}],[11,"fmt","","",1,null],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"eq","","",0,null],[11,"new","","Create a new error.",1,{"inputs":[{"name":"errorkind"},{"name":"e"}],"output":{"name":"error"}}],[11,"into_inner","","Consumes the `Error`, returning its inner error (if any).",1,null],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",1,null],[11,"fmt","","",1,null],[11,"description","","",1,null],[11,"cause","","",1,null],[0,"game","","",null,null],[3,"Command","roboime_next::game","",null,null],[12,"color","","",2,null],[12,"robots","","",2,null],[3,"RobotCommand","","",null,null],[12,"v_tangent","","",3,null],[12,"v_normal","","",3,null],[12,"v_angular","","",3,null],[12,"action","","",3,null],[4,"Referee","","",null,null],[13,"Stop","","All robots must stay away from the ball by at least 0.5m.",4,null],[13,"Normal","","This is the normal game play.",4,null],[13,"Avoid","","After some types of kicks the kicker robot cannot touch the ball before it touches another\nrobot, this state indicates which robot is it.  The state will change to normal when this\nrestriction is lifted.",4,null],[13,"PreKickoff","","All robots must go to their respective side of the field, while also staying away from the\nball (by at least 0.5m). A kickoff for the team with the given color will follow soon.",4,null],[13,"Kickoff","","The team with the given color is allowed to kickoff.",4,null],[13,"PrePenalty","","All robots must go to the penalty positions (better described by the rules). A penalty for\nthe team with the given color will follow.",4,null],[13,"Penalty","","The team with the given color is allowed to kick the penalty.",4,null],[13,"DirectFree","","The team with the given color is allowed to kick the free direct kick.",4,null],[13,"IndirectFree","","The team with the given color is allowed to kick the free indirect kick.",4,null],[4,"RobotAction","","",null,null],[13,"Normal","","",5,null],[13,"Dribble","","",5,null],[13,"Kick","","",5,null],[13,"ChipKick","","",5,null],[8,"Ball","","",null,null],[10,"pos","","",6,null],[10,"vel","","",6,null],[11,"z","","",6,null],[11,"vz","","",6,null],[8,"Robot","","",null,null],[10,"id","","",7,null],[10,"pos","","",7,null],[10,"vel","","",7,null],[10,"w","","",7,null],[10,"vw","","",7,null],[8,"Geometry","","Specifications of the field geometry",null,null],[10,"field_length","","",8,null],[10,"field_width","","",8,null],[10,"goal_width","","",8,null],[10,"center_circle_radius","","",8,null],[10,"defense_radius","","",8,null],[10,"defense_stretch","","",8,null],[8,"TeamInfo","","",null,null],[11,"name","","",9,null],[11,"score","","",9,null],[11,"goalie","","",9,null],[8,"State","","What is needed for a game step.",null,null],[16,"Ball","","",10,null],[16,"Robot","","",10,null],[16,"Robots","","",10,null],[16,"Geometry","","",10,null],[16,"TeamInfo","","",10,null],[10,"counter","","",10,null],[10,"timestamp","","",10,null],[10,"ball","","",10,null],[10,"robot","","",10,null],[10,"robots","","",10,null],[10,"robots_team","","",10,null],[10,"geometry","","",10,null],[11,"referee","","",10,null],[10,"team_info","","",10,null],[10,"team_side","","",10,null],[11,"ball_positioning","","",10,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"fmt","","",4,null],[11,"clone","","",4,null],[11,"fmt","","",2,null],[11,"clone","","",2,null],[11,"new","","",2,{"inputs":[{"name":"color"}],"output":{"name":"command"}}],[11,"fmt","","",3,null],[11,"clone","","",3,null],[11,"fmt","","",5,null],[11,"clone","","",5,null],[0,"ai","roboime_next","",null,null],[3,"Builder","roboime_next::ai","Builder for a subprocess (child) AI",null,null],[3,"InitialState","","",null,null],[12,"debug","","",11,null],[3,"PushState","","",null,null],[3,"PullState","","",null,null],[8,"CommandAiExt","","",null,null],[10,"from_args","","",12,null],[11,"from_args","std::process","",13,null],[11,"new","roboime_next::ai","",14,{"inputs":[{"name":"command"}],"output":{"name":"builder"}}],[11,"color","","Whether the AI will play with the yellow team, blue otherwise.",14,null],[11,"build","","",14,null],[11,"init","","",11,null],[11,"update","","",15,null],[11,"push","","",15,null],[11,"pull","","",16,null],[0,"base","roboime_next","",null,null],[3,"Vec2d","roboime_next::base","",null,null],[12,"0","","",17,null],[12,"1","","",17,null],[3,"Id","","",null,null],[12,"0","","",18,null],[12,"1","","",18,null],[4,"Color","","",null,null],[13,"Yellow","","",19,null],[13,"Blue","","",19,null],[4,"Side","","",null,null],[13,"Left","","",20,null],[13,"Right","","",20,null],[4,"TeamSide","","",null,null],[13,"BlueIsLeft","","",21,null],[13,"YellowIsLeft","","",21,null],[11,"eq","","",17,null],[11,"ne","","",17,null],[11,"fmt","","",17,null],[11,"clone","","",17,null],[11,"x","","",17,null],[11,"y","","",17,null],[11,"set","","",17,null],[11,"angle","","",17,null],[11,"norm","","",17,null],[11,"norm2","","",17,null],[11,"rotate","","",17,null],[11,"renorm","","",17,null],[11,"add","","",17,null],[11,"add_assign","","",17,null],[11,"sub","","",17,null],[11,"sub_assign","","",17,null],[11,"mul","","",17,null],[11,"mul","","",17,null],[11,"mul_assign","","",17,null],[11,"div","","",17,null],[11,"div_assign","","",17,null],[11,"neg","","",17,null],[11,"cmp","","",19,null],[11,"partial_cmp","","",19,null],[11,"eq","","",19,null],[11,"fmt","","",19,null],[11,"clone","","",19,null],[11,"is_yellow","","",19,null],[11,"is_blue","","",19,null],[11,"yellow","","",19,{"inputs":[{"name":"bool"}],"output":{"name":"color"}}],[11,"blue","","",19,{"inputs":[{"name":"bool"}],"output":{"name":"color"}}],[11,"default","","",19,{"inputs":[],"output":{"name":"self"}}],[11,"not","","",19,null],[11,"cmp","","",20,null],[11,"partial_cmp","","",20,null],[11,"eq","","",20,null],[11,"fmt","","",20,null],[11,"clone","","",20,null],[11,"is_right","","",20,null],[11,"is_left","","",20,null],[11,"right","","",20,{"inputs":[{"name":"bool"}],"output":{"name":"side"}}],[11,"left","","",20,{"inputs":[{"name":"bool"}],"output":{"name":"side"}}],[11,"not","","",20,null],[11,"cmp","","",21,null],[11,"partial_cmp","","",21,null],[11,"eq","","",21,null],[11,"fmt","","",21,null],[11,"clone","","",21,null],[11,"default","","",21,{"inputs":[],"output":{"name":"self"}}],[11,"new","","",21,{"inputs":[{"name":"color"},{"name":"side"}],"output":{"name":"teamside"}}],[11,"blue_is_left","","",21,null],[11,"blue_is_right","","",21,null],[11,"yellow_is_left","","",21,null],[11,"yellow_is_right","","",21,null],[11,"side","","",21,null],[11,"color","","",21,null],[11,"sort_side","","",21,null],[11,"cmp","","",18,null],[11,"partial_cmp","","",18,null],[11,"lt","","",18,null],[11,"le","","",18,null],[11,"gt","","",18,null],[11,"ge","","",18,null],[11,"eq","","",18,null],[11,"ne","","",18,null],[11,"fmt","","",18,null],[11,"clone","","",18,null],[11,"color","","",18,null],[11,"id","","",18,null],[0,"grsim","roboime_next","",null,null],[3,"Builder","roboime_next::grsim","A builder for an interface to [grSim](https://github.com/roboime/grSim/)",null,null],[3,"State","","",null,null],[3,"Iter","","",null,null],[11,"clone","","",22,null],[11,"fmt","","",22,null],[11,"new","","Instantiate with default values.",22,{"inputs":[],"output":{"name":"builder"}}],[11,"vision_addr","","Set the vision address and port used on the simulator, the address is used for\njoining the multicast and the port for binding that socket.",22,null],[11,"vision_port","","Set the vision port used on the simulator used for binding the socket.",22,null],[11,"grsim_addr","","Set the grsim address and port used on the simulator, this is used when sending commands to\ngrSim.",22,null],[11,"grsim_ip","","Set the grsim address to send commands to.  The port is preserved (default if not set).",22,null],[11,"build","","Spawn the necessary threads and start listening to changes and ppushing commands.",22,null],[11,"recv_state","","Returns Ok(true) if there was a geometry update.",23,null],[11,"wait_for_geom","","",23,null],[11,"send_command","","",23,null],[11,"counter","","",23,null],[11,"timestamp","","",23,null],[11,"ball","","",23,null],[11,"robot","","",23,null],[11,"robots","","",23,null],[11,"robots_team","","",23,null],[11,"geometry","","",23,null],[11,"team_info","","",23,null],[11,"team_side","","",23,null],[11,"next","","",24,null],[11,"size_hint","","",24,null],[0,"sim","roboime_next","A built-in simulator, with referee support.",null,null],[3,"Geometry","roboime_next::sim","",null,null],[3,"Ball","","",null,null],[12,"pos","","",25,null],[12,"vel","","",25,null],[3,"Robot","","",null,null],[12,"pos","","",26,null],[12,"vel","","",26,null],[12,"w","","",26,null],[12,"vw","","",26,null],[3,"TeamInfo","","",null,null],[3,"Builder","","",null,null],[3,"State","","",null,null],[12,"initial_timestamp","","",27,null],[12,"counter","","",27,null],[12,"timestamp","","",27,null],[12,"ball","","",27,null],[12,"robots","","",27,null],[12,"last_ball_touch","","",27,null],[12,"team_side","","",27,null],[12,"referee","","",27,null],[12,"info_blue","","",27,null],[12,"info_yellow","","",27,null],[12,"geometry","","",27,null],[3,"Iter","","",null,null],[4,"Referee","","",null,null],[13,"FreePlay","","",28,null],[13,"Normal","","",28,null],[13,"PreForceKick","","",28,null],[13,"PreKickoff","","",28,null],[13,"Kickoff","","",28,null],[13,"PostKickoff","","",28,null],[13,"PreDirectKick","","",28,null],[13,"DirectKick","","",28,null],[13,"PostDirectKick","","",28,null],[13,"PreIndirectKick","","",28,null],[13,"IndirectKick","","",28,null],[13,"PostIndirectKick","","",28,null],[13,"PrePenalty","","",28,null],[13,"Penalty","","",28,null],[4,"PlaceState","","",null,null],[13,"WillPlace","","",29,null],[13,"HasPlaced","","",29,null],[11,"eq","","",30,null],[11,"fmt","","",30,null],[11,"clone","","",30,null],[11,"eq","","",25,null],[11,"ne","","",25,null],[11,"fmt","","",25,null],[11,"clone","","",25,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"fmt","","",26,null],[11,"clone","","",26,null],[11,"new","","",26,{"inputs":[],"output":{"name":"robot"}}],[11,"eq","","",28,null],[11,"ne","","",28,null],[11,"fmt","","",28,null],[11,"clone","","",28,null],[11,"eq","","",29,null],[11,"ne","","",29,null],[11,"fmt","","",29,null],[11,"clone","","",29,null],[11,"eq","","",31,null],[11,"ne","","",31,null],[11,"fmt","","",31,null],[11,"clone","","",31,null],[11,"default","","",31,{"inputs":[],"output":{"name":"teaminfo"}}],[11,"clone","","",32,null],[11,"fmt","","",32,null],[11,"new","","",32,{"inputs":[],"output":{"name":"builder"}}],[11,"team_side","","",32,null],[11,"kickoff_color","","",32,null],[11,"initial_formation","","",32,null],[11,"build","","",32,null],[11,"eq","","",27,null],[11,"ne","","",27,null],[11,"fmt","","",27,null],[11,"clone","","",27,null],[11,"step","","",27,null],[11,"counter","","",27,null],[11,"timestamp","","",27,null],[11,"ball","","",27,null],[11,"robot","","",27,null],[11,"robots","","",27,null],[11,"robots_team","","",27,null],[11,"geometry","","",27,null],[11,"referee","","",27,null],[11,"team_info","","",27,null],[11,"team_side","","",27,null],[11,"ball_positioning","","",27,null],[11,"next","","",33,null],[11,"size_hint","","",33,null],[0,"prelude","roboime_next","",null,null],[6,"Result","","A specialized `Result` type for this crate.",null,null]],"paths":[[4,"ErrorKind"],[3,"Error"],[3,"Command"],[3,"RobotCommand"],[4,"Referee"],[4,"RobotAction"],[8,"Ball"],[8,"Robot"],[8,"Geometry"],[8,"TeamInfo"],[8,"State"],[3,"InitialState"],[8,"CommandAiExt"],[3,"Command"],[3,"Builder"],[3,"PushState"],[3,"PullState"],[3,"Vec2d"],[3,"Id"],[4,"Color"],[4,"Side"],[4,"TeamSide"],[3,"Builder"],[3,"State"],[3,"Iter"],[3,"Ball"],[3,"Robot"],[3,"State"],[4,"Referee"],[4,"PlaceState"],[3,"Geometry"],[3,"TeamInfo"],[3,"Builder"],[3,"Iter"]]};
searchIndex["roboime_next_cli"] = {"doc":"","items":[],"paths":[]};
searchIndex["glium"] = {"doc":"Easy-to-use, high-level, OpenGL3+ wrapper.","items":[[0,"os","glium::glutin","Contains traits with platform-specific methods in them.",null,null],[0,"unix","glium::glutin::os","",null,null],[11,"fmt","glutin::events","",0,null],[11,"clone","","",0,null],[11,"clone","","",1,null],[11,"eq","","",1,null],[11,"hash","","",1,null],[11,"fmt","","",1,null],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"clone","","",3,null],[11,"eq","","",3,null],[11,"hash","","",3,null],[11,"fmt","","",3,null],[11,"clone","","",4,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"hash","","",4,null],[11,"fmt","","",4,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"clone","","",5,null],[11,"fmt","","",5,null],[11,"clone","","",6,null],[11,"eq","","",6,null],[11,"hash","","",6,null],[11,"fmt","","",6,null],[11,"new","glutin::headless","Initializes a new `HeadlessRendererBuilder` with default values.",7,{"inputs":[{"name":"u32"},{"name":"u32"}],"output":{"name":"headlessrendererbuilder"}}],[11,"with_gl","","Sets how the backend should choose the OpenGL API and version.",7,null],[11,"with_gl_debug_flag","","Sets the *debug* flag for the OpenGL context.",7,null],[11,"with_gl_robustness","","Sets the robustness of the OpenGL context. See the docs of `Robustness`.",7,null],[11,"build","","Builds the headless context.",7,null],[11,"build_strict","","Builds the headless context.",7,null],[11,"make_current","","Creates a new OpenGL context\nSets the context as the current context.",8,null],[11,"is_current","","Returns true if this context is the current one in this thread.",8,null],[11,"get_proc_address","","Returns the address of an OpenGL function.",8,null],[11,"get_api","","Returns the API that is currently provided by this window.",8,null],[11,"set_window_resize_callback","","",8,null],[11,"make_current","","",8,null],[11,"is_current","","",8,null],[11,"get_proc_address","","",8,null],[11,"swap_buffers","","",8,null],[11,"get_api","","",8,null],[11,"get_pixel_format","","",8,null],[11,"new","glutin","Initializes a new `WindowBuilder` with default values.",9,{"inputs":[],"output":{"name":"windowbuilder"}}],[11,"with_dimensions","","Requests the window to be of specific dimensions.",9,null],[11,"with_min_dimensions","","Sets a minimum dimension size for the window",9,null],[11,"with_max_dimensions","","Sets a maximum dimension size for the window",9,null],[11,"with_title","","Requests a specific title for the window.",9,null],[11,"with_fullscreen","","Requests fullscreen mode.",9,null],[11,"with_shared_lists","","The created window will share all its OpenGL objects with the window in the parameter.",9,null],[11,"with_gl","","Sets how the backend should choose the OpenGL API and version.",9,null],[11,"with_gl_profile","","Sets the desired OpenGL context profile.",9,null],[11,"with_gl_debug_flag","","Sets the *debug* flag for the OpenGL context.",9,null],[11,"with_gl_robustness","","Sets the robustness of the OpenGL context. See the docs of `Robustness`.",9,null],[11,"with_vsync","","Requests that the window has vsync enabled.",9,null],[11,"with_visibility","","Sets whether the window will be initially hidden or visible.",9,null],[11,"with_multisampling","","Sets the multisampling level to request.",9,null],[11,"with_depth_buffer","","Sets the number of bits in the depth buffer.",9,null],[11,"with_stencil_buffer","","Sets the number of bits in the stencil buffer.",9,null],[11,"with_pixel_format","","Sets the number of bits in the color buffer.",9,null],[11,"with_stereoscopy","","Request the backend to be stereoscopic.",9,null],[11,"with_srgb","","Sets whether sRGB should be enabled on the window. `None` means &quot;I don&#39;t care&quot;.",9,null],[11,"with_transparency","","Sets whether the background of the window should be transparent.",9,null],[11,"with_decorations","","Sets whether the window should have a border, a title bar, etc.",9,null],[11,"with_multitouch","","Enables multitouch",9,null],[11,"build","","Builds the window.",9,null],[11,"build_strict","","Builds the window.",9,null],[11,"default","","",10,{"inputs":[],"output":{"name":"window"}}],[11,"new","","Creates a new OpenGL context, and a Window for platforms where this is appropriate.",10,{"inputs":[],"output":{"name":"result"}}],[11,"set_title","","Modifies the title of the window.",10,null],[11,"show","","Shows the window if it was hidden.",10,null],[11,"hide","","Hides the window if it was visible.",10,null],[11,"get_position","","Returns the position of the top-left hand corner of the window relative to the\n top-left hand corner of the desktop.",10,null],[11,"set_position","","Modifies the position of the window.",10,null],[11,"get_inner_size","","Returns the size in points of the client area of the window.",10,null],[11,"get_inner_size_points","","Returns the size in points of the client area of the window.",10,null],[11,"get_inner_size_pixels","","Returns the size in pixels of the client area of the window.",10,null],[11,"get_outer_size","","Returns the size in pixels of the window.",10,null],[11,"set_inner_size","","Modifies the inner size of the window.",10,null],[11,"poll_events","","Returns an iterator that poll for the next event in the window&#39;s events queue.\nReturns `None` if there is no event in the queue.",10,null],[11,"wait_events","","Returns an iterator that returns events one by one, blocking if necessary until one is\navailable.",10,null],[11,"make_current","","Sets the context as the current context.",10,null],[11,"is_current","","Returns true if this context is the current one in this thread.",10,null],[11,"get_proc_address","","Returns the address of an OpenGL function.",10,null],[11,"swap_buffers","","Swaps the buffers in case of double or triple buffering.",10,null],[11,"platform_display","","DEPRECATED. Gets the native platform specific display for this window.\nThis is typically only required when integrating with\nother libraries that need this information.",10,null],[11,"platform_window","","DEPRECATED. Gets the native platform specific window handle. This is\ntypically only required when integrating with other libraries\nthat need this information.",10,null],[11,"get_api","","Returns the API that is currently provided by this window.",10,null],[11,"get_pixel_format","","Returns the pixel format of this window.",10,null],[11,"create_window_proxy","","Create a window proxy for this window, that can be freely\npassed to different threads.",10,null],[11,"set_window_resize_callback","","Sets a resize callback that is called by Mac (and potentially other\noperating systems) during resize operations. This can be used to repaint\nduring window resizing.",10,null],[11,"set_cursor","","Modifies the mouse cursor of the window.\nHas no effect on Android.",10,null],[11,"hidpi_factor","","Returns the ratio between the backing framebuffer resolution and the\nwindow size in screen pixels. This is typically one for a normal display\nand two for a retina display.",10,null],[11,"set_cursor_position","","Changes the position of the cursor in window coordinates.",10,null],[11,"set_cursor_state","","Sets how glutin handles the cursor. See the documentation of `CursorState` for details.",10,null],[11,"make_current","","",10,null],[11,"is_current","","",10,null],[11,"get_proc_address","","",10,null],[11,"swap_buffers","","",10,null],[11,"get_api","","",10,null],[11,"get_pixel_format","","",10,null],[11,"clone","glutin::window","",11,null],[11,"wakeup_event_loop","","Triggers a blocked event loop to wake up. This is\ntypically called when another thread wants to wake\nup the blocked rendering thread to cause a refresh.",11,null],[11,"next","","",12,null],[11,"size_hint","","",12,null],[11,"next","","",13,null],[11,"size_hint","","",13,null],[11,"next","","",14,null],[11,"size_hint","","",14,null],[11,"get_name","","Returns a human-readable name of the monitor.",15,null],[11,"get_native_identifier","","Returns the native platform identifier for this monitor.",15,null],[11,"get_dimensions","","Returns the number of pixels currently displayed on the monitor.",15,null],[11,"get_xlib_window","glutin","",10,null],[11,"get_xlib_display","","",10,null],[11,"fmt","","",16,null],[11,"fmt","","",16,null],[11,"description","","",16,null],[11,"cause","","",16,null],[11,"fmt","","",17,null],[11,"fmt","","",17,null],[11,"description","","",17,null],[11,"eq","","",18,null],[11,"clone","","",18,null],[11,"fmt","","",18,null],[11,"eq","","",19,null],[11,"clone","","",19,null],[11,"fmt","","",19,null],[11,"clone","","",20,null],[11,"fmt","","",20,null],[11,"to_gl_version","","Extract the desktop GL version, if any.",20,null],[11,"eq","","",21,null],[11,"clone","","",21,null],[11,"fmt","","",21,null],[11,"eq","","",22,null],[11,"clone","","",22,null],[11,"fmt","","",22,null],[11,"clone","","",23,null],[11,"fmt","","",23,null],[11,"clone","","",24,null],[11,"fmt","","",24,null],[11,"clone","","",25,null],[11,"fmt","","",25,null],[11,"fmt","","",26,null],[11,"clone","","",26,null],[11,"default","","",26,{"inputs":[],"output":{"name":"pixelformatrequirements"}}],[11,"clone","","",27,null],[11,"default","","",27,{"inputs":[],"output":{"name":"windowattributes"}}],[11,"clone","","",28,null],[11,"map_sharing","","Turns the `sharing` parameter into another type by calling a closure.",28,null],[11,"default","","",28,{"inputs":[],"output":{"name":"glattributes"}}],[11,"eq","glutin::native_monitor","",29,null],[11,"ne","","",29,null],[11,"clone","","",29,null],[8,"WindowExt","glium::glutin::os::unix","Additional methods on `Window` that are specific to Unix.",null,null],[10,"get_xlib_window","","Returns a pointer to the `Window` object of xlib that is used by this window.",30,null],[10,"get_xlib_display","","Returns a pointer to the `Display` object of xlib that is used by this window.",30,null],[8,"WindowBuilderExt","","Additional methods on `WindowBuilder` that are specific to Unix.",null,null],[3,"Window","glium::glutin","Represents an OpenGL context and the Window or environment around it.",null,null],[3,"WindowBuilder","","Object that allows you to build windows.",null,null],[12,"window","","The attributes to use to create the window.",9,null],[12,"opengl","","The attributes to use to create the context.",9,null],[8,"GlContext","","Trait that describes objects that have access to an OpenGL context.",null,null],[10,"make_current","","Sets the context as the current context.",31,null],[10,"is_current","","Returns true if this context is the current one in this thread.",31,null],[10,"get_proc_address","","Returns the address of an OpenGL function.",31,null],[10,"swap_buffers","","Swaps the buffers in case of double or triple buffering.",31,null],[10,"get_api","","Returns the OpenGL API being used.",31,null],[10,"get_pixel_format","","Returns the pixel format of the main framebuffer of the context.",31,null],[4,"CreationError","","Error that can happen while creating a window or a headless renderer.",null,null],[13,"OsError","","",16,null],[13,"NotSupported","","TODO: remove this error",16,null],[13,"NoBackendAvailable","","",16,null],[13,"RobustnessNotSupported","","",16,null],[13,"OpenGlVersionNotSupported","","",16,null],[13,"NoAvailablePixelFormat","","",16,null],[4,"ContextError","","Error that can happen when manipulating an OpenGL context.",null,null],[13,"IoError","","",17,null],[13,"ContextLost","","",17,null],[4,"Api","","All APIs related to OpenGL that you can possibly get while using glutin.",null,null],[13,"OpenGl","","The classical OpenGL. Available on Windows, Linux, OS/X.",18,null],[13,"OpenGlEs","","OpenGL embedded system. Available on Linux, Android.",18,null],[13,"WebGl","","OpenGL for the web. Very similar to OpenGL ES.",18,null],[4,"GlProfile","","Describes the requested OpenGL context profiles.",null,null],[13,"Compatibility","","Include all the immediate more functions and definitions.",19,null],[13,"Core","","Include all the future-compatible functions and definitions.",19,null],[4,"GlRequest","","Describes the OpenGL API and version that are being requested when a context is created.",null,null],[13,"Latest","","Request the latest version of the &quot;best&quot; API of this platform.",20,null],[13,"Specific","","Request a specific version of a specific API.",20,null],[13,"GlThenGles","","If OpenGL is available, create an OpenGL context with the specified `opengl_version`.\nElse if OpenGL ES or WebGL is available, create a context with the\nspecified `opengles_version`.",20,null],[12,"opengl_version","glium::glutin::GlRequest","",20,null],[12,"opengles_version","","",20,null],[7,"GL_CORE","glium::glutin","The minimum core profile GL context. Useful for getting the minimum\nrequired GL version while still running on OSX, which often forbids\nthe compatibility profile features.",null,null],[4,"Robustness","","Specifies the tolerance of the OpenGL context to faults. If you accept raw OpenGL commands\nand/or raw shader code from an untrusted source, you should definitely care about this.",null,null],[13,"NotRobust","","Not everything is checked. Your application can crash if you do something wrong with your\nshaders.",21,null],[13,"NoError","","The driver doesn&#39;t check anything. This option is very dangerous. Please know what you&#39;re\ndoing before using it. See the `GL_KHR_no_error` extension.",21,null],[13,"RobustNoResetNotification","","Everything is checked to avoid any crash. The driver will attempt to avoid any problem,\nbut if a problem occurs the behavior is implementation-defined. You are just guaranteed not\nto get a crash.",21,null],[13,"TryRobustNoResetNotification","","Same as `RobustNoResetNotification` but the context creation doesn&#39;t fail if it&#39;s not\nsupported.",21,null],[13,"RobustLoseContextOnReset","","Everything is checked to avoid any crash. If a problem occurs, the context will enter a\n&quot;context lost&quot; state. It must then be recreated. For the moment, glutin doesn&#39;t provide a\nway to recreate a context with the same window :-/",21,null],[13,"TryRobustLoseContextOnReset","","Same as `RobustLoseContextOnReset` but the context creation doesn&#39;t fail if it&#39;s not\nsupported.",21,null],[4,"ReleaseBehavior","","The behavior of the driver when you change the current context.",null,null],[13,"None","","Doesn&#39;t do anything. Most notably doesn&#39;t flush.",22,null],[13,"Flush","","Flushes the context that was previously current as if `glFlush` was called.",22,null],[4,"MouseCursor","","",null,null],[13,"Default","","The platform-dependent default cursor.",23,null],[13,"Crosshair","","A simple crosshair.",23,null],[13,"Hand","","A hand (often used to indicate links in web browsers).",23,null],[13,"Arrow","","Self explanatory.",23,null],[13,"Move","","Indicates something is to be moved.",23,null],[13,"Text","","Indicates text that may be selected or edited.",23,null],[13,"Wait","","Program busy indicator.",23,null],[13,"Help","","Help indicator (often rendered as a &quot;?&quot;)",23,null],[13,"Progress","","Progress indicator. Shows that processing is being done. But in contrast\nwith &quot;Wait&quot; the user may still interact with the program. Often rendered\nas a spinning beach ball, or an arrow with a watch or hourglass.",23,null],[13,"NotAllowed","","Cursor showing that something cannot be done.",23,null],[13,"ContextMenu","","",23,null],[13,"NoneCursor","","",23,null],[13,"Cell","","",23,null],[13,"VerticalText","","",23,null],[13,"Alias","","",23,null],[13,"Copy","","",23,null],[13,"NoDrop","","",23,null],[13,"Grab","","",23,null],[13,"Grabbing","","",23,null],[13,"AllScroll","","",23,null],[13,"ZoomIn","","",23,null],[13,"ZoomOut","","",23,null],[13,"EResize","","Indicate that some edge is to be moved. For example, the &#39;SeResize&#39; cursor\nis used when the movement starts from the south-east corner of the box.",23,null],[13,"NResize","","",23,null],[13,"NeResize","","",23,null],[13,"NwResize","","",23,null],[13,"SResize","","",23,null],[13,"SeResize","","",23,null],[13,"SwResize","","",23,null],[13,"WResize","","",23,null],[13,"EwResize","","",23,null],[13,"NsResize","","",23,null],[13,"NeswResize","","",23,null],[13,"NwseResize","","",23,null],[13,"ColResize","","",23,null],[13,"RowResize","","",23,null],[4,"CursorState","","Describes how glutin handles the cursor.",null,null],[13,"Normal","","Normal cursor behavior.",24,null],[13,"Hide","","The cursor will be invisible when over the window.",24,null],[13,"Grab","","Grabs the mouse cursor. The cursor&#39;s motion will be confined to this\nwindow and the window has exclusive access to further events regarding\nthe cursor.",24,null],[3,"PixelFormat","","Describes a possible format. Unused.",null,null],[12,"hardware_accelerated","","",25,null],[12,"color_bits","","",25,null],[12,"alpha_bits","","",25,null],[12,"depth_bits","","",25,null],[12,"stencil_bits","","",25,null],[12,"stereoscopy","","",25,null],[12,"double_buffer","","",25,null],[12,"multisampling","","",25,null],[12,"srgb","","",25,null],[3,"PixelFormatRequirements","","Describes how the backend should choose a pixel format.",null,null],[12,"hardware_accelerated","","If true, only hardware-accelerated formats will be conisdered. If false, only software\nrenderers. `None` means &quot;don&#39;t care&quot;. Default is `Some(true)`.",26,null],[12,"color_bits","","Minimum number of bits for the color buffer, excluding alpha. `None` means &quot;don&#39;t care&quot;.\nThe default is `Some(24)`.",26,null],[12,"float_color_buffer","","If true, the color buffer must be in a floating point format. Default is `false`.",26,null],[12,"alpha_bits","","Minimum number of bits for the alpha in the color buffer. `None` means &quot;don&#39;t care&quot;.\nThe default is `Some(8)`.",26,null],[12,"depth_bits","","Minimum number of bits for the depth buffer. `None` means &quot;don&#39;t care&quot;.\nThe default value is `Some(24)`.",26,null],[12,"stencil_bits","","Minimum number of bits for the depth buffer. `None` means &quot;don&#39;t care&quot;.\nThe default value is `Some(8)`.",26,null],[12,"double_buffer","","If true, only double-buffered formats will be considered. If false, only single-buffer\nformats. `None` means &quot;don&#39;t care&quot;. The default is `Some(true)`.",26,null],[12,"multisampling","","Contains the minimum number of samples per pixel in the color, depth and stencil buffers.\n`None` means &quot;don&#39;t care&quot;. Default is `None`.\nA value of `Some(0)` indicates that multisampling must not be enabled.",26,null],[12,"stereoscopy","","If true, only stereoscopic formats will be considered. If false, only non-stereoscopic\nformats. The default is `false`.",26,null],[12,"srgb","","If true, only sRGB-capable formats will be considered. If false, don&#39;t care.\nThe default is `false`.",26,null],[12,"release_behavior","","The behavior when changing the current context. Default is `Flush`.",26,null],[3,"WindowAttributes","","Attributes to use when creating a window.",null,null],[12,"dimensions","","The dimensions of the window. If this is `None`, some platform-specific dimensions will be\nused.",27,null],[12,"min_dimensions","","The minimum dimensions a window can be, If this is `None`, the window will have no minimum dimensions (aside from reserved).",27,null],[12,"max_dimensions","","The maximum dimensions a window can be, If this is `None`, the maximum will have no maximum or will be set to the primary monitor&#39;s dimensions by the platform.",27,null],[12,"monitor","","If `Some`, the window will be in fullscreen mode with the given monitor.",27,null],[12,"title","","The title of the window in the title bar.",27,null],[12,"visible","","Whether the window should be immediately visible upon creation.",27,null],[12,"transparent","","Whether the the window should be transparent. If this is true, writing colors\nwith alpha values different than `1.0` will produce a transparent window.",27,null],[12,"decorations","","Whether the window should have borders and bars.",27,null],[12,"multitouch","","[iOS only] Enable multitouch, see [UIView#multipleTouchEnabled]\n(https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIView_Class/#//apple_ref/occ/instp/UIView/multipleTouchEnabled)",27,null],[3,"GlAttributes","","Attributes to use when creating an OpenGL context.",null,null],[12,"sharing","","An existing context to share the new the context with.",28,null],[12,"version","","Version to try create. See `GlRequest` for more infos.",28,null],[12,"profile","","OpenGL profile to use.",28,null],[12,"debug","","Whether to enable the `debug` flag of the context.",28,null],[12,"robustness","","How the OpenGL context should detect errors.",28,null],[12,"vsync","","Whether to use vsync. If vsync is enabled, calling `swap_buffers` will block until the\nscreen refreshes. This is typically used to prevent screen tearing.",28,null],[3,"HeadlessRendererBuilder","","Object that allows you to build headless contexts.",null,null],[12,"dimensions","","The dimensions to use.",7,null],[12,"opengl","","The OpenGL attributes to build the context with.",7,null],[3,"WindowProxy","","Represents a thread safe subset of operations that can be called\non a window. This structure can be safely cloned and sent between\nthreads.",null,null],[3,"Touch","","Represents touch event",null,null],[12,"phase","","",2,null],[12,"location","","",2,null],[12,"id","","unique identifier of a finger.",2,null],[4,"MouseButton","","",null,null],[13,"Left","","",4,null],[13,"Right","","",4,null],[13,"Middle","","",4,null],[13,"Other","","",4,null],[3,"WaitEventsIterator","","An iterator for the `wait_events` function.",null,null],[4,"ElementState","","",null,null],[13,"Pressed","","",3,null],[13,"Released","","",3,null],[4,"Event","","",null,null],[13,"Resized","","The size of the window has changed.",0,null],[13,"Moved","","The position of the window has changed.",0,null],[13,"Closed","","The window has been closed.",0,null],[13,"DroppedFile","","A file has been dropped into the window.",0,null],[13,"ReceivedCharacter","","The window received a unicode character.",0,null],[13,"Focused","","The window gained or lost focus.",0,null],[13,"KeyboardInput","","An event from the keyboard has been received.",0,null],[13,"MouseMoved","","The cursor has moved on the window.",0,null],[13,"MouseWheel","","A mouse wheel movement or touchpad scroll occurred.",0,null],[13,"MouseInput","","An event from the mouse has been received.",0,null],[13,"TouchpadPressure","","Touchpad pressure event.",0,null],[13,"Awakened","","The event loop was woken up by another thread.",0,null],[13,"Refresh","","The window needs to be redrawn.",0,null],[13,"Suspended","","App has been suspended or resumed.",0,null],[13,"Touch","","Touch event has been received",0,null],[5,"get_primary_monitor","","Returns the primary monitor of the system.",null,{"inputs":[],"output":{"name":"monitorid"}}],[4,"VirtualKeyCode","","",null,null],[13,"Key1","","The &#39;1&#39; key over the letters.",6,null],[13,"Key2","","The &#39;2&#39; key over the letters.",6,null],[13,"Key3","","The &#39;3&#39; key over the letters.",6,null],[13,"Key4","","The &#39;4&#39; key over the letters.",6,null],[13,"Key5","","The &#39;5&#39; key over the letters.",6,null],[13,"Key6","","The &#39;6&#39; key over the letters.",6,null],[13,"Key7","","The &#39;7&#39; key over the letters.",6,null],[13,"Key8","","The &#39;8&#39; key over the letters.",6,null],[13,"Key9","","The &#39;9&#39; key over the letters.",6,null],[13,"Key0","","The &#39;0&#39; key over the &#39;O&#39; and &#39;P&#39; keys.",6,null],[13,"A","","",6,null],[13,"B","","",6,null],[13,"C","","",6,null],[13,"D","","",6,null],[13,"E","","",6,null],[13,"F","","",6,null],[13,"G","","",6,null],[13,"H","","",6,null],[13,"I","","",6,null],[13,"J","","",6,null],[13,"K","","",6,null],[13,"L","","",6,null],[13,"M","","",6,null],[13,"N","","",6,null],[13,"O","","",6,null],[13,"P","","",6,null],[13,"Q","","",6,null],[13,"R","","",6,null],[13,"S","","",6,null],[13,"T","","",6,null],[13,"U","","",6,null],[13,"V","","",6,null],[13,"W","","",6,null],[13,"X","","",6,null],[13,"Y","","",6,null],[13,"Z","","",6,null],[13,"Escape","","The Escape key, next to F1.",6,null],[13,"F1","","",6,null],[13,"F2","","",6,null],[13,"F3","","",6,null],[13,"F4","","",6,null],[13,"F5","","",6,null],[13,"F6","","",6,null],[13,"F7","","",6,null],[13,"F8","","",6,null],[13,"F9","","",6,null],[13,"F10","","",6,null],[13,"F11","","",6,null],[13,"F12","","",6,null],[13,"F13","","",6,null],[13,"F14","","",6,null],[13,"F15","","",6,null],[13,"Snapshot","","Print Screen/SysRq.",6,null],[13,"Scroll","","Scroll Lock.",6,null],[13,"Pause","","Pause/Break key, next to Scroll lock.",6,null],[13,"Insert","","`Insert`, next to Backspace.",6,null],[13,"Home","","",6,null],[13,"Delete","","",6,null],[13,"End","","",6,null],[13,"PageDown","","",6,null],[13,"PageUp","","",6,null],[13,"Left","","",6,null],[13,"Up","","",6,null],[13,"Right","","",6,null],[13,"Down","","",6,null],[13,"Back","","The Backspace key, right over Enter.",6,null],[13,"Return","","The Enter key.",6,null],[13,"Space","","The space bar.",6,null],[13,"Numlock","","",6,null],[13,"Numpad0","","",6,null],[13,"Numpad1","","",6,null],[13,"Numpad2","","",6,null],[13,"Numpad3","","",6,null],[13,"Numpad4","","",6,null],[13,"Numpad5","","",6,null],[13,"Numpad6","","",6,null],[13,"Numpad7","","",6,null],[13,"Numpad8","","",6,null],[13,"Numpad9","","",6,null],[13,"AbntC1","","",6,null],[13,"AbntC2","","",6,null],[13,"Add","","",6,null],[13,"Apostrophe","","",6,null],[13,"Apps","","",6,null],[13,"At","","",6,null],[13,"Ax","","",6,null],[13,"Backslash","","",6,null],[13,"Calculator","","",6,null],[13,"Capital","","",6,null],[13,"Colon","","",6,null],[13,"Comma","","",6,null],[13,"Convert","","",6,null],[13,"Decimal","","",6,null],[13,"Divide","","",6,null],[13,"Equals","","",6,null],[13,"Grave","","",6,null],[13,"Kana","","",6,null],[13,"Kanji","","",6,null],[13,"LAlt","","",6,null],[13,"LBracket","","",6,null],[13,"LControl","","",6,null],[13,"LMenu","","",6,null],[13,"LShift","","",6,null],[13,"LWin","","",6,null],[13,"Mail","","",6,null],[13,"MediaSelect","","",6,null],[13,"MediaStop","","",6,null],[13,"Minus","","",6,null],[13,"Multiply","","",6,null],[13,"Mute","","",6,null],[13,"MyComputer","","",6,null],[13,"NavigateForward","","",6,null],[13,"NavigateBackward","","",6,null],[13,"NextTrack","","",6,null],[13,"NoConvert","","",6,null],[13,"NumpadComma","","",6,null],[13,"NumpadEnter","","",6,null],[13,"NumpadEquals","","",6,null],[13,"OEM102","","",6,null],[13,"Period","","",6,null],[13,"PlayPause","","",6,null],[13,"Power","","",6,null],[13,"PrevTrack","","",6,null],[13,"RAlt","","",6,null],[13,"RBracket","","",6,null],[13,"RControl","","",6,null],[13,"RMenu","","",6,null],[13,"RShift","","",6,null],[13,"RWin","","",6,null],[13,"Semicolon","","",6,null],[13,"Slash","","",6,null],[13,"Sleep","","",6,null],[13,"Stop","","",6,null],[13,"Subtract","","",6,null],[13,"Sysrq","","",6,null],[13,"Tab","","",6,null],[13,"Underline","","",6,null],[13,"Unlabeled","","",6,null],[13,"VolumeDown","","",6,null],[13,"VolumeUp","","",6,null],[13,"Wake","","",6,null],[13,"WebBack","","",6,null],[13,"WebFavorites","","",6,null],[13,"WebForward","","",6,null],[13,"WebHome","","",6,null],[13,"WebRefresh","","",6,null],[13,"WebSearch","","",6,null],[13,"WebStop","","",6,null],[13,"Yen","","",6,null],[3,"PollEventsIterator","","An iterator for the `poll_events` function.",null,null],[4,"TouchPhase","","",null,null],[13,"Started","","",1,null],[13,"Moved","","",1,null],[13,"Ended","","",1,null],[13,"Cancelled","","",1,null],[6,"ScanCode","","",null,null],[3,"MonitorId","","Identifier for a monitor.",null,null],[3,"HeadlessContext","","Represents a headless OpenGL context.",null,null],[3,"AvailableMonitorsIter","","An iterator for the list of available monitors.",null,null],[5,"get_available_monitors","","Returns the list of all available monitors.",null,{"inputs":[],"output":{"name":"availablemonitorsiter"}}],[4,"NativeMonitorId","","Native platform identifier for a monitor. Different platforms use fundamentally different types\nto represent a monitor ID.",null,null],[13,"Numeric","","Cocoa and X11 use a numeric identifier to represent a monitor.",29,null],[13,"Name","","Win32 uses a Unicode string to represent a monitor.",29,null],[13,"Unavailable","","Other platforms (Android) don&#39;t support monitor identification.",29,null],[4,"MouseScrollDelta","","",null,null],[13,"LineDelta","","Amount in lines or rows to scroll in the horizontal\nand vertical directions.",5,null],[13,"PixelDelta","","Amount in pixels to scroll in the horizontal and\nvertical direction.",5,null],[3,"Blend","glium","Blend effect that the GPU will use for blending.",null,null],[12,"color","","The blending function for color channels.",32,null],[12,"alpha","","The blending function for alpha channels.",32,null],[12,"constant_value","","A constant color that can be used in the blending functions.",32,null],[3,"Depth","","Represents the depth parameters of a draw command.",null,null],[12,"test","","The function that the GPU will use to determine whether to write over an existing pixel\non the target. Don&#39;t forget to set `depth_write` appropriately if you use a depth test.",33,null],[12,"write","","Sets whether the GPU will write the depth values on the depth buffer if they pass the\ndepth test.",33,null],[12,"range","","The range of possible Z values in surface coordinates.",33,null],[12,"clamp","","Sets whether the depth values of samples should be clamped to `0.0` and `1.0`.",33,null],[3,"IndexBuffer","","A list of indices loaded in the graphics card&#39;s memory.",null,null],[3,"VertexBuffer","","A list of vertices loaded in the graphics card&#39;s memory.",null,null],[3,"Program","","A combination of shaders linked together.",null,null],[3,"LinearSyncFence","","Prototype for a `SyncFence`.",null,null],[3,"SyncFence","","Provides a way to wait for a server-side operation to be finished.",null,null],[3,"Version","","Describes a version.",null,null],[12,"0","","",34,null],[12,"1","","",34,null],[12,"2","","",34,null],[3,"Rect","","Area of a surface in pixels.",null,null],[12,"left","","Number of pixels between the left border of the surface and the left border of\nthe rectangle.",35,null],[12,"bottom","","Number of pixels between the bottom border of the surface and the bottom border\nof the rectangle.",35,null],[12,"width","","Width of the area in pixels.",35,null],[12,"height","","Height of the area in pixels.",35,null],[3,"BlitTarget","","Area of a surface in pixels. Similar to a `Rect` except that dimensions can be negative.",null,null],[12,"left","","Number of pixels between the left border of the surface and the left border of\nthe rectangle.",36,null],[12,"bottom","","Number of pixels between the bottom border of the surface and the bottom border\nof the rectangle.",36,null],[12,"width","","Width of the area in pixels. Can be negative.",36,null],[12,"height","","Height of the area in pixels. Can be negative.",36,null],[3,"Frame","","Implementation of `Surface`, targeting the default framebuffer.",null,null],[4,"Profile","","Describes the OpenGL context profile.",null,null],[13,"Core","","The context uses only future-compatible functions and definitions.",37,null],[13,"Compatibility","","The context includes all immediate mode functions and definitions.",37,null],[4,"BlendingFunction","","Function that the GPU will use for blending.",null,null],[13,"AlwaysReplace","","Simply overwrite the destination pixel with the source pixel.",38,null],[13,"Min","","For each individual component (red, green, blue, and alpha), the minimum value is chosen\nbetween the source and the destination.",38,null],[13,"Max","","For each individual component (red, green, blue, and alpha), the maximum value is chosen\nbetween the source and the destination.",38,null],[13,"Addition","","For each individual component (red, green, blue, and alpha), a weighted addition\nbetween the source and the destination.",38,null],[12,"source","glium::BlendingFunction","The factor to apply to the source pixel.",38,null],[12,"destination","","The factor to apply to the destination pixel.",38,null],[13,"Subtraction","glium","For each individual component (red, green, blue, and alpha), a weighted substraction\nof the source by the destination.",38,null],[12,"source","glium::BlendingFunction","The factor to apply to the source pixel.",38,null],[12,"destination","","The factor to apply to the destination pixel.",38,null],[13,"ReverseSubtraction","glium","For each individual component (red, green, blue, and alpha), a weighted substraction\nof the destination by the source.",38,null],[12,"source","glium::BlendingFunction","The factor to apply to the source pixel.",38,null],[12,"destination","","The factor to apply to the destination pixel.",38,null],[4,"LinearBlendingFactor","glium","Indicates which value to multiply each component with.",null,null],[13,"Zero","","Multiply the source or destination component by zero, which always\ngives `0.0`.",39,null],[13,"One","","Multiply the source or destination component by one, which always\ngives you the original value.",39,null],[13,"SourceColor","","Multiply the source or destination component by its corresponding value\nin the source.",39,null],[13,"OneMinusSourceColor","","Equivalent to `1 - SourceColor`.",39,null],[13,"DestinationColor","","Multiply the source or destination component by its corresponding value\nin the destination.",39,null],[13,"OneMinusDestinationColor","","Equivalent to `1 - DestinationColor`.",39,null],[13,"SourceAlpha","","Multiply the source or destination component by the alpha value of the source.",39,null],[13,"SourceAlphaSaturate","","Multiply the source or destination component by the smallest value of\n`SourceAlpha` and `1 - DestinationAlpha`.",39,null],[13,"OneMinusSourceAlpha","","Multiply the source or destination component by `1.0` minus the alpha value of the source.",39,null],[13,"DestinationAlpha","","Multiply the source or destination component by the alpha value of the destination.",39,null],[13,"OneMinusDestinationAlpha","","Multiply the source or destination component by `1.0` minus the alpha value of the\ndestination.",39,null],[13,"ConstantColor","","Multiply the source or destination component by the corresponding value\nin `Blend::const_value`.",39,null],[13,"OneMinusConstantColor","","Multiply the source or destination compoent by `1.0` minus the corresponding\nvalue in `Blend::const_value`.",39,null],[13,"ConstantAlpha","","Multiply the source or destination component by the alpha value of `Blend::const_value`.",39,null],[13,"OneMinusConstantAlpha","","Multiply the source or destination componet by `1.0` minus the alpha value of\n`Blend::const_value`.",39,null],[4,"DepthTest","","The function that the GPU will use to determine whether to write over an existing pixel\non the target.",null,null],[13,"Ignore","","Never replace the target pixel.",40,null],[13,"Overwrite","","Always replace the target pixel.",40,null],[13,"IfEqual","","Replace if the z-value of the source is equal to the destination.",40,null],[13,"IfNotEqual","","Replace if the z-value of the source is different than the destination.",40,null],[13,"IfMore","","Replace if the z-value of the source is more than the destination.",40,null],[13,"IfMoreOrEqual","","Replace if the z-value of the source is more than, or equal to the destination.",40,null],[13,"IfLess","","Replace if the z-value of the source is less than the destination.",40,null],[13,"IfLessOrEqual","","Replace if the z-value of the source is less than, or equal to the destination.",40,null],[4,"StencilTest","","Specifies which comparison the GPU will do to determine whether a sample passes the stencil\ntest. The general equation is `(ref &amp; mask) CMP (stencil &amp; mask)`, where `ref` is the reference\nvalue (`stencil_reference_value_clockwise` or `stencil_reference_value_counter_clockwise`),\n`CMP` is the comparison chosen, and `stencil` is the current value in the stencil buffer.",null,null],[13,"AlwaysPass","","The stencil test always passes.",41,null],[13,"AlwaysFail","","The stencil test always fails.",41,null],[13,"IfLess","","`(ref &amp; mask) &lt; (stencil &amp; mask)`",41,null],[12,"mask","glium::StencilTest","The mask that is and&#39;ed with the reference value and stencil buffer.",41,null],[13,"IfLessOrEqual","glium","`(ref &amp; mask) &lt;= (stencil &amp; mask)`",41,null],[12,"mask","glium::StencilTest","The mask that is and&#39;ed with the reference value and stencil buffer.",41,null],[13,"IfMore","glium","`(ref &amp; mask) &gt; (stencil &amp; mask)`",41,null],[12,"mask","glium::StencilTest","The mask that is and&#39;ed with the reference value and stencil buffer.",41,null],[13,"IfMoreOrEqual","glium","`(ref &amp; mask) &gt;= (stencil &amp; mask)`",41,null],[12,"mask","glium::StencilTest","The mask that is and&#39;ed with the reference value and stencil buffer.",41,null],[13,"IfEqual","glium","`(ref &amp; mask) == (stencil &amp; mask)`",41,null],[12,"mask","glium::StencilTest","The mask that is and&#39;ed with the reference value and stencil buffer.",41,null],[13,"IfNotEqual","glium","`(ref &amp; mask) != (stencil &amp; mask)`",41,null],[12,"mask","glium::StencilTest","The mask that is and&#39;ed with the reference value and stencil buffer.",41,null],[4,"StencilOperation","glium","Specificies which operation the GPU will do depending on the result of the stencil test.",null,null],[13,"Keep","","Keeps the value currently in the stencil buffer.",42,null],[13,"Zero","","Writes zero in the stencil buffer.",42,null],[13,"Replace","","Writes the reference value (`stencil_reference_value_clockwise` or\n`stencil_reference_value_counter_clockwise`) in the stencil buffer.",42,null],[13,"Increment","","Increments the value currently in the stencil buffer. If the value is the\nmaximum, don&#39;t do anything.",42,null],[13,"IncrementWrap","","Increments the value currently in the stencil buffer. If the value is the\nmaximum, wrap to `0`.",42,null],[13,"Decrement","","Decrements the value currently in the stencil buffer. If the value is `0`,\ndon&#39;t do anything.",42,null],[13,"DecrementWrap","","Decrements the value currently in the stencil buffer. If the value is `0`,\nwrap to `-1`.",42,null],[13,"Invert","","Inverts each bit of the value.",42,null],[4,"Api","","Describes an OpenGL-related API.",null,null],[13,"Gl","","Regular OpenGL.",43,null],[13,"GlEs","","OpenGL embedded system.",43,null],[4,"Handle","","Handle to a shader or a program.",null,null],[13,"Id","","A numberic identifier.",44,null],[13,"Handle","","A `GLhandleARB`.",44,null],[4,"DrawError","","Error that can happen while drawing.",null,null],[13,"NoDepthBuffer","","A depth function has been requested but no depth buffer is available.",45,null],[13,"AttributeTypeMismatch","","The type of a vertex attribute in the vertices source doesn&#39;t match what the\nprogram requires.",45,null],[13,"AttributeMissing","","One of the attributes required by the program is missing from the vertex format.",45,null],[13,"ViewportTooLarge","","The viewport&#39;s dimensions are not supported by the backend.",45,null],[13,"InvalidDepthRange","","The depth range is outside of the `(0, 1)` range.",45,null],[13,"UniformTypeMismatch","","The type of a uniform doesn&#39;t match what the program requires.",45,null],[12,"name","glium::DrawError","Name of the uniform you are trying to bind.",45,null],[12,"expected","","The expected type.",45,null],[13,"UniformBufferToValue","glium","Tried to bind a uniform buffer to a single uniform value.",45,null],[12,"name","glium::DrawError","Name of the uniform you are trying to bind.",45,null],[13,"UniformValueToBlock","glium","Tried to bind a single uniform value to a uniform block.",45,null],[12,"name","glium::DrawError","Name of the uniform you are trying to bind.",45,null],[13,"UniformBlockLayoutMismatch","glium","The layout of the content of the uniform buffer does not match the layout of the block.",45,null],[12,"name","glium::DrawError","Name of the block you are trying to bind.",45,null],[12,"err","","The error giving more details about the mismatch.",45,null],[13,"SubroutineUniformToValue","glium","Tried to bind a subroutine uniform like a regular uniform value.",45,null],[12,"name","glium::DrawError","Name of the uniform you are trying to bind.",45,null],[13,"SubroutineUniformMissing","glium","Not all subroutine uniforms of a shader stage were set.",45,null],[12,"stage","glium::DrawError","Shader stage with missing bindings.",45,null],[12,"expected_count","","The expected number of bindings.",45,null],[12,"real_count","","The number of bindings defined by the user.",45,null],[13,"SubroutineNotFound","glium","A non-existant subroutine was referenced.",45,null],[12,"stage","glium::DrawError","The stage the subroutine was searched for.",45,null],[12,"name","","The invalid name of the subroutine.",45,null],[13,"UnsupportedVerticesPerPatch","glium","The number of vertices per patch that has been requested is not supported.",45,null],[13,"TessellationNotSupported","","Trying to use tessellation, but this is not supported by the underlying hardware.",45,null],[13,"TessellationWithoutPatches","","Using a program which contains tessellation shaders, but without submitting patches.",45,null],[13,"SamplersNotSupported","","Trying to use a sampler, but they are not supported by the backend.",45,null],[13,"InstancesCountMismatch","","When you use instancing, all vertices sources must have the same size.",45,null],[13,"VerticesSourcesLengthMismatch","","If you don&#39;t use indices, then all vertices sources must have the same size.",45,null],[13,"TransformFeedbackNotSupported","","You requested not to draw primitives, but this is not supported by the backend.",45,null],[13,"WrongQueryOperation","","See the documentation of the `draw_parameters` module for infos.",45,null],[13,"SmoothingNotSupported","","You requested smoothing, but this is not supported by the backend.",45,null],[13,"ProvokingVertexNotSupported","","The requested provoking vertex is not supported by the backend.",45,null],[13,"RasterizerDiscardNotSupported","","Discarding rasterizer output isn&#39;t supported by the backend.",45,null],[13,"DepthClampNotSupported","","Depth clamping isn&#39;t supported by the backend.",45,null],[13,"BlendingParameterNotSupported","","One of the blending parameters is not supported by the backend.",45,null],[4,"SwapBuffersError","","Error that can happen when swapping buffers.",null,null],[13,"ContextLost","","The OpenGL context has been lost and needs to be recreated. The `Display` and all the\nobjects associated to it (textures, buffers, programs, etc.) need to be recreated from\nscratch.",46,null],[13,"AlreadySwapped","","The buffers have already been swapped.",46,null],[4,"GliumCreationError","","Error that can happen while creating a glium display.",null,null],[13,"BackendCreationError","","An error has happened while creating the backend.",47,null],[13,"IncompatibleOpenGl","","The OpenGL implementation is too old.",47,null],[5,"get_supported_glsl_version","","Given an API version, this function returns the GLSL version that the implementation is\nrequired to support.",null,{"inputs":[{"name":"version"}],"output":{"name":"version"}}],[0,"backend","","The `backend` module allows one to link between glium and the OpenGL context..",null,null],[3,"Context","glium::backend","Stores the state and information required for glium to execute commands. Most public glium\nfunctions require passing a `Rc&lt;Context&gt;`.",null,null],[4,"ReleaseBehavior","","Defines what happens when you change the current context.",null,null],[13,"None","","Nothing is done when using another context.",48,null],[13,"Flush","","The commands queue of the current context is flushed.",48,null],[0,"glutin_backend","","Backend implementation for the glutin library",null,null],[3,"GlutinFacade","glium::backend::glutin_backend","Facade implementation for glutin. Wraps both glium and glutin.",null,null],[3,"PollEventsIter","","Iterator for all the events received by the window.",null,null],[3,"WaitEventsIter","","Blocking iterator over all the events received by the window.",null,null],[3,"WinRef","","Borrow of the glutin window.",null,null],[3,"GlutinWindowBackend","","An implementation of the `Backend` trait for a glutin window.",null,null],[3,"GlutinHeadlessBackend","","An implementation of the `Backend` trait for a glutin headless context.",null,null],[11,"clone","","",49,null],[11,"get_context","","",49,null],[11,"next","","",50,null],[11,"next","","",51,null],[11,"deref","","",52,null],[11,"poll_events","","Reads all events received by the window.",49,null],[11,"wait_events","","Reads all events received by the window.",49,null],[11,"get_window","","Returns the underlying window, or `None` if glium uses a headless context.",49,null],[11,"draw","","Start drawing on the backbuffer.",49,null],[11,"deref","","",49,null],[11,"build_glium_debug","glium::glutin","",9,null],[11,"build_glium_unchecked_debug","","",9,null],[11,"rebuild_glium","","",9,null],[11,"build_glium_debug","","",7,null],[11,"build_glium_unchecked_debug","","",7,null],[11,"rebuild_glium","","",7,null],[11,"swap_buffers","glium::backend::glutin_backend","",53,null],[11,"get_proc_address","","",53,null],[11,"get_framebuffer_dimensions","","",53,null],[11,"is_current","","",53,null],[11,"make_current","","",53,null],[11,"new","","Builds a new backend from the builder.",53,{"inputs":[{"name":"windowbuilder"}],"output":{"name":"result"}}],[11,"get_window","","",53,null],[11,"poll_events","","",53,null],[11,"wait_events","","",53,null],[11,"rebuild","","",53,null],[11,"swap_buffers","","",54,null],[11,"get_proc_address","","",54,null],[11,"get_framebuffer_dimensions","","",54,null],[11,"is_current","","",54,null],[11,"make_current","","",54,null],[11,"new","","Builds a new backend from the builder.",54,{"inputs":[{"name":"headlessrendererbuilder"}],"output":{"name":"result"}}],[8,"Backend","glium::backend","Trait for types that can be used as a backend for a glium context.",null,null],[10,"swap_buffers","","Swaps buffers at the end of a frame.",55,null],[10,"get_proc_address","","Returns the address of an OpenGL function.",55,null],[10,"get_framebuffer_dimensions","","Returns the dimensions of the window, or screen, etc.",55,null],[10,"is_current","","Returns true if the OpenGL context is the current one in the thread.",55,null],[10,"make_current","","Makes the OpenGL context the current context in the current thread.",55,null],[8,"Facade","","Trait for types that provide a safe access for glium functions.",null,null],[10,"get_context","","Returns an opaque type that contains the OpenGL state, extensions, version, etc.",56,null],[11,"swap_buffers","alloc::rc","",57,null],[11,"get_proc_address","","",57,null],[11,"get_framebuffer_dimensions","","",57,null],[11,"is_current","","",57,null],[11,"make_current","","",57,null],[11,"get_context","","",57,null],[0,"buffer","glium","A buffer is a memory location accessible to the video card.",null,null],[3,"Buffer","glium::buffer","Represents a view of a buffer.",null,null],[3,"BufferAny","","Represents a sub-part of a buffer.",null,null],[3,"BufferMutSlice","","Represents a sub-part of a buffer.",null,null],[3,"BufferSlice","","Represents a sub-part of a buffer.",null,null],[3,"BufferAnySlice","","Slice of a `Buffer` without any type info.",null,null],[3,"Mapping","","A mapping of a buffer for reading and writing.",null,null],[3,"WriteMapping","","A mapping of a buffer for write only.",null,null],[3,"ReadMapping","","A mapping of a buffer for reading.",null,null],[3,"Inserter","","Allows inserting a fence in the list.",null,null],[3,"BufferView","","Represents a view of a buffer.",null,null],[3,"BufferViewSlice","","Represents a sub-part of a buffer.",null,null],[3,"BufferViewMutSlice","","Represents a sub-part of a buffer.",null,null],[3,"BufferViewAny","","Represents a sub-part of a buffer.",null,null],[3,"BufferViewAnySlice","","Slice of a `Buffer` without any type info.",null,null],[4,"ReadError","","Error that can happen when reading from a buffer.",null,null],[13,"NotSupported","","The backend doesn&#39;t support reading from a buffer.",58,null],[13,"ContextLost","","The context has been lost. Reading from the buffer would return garbage data.",58,null],[4,"CopyError","","Error that can happen when copying data between buffers.",null,null],[13,"NotSupported","","The backend doesn&#39;t support copying between buffers.",59,null],[4,"BufferCreationError","","Error that can happen when creating a buffer.",null,null],[13,"OutOfMemory","","Not enough memory to create the buffer.",60,null],[13,"BufferTypeNotSupported","","This type of buffer is not supported.",60,null],[4,"BufferMode","","How the buffer is created.",null,null],[13,"Default","","This is the default mode suitable for any usage. Will never be slow, will never be fast\neither.",61,null],[13,"Dynamic","","The mode to use when you modify a buffer multiple times per frame. Simiar to `Default` in\nthat it is suitable for most usages.",61,null],[13,"Persistent","","Optimized for when you modify a buffer exactly once per frame. You can modify it more than\nonce per frame, but if you modify it too often things will slow down.",61,null],[13,"Immutable","","Optimized when you will never touch the content of the buffer.",61,null],[4,"BufferType","","Type of a buffer.",null,null],[13,"ArrayBuffer","","",62,null],[13,"PixelPackBuffer","","",62,null],[13,"PixelUnpackBuffer","","",62,null],[13,"UniformBuffer","","",62,null],[13,"CopyReadBuffer","","",62,null],[13,"CopyWriteBuffer","","",62,null],[13,"AtomicCounterBuffer","","",62,null],[13,"DispatchIndirectBuffer","","",62,null],[13,"DrawIndirectBuffer","","",62,null],[13,"QueryBuffer","","",62,null],[13,"ShaderStorageBuffer","","",62,null],[13,"TextureBuffer","","",62,null],[13,"TransformFeedbackBuffer","","",62,null],[13,"ElementArrayBuffer","","",62,null],[5,"is_buffer_read_supported","","Returns true if reading from a buffer is supported by the backend.",null,{"inputs":[{"name":"c"}],"output":{"name":"bool"}}],[11,"clone","","",58,null],[11,"fmt","","",58,null],[11,"fmt","","",58,null],[11,"description","","",58,null],[11,"clone","","",59,null],[11,"fmt","","",59,null],[11,"fmt","","",59,null],[11,"description","","",59,null],[11,"deref","","",63,null],[11,"deref_mut","","",63,null],[11,"deref","","",64,null],[11,"write","","Writes the whole content.",65,null],[11,"len","","Returns the length of the mapping.",65,null],[11,"set","","Changes an element of the mapping.",65,null],[11,"insert","","Inserts a new fence.",66,null],[11,"get_id","","",67,null],[11,"new","","Builds a new buffer containing the given data. The size of the buffer is equal to the size\nof the data.",67,{"inputs":[{"name":"f"},{"name":"t"},{"name":"buffertype"},{"name":"buffermode"}],"output":{"name":"result"}}],[11,"empty_unsized","","Builds a new buffer of the given size.",67,{"inputs":[{"name":"f"},{"name":"buffertype"},{"name":"usize"},{"name":"buffermode"}],"output":{"name":"result"}}],[11,"get_context","","Returns the context corresponding to this buffer.",67,null],[11,"get_size","","Returns the size in bytes of this buffer.",67,null],[11,"is_persistent","","Returns true if this buffer uses persistent mapping.",67,null],[11,"write","","Uploads some data in this buffer.",67,null],[11,"invalidate","","Invalidates the content of the buffer. The data becomes undefined.",67,null],[11,"read","","Reads the content of the buffer.",67,null],[11,"map","","Maps the buffer in memory for both reading and writing.",67,null],[11,"map_read","","Maps the buffer in memory for reading.",67,null],[11,"map_write","","Maps the buffer in memory for writing only.",67,null],[11,"copy_to","","Copies the content of the buffer to another buffer.",67,null],[11,"slice_custom","","Builds a slice that contains an element from inside the buffer.",67,null],[11,"slice_custom_mut","","Same as `slice_custom` but returns a mutable slice.",67,null],[11,"as_slice","","Builds a slice containing the whole subbuffer.",67,null],[11,"as_mut_slice","","Builds a slice containing the whole subbuffer.",67,null],[11,"as_slice_any","","Builds a slice-any containing the whole subbuffer.",67,null],[11,"empty","","Builds a new buffer of the given size.",67,{"inputs":[{"name":"f"},{"name":"buffertype"},{"name":"buffermode"}],"output":{"name":"result"}}],[11,"empty_array","","Builds a new buffer of the given size.",67,{"inputs":[{"name":"f"},{"name":"buffertype"},{"name":"usize"},{"name":"buffermode"}],"output":{"name":"result"}}],[11,"len","","Returns the number of elements in this buffer.",67,null],[11,"slice","","Builds a slice of this subbuffer. Returns `None` if out of range.",67,null],[11,"slice_mut","","Builds a slice of this subbuffer. Returns `None` if out of range.",67,null],[11,"read_as_texture_1d","","Reads the content of the buffer.",67,null],[11,"fmt","","",67,null],[11,"drop","","",67,null],[11,"clone","","",68,null],[11,"get_size","","Returns the size in bytes of this slice.",68,null],[11,"get_context","","Returns the context corresponding to this buffer.",68,null],[11,"write","","Uploads some data in this buffer.",68,null],[11,"invalidate","","Invalidates the content of the slice. The data becomes undefined.",68,null],[11,"read","","Reads the content of the buffer.",68,null],[11,"copy_to","","Copies the content of this slice to another slice.",68,null],[11,"slice_custom","","Builds a slice that contains an element from inside the buffer.",68,null],[11,"as_slice_any","","Builds a slice-any containing the whole subbuffer.",68,null],[11,"len","","Returns the number of elements in this slice.",68,null],[11,"slice","","Builds a subslice of this slice. Returns `None` if out of range.",68,null],[11,"read_as_texture_1d","","Reads the content of the buffer.",68,null],[11,"fmt","","",68,null],[11,"from","","",68,{"inputs":[{"name":"buffermutslice"}],"output":{"name":"bufferslice"}}],[11,"from","","",68,{"inputs":[{"name":"buffer"}],"output":{"name":"bufferslice"}}],[11,"from","","",68,{"inputs":[{"name":"buffer"}],"output":{"name":"bufferslice"}}],[11,"get_size","","Returns the size in bytes of this slice.",69,null],[11,"map","","Maps the buffer in memory for both reading and writing.",69,null],[11,"map_read","","Maps the buffer in memory for reading.",69,null],[11,"map_write","","Maps the buffer in memory for writing only.",69,null],[11,"write","","Uploads some data in this buffer.",69,null],[11,"invalidate","","Invalidates the content of the slice. The data becomes undefined.",69,null],[11,"read","","Reads the content of the buffer.",69,null],[11,"copy_to","","Copies the content of this slice to another slice.",69,null],[11,"slice_custom","","Builds a slice that contains an element from inside the buffer.",69,null],[11,"as_slice_any","","Builds a slice-any containing the whole subbuffer.",69,null],[11,"len","","Returns the number of elements in this slice.",69,null],[11,"slice","","Builds a subslice of this slice. Returns `None` if out of range.",69,null],[11,"read_as_texture_1d","","Reads the content of the buffer.",69,null],[11,"fmt","","",69,null],[11,"from","","",69,{"inputs":[{"name":"buffer"}],"output":{"name":"buffermutslice"}}],[11,"as_slice_any","","Builds a slice-any containing the whole subbuffer.",70,null],[11,"get_elements_size","","Returns the size in bytes of each element in the buffer.",70,null],[11,"get_elements_count","","Returns the number of elements in the buffer.",70,null],[11,"get_context","","Returns the context corresponding to this buffer.",70,null],[11,"get_size","","Returns the number of bytes in this subbuffer.",70,null],[11,"invalidate","","Invalidates the content of the buffer. The data becomes undefined.",70,null],[11,"read","","UNSTABLE. This function can be removed at any moment without any further notice.",70,null],[11,"from","","",70,{"inputs":[{"name":"buffer"}],"output":{"name":"bufferany"}}],[11,"drop","","",70,null],[11,"fmt","","",70,null],[11,"clone","","",71,null],[11,"get_id","","",71,null],[11,"get_size","","Returns the number of bytes in this slice.",71,null],[11,"get_elements_size","","Returns the size in bytes of each element in the buffer.",71,null],[11,"get_elements_count","","Returns the number of elements in the buffer.",71,null],[11,"invalidate","","Invalidates the content of the slice. The data becomes undefined.",71,null],[11,"get_context","","Returns the context corresponding to this buffer.",71,null],[11,"fmt","","",71,null],[8,"Content","","Trait for types of data that can be put inside buffers.",null,null],[16,"Owned","","A type that holds a sized version of the content.",72,null],[10,"read","","Prepares an output buffer, then turns this buffer into an `Owned`.",72,{"inputs":[{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"get_elements_size","","Returns the size of each element.",72,{"inputs":[],"output":{"name":"usize"}}],[10,"to_void_ptr","","Produces a pointer to the data.",72,null],[10,"ref_from_ptr","","Builds a pointer to this type from a raw pointer.",72,null],[10,"is_size_suitable","","Returns true if the size is suitable to store a type like this.",72,{"inputs":[{"name":"usize"}],"output":{"name":"bool"}}],[11,"clone","","",60,null],[11,"fmt","","",60,null],[11,"fmt","","",60,null],[11,"description","","",60,null],[11,"eq","","",61,null],[11,"clone","","",61,null],[11,"fmt","","",61,null],[11,"default","","",61,{"inputs":[],"output":{"name":"buffermode"}}],[11,"eq","","",62,null],[11,"clone","","",62,null],[11,"fmt","","",62,null],[0,"debug","glium","",null,null],[3,"TimestampQuery","glium::debug","Allows you to obtain the timestamp inside the OpenGL commands queue.",null,null],[4,"DebugCallbackBehavior","","Describes the behavior that the debug output should have.",null,null],[13,"Ignore","","Don&#39;t do anything. This is the default behavior in release.",73,null],[13,"DebugMessageOnError","","Print a message on stdout on error, except in some circumstances like when compiling\nshaders. This is the default behavior in debug mode.",73,null],[13,"PrintAll","","Print every single output received by the driver.",73,null],[13,"Custom","","Use a custom callback.",73,null],[12,"callback","glium::debug::DebugCallbackBehavior","The function to be called.",73,null],[12,"synchronous","","Whether or not it should be called immediately (true) or asynchronously (false).",73,null],[4,"Severity","glium::debug","Severity of a debug message.",null,null],[13,"Notification","","Anything that isn&#39;t an error or performance issue.",74,null],[13,"Low","","Redundant state-change performance warning, or unimportant undefined behavior.",74,null],[13,"Medium","","Major performance warnings, shader compilation/linking warnings,\nor the use of deprecated functionality.",74,null],[13,"High","","All OpenGL Errors, shader compilation/linking errors,\nor highly-dangerous undefined behavior.",74,null],[4,"Source","","Source of a debug message.",null,null],[13,"Api","","Calls to the OpenGL API.",75,null],[13,"WindowSystem","","Calls to a window-system API.",75,null],[13,"ShaderCompiler","","A compiler for a shading language.",75,null],[13,"ThirdParty","","An application associated with Openctxt.gl.",75,null],[13,"Application","","Explicitly generated by Glium or the application.",75,null],[13,"OtherSource","","",75,null],[4,"MessageType","","Type of a debug message.",null,null],[13,"Error","","An error, typically from the API",76,null],[13,"DeprecatedBehavior","","Some behavior marked deprecated has been used",76,null],[13,"UndefinedBehavior","","Something has invoked undefined behavior",76,null],[13,"Portability","","Some functionality the user relies upon is not portable",76,null],[13,"Performance","","Code has triggered possible performance issues",76,null],[13,"Marker","","Command stream annotation",76,null],[13,"PushGroup","","Entering a debug group",76,null],[13,"PopGroup","","Leaving a debug group",76,null],[13,"Other","","Any other event",76,null],[6,"DebugCallback","","Represents a callback that can be used for the debug output feature of OpenGL.",null,null],[11,"eq","","",74,null],[11,"fmt","","",74,null],[11,"clone","","",74,null],[11,"fmt","","",75,null],[11,"clone","","",75,null],[11,"fmt","","",76,null],[11,"clone","","",76,null],[11,"new","","Creates a new `TimestampQuery`. Returns `None` if the backend doesn&#39;t support it.",77,{"inputs":[{"name":"f"}],"output":{"name":"option"}}],[11,"is_ready","","Queries the counter to see if the timestamp is already available.",77,null],[11,"get","","Returns the value of the timestamp. Blocks until it is available.",77,null],[0,"draw_parameters","glium","Describes miscellaneous parameters to be used when drawing.",null,null],[3,"Blend","glium::draw_parameters","Blend effect that the GPU will use for blending.",null,null],[12,"color","","The blending function for color channels.",32,null],[12,"alpha","","The blending function for alpha channels.",32,null],[12,"constant_value","","A constant color that can be used in the blending functions.",32,null],[3,"Depth","","Represents the depth parameters of a draw command.",null,null],[12,"test","","The function that the GPU will use to determine whether to write over an existing pixel\non the target. Don&#39;t forget to set `depth_write` appropriately if you use a depth test.",33,null],[12,"write","","Sets whether the GPU will write the depth values on the depth buffer if they pass the\ndepth test.",33,null],[12,"range","","The range of possible Z values in surface coordinates.",33,null],[12,"clamp","","Sets whether the depth values of samples should be clamped to `0.0` and `1.0`.",33,null],[3,"SamplesPassedQuery","","A query that allows you to know the number of samples written to the output during the\ndraw operations where this query was active.",null,null],[3,"TimeElapsedQuery","","A query that allows you to know the number of nanoseconds that have elapsed\nduring the draw operations.",null,null],[3,"PrimitivesGeneratedQuery","","Query that allows you to know the number of primitives generated by the geometry shader.\nWill stay at `0` if you use it without any active geometry shader.",null,null],[3,"AnySamplesPassedQuery","","A query type that allows you to know whether any sample has been written to the output during\nthe operations executed with this query.",null,null],[3,"TransformFeedbackPrimitivesWrittenQuery","","Query that allows you to know the number of primitives generated by transform feedback.",null,null],[3,"Stencil","","Describes the parameters that must be used for the stencil operations when drawing.",null,null],[12,"test_clockwise","","A comparison against the existing value in the stencil buffer.",78,null],[12,"reference_value_clockwise","","Reference value that is used by `stencil_test_clockwise`, `stencil_fail_operation_clockwise`,\n`stencil_pass_depth_fail_operation_clockwise` and `stencil_depth_pass_operation_clockwise`.",78,null],[12,"write_mask_clockwise","","Allows specifying a mask when writing data on the stencil buffer.",78,null],[12,"fail_operation_clockwise","","Specifies the operation to do when a fragment fails the stencil test.",78,null],[12,"pass_depth_fail_operation_clockwise","","Specifies the operation to do when a fragment passes the stencil test but fails\nthe depth test.",78,null],[12,"depth_pass_operation_clockwise","","Specifies the operation to do when a fragment passes both the stencil and depth tests.",78,null],[12,"test_counter_clockwise","","A comparaison against the existing value in the stencil buffer.",78,null],[12,"reference_value_counter_clockwise","","Reference value that is used by `stencil_test_counter_clockwise`,\n`stencil_fail_operation_counter_clockwise`,\n`stencil_pass_depth_fail_operation_counter_clockwise` and\n`stencil_depth_pass_operation_counter_clockwise`.",78,null],[12,"write_mask_counter_clockwise","","Allows specifying a mask when writing data on the stencil buffer.",78,null],[12,"fail_operation_counter_clockwise","","Specifies the operation to do when a fragment fails the stencil test.",78,null],[12,"pass_depth_fail_operation_counter_clockwise","","Specifies the operation to do when a fragment passes the stencil test but fails\nthe depth test.",78,null],[12,"depth_pass_operation_counter_clockwise","","Specifies the operation to do when a fragment passes both the stencil and depth tests.",78,null],[3,"DrawParameters","","Represents the parameters to use when drawing.",null,null],[12,"depth","","How the fragment will interact with the depth buffer.",79,null],[12,"stencil","","How the fragment will interact with the stencil buffer.",79,null],[12,"blend","","The effect that the GPU will use to merge the existing pixel with the pixel that is\nbeing written.",79,null],[12,"color_mask","","Allows you to disable some color components.",79,null],[12,"line_width","","Width in pixels of the lines to draw when drawing lines.",79,null],[12,"point_size","","Diameter in pixels of the points to draw when drawing points.",79,null],[12,"backface_culling","","Whether or not the GPU should filter out some faces.",79,null],[12,"polygon_mode","","How to render polygons. The default value is `Fill`.",79,null],[12,"multisampling","","Whether multisample antialiasing (MSAA) should be used. Default value is `true`.",79,null],[12,"dithering","","Whether dithering is activated. Default value is `true`.",79,null],[12,"viewport","","The viewport to use when drawing.",79,null],[12,"scissor","","If specified, only pixels in this rect will be displayed. Default is `None`.",79,null],[12,"draw_primitives","","If `false`, the pipeline will stop after the primitives generation stage. The default\nvalue is `true`.",79,null],[12,"samples_passed_query","","If set, each sample (ie. usually each pixel) written to the output adds one to the\ncounter of the `SamplesPassedQuery`.",79,null],[12,"time_elapsed_query","","If set, the time it took for the GPU to execute this draw command is added to the total\nstored inside the `TimeElapsedQuery`.",79,null],[12,"primitives_generated_query","","If set, the number of primitives generated is added to the total stored inside the query.",79,null],[12,"transform_feedback_primitives_written_query","","If set, the number of vertices written by transform feedback.",79,null],[12,"condition","","If set, the commands will only be executed if the specified query contains `true` or\na number different than 0.",79,null],[12,"transform_feedback","","If set, then the generated primitives will be written back to a buffer.",79,null],[12,"smooth","","If set, then the generated primitives will be smoothed.",79,null],[12,"provoking_vertex","","In your vertex shader or geometry shader, you have the possibility to mark some output\nvaryings as `flat`. If this is the case, the value of one of the vertices will be used\nfor the whole primitive. This variable allows you to specify which vertex.",79,null],[12,"primitive_bounding_box","","Hint for the GPU of the bounding box of the geometry.",79,null],[3,"ConditionalRendering","","Condition whether to render or not.",null,null],[12,"query","","The query to use.",80,null],[12,"wait","","If true, the GPU will wait until the query result has been obtained. If false, the GPU\nis free to ignore the query and draw anyway.",80,null],[12,"per_region","","If true, only samples that match those that were written with the query active will\nbe drawn.",80,null],[4,"BlendingFunction","","Function that the GPU will use for blending.",null,null],[13,"AlwaysReplace","","Simply overwrite the destination pixel with the source pixel.",38,null],[13,"Min","","For each individual component (red, green, blue, and alpha), the minimum value is chosen\nbetween the source and the destination.",38,null],[13,"Max","","For each individual component (red, green, blue, and alpha), the maximum value is chosen\nbetween the source and the destination.",38,null],[13,"Addition","","For each individual component (red, green, blue, and alpha), a weighted addition\nbetween the source and the destination.",38,null],[12,"source","glium::draw_parameters::BlendingFunction","The factor to apply to the source pixel.",38,null],[12,"destination","","The factor to apply to the destination pixel.",38,null],[13,"Subtraction","glium::draw_parameters","For each individual component (red, green, blue, and alpha), a weighted substraction\nof the source by the destination.",38,null],[12,"source","glium::draw_parameters::BlendingFunction","The factor to apply to the source pixel.",38,null],[12,"destination","","The factor to apply to the destination pixel.",38,null],[13,"ReverseSubtraction","glium::draw_parameters","For each individual component (red, green, blue, and alpha), a weighted substraction\nof the destination by the source.",38,null],[12,"source","glium::draw_parameters::BlendingFunction","The factor to apply to the source pixel.",38,null],[12,"destination","","The factor to apply to the destination pixel.",38,null],[4,"LinearBlendingFactor","glium::draw_parameters","Indicates which value to multiply each component with.",null,null],[13,"Zero","","Multiply the source or destination component by zero, which always\ngives `0.0`.",39,null],[13,"One","","Multiply the source or destination component by one, which always\ngives you the original value.",39,null],[13,"SourceColor","","Multiply the source or destination component by its corresponding value\nin the source.",39,null],[13,"OneMinusSourceColor","","Equivalent to `1 - SourceColor`.",39,null],[13,"DestinationColor","","Multiply the source or destination component by its corresponding value\nin the destination.",39,null],[13,"OneMinusDestinationColor","","Equivalent to `1 - DestinationColor`.",39,null],[13,"SourceAlpha","","Multiply the source or destination component by the alpha value of the source.",39,null],[13,"SourceAlphaSaturate","","Multiply the source or destination component by the smallest value of\n`SourceAlpha` and `1 - DestinationAlpha`.",39,null],[13,"OneMinusSourceAlpha","","Multiply the source or destination component by `1.0` minus the alpha value of the source.",39,null],[13,"DestinationAlpha","","Multiply the source or destination component by the alpha value of the destination.",39,null],[13,"OneMinusDestinationAlpha","","Multiply the source or destination component by `1.0` minus the alpha value of the\ndestination.",39,null],[13,"ConstantColor","","Multiply the source or destination component by the corresponding value\nin `Blend::const_value`.",39,null],[13,"OneMinusConstantColor","","Multiply the source or destination compoent by `1.0` minus the corresponding\nvalue in `Blend::const_value`.",39,null],[13,"ConstantAlpha","","Multiply the source or destination component by the alpha value of `Blend::const_value`.",39,null],[13,"OneMinusConstantAlpha","","Multiply the source or destination componet by `1.0` minus the alpha value of\n`Blend::const_value`.",39,null],[4,"DepthTest","","The function that the GPU will use to determine whether to write over an existing pixel\non the target.",null,null],[13,"Ignore","","Never replace the target pixel.",40,null],[13,"Overwrite","","Always replace the target pixel.",40,null],[13,"IfEqual","","Replace if the z-value of the source is equal to the destination.",40,null],[13,"IfNotEqual","","Replace if the z-value of the source is different than the destination.",40,null],[13,"IfMore","","Replace if the z-value of the source is more than the destination.",40,null],[13,"IfMoreOrEqual","","Replace if the z-value of the source is more than, or equal to the destination.",40,null],[13,"IfLess","","Replace if the z-value of the source is less than the destination.",40,null],[13,"IfLessOrEqual","","Replace if the z-value of the source is less than, or equal to the destination.",40,null],[4,"DepthClamp","","Specifies whether the depth value of samples should be clamped to `0.0` or `1.0`.",null,null],[13,"NoClamp","","Do not clamp. Samples with values outside of the `[0.0, 1.0]` range will be discarded.",81,null],[13,"Clamp","","Clamp the depth values. All samples will always be drawn.",81,null],[13,"ClampNear","","Depth values inferior to `0.0` will be clamped to `0.0`.",81,null],[13,"ClampFar","","Depth values superior to `1.0` will be clamped to `1.0`.",81,null],[4,"QueryCreationError","","Error that can happen when creating a query object.",null,null],[13,"NotSupported","","The given query type is not supported.",82,null],[4,"StencilTest","","Specifies which comparison the GPU will do to determine whether a sample passes the stencil\ntest. The general equation is `(ref &amp; mask) CMP (stencil &amp; mask)`, where `ref` is the reference\nvalue (`stencil_reference_value_clockwise` or `stencil_reference_value_counter_clockwise`),\n`CMP` is the comparison chosen, and `stencil` is the current value in the stencil buffer.",null,null],[13,"AlwaysPass","","The stencil test always passes.",41,null],[13,"AlwaysFail","","The stencil test always fails.",41,null],[13,"IfLess","","`(ref &amp; mask) &lt; (stencil &amp; mask)`",41,null],[12,"mask","glium::draw_parameters::StencilTest","The mask that is and&#39;ed with the reference value and stencil buffer.",41,null],[13,"IfLessOrEqual","glium::draw_parameters","`(ref &amp; mask) &lt;= (stencil &amp; mask)`",41,null],[12,"mask","glium::draw_parameters::StencilTest","The mask that is and&#39;ed with the reference value and stencil buffer.",41,null],[13,"IfMore","glium::draw_parameters","`(ref &amp; mask) &gt; (stencil &amp; mask)`",41,null],[12,"mask","glium::draw_parameters::StencilTest","The mask that is and&#39;ed with the reference value and stencil buffer.",41,null],[13,"IfMoreOrEqual","glium::draw_parameters","`(ref &amp; mask) &gt;= (stencil &amp; mask)`",41,null],[12,"mask","glium::draw_parameters::StencilTest","The mask that is and&#39;ed with the reference value and stencil buffer.",41,null],[13,"IfEqual","glium::draw_parameters","`(ref &amp; mask) == (stencil &amp; mask)`",41,null],[12,"mask","glium::draw_parameters::StencilTest","The mask that is and&#39;ed with the reference value and stencil buffer.",41,null],[13,"IfNotEqual","glium::draw_parameters","`(ref &amp; mask) != (stencil &amp; mask)`",41,null],[12,"mask","glium::draw_parameters::StencilTest","The mask that is and&#39;ed with the reference value and stencil buffer.",41,null],[4,"StencilOperation","glium::draw_parameters","Specificies which operation the GPU will do depending on the result of the stencil test.",null,null],[13,"Keep","","Keeps the value currently in the stencil buffer.",42,null],[13,"Zero","","Writes zero in the stencil buffer.",42,null],[13,"Replace","","Writes the reference value (`stencil_reference_value_clockwise` or\n`stencil_reference_value_counter_clockwise`) in the stencil buffer.",42,null],[13,"Increment","","Increments the value currently in the stencil buffer. If the value is the\nmaximum, don&#39;t do anything.",42,null],[13,"IncrementWrap","","Increments the value currently in the stencil buffer. If the value is the\nmaximum, wrap to `0`.",42,null],[13,"Decrement","","Decrements the value currently in the stencil buffer. If the value is `0`,\ndon&#39;t do anything.",42,null],[13,"DecrementWrap","","Decrements the value currently in the stencil buffer. If the value is `0`,\nwrap to `-1`.",42,null],[13,"Invert","","Inverts each bit of the value.",42,null],[4,"BackfaceCullingMode","","Describes how triangles should be filtered before the fragment processing. Backface culling\nis purely an optimization. If you don&#39;t know what this does, just use `CullingDisabled`.",null,null],[13,"CullingDisabled","","All triangles are always drawn.",83,null],[13,"CullCounterClockwise","","Triangles whose vertices are counterclockwise won&#39;t be drawn.",83,null],[13,"CullClockwise","","Triangles whose vertices are clockwise won&#39;t be drawn.",83,null],[4,"PolygonMode","","Defines how the device should render polygons.",null,null],[13,"Point","","Only draw a single point at each vertex.",84,null],[13,"Line","","Only draw a line in the boundaries of each polygon.",84,null],[13,"Fill","","Fill the content of the polygon. This is the default mode.",84,null],[4,"Smooth","","Specifies a hint for the smoothing.",null,null],[13,"Fastest","","The most efficient option should be chosen.",85,null],[13,"Nicest","","The most correct, or highest quality, option should be chosen.",85,null],[13,"DontCare","","No preference.",85,null],[4,"ProvokingVertex","","The vertex to use for flat shading.",null,null],[13,"LastVertex","","Use the last vertex of each primitive.",86,null],[13,"FirstVertex","","Use the first vertex of each primitive.",86,null],[4,"SamplesQueryParam","","The query to use for samples counting.",null,null],[13,"SamplesPassedQuery","","A `SamplesPassedQuery`.",87,null],[13,"AnySamplesPassedQuery","","A `AnySamplesPassedQuery`.",87,null],[5,"validate","","DEPRECATED. Checks parameters and returns an error if something is wrong.",null,{"inputs":[{"name":"context"},{"name":"drawparameters"}],"output":{"name":"result"}}],[11,"eq","glium","",32,null],[11,"ne","","",32,null],[11,"fmt","","",32,null],[11,"clone","","",32,null],[11,"alpha_blending","","Returns a blend effect to add transparent objects over others.",32,{"inputs":[],"output":{"name":"blend"}}],[11,"default","","",32,{"inputs":[],"output":{"name":"blend"}}],[11,"eq","","",38,null],[11,"ne","","",38,null],[11,"fmt","","",38,null],[11,"clone","","",38,null],[11,"eq","","",39,null],[11,"fmt","","",39,null],[11,"clone","","",39,null],[11,"clone","","",33,null],[11,"fmt","","",33,null],[11,"default","","",33,{"inputs":[],"output":{"name":"depth"}}],[11,"eq","","",40,null],[11,"fmt","","",40,null],[11,"clone","","",40,null],[11,"requires_depth_buffer","","Returns true if the function requires a depth buffer to be used.",40,null],[11,"eq","glium::draw_parameters","",81,null],[11,"fmt","","",81,null],[11,"clone","","",81,null],[11,"fmt","","",82,null],[11,"clone","","",82,null],[11,"fmt","","",82,null],[11,"description","","",82,null],[11,"fmt","","",88,null],[11,"new","","Builds a new query.",88,{"inputs":[{"name":"f"}],"output":{"name":"result"}}],[11,"is_ready","","Queries the counter to see if the result is already available.",88,null],[11,"get","","Returns the value of the query. Blocks until it is available.",88,null],[11,"to_buffer_u32","","Writes the result of the query to a buffer when it is available.",88,null],[11,"get_id","","",88,null],[11,"fmt","","",89,null],[11,"new","","Builds a new query.",89,{"inputs":[{"name":"f"}],"output":{"name":"result"}}],[11,"is_ready","","Queries the counter to see if the result is already available.",89,null],[11,"get","","Returns the value of the query. Blocks until it is available.",89,null],[11,"to_buffer_u32","","Writes the result of the query to a buffer when it is available.",89,null],[11,"get_id","","",89,null],[11,"fmt","","",90,null],[11,"new","","Builds a new query.",90,{"inputs":[{"name":"f"},{"name":"bool"}],"output":{"name":"result"}}],[11,"is_ready","","Queries the counter to see if the result is already available.",90,null],[11,"get","","Returns the value of the query. Blocks until it is available.",90,null],[11,"to_buffer_u32","","Writes the result of the query to a buffer when it is available.",90,null],[11,"get_id","","",90,null],[11,"fmt","","",91,null],[11,"new","","Builds a new query.",91,{"inputs":[{"name":"f"}],"output":{"name":"result"}}],[11,"is_ready","","Queries the counter to see if the result is already available.",91,null],[11,"get","","Returns the value of the query. Blocks until it is available.",91,null],[11,"to_buffer_u32","","Writes the result of the query to a buffer when it is available.",91,null],[11,"get_id","","",91,null],[11,"fmt","","",92,null],[11,"new","","Builds a new query.",92,{"inputs":[{"name":"f"}],"output":{"name":"result"}}],[11,"is_ready","","Queries the counter to see if the result is already available.",92,null],[11,"get","","Returns the value of the query. Blocks until it is available.",92,null],[11,"to_buffer_u32","","Writes the result of the query to a buffer when it is available.",92,null],[11,"get_id","","",92,null],[11,"fmt","","",78,null],[11,"clone","","",78,null],[11,"default","","",78,{"inputs":[],"output":{"name":"stencil"}}],[11,"eq","glium","",41,null],[11,"ne","","",41,null],[11,"fmt","","",41,null],[11,"clone","","",41,null],[11,"eq","","",42,null],[11,"fmt","","",42,null],[11,"clone","","",42,null],[11,"eq","glium::draw_parameters","",83,null],[11,"fmt","","",83,null],[11,"clone","","",83,null],[11,"eq","","",84,null],[11,"fmt","","",84,null],[11,"clone","","",84,null],[11,"eq","","",85,null],[11,"fmt","","",85,null],[11,"clone","","",85,null],[11,"eq","","",86,null],[11,"fmt","","",86,null],[11,"clone","","",86,null],[11,"fmt","","",79,null],[11,"clone","","",79,null],[11,"clone","","",80,null],[11,"fmt","","",80,null],[11,"clone","","",87,null],[11,"fmt","","",87,null],[11,"from","","",87,{"inputs":[{"name":"samplespassedquery"}],"output":{"name":"samplesqueryparam"}}],[11,"from","","",87,{"inputs":[{"name":"anysamplespassedquery"}],"output":{"name":"samplesqueryparam"}}],[11,"default","","",79,{"inputs":[],"output":{"name":"drawparameters"}}],[0,"framebuffer","glium","Framebuffers allow you to customize the color, depth and stencil buffers you will draw on.",null,null],[3,"DefaultFramebuffer","glium::framebuffer","A framebuffer which has only one color attachment.",null,null],[3,"RenderBuffer","","A render buffer is similar to a texture, but is optimized for usage as a draw target.",null,null],[3,"RenderBufferAny","","A RenderBuffer of indeterminate type.",null,null],[3,"DepthRenderBuffer","","A render buffer is similar to a texture, but is optimized for usage as a draw target.",null,null],[3,"StencilRenderBuffer","","A render buffer is similar to a texture, but is optimized for usage as a draw target.",null,null],[3,"DepthStencilRenderBuffer","","A render buffer is similar to a texture, but is optimized for usage as a draw target.",null,null],[3,"SimpleFrameBuffer","","A framebuffer which has only one color attachment.",null,null],[3,"MultiOutputFrameBuffer","","This struct is useless for the moment.",null,null],[3,"EmptyFrameBuffer","","A framebuffer with no attachment at all.",null,null],[4,"DefaultFramebufferAttachment","","One of the color attachments on the default framebuffer.",null,null],[13,"BackLeft","","The backbuffer for the left eye. Equivalent to the backbuffer if stereoscopy is disabled.",93,null],[13,"BackRight","","The backbuffer for the right eye. May not be present.",93,null],[13,"FrontLeft","","The frontbuffer for the left eye. Equivalent to the frontbuffer if stereoscopy is disabled.\nMay not be accessible.",93,null],[13,"FrontRight","","The frontbuffer for the right eye. May not be present or accessible.",93,null],[4,"RenderBufferCreationError","","Error while creating a render buffer.",null,null],[13,"FormatNotSupported","","The requested format is not supported.",94,null],[4,"ValidationError","","An error that can happen while validating attachments.",null,null],[13,"EmptyFramebufferObjectsNotSupported","","You requested an empty framebuffer object, but they are not supported.",95,null],[13,"EmptyFramebufferUnsupportedDimensions","","The requested characteristics of an empty framebuffer object are out of range.",95,null],[13,"DimensionsMismatchNotSupported","","The backend doesn&#39;t support attachments with various dimensions.",95,null],[13,"SamplesCountMismatch","","All attachments must have the same number of samples.",95,null],[13,"TooManyColorAttachments","","Backends only support a certain number of color attachments.",95,null],[12,"maximum","glium::framebuffer::ValidationError","Maximum number of attachments.",95,null],[12,"obtained","","Number of attachments that were given.",95,null],[4,"ColorAttachment","glium::framebuffer","Describes an attachment for a color buffer.",null,null],[13,"Texture","","A texture.",96,null],[13,"RenderBuffer","","A render buffer.",96,null],[4,"DepthAttachment","","Describes an attachment for a depth buffer.",null,null],[13,"Texture","","A texture.",97,null],[13,"RenderBuffer","","A render buffer.",97,null],[4,"StencilAttachment","","Describes an attachment for a stencil buffer.",null,null],[13,"Texture","","A texture.",98,null],[13,"RenderBuffer","","A render buffer.",98,null],[4,"DepthStencilAttachment","","Describes an attachment for a depth and stencil buffer.",null,null],[13,"Texture","","A texture.",99,null],[13,"RenderBuffer","","A render buffer.",99,null],[5,"is_dimensions_mismatch_supported","","Returns true if the backend supports attachments with varying dimensions.",null,{"inputs":[{"name":"c"}],"output":{"name":"bool"}}],[11,"fmt","","",93,null],[11,"clone","","",93,null],[11,"back_left","","Creates a `DefaultFramebuffer` with the back left buffer.",100,{"inputs":[{"name":"f"}],"output":{"name":"defaultframebuffer"}}],[11,"clear","","",100,null],[11,"get_dimensions","","",100,null],[11,"get_depth_buffer_bits","","",100,null],[11,"get_stencil_buffer_bits","","",100,null],[11,"draw","","",100,null],[11,"blit_color","","",100,null],[11,"blit_from_frame","","",100,null],[11,"blit_from_simple_framebuffer","","",100,null],[11,"blit_from_multioutput_framebuffer","","",100,null],[11,"fmt","","",94,null],[11,"clone","","",94,null],[11,"fmt","","",94,null],[11,"description","","",94,null],[11,"from","","",94,{"inputs":[{"name":"formatnotsupportederror"}],"output":{"name":"creationerror"}}],[11,"new","","Builds a new render buffer.",101,{"inputs":[{"name":"f"},{"name":"uncompressedfloatformat"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"deref","","",101,null],[11,"deref_mut","","",101,null],[11,"get_id","","",101,null],[11,"new","","Builds a new render buffer.",102,{"inputs":[{"name":"f"},{"name":"depthformat"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"deref","","",102,null],[11,"deref_mut","","",102,null],[11,"get_id","","",102,null],[11,"new","","Builds a new render buffer.",103,{"inputs":[{"name":"f"},{"name":"stencilformat"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"deref","","",103,null],[11,"deref_mut","","",103,null],[11,"get_id","","",103,null],[11,"new","","Builds a new render buffer.",104,{"inputs":[{"name":"f"},{"name":"depthstencilformat"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"deref","","",104,null],[11,"deref_mut","","",104,null],[11,"get_id","","",104,null],[11,"get_dimensions","","Returns the dimensions of the render buffer.",105,null],[11,"get_samples","","Returns the number of samples of the render buffer, or `None` if multisampling isn&#39;t\nenabled.",105,null],[11,"get_context","","Returns the context used to create this renderbuffer.",105,null],[11,"kind","","Returns the kind of renderbuffer.",105,null],[11,"drop","","",105,null],[11,"get_id","","",105,null],[8,"ToColorAttachment","","Trait for objects that can be used as color attachments.",null,null],[10,"to_color_attachment","","Builds the `ColorAttachment`.",106,null],[8,"ToDepthAttachment","","Trait for objects that can be used as depth attachments.",null,null],[10,"to_depth_attachment","","Builds the `DepthAttachment`.",107,null],[8,"ToStencilAttachment","","Trait for objects that can be used as stencil attachments.",null,null],[10,"to_stencil_attachment","","Builds the `StencilAttachment`.",108,null],[8,"ToDepthStencilAttachment","","Trait for objects that can be used as depth and stencil attachments.",null,null],[10,"to_depth_stencil_attachment","","Builds the `DepthStencilAttachment`.",109,null],[11,"new","","Creates a `SimpleFrameBuffer` with a single color attachment and no depth\nnor stencil buffer.",110,{"inputs":[{"name":"f"},{"name":"c"}],"output":{"name":"result"}}],[11,"with_depth_buffer","","Creates a `SimpleFrameBuffer` with a single color attachment and a depth\nbuffer, but no stencil buffer.",110,{"inputs":[{"name":"f"},{"name":"c"},{"name":"d"}],"output":{"name":"result"}}],[11,"depth_only","","Creates a `SimpleFrameBuffer` with a single color attachment and no depth\nnor stencil buffer.",110,{"inputs":[{"name":"f"},{"name":"d"}],"output":{"name":"result"}}],[11,"with_depth_and_stencil_buffer","","Creates a `SimpleFrameBuffer` with a single color attachment, a depth\nbuffer, and a stencil buffer.",110,{"inputs":[{"name":"f"},{"name":"c"},{"name":"d"},{"name":"s"}],"output":{"name":"result"}}],[11,"depth_and_stencil_only","","Creates a `SimpleFrameBuffer` with a single color attachment and no depth\nnor stencil buffer.",110,{"inputs":[{"name":"f"},{"name":"d"},{"name":"s"}],"output":{"name":"result"}}],[11,"with_stencil_buffer","","Creates a `SimpleFrameBuffer` with a single color attachment and a stencil\nbuffer, but no depth buffer.",110,{"inputs":[{"name":"f"},{"name":"c"},{"name":"s"}],"output":{"name":"result"}}],[11,"stencil_only","","Creates a `SimpleFrameBuffer` with a single color attachment and a stencil\nbuffer, but no depth buffer.",110,{"inputs":[{"name":"f"},{"name":"s"}],"output":{"name":"result"}}],[11,"with_depth_stencil_buffer","","Creates a `SimpleFrameBuffer` with a single color attachment and a depth-stencil buffer.",110,{"inputs":[{"name":"f"},{"name":"c"},{"name":"d"}],"output":{"name":"result"}}],[11,"depth_stencil_only","","Creates a `SimpleFrameBuffer` with a single color attachment and a depth-stencil buffer.",110,{"inputs":[{"name":"f"},{"name":"d"}],"output":{"name":"result"}}],[11,"clear","","",110,null],[11,"get_dimensions","","",110,null],[11,"get_depth_buffer_bits","","",110,null],[11,"get_stencil_buffer_bits","","",110,null],[11,"draw","","",110,null],[11,"blit_color","","",110,null],[11,"blit_from_frame","","",110,null],[11,"blit_from_simple_framebuffer","","",110,null],[11,"blit_from_multioutput_framebuffer","","",110,null],[11,"new","","Creates a new `MultiOutputFrameBuffer`.",111,{"inputs":[{"name":"f"},{"name":"i"}],"output":{"name":"result"}}],[11,"with_depth_buffer","","Creates a `MultiOutputFrameBuffer` with a depth buffer.",111,{"inputs":[{"name":"f"},{"name":"i"},{"name":"d"}],"output":{"name":"result"}}],[11,"with_depth_and_stencil_buffer","","Creates a `MultiOutputFrameBuffer` with a depth buffer, and a stencil buffer.",111,{"inputs":[{"name":"f"},{"name":"i"},{"name":"d"},{"name":"s"}],"output":{"name":"result"}}],[11,"with_stencil_buffer","","Creates a `MultiOutputFrameBuffer` with a stencil buffer, but no depth buffer.",111,{"inputs":[{"name":"f"},{"name":"i"},{"name":"s"}],"output":{"name":"result"}}],[11,"with_depth_stencil_buffer","","Creates a `MultiOutputFrameBuffer` with a depth-stencil buffer.",111,{"inputs":[{"name":"f"},{"name":"i"},{"name":"d"}],"output":{"name":"result"}}],[11,"clear","","",111,null],[11,"get_dimensions","","",111,null],[11,"get_depth_buffer_bits","","",111,null],[11,"get_stencil_buffer_bits","","",111,null],[11,"draw","","",111,null],[11,"blit_color","","",111,null],[11,"blit_from_frame","","",111,null],[11,"blit_from_simple_framebuffer","","",111,null],[11,"blit_from_multioutput_framebuffer","","",111,null],[11,"is_supported","","Returns true if empty framebuffers are supported by the backend.",112,{"inputs":[{"name":"c"}],"output":{"name":"bool"}}],[11,"is_layered_supported","","Returns true if layered empty framebuffers are supported by the backend.",112,{"inputs":[{"name":"c"}],"output":{"name":"bool"}}],[11,"get_max_supported_width","","Returns the maximum width of empty framebuffers that the backend supports, or `None` if\nempty framebuffers are not supported.",112,{"inputs":[{"name":"c"}],"output":{"name":"option"}}],[11,"get_max_supported_height","","Returns the maximum height of empty framebuffers that the backend supports, or `None` if\nempty framebuffers are not supported.",112,{"inputs":[{"name":"c"}],"output":{"name":"option"}}],[11,"get_max_supported_samples","","Returns the maximum number of samples of empty framebuffers that the backend supports,\nor `None` if empty framebuffers are not supported.",112,{"inputs":[{"name":"c"}],"output":{"name":"option"}}],[11,"get_max_supported_layers","","Returns the maximum number of layers of empty framebuffers that the backend supports,\nor `None` if layered empty framebuffers are not supported.",112,{"inputs":[{"name":"c"}],"output":{"name":"option"}}],[11,"new","","Creates a `EmptyFrameBuffer`.",112,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"option"},{"name":"option"},{"name":"bool"}],"output":{"name":"result"}}],[11,"clear","","",112,null],[11,"get_dimensions","","",112,null],[11,"get_depth_buffer_bits","","",112,null],[11,"get_stencil_buffer_bits","","",112,null],[11,"draw","","",112,null],[11,"blit_color","","",112,null],[11,"blit_from_frame","","",112,null],[11,"blit_from_simple_framebuffer","","",112,null],[11,"blit_from_multioutput_framebuffer","","",112,null],[11,"clone","","",96,null],[11,"to_color_attachment","","",96,null],[11,"clone","","",97,null],[11,"to_depth_attachment","","",97,null],[11,"clone","","",98,null],[11,"to_stencil_attachment","","",98,null],[11,"clone","","",99,null],[11,"to_depth_stencil_attachment","","",99,null],[0,"index","glium","In order to draw, you need to provide a way for the video card to know how to link primitives\ntogether.",null,null],[3,"IndexBuffer","glium::index","A list of indices loaded in the graphics card&#39;s memory.",null,null],[3,"IndexBufferSlice","","Slice of an `IndexBuffer`.",null,null],[3,"IndexBufferAny","","An `IndexBuffer` without any type information.",null,null],[3,"DrawCommandsNoIndicesBuffer","","A buffer containing a list of draw commands.",null,null],[3,"DrawCommandNoIndices","","Represents an element in a list of draw commands.",null,null],[12,"count","","Number of vertices to draw.",113,null],[12,"instance_count","","Number of instances to draw. If it&#39;s `0`, nothing will be drawn.",113,null],[12,"first_index","","First vertex to draw in the vertices source.",113,null],[12,"base_instance","","Numero of the first instance to draw.",113,null],[3,"DrawCommandsIndicesBuffer","","A buffer containing a list of draw commands.",null,null],[3,"DrawCommandIndices","","Represents an element in a list of draw commands.",null,null],[12,"count","","Number of indices to use in the index buffer.",114,null],[12,"instance_count","","Number of instances to draw. If it&#39;s `0`, nothing will be drawn.",114,null],[12,"first_index","","First index to draw in the index buffer.",114,null],[12,"base_vertex","","Value to add to each index.",114,null],[12,"base_instance","","Numero of the first instance to draw.",114,null],[3,"NoIndices","","Marker that can be used as an indices source when you don&#39;t need indices.",null,null],[12,"0","","",115,null],[4,"BufferCreationError","","Error that can happen while creating an index buffer.",null,null],[13,"IndexTypeNotSupported","","The type of index is not supported by the backend.",116,null],[13,"PrimitiveTypeNotSupported","","The type of primitives is not supported by the backend.",116,null],[13,"BufferCreationError","","An error happened while creating the buffer.",116,null],[4,"IndicesSource","","Describes a source of indices used for drawing.",null,null],[13,"IndexBuffer","","A buffer uploaded in video memory.",117,null],[12,"buffer","glium::index::IndicesSource","The buffer.",117,null],[12,"data_type","","Type of indices in the buffer.",117,null],[12,"primitives","","Type of primitives contained in the vertex source.",117,null],[13,"MultidrawArray","glium::index","Use a multidraw indirect buffer without indices.",117,null],[12,"buffer","glium::index::IndicesSource","The buffer.",117,null],[12,"primitives","","Type of primitives contained in the vertex source.",117,null],[13,"MultidrawElement","glium::index","Use a multidraw indirect buffer with indices.",117,null],[12,"commands","glium::index::IndicesSource","The buffer of the commands.",117,null],[12,"indices","","The buffer of the indices.",117,null],[12,"data_type","","Type of indices in the buffer.",117,null],[12,"primitives","","Type of primitives contained in the vertex source.",117,null],[13,"NoIndices","glium::index","Don&#39;t use indices. Assemble primitives by using the order in which the vertices are in\nthe vertices source.",117,null],[12,"primitives","glium::index::IndicesSource","Type of primitives contained in the vertex source.",117,null],[4,"PrimitiveType","glium::index","List of available primitives.",null,null],[13,"Points","","Each vertex is an invidiual point.",118,null],[13,"LinesList","","Vertices are grouped by chunks of two vertices. Each chunk represents a line.",118,null],[13,"LinesListAdjacency","","Vertices are grouped by chunks of four vertices. The second and third vertices of each\nchunk represents the line.",118,null],[13,"LineStrip","","Each vertex (except the last one) forms a line with the next vertex.",118,null],[13,"LineStripAdjacency","","Similar to `LineStrip`, but with an additional vertex at the beginning and at the end\nthat represent the vertices adjacent to the first and last ones.",118,null],[13,"LineLoop","","Each vertex forms a line with the next vertex. The last vertex form a line with the first\none.",118,null],[13,"TrianglesList","","Vertices are grouped by chunks of three vertices. Each chunk represents a triangle.",118,null],[13,"TrianglesListAdjacency","","Vertices are grouped by chunks of six vertices. The first, third and fifth vertices\nrepresent a triangle.",118,null],[13,"TriangleStrip","","Each vertex (except the first one and the last one) forms a triangle with the previous\nand the next vertices.",118,null],[13,"TriangleStripAdjacency","","Each even vertex forms a triangle with vertices `n+2` and `n+4`.",118,null],[13,"TriangleFan","","Starting at the second vertex, each vertex forms a triangle with the next and the first\nvertices.",118,null],[13,"Patches","","Vertices are grouped by chunks of `vertices_per_patch` vertices.",118,null],[12,"vertices_per_patch","glium::index::PrimitiveType","Number of vertices per patch.",118,null],[4,"IndexType","glium::index","Type of the indices in an index source.",null,null],[13,"U8","","u8",119,null],[13,"U16","","u16",119,null],[13,"U32","","u32",119,null],[11,"clone","","",116,null],[11,"fmt","","",116,null],[11,"fmt","","",116,null],[11,"description","","",116,null],[11,"cause","","",116,null],[11,"from","","",116,{"inputs":[{"name":"buffercreationerror"}],"output":{"name":"creationerror"}}],[11,"fmt","glium","",120,null],[11,"new","","Builds a new index buffer from a list of indices and a primitive type.",120,null],[11,"dynamic","","Builds a new index buffer from a list of indices and a primitive type.",120,null],[11,"persistent","","Builds a new index buffer from a list of indices and a primitive type.",120,null],[11,"immutable","","Builds a new index buffer from a list of indices and a primitive type.",120,null],[11,"empty","","Builds a new empty index buffer.",120,{"inputs":[{"name":"f"},{"name":"primitivetype"},{"name":"usize"}],"output":{"name":"result"}}],[11,"empty_dynamic","","Builds a new empty index buffer.",120,{"inputs":[{"name":"f"},{"name":"primitivetype"},{"name":"usize"}],"output":{"name":"result"}}],[11,"empty_persistent","","Builds a new empty index buffer.",120,{"inputs":[{"name":"f"},{"name":"primitivetype"},{"name":"usize"}],"output":{"name":"result"}}],[11,"empty_immutable","","Builds a new empty index buffer.",120,{"inputs":[{"name":"f"},{"name":"primitivetype"},{"name":"usize"}],"output":{"name":"result"}}],[11,"get_primitives_type","","Returns the type of primitives associated with this index buffer.",120,null],[11,"get_indices_type","","Returns the data type of the indices inside this index buffer.",120,null],[11,"slice","","Returns `None` if out of range.",120,null],[11,"deref","","",120,null],[11,"deref_mut","","",120,null],[11,"from","glium::buffer","",68,{"inputs":[{"name":"indexbuffer"}],"output":{"name":"bufferslice"}}],[11,"from","","",69,{"inputs":[{"name":"indexbuffer"}],"output":{"name":"buffermutslice"}}],[11,"get_id","glium","",120,null],[11,"from","glium::index","",117,{"inputs":[{"name":"indexbuffer"}],"output":{"name":"indicessource"}}],[11,"fmt","","",121,null],[11,"get_primitives_type","","Returns the type of primitives associated with this index buffer.",121,null],[11,"get_indices_type","","Returns the data type of the indices inside this index buffer.",121,null],[11,"slice","","Returns `None` if out of range.",121,null],[11,"deref","","",121,null],[11,"deref_mut","","",121,null],[11,"from","glium::buffer","",68,{"inputs":[{"name":"indexbufferslice"}],"output":{"name":"bufferslice"}}],[11,"from","glium::index","",117,{"inputs":[{"name":"indexbufferslice"}],"output":{"name":"indicessource"}}],[11,"from","","",117,{"inputs":[{"name":"indexbufferslice"}],"output":{"name":"indicessource"}}],[11,"fmt","","",122,null],[11,"get_primitives_type","","Returns the type of primitives associated with this index buffer.",122,null],[11,"get_indices_type","","Returns the data type of the indices inside this index buffer.",122,null],[11,"deref","","",122,null],[11,"deref_mut","","",122,null],[11,"from","","",122,{"inputs":[{"name":"indexbuffer"}],"output":{"name":"indexbufferany"}}],[11,"from","","",117,{"inputs":[{"name":"indexbufferany"}],"output":{"name":"indicessource"}}],[11,"clone","","",113,null],[11,"fmt","","",113,null],[11,"matches","","",113,{"inputs":[{"name":"blocklayout"},{"name":"usize"}],"output":{"name":"result"}}],[11,"build_layout","","",113,{"inputs":[{"name":"usize"}],"output":{"name":"blocklayout"}}],[11,"clone","","",114,null],[11,"fmt","","",114,null],[11,"matches","","",114,{"inputs":[{"name":"blocklayout"},{"name":"usize"}],"output":{"name":"result"}}],[11,"build_layout","","",114,{"inputs":[{"name":"usize"}],"output":{"name":"blocklayout"}}],[11,"empty","","Builds an empty buffer.",123,{"inputs":[{"name":"f"},{"name":"usize"}],"output":{"name":"result"}}],[11,"empty_dynamic","","Builds an empty buffer.",123,{"inputs":[{"name":"f"},{"name":"usize"}],"output":{"name":"result"}}],[11,"empty_persistent","","Builds an empty buffer.",123,{"inputs":[{"name":"f"},{"name":"usize"}],"output":{"name":"result"}}],[11,"empty_immutable","","Builds an empty buffer.",123,{"inputs":[{"name":"f"},{"name":"usize"}],"output":{"name":"result"}}],[11,"with_primitive_type","","Builds an indices source from this buffer and a primitives type. This indices source can\nbe passed to the `draw()` function.",123,null],[11,"deref","","",123,null],[11,"deref_mut","","",123,null],[11,"from","glium::buffer","",68,{"inputs":[{"name":"drawcommandsnoindicesbuffer"}],"output":{"name":"bufferslice"}}],[11,"from","","",69,{"inputs":[{"name":"drawcommandsnoindicesbuffer"}],"output":{"name":"buffermutslice"}}],[11,"empty","glium::index","Builds an empty buffer.",124,{"inputs":[{"name":"f"},{"name":"usize"}],"output":{"name":"result"}}],[11,"empty_dynamic","","Builds an empty buffer.",124,{"inputs":[{"name":"f"},{"name":"usize"}],"output":{"name":"result"}}],[11,"empty_persistent","","Builds an empty buffer.",124,{"inputs":[{"name":"f"},{"name":"usize"}],"output":{"name":"result"}}],[11,"empty_immutable","","Builds an empty buffer.",124,{"inputs":[{"name":"f"},{"name":"usize"}],"output":{"name":"result"}}],[11,"with_index_buffer","","Builds an indices source from this buffer and a primitives type. This indices source can\nbe passed to the `draw()` function.",124,null],[11,"deref","","",124,null],[11,"deref_mut","","",124,null],[11,"from","glium::buffer","",68,{"inputs":[{"name":"drawcommandsindicesbuffer"}],"output":{"name":"bufferslice"}}],[11,"from","","",69,{"inputs":[{"name":"drawcommandsindicesbuffer"}],"output":{"name":"buffermutslice"}}],[8,"Index","glium::index","An index from the index buffer.",null,null],[10,"get_type","","Returns the `IndexType` corresponding to this type.",125,{"inputs":[],"output":{"name":"indextype"}}],[11,"is_supported","","Returns true if this type of index is supported by the backend.",125,{"inputs":[{"name":"c"}],"output":{"name":"bool"}}],[11,"clone","","",117,null],[11,"get_primitives_type","","Returns the type of the primitives.",117,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"clone","","",118,null],[11,"fmt","","",118,null],[11,"is_supported","","Returns true if the backend supports this type of primitives.",118,null],[11,"fmt","","",115,null],[11,"clone","","",115,null],[11,"from","","",117,{"inputs":[{"name":"noindices"}],"output":{"name":"indicessource"}}],[11,"from","","",117,{"inputs":[{"name":"noindices"}],"output":{"name":"indicessource"}}],[11,"eq","","",119,null],[11,"clone","","",119,null],[11,"fmt","","",119,null],[11,"get_size","","Returns the size in bytes of each index of this type.",119,null],[11,"is_supported","","Returns true if the backend supports this type of index.",119,null],[0,"pixel_buffer","glium","DEPRECATED. Moved to the `texture` module.",null,null],[0,"program","","",null,null],[3,"ComputeShader","glium::program","A combination of compute shaders linked together.",null,null],[3,"ComputeCommand","","Represents a compute shader command waiting to be dispatched.",null,null],[12,"num_groups_x","","Number of X groups.",126,null],[12,"num_groups_y","","Number of Y groups.",126,null],[12,"num_groups_z","","Number of Z groups.",126,null],[3,"Program","","A combination of shaders linked together.",null,null],[3,"Uniform","","Information about a uniform (except its name).",null,null],[12,"location","","The location of the uniform.",127,null],[12,"ty","","Type of the uniform.",127,null],[12,"size","","If it is an array, the number of elements.",127,null],[3,"UniformBlock","","Information about a uniform block (except its name).",null,null],[12,"id","","Indentifier of the block.",128,null],[12,"initial_binding","","Initial bind point of the block.",128,null],[12,"size","","Size in bytes of the data in the block.",128,null],[12,"layout","","Layout of the block.",128,null],[3,"Attribute","","Information about an attribute of a program (except its name).",null,null],[12,"location","","The index of the uniform.",129,null],[12,"ty","","Type of the attribute.",129,null],[12,"size","","Number of elements of the attribute.",129,null],[3,"TransformFeedbackVarying","","Describes a varying that is being output with transform feedback.",null,null],[12,"name","","Name of the variable.",130,null],[12,"offset","","Number of bytes between the start of the first element and the start of this one.",130,null],[12,"size","","Size in bytes of this value.",130,null],[12,"ty","","Type of the value.",130,null],[3,"TransformFeedbackBuffer","","Describes the layout of a buffer that can receive transform feedback output.",null,null],[12,"id","","Slot of this buffer.",131,null],[12,"elements","","List of elements inside the buffer.",131,null],[12,"stride","","Size in bytes between two consecutive elements.",131,null],[3,"SubroutineData","","Contains all subroutine data of a program.",null,null],[12,"location_counts","","Number of subroutine uniform locations per shader stage.\nThis is *not* equal to the number of subroutine uniforms per stage,\nbecause users can use `#layout(location=...)`.",132,null],[12,"subroutine_uniforms","","The list of all subroutine uniforms of the program stored in a structured way to enable fast lookups.\nA subroutine uniform is uniquely defined by a name and a shader stage.",132,null],[3,"SubroutineUniform","","Information about a Subroutine Uniform (except name)",null,null],[12,"index","","The index of the subroutine uniform.\nNeeded to query information from the OpenGL backend.",133,null],[12,"location","","The location of the uniform.\nThis is used to bind subroutines to this subroutine uniform.",133,null],[12,"size","","If the uniform is an array, the size of the array.",133,null],[12,"compatible_subroutines","","A list of subroutines that can potentially be used with this uniform.",133,null],[3,"SourceCode","","Represents the source code of a program.",null,null],[12,"vertex_shader","","Source code of the vertex shader.",134,null],[12,"tessellation_control_shader","","Source code of the optional tessellation control shader.",134,null],[12,"tessellation_evaluation_shader","","Source code of the optional tessellation evaluation shader.",134,null],[12,"geometry_shader","","Source code of the optional geometry shader.",134,null],[12,"fragment_shader","","Source code of the fragment shader.",134,null],[3,"Binary","","Represents the compiled binary data of a program.",null,null],[12,"format","","An implementation-defined format.",135,null],[12,"content","","The binary data.",135,null],[4,"BlockLayout","","Layout of a shader storage buffer or a uniform buffer.",null,null],[13,"Struct","","Multiple elements, each having a name.",136,null],[12,"members","glium::program::BlockLayout","The list of elements, with `name`/`layout` pairs.",136,null],[13,"BasicType","glium::program","A basic element.",136,null],[12,"ty","glium::program::BlockLayout","Type of data.",136,null],[12,"offset_in_buffer","","Offset of this element in bytes from the start of the buffer.",136,null],[13,"Array","glium::program","A fixed-size array.",136,null],[12,"content","glium::program::BlockLayout","Type of data of each element.",136,null],[12,"length","","Number of elements in the array.",136,null],[13,"DynamicSizedArray","glium::program","An array whose size isn&#39;t known at compile-time. Can only be used as the last element of\na buffer.",136,null],[12,"content","glium::program::BlockLayout","Type of data of each element.",136,null],[4,"OutputPrimitives","glium::program","Type of primitives that is being output by transform feedback.",null,null],[13,"Points","","Points.",137,null],[13,"Lines","","Lines.",137,null],[13,"Triangles","","Triangles.",137,null],[13,"Quads","","Quads.",137,null],[4,"TransformFeedbackMode","","Type of transform feedback. Only used with the legacy interface.",null,null],[13,"Interleaved","","Each value is interleaved in the same buffer.",138,null],[13,"Separate","","Each value will go in a separate buffer.",138,null],[4,"ShaderStage","","The different stages of the program pipeline.",null,null],[13,"Vertex","","",139,null],[13,"Fragment","","",139,null],[13,"TessellationControl","","",139,null],[13,"TessellationEvaluation","","",139,null],[13,"Geometry","","",139,null],[4,"ProgramCreationError","","Error that can be triggered when creating a `Program`.",null,null],[13,"CompilationError","","Error while compiling one of the shaders.",140,null],[13,"LinkingError","","Error while linking the program.",140,null],[13,"ShaderTypeNotSupported","","One of the requested shader types is not supported by the backend.",140,null],[13,"CompilationNotSupported","","The OpenGL implementation doesn&#39;t provide a compiler.",140,null],[13,"TransformFeedbackNotSupported","","You have requested transform feedback varyings, but transform feedback is not supported\nby the backend.",140,null],[13,"PointSizeNotSupported","","You have requested point size setting from the shader, but it&#39;s not\nsupported by the backend.",140,null],[13,"BinaryHeaderError","","The glium-specific binary header was not found or is corrupt.",140,null],[4,"ProgramChooserCreationError","","Error type that is returned by the `program!` macro.",null,null],[13,"NoVersion","","No available version has been found.",141,null],[13,"ProgramCreationError","","A version has been found but it triggered the given error.",141,null],[4,"GetBinaryError","","Error while retreiving the binary representation of a program.",null,null],[13,"NotSupported","","The backend doesn&#39;t support binary.",142,null],[13,"NoFormats","","The backend does not supply any binary formats.",142,null],[4,"ProgramCreationInput","","Input when creating a program.",null,null],[13,"SourceCode","","Use GLSL source code.",143,null],[12,"vertex_shader","glium::program::ProgramCreationInput","Source code of the vertex shader.",143,null],[12,"tessellation_control_shader","","Source code of the optional tessellation control shader.",143,null],[12,"tessellation_evaluation_shader","","Source code of the optional tessellation evaluation shader.",143,null],[12,"geometry_shader","","Source code of the optional geometry shader.",143,null],[12,"fragment_shader","","Source code of the fragment shader.",143,null],[12,"transform_feedback_varyings","","The list of variables and mode to use for transform feedback.",143,null],[12,"outputs_srgb","","Whether the fragment shader outputs colors in `sRGB` or `RGB`. This is false by default,\nmeaning that the program outputs `RGB`.",143,null],[12,"uses_point_size","","Whether the shader uses point size.",143,null],[13,"Binary","glium::program","Use a precompiled binary.",143,null],[12,"data","glium::program::ProgramCreationInput","The data.",143,null],[12,"outputs_srgb","","See `SourceCode::outputs_srgb`.",143,null],[12,"uses_point_size","","Whether the shader uses point size.",143,null],[5,"is_geometry_shader_supported","glium::program","Returns true if the backend supports geometry shaders.",null,{"inputs":[{"name":"c"}],"output":{"name":"bool"}}],[5,"is_tessellation_shader_supported","","Returns true if the backend supports tessellation shaders.",null,{"inputs":[{"name":"c"}],"output":{"name":"bool"}}],[5,"is_binary_supported","","Returns true if the backend supports creating and retreiving binary format.",null,{"inputs":[{"name":"c"}],"output":{"name":"bool"}}],[5,"is_subroutine_supported","","Returns true if the backend supports shader subroutines.",null,{"inputs":[{"name":"c"}],"output":{"name":"bool"}}],[11,"is_supported","","Returns true if the backend supports compute shaders.",144,{"inputs":[{"name":"c"}],"output":{"name":"bool"}}],[11,"from_source","","Builds a new compute shader from some source code.",144,{"inputs":[{"name":"f"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_binary","","Builds a new compute shader from some binary.",144,{"inputs":[{"name":"f"},{"name":"binary"}],"output":{"name":"result"}}],[11,"execute","","Executes the compute shader.",144,null],[11,"execute_indirect","","Executes the compute shader.",144,null],[11,"get_binary","","Returns the program&#39;s compiled binary.",144,null],[11,"get_uniform","","Returns informations about a uniform variable, if it exists.",144,null],[11,"uniforms","","Returns an iterator to the list of uniforms.",144,null],[11,"get_uniform_blocks","","Returns a list of uniform blocks.",144,null],[11,"get_shader_storage_blocks","","Returns the list of shader storage blocks.",144,null],[11,"fmt","","",144,null],[11,"get_id","","",144,null],[11,"clone","","",126,null],[11,"fmt","","",126,null],[11,"matches","","",126,{"inputs":[{"name":"blocklayout"},{"name":"usize"}],"output":{"name":"result"}}],[11,"build_layout","","",126,{"inputs":[{"name":"usize"}],"output":{"name":"blocklayout"}}],[11,"new","glium","Builds a new program.",145,{"inputs":[{"name":"f"},{"name":"i"}],"output":{"name":"result"}}],[11,"from_source","","Builds a new program from GLSL source code.",145,{"inputs":[{"name":"f"},{"name":"str"},{"name":"str"},{"name":"option"}],"output":{"name":"result"}}],[11,"get_binary","","Returns the program&#39;s compiled binary.",145,null],[11,"get_frag_data_location","","Returns the *location* of an output fragment, if it exists.",145,null],[11,"get_uniform","","Returns informations about a uniform variable, if it exists.",145,null],[11,"uniforms","","Returns an iterator to the list of uniforms.",145,null],[11,"get_uniform_blocks","","Returns a list of uniform blocks.",145,null],[11,"get_transform_feedback_buffers","","Returns the list of transform feedback varyings.",145,null],[11,"transform_feedback_matches","","True if the transform feedback output of this program matches the specified `VertexFormat`\nand `stride`.",145,null],[11,"get_output_primitives","","Returns the type of geometry that transform feedback would generate, or `None` if it\ndepends on the vertex/index data passed when drawing.",145,null],[11,"has_tessellation_shaders","","Returns true if the program contains a tessellation stage.",145,null],[11,"has_tessellation_control_shader","","Returns true if the program contains a tessellation control stage.",145,null],[11,"has_tessellation_evaluation_shader","","Returns true if the program contains a tessellation evaluation stage.",145,null],[11,"has_geometry_shader","","Returns true if the program contains a geometry shader.",145,null],[11,"get_attribute","","Returns informations about an attribute, if it exists.",145,null],[11,"attributes","","Returns an iterator to the list of attributes.",145,null],[11,"has_srgb_output","","Returns true if the program has been configured to output sRGB instead of RGB.",145,null],[11,"get_shader_storage_blocks","","Returns the list of shader storage blocks.",145,null],[11,"get_subroutine_uniforms","","Returns the subroutine uniforms of this program.",145,null],[11,"uses_point_size","","Returns true if the program has been configured to use the `gl_PointSize` variable.",145,null],[11,"fmt","","",145,null],[11,"get_id","","",145,null],[11,"clone","glium::program","",127,null],[11,"fmt","","",127,null],[11,"clone","","",128,null],[11,"fmt","","",128,null],[11,"eq","","",136,null],[11,"ne","","",136,null],[11,"clone","","",136,null],[11,"fmt","","",136,null],[11,"clone","","",129,null],[11,"fmt","","",129,null],[11,"eq","","",131,null],[11,"ne","","",131,null],[11,"clone","","",131,null],[11,"fmt","","",131,null],[11,"eq","","",130,null],[11,"ne","","",130,null],[11,"clone","","",130,null],[11,"fmt","","",130,null],[11,"eq","","",138,null],[11,"clone","","",138,null],[11,"fmt","","",138,null],[11,"eq","","",137,null],[11,"clone","","",137,null],[11,"fmt","","",137,null],[11,"clone","","",132,null],[11,"fmt","","",132,null],[11,"clone","","",133,null],[11,"fmt","","",133,null],[11,"hash","","",139,null],[11,"eq","","",139,null],[11,"clone","","",139,null],[11,"fmt","","",139,null],[11,"to_gl_enum","","Converts the `ShaderStage` to its GLenum equivalent",139,null],[11,"new","std::sync::mutex","Creates a new mutex in an unlocked state ready for use.",146,{"inputs":[{"name":"t"}],"output":{"name":"mutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",146,null],[11,"try_lock","","Attempts to acquire this lock.",146,null],[11,"is_poisoned","","Determines whether the lock is poisoned.",146,null],[11,"into_inner","","Consumes this mutex, returning the underlying data.",146,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",146,null],[11,"from","alloc::boxed","",147,{"inputs":[{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",147,{"inputs":[{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",147,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",147,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",147,{"inputs":[{"name":"str"}],"output":{"name":"box"}}],[11,"from","","",147,{"inputs":[{"name":"str"}],"output":{"name":"box"}}],[11,"description","core::str","",148,null],[11,"description","","",149,null],[11,"description","core::num","",150,null],[11,"description","","",151,null],[11,"description","core::num::dec2flt","",152,null],[11,"description","collections::string","",153,null],[11,"description","","",154,null],[11,"description","","",155,null],[11,"description","rustc_unicode::char","",156,null],[11,"description","alloc::boxed","",147,null],[11,"cause","","",147,null],[11,"description","core::fmt","",157,null],[11,"is","glium","Returns true if the boxed type is the same as `T`",158,null],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",158,null],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",158,null],[11,"is","","Forwards to the method defined on the type `Any`.",158,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",158,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",158,null],[11,"is","","Forwards to the method defined on the type `Any`.",158,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",158,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",158,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",158,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",158,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",158,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"next","std::ascii","",159,null],[11,"size_hint","","",159,null],[11,"next_back","","",159,null],[11,"clone","std::thread::local","",160,null],[11,"eq","","",160,null],[11,"with","","Acquires a reference to the value in this TLS key.",161,null],[11,"state","","Query the current state of this key.",161,null],[11,"new","std::thread::local::elf","",162,{"inputs":[],"output":{"name":"key"}}],[11,"get","","",162,null],[11,"new","std::thread::local::os","",163,{"inputs":[],"output":{"name":"key"}}],[11,"get","","",163,null],[11,"new","std::thread","Generates the base configuration for spawning a thread, from which\nconfiguration methods can be chained.",164,{"inputs":[],"output":{"name":"builder"}}],[11,"name","","Names the thread-to-be. Currently the name is used for identification\nonly in panic messages.",164,null],[11,"stack_size","","Sets the size of the stack for the new thread.",164,null],[11,"spawn","","Spawns a new thread, and returns a join handle for it.",164,null],[11,"clone","","",165,null],[11,"unpark","","Atomically makes the handle&#39;s token available if it is not already.",165,null],[11,"name","","Gets the thread&#39;s name.",165,null],[11,"fmt","","",165,null],[11,"thread","","Extracts a handle to the underlying thread",166,null],[11,"join","","Waits for the associated thread to finish.",166,null],[11,"clone","std::collections::hash::map","",167,null],[11,"new","","Creates an empty HashMap.",167,{"inputs":[],"output":{"name":"hashmap"}}],[11,"with_capacity","","Creates an empty hash map with the given initial capacity.",167,{"inputs":[{"name":"usize"}],"output":{"name":"hashmap"}}],[11,"with_hasher","","Creates an empty hashmap which will use the given hash builder to hash\nkeys.",167,{"inputs":[{"name":"s"}],"output":{"name":"hashmap"}}],[11,"with_capacity_and_hasher","","Creates an empty HashMap with space for at least `capacity`\nelements, using `hasher` to hash the keys.",167,{"inputs":[{"name":"usize"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"hasher","","Returns a reference to the map&#39;s hasher.",167,null],[11,"capacity","","Returns the number of elements the map can hold without reallocating.",167,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashMap`. The collection may reserve more space to avoid\nfrequent reallocations.",167,null],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",167,null],[11,"keys","","An iterator visiting all keys in arbitrary order.\nIterator element type is `&amp;&#39;a K`.",167,null],[11,"values","","An iterator visiting all values in arbitrary order.\nIterator element type is `&amp;&#39;a V`.",167,null],[11,"values_mut","","An iterator visiting all values mutably in arbitrary order.\nIterator element type is `&amp;&#39;a mut V`.",167,null],[11,"iter","","An iterator visiting all key-value pairs in arbitrary order.\nIterator element type is `(&amp;&#39;a K, &amp;&#39;a V)`.",167,null],[11,"iter_mut","","An iterator visiting all key-value pairs in arbitrary order,\nwith mutable references to the values.\nIterator element type is `(&amp;&#39;a K, &amp;&#39;a mut V)`.",167,null],[11,"entry","","Gets the given key&#39;s corresponding entry in the map for in-place manipulation.",167,null],[11,"len","","Returns the number of elements in the map.",167,null],[11,"is_empty","","Returns true if the map contains no elements.",167,null],[11,"drain","","Clears the map, returning all key-value pairs as an iterator. Keeps the\nallocated memory for reuse.",167,null],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the allocated memory\nfor reuse.",167,null],[11,"get","","Returns a reference to the value corresponding to the key.",167,null],[11,"contains_key","","Returns true if the map contains a value for the specified key.",167,null],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",167,null],[11,"insert","","Inserts a key-value pair into the map.",167,null],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",167,null],[11,"eq","","",167,null],[11,"fmt","","",167,null],[11,"default","","",167,{"inputs":[],"output":{"name":"hashmap"}}],[11,"index","","",167,null],[11,"clone","","",168,null],[11,"clone","","",169,null],[11,"clone","","",170,null],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each key-value\npair out of the map in arbitrary order. The map cannot be used after\ncalling this.",167,null],[11,"next","","",168,null],[11,"size_hint","","",168,null],[11,"len","","",168,null],[11,"next","","",171,null],[11,"size_hint","","",171,null],[11,"len","","",171,null],[11,"next","","",172,null],[11,"size_hint","","",172,null],[11,"len","","",172,null],[11,"next","","",169,null],[11,"size_hint","","",169,null],[11,"len","","",169,null],[11,"next","","",170,null],[11,"size_hint","","",170,null],[11,"len","","",170,null],[11,"next","","",173,null],[11,"size_hint","","",173,null],[11,"len","","",173,null],[11,"next","","",174,null],[11,"size_hint","","",174,null],[11,"len","","",174,null],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",175,null],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",175,null],[11,"key","","Returns a reference to this entry&#39;s key.",175,null],[11,"key","","Gets a reference to the key in the entry.",176,null],[11,"remove_pair","","Take the ownership of the key and value from the map.",176,null],[11,"get","","Gets a reference to the value in the entry.",176,null],[11,"get_mut","","Gets a mutable reference to the value in the entry.",176,null],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to the value in the entry\nwith a lifetime bound to the map itself",176,null],[11,"insert","","Sets the value of the entry, and returns the entry&#39;s old value",176,null],[11,"remove","","Takes the value out of the entry, and returns it",176,null],[11,"key","","Gets a reference to the key that would be used when inserting a value\nthrough the VacantEntry.",177,null],[11,"into_key","","Take ownership of the key.",177,null],[11,"insert","","Sets the value of the entry with the VacantEntry&#39;s key,\nand returns a mutable reference to it",177,null],[11,"from_iter","","",167,{"inputs":[{"name":"t"}],"output":{"name":"hashmap"}}],[11,"extend","","",167,null],[11,"extend","","",167,null],[11,"clone","","",178,null],[11,"new","","Constructs a new `RandomState` that is initialized with random keys.",178,{"inputs":[],"output":{"name":"randomstate"}}],[11,"build_hasher","","",178,null],[11,"write","","",179,null],[11,"finish","","",179,null],[11,"default","","",178,{"inputs":[],"output":{"name":"randomstate"}}],[11,"clone","std::collections::hash::set","",180,null],[11,"new","","Creates an empty HashSet.",180,{"inputs":[],"output":{"name":"hashset"}}],[11,"with_capacity","","Creates an empty HashSet with space for at least `n` elements in\nthe hash table.",180,{"inputs":[{"name":"usize"}],"output":{"name":"hashset"}}],[11,"with_hasher","","Creates a new empty hash set which will use the given hasher to hash\nkeys.",180,{"inputs":[{"name":"s"}],"output":{"name":"hashset"}}],[11,"with_capacity_and_hasher","","Creates an empty HashSet with space for at least `capacity`\nelements in the hash table, using `hasher` to hash the keys.",180,{"inputs":[{"name":"usize"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"hasher","","Returns a reference to the set&#39;s hasher.",180,null],[11,"capacity","","Returns the number of elements the set can hold without reallocating.",180,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashSet`. The collection may reserve more space to avoid\nfrequent reallocations.",180,null],[11,"shrink_to_fit","","Shrinks the capacity of the set as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",180,null],[11,"iter","","An iterator visiting all elements in arbitrary order.\nIterator element type is &amp;&#39;a T.",180,null],[11,"difference","","Visit the values representing the difference.",180,null],[11,"symmetric_difference","","Visit the values representing the symmetric difference.",180,null],[11,"intersection","","Visit the values representing the intersection.",180,null],[11,"union","","Visit the values representing the union.",180,null],[11,"len","","Returns the number of elements in the set.",180,null],[11,"is_empty","","Returns true if the set contains no elements.",180,null],[11,"drain","","Clears the set, returning all elements in an iterator.",180,null],[11,"clear","","Clears the set, removing all values.",180,null],[11,"contains","","Returns `true` if the set contains a value.",180,null],[11,"get","","Returns a reference to the value in the set, if any, that is equal to the given value.",180,null],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",180,null],[11,"is_subset","","Returns `true` if the set is a subset of another.",180,null],[11,"is_superset","","Returns `true` if the set is a superset of another.",180,null],[11,"insert","","Adds a value to the set.",180,null],[11,"replace","","Adds a value to the set, replacing the existing value, if any, that is equal to the given\none. Returns the replaced value.",180,null],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",180,null],[11,"take","","Removes and returns the value in the set, if any, that is equal to the given one.",180,null],[11,"eq","","",180,null],[11,"fmt","","",180,null],[11,"from_iter","","",180,{"inputs":[{"name":"i"}],"output":{"name":"hashset"}}],[11,"extend","","",180,null],[11,"extend","","",180,null],[11,"default","","",180,{"inputs":[],"output":{"name":"hashset"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out\nof the set in arbitrary order. The set cannot be used after calling\nthis.",180,null],[11,"clone","","",181,null],[11,"next","","",181,null],[11,"size_hint","","",181,null],[11,"len","","",181,null],[11,"next","","",182,null],[11,"size_hint","","",182,null],[11,"len","","",182,null],[11,"next","","",183,null],[11,"size_hint","","",183,null],[11,"len","","",183,null],[11,"clone","","",184,null],[11,"next","","",184,null],[11,"size_hint","","",184,null],[11,"clone","","",185,null],[11,"next","","",185,null],[11,"size_hint","","",185,null],[11,"clone","","",186,null],[11,"next","","",186,null],[11,"size_hint","","",186,null],[11,"clone","","",187,null],[11,"next","","",187,null],[11,"size_hint","","",187,null],[11,"drop","collections::binary_heap","",188,null],[11,"deref","","",188,null],[11,"deref_mut","","",188,null],[11,"clone","","",189,null],[11,"clone_from","","",189,null],[11,"default","","",189,{"inputs":[],"output":{"name":"binaryheap"}}],[11,"fmt","","",189,null],[11,"new","","Creates an empty `BinaryHeap` as a max-heap.",189,{"inputs":[],"output":{"name":"binaryheap"}}],[11,"with_capacity","","Creates an empty `BinaryHeap` with a specific capacity.\nThis preallocates enough memory for `capacity` elements,\nso that the `BinaryHeap` does not have to be reallocated\nuntil it contains at least that many values.",189,{"inputs":[{"name":"usize"}],"output":{"name":"binaryheap"}}],[11,"iter","","Returns an iterator visiting all values in the underlying vector, in\narbitrary order.",189,null],[11,"peek","","Returns the greatest item in the binary heap, or `None` if it is empty.",189,null],[11,"peek_mut","","Returns a mutable reference to the greatest item in the binary heap, or\n`None` if it is empty.",189,null],[11,"capacity","","Returns the number of elements the binary heap can hold without reallocating.",189,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `BinaryHeap`. Does nothing if the capacity is already sufficient.",189,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the\n`BinaryHeap`. The collection may reserve more space to avoid frequent reallocations.",189,null],[11,"shrink_to_fit","","Discards as much additional capacity as possible.",189,null],[11,"pop","","Removes the greatest item from the binary heap and returns it, or `None` if it\nis empty.",189,null],[11,"push","","Pushes an item onto the binary heap.",189,null],[11,"push_pop","","Pushes an item onto the binary heap, then pops the greatest item off the queue in\nan optimized fashion.",189,null],[11,"replace","","Pops the greatest item off the binary heap, then pushes an item onto the queue in\nan optimized fashion. The push is done regardless of whether the binary heap\nwas empty.",189,null],[11,"into_vec","","Consumes the `BinaryHeap` and returns the underlying vector\nin arbitrary order.",189,null],[11,"into_sorted_vec","","Consumes the `BinaryHeap` and returns a vector in sorted\n(ascending) order.",189,null],[11,"len","","Returns the length of the binary heap.",189,null],[11,"is_empty","","Checks if the binary heap is empty.",189,null],[11,"drain","","Clears the binary heap, returning an iterator over the removed elements.",189,null],[11,"clear","","Drops all items from the binary heap.",189,null],[11,"append","","Moves all the elements of `other` into `self`, leaving `other` empty.",189,null],[11,"clone","","",190,null],[11,"next","","",190,null],[11,"size_hint","","",190,null],[11,"next_back","","",190,null],[11,"clone","","",191,null],[11,"next","","",191,null],[11,"size_hint","","",191,null],[11,"next_back","","",191,null],[11,"next","","",192,null],[11,"size_hint","","",192,null],[11,"next_back","","",192,null],[11,"from","","",189,{"inputs":[{"name":"vec"}],"output":{"name":"binaryheap"}}],[11,"from","collections::vec","",193,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"from_iter","collections::binary_heap","",189,{"inputs":[{"name":"i"}],"output":{"name":"binaryheap"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe binary heap in arbitrary order. The binary heap cannot be used\nafter calling this.",189,null],[11,"extend","","",189,null],[11,"extend","","",189,null],[11,"clone","collections::vec_deque","",194,null],[11,"drop","","",194,null],[11,"default","","",194,{"inputs":[],"output":{"name":"vecdeque"}}],[11,"new","","Creates an empty `VecDeque`.",194,{"inputs":[],"output":{"name":"vecdeque"}}],[11,"with_capacity","","Creates an empty `VecDeque` with space for at least `n` elements.",194,{"inputs":[{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"get","","Retrieves an element in the `VecDeque` by index.",194,null],[11,"get_mut","","Retrieves an element in the `VecDeque` mutably by index.",194,null],[11,"swap","","Swaps elements at indices `i` and `j`.",194,null],[11,"capacity","","Returns the number of elements the `VecDeque` can hold without\nreallocating.",194,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `VecDeque`. Does nothing if the capacity is already sufficient.",194,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the given\n`VecDeque`. The collection may reserve more space to avoid frequent reallocations.",194,null],[11,"shrink_to_fit","","Shrinks the capacity of the `VecDeque` as much as possible.",194,null],[11,"truncate","","Shortens a `VecDeque`, dropping excess elements from the back.",194,null],[11,"iter","","Returns a front-to-back iterator.",194,null],[11,"iter_mut","","Returns a front-to-back iterator that returns mutable references.",194,null],[11,"as_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",194,null],[11,"as_mut_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",194,null],[11,"len","","Returns the number of elements in the `VecDeque`.",194,null],[11,"is_empty","","Returns true if the buffer contains no elements",194,null],[11,"drain","","Create a draining iterator that removes the specified range in the\n`VecDeque` and yields the removed items.",194,null],[11,"clear","","Clears the buffer, removing all values.",194,null],[11,"contains","","Returns `true` if the `VecDeque` contains an element equal to the\ngiven value.",194,null],[11,"front","","Provides a reference to the front element, or `None` if the sequence is\nempty.",194,null],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the\nsequence is empty.",194,null],[11,"back","","Provides a reference to the back element, or `None` if the sequence is\nempty.",194,null],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the\nsequence is empty.",194,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the sequence is\nempty.",194,null],[11,"push_front","","Inserts an element first in the sequence.",194,null],[11,"push_back","","Appends an element to the back of a buffer",194,null],[11,"pop_back","","Removes the last element from a buffer and returns it, or `None` if\nit is empty.",194,null],[11,"swap_remove_back","","Removes an element from anywhere in the `VecDeque` and returns it, replacing it with the\nlast element.",194,null],[11,"swap_remove_front","","Removes an element from anywhere in the `VecDeque` and returns it,\nreplacing it with the first element.",194,null],[11,"insert","","Inserts an element at `index` within the `VecDeque`. Whichever\nend is closer to the insertion point will be moved to make room,\nand all the affected elements will be moved to new positions.",194,null],[11,"remove","","Removes and returns the element at `index` from the `VecDeque`.\nWhichever end is closer to the removal point will be moved to make\nroom, and all the affected elements will be moved to new positions.\nReturns `None` if `index` is out of bounds.",194,null],[11,"split_off","","Splits the collection into two at the given index.",194,null],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",194,null],[11,"retain","","Retains only the elements specified by the predicate.",194,null],[11,"resize","","Modifies the `VecDeque` in-place so that `len()` is equal to new_len,\neither by removing excess elements or by appending copies of a value to the back.",194,null],[11,"clone","","",195,null],[11,"next","","",195,null],[11,"size_hint","","",195,null],[11,"next_back","","",195,null],[11,"next","","",196,null],[11,"size_hint","","",196,null],[11,"next_back","","",196,null],[11,"clone","","",197,null],[11,"next","","",197,null],[11,"size_hint","","",197,null],[11,"next_back","","",197,null],[11,"drop","","",198,null],[11,"next","","",198,null],[11,"size_hint","","",198,null],[11,"next_back","","",198,null],[11,"eq","","",194,null],[11,"partial_cmp","","",194,null],[11,"cmp","","",194,null],[11,"hash","","",194,null],[11,"index","","",194,null],[11,"index_mut","","",194,null],[11,"from_iter","","",194,{"inputs":[{"name":"t"}],"output":{"name":"vecdeque"}}],[11,"into_iter","","Consumes the list into a front-to-back iterator yielding elements by\nvalue.",194,null],[11,"extend","","",194,null],[11,"extend","","",194,null],[11,"fmt","","",194,null],[11,"from","","",194,{"inputs":[{"name":"vec"}],"output":{"name":"vecdeque"}}],[11,"from","collections::vec","",193,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vec"}}],[11,"clone","collections::linked_list","",199,null],[11,"clone","","",200,null],[11,"default","","",201,{"inputs":[],"output":{"name":"linkedlist"}}],[11,"new","","Creates an empty `LinkedList`.",201,{"inputs":[],"output":{"name":"linkedlist"}}],[11,"append","","Moves all elements from `other` to the end of the list.",201,null],[11,"iter","","Provides a forward iterator.",201,null],[11,"iter_mut","","Provides a forward iterator with mutable references.",201,null],[11,"is_empty","","Returns `true` if the `LinkedList` is empty.",201,null],[11,"len","","Returns the length of the `LinkedList`.",201,null],[11,"clear","","Removes all elements from the `LinkedList`.",201,null],[11,"contains","","Returns `true` if the `LinkedList` contains an element equal to the\ngiven value.",201,null],[11,"front","","Provides a reference to the front element, or `None` if the list is\nempty.",201,null],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the list\nis empty.",201,null],[11,"back","","Provides a reference to the back element, or `None` if the list is\nempty.",201,null],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the list\nis empty.",201,null],[11,"push_front","","Adds an element first in the list.",201,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the list is\nempty.",201,null],[11,"push_back","","Appends an element to the back of a list",201,null],[11,"pop_back","","Removes the last element from a list and returns it, or `None` if\nit is empty.",201,null],[11,"split_off","","Splits the list into two at the given index. Returns everything after the given index,\nincluding the index.",201,null],[11,"front_place","","Returns a place for insertion at the front of the list.",201,null],[11,"back_place","","Returns a place for insertion at the back of the list.",201,null],[11,"drop","","",201,null],[11,"next","","",199,null],[11,"size_hint","","",199,null],[11,"next_back","","",199,null],[11,"next","","",202,null],[11,"size_hint","","",202,null],[11,"next_back","","",202,null],[11,"insert_next","","Inserts `elt` just after the element most recently returned by `.next()`.\nThe inserted element does not appear in the iteration.",202,null],[11,"peek_next","","Provides a reference to the next element, without changing the iterator.",202,null],[11,"next","","",200,null],[11,"size_hint","","",200,null],[11,"next_back","","",200,null],[11,"from_iter","","",201,{"inputs":[{"name":"t"}],"output":{"name":"linkedlist"}}],[11,"into_iter","","Consumes the list into an iterator yielding elements by value.",201,null],[11,"extend","","",201,null],[11,"extend","","",201,null],[11,"eq","","",201,null],[11,"ne","","",201,null],[11,"partial_cmp","","",201,null],[11,"cmp","","",201,null],[11,"clone","","",201,null],[11,"fmt","","",201,null],[11,"hash","","",201,null],[11,"make_place","","",203,null],[11,"pointer","","",203,null],[11,"finalize","","",203,null],[11,"make_place","","",204,null],[11,"pointer","","",204,null],[11,"finalize","","",204,null],[11,"next","std::env","",205,null],[11,"size_hint","","",205,null],[11,"next","","",206,null],[11,"size_hint","","",206,null],[11,"clone","","",207,null],[11,"eq","","",207,null],[11,"ne","","",207,null],[11,"fmt","","",207,null],[11,"fmt","","",207,null],[11,"description","","",207,null],[11,"next","","",208,null],[11,"size_hint","","",208,null],[11,"fmt","","",209,null],[11,"fmt","","",209,null],[11,"description","","",209,null],[11,"next","","",210,null],[11,"size_hint","","",210,null],[11,"len","","",210,null],[11,"next","","",211,null],[11,"size_hint","","",211,null],[11,"len","","",211,null],[11,"clone","std::ffi::c_str","",212,null],[11,"hash","","",212,null],[11,"cmp","","",212,null],[11,"partial_cmp","","",212,null],[11,"lt","","",212,null],[11,"le","","",212,null],[11,"gt","","",212,null],[11,"ge","","",212,null],[11,"eq","","",212,null],[11,"ne","","",212,null],[11,"hash","","",213,null],[11,"fmt","","",214,null],[11,"eq","","",214,null],[11,"ne","","",214,null],[11,"clone","","",214,null],[11,"fmt","","",215,null],[11,"eq","","",215,null],[11,"ne","","",215,null],[11,"clone","","",215,null],[11,"fmt","","",216,null],[11,"eq","","",216,null],[11,"ne","","",216,null],[11,"clone","","",216,null],[11,"new","","Creates a new C-compatible string from a container of bytes.",212,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[11,"from_vec_unchecked","","Creates a C-compatible string from a byte vector without checking for\ninterior 0 bytes.",212,{"inputs":[{"name":"vec"}],"output":{"name":"cstring"}}],[11,"from_raw","","Retakes ownership of a `CString` that was transferred to C.",212,null],[11,"into_raw","","Transfers ownership of the string to a C caller.",212,null],[11,"into_string","","Converts the `CString` into a `String` if it contains valid Unicode data.",212,null],[11,"into_bytes","","Returns the underlying byte buffer.",212,null],[11,"into_bytes_with_nul","","Equivalent to the `into_bytes` function except that the returned vector\nincludes the trailing nul byte.",212,null],[11,"as_bytes","","Returns the contents of this `CString` as a slice of bytes.",212,null],[11,"as_bytes_with_nul","","Equivalent to the `as_bytes` function except that the returned slice\nincludes the trailing nul byte.",212,null],[11,"from_ptr","","Casts a raw C string to a safe C string wrapper.",213,null],[11,"from_bytes_with_nul","","Creates a C string wrapper from a byte slice.",213,null],[11,"from_bytes_with_nul_unchecked","","Unsafely creates a C string wrapper from a byte slice.",213,null],[11,"as_ptr","","Returns the inner pointer to this C string.",213,null],[11,"to_bytes","","Converts this C string to a byte slice.",213,null],[11,"to_bytes_with_nul","","Converts this C string to a byte slice containing the trailing 0 byte.",213,null],[11,"to_str","","Yields a `&amp;str` slice if the `CStr` contains valid UTF-8.",213,null],[11,"to_string_lossy","","Converts a `CStr` into a `Cow&lt;str&gt;`.",213,null],[11,"deref","","",212,null],[11,"fmt","","",212,null],[11,"from","collections::vec","",193,{"inputs":[{"name":"cstring"}],"output":{"name":"vec"}}],[11,"fmt","std::ffi::c_str","",213,null],[11,"default","","",212,{"inputs":[],"output":{"name":"cstring"}}],[11,"borrow","","",212,null],[11,"nul_position","","Returns the position of the nul byte in the slice that was provided to\n`CString::new`.",214,null],[11,"into_vec","","Consumes this error, returning the underlying vector of bytes which\ngenerated the error in the first place.",214,null],[11,"description","","",214,null],[11,"fmt","","",214,null],[11,"from","std::io::error","",217,{"inputs":[{"name":"nulerror"}],"output":{"name":"error"}}],[11,"into_cstring","std::ffi::c_str","Consumes this error, returning original `CString` which generated the\nerror.",216,null],[11,"utf8_error","","Access the underlying UTF-8 error that was the cause of this error.",216,null],[11,"description","","",216,null],[11,"cause","","",216,null],[11,"fmt","","",216,null],[11,"eq","","",213,null],[11,"partial_cmp","","",213,null],[11,"cmp","","",213,null],[11,"to_owned","","",213,null],[11,"from","","",212,{"inputs":[{"name":"cstr"}],"output":{"name":"cstring"}}],[11,"index","","",212,null],[11,"as_ref","","",213,null],[11,"as_ref","","",212,null],[11,"clone","std::ffi::os_str","",218,null],[11,"new","","Constructs a new empty `OsString`.",218,{"inputs":[],"output":{"name":"osstring"}}],[11,"as_os_str","","Converts to an `OsStr` slice.",218,null],[11,"into_string","","Converts the `OsString` into a `String` if it contains valid Unicode data.",218,null],[11,"push","","Extends the string with the given `&amp;OsStr` slice.",218,null],[11,"with_capacity","","Creates a new `OsString` with the given capacity.",218,{"inputs":[{"name":"usize"}],"output":{"name":"osstring"}}],[11,"clear","","Truncates the `OsString` to zero length.",218,null],[11,"capacity","","Returns the capacity this `OsString` can hold without reallocating.",218,null],[11,"reserve","","Reserves capacity for at least `additional` more capacity to be inserted\nin the given `OsString`.",218,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more capacity to\nbe inserted in the given `OsString`. Does nothing if the capacity is\nalready sufficient.",218,null],[11,"from","","",218,{"inputs":[{"name":"string"}],"output":{"name":"osstring"}}],[11,"from","","",218,{"inputs":[{"name":"t"}],"output":{"name":"osstring"}}],[11,"index","","",218,null],[11,"new","","Coerces into an `OsStr` slice.",219,{"inputs":[{"name":"s"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&amp;str` slice if the `OsStr` is valid Unicode.",219,null],[11,"to_string_lossy","","Converts an `OsStr` to a `Cow&lt;str&gt;`.",219,null],[11,"to_os_string","","Copies the slice into an owned `OsString`.",219,null],[11,"is_empty","","Checks whether the `OsStr` is empty.",219,null],[11,"len","","Returns the length of this `OsStr`.",219,null],[11,"deref","","",218,null],[11,"default","","",218,{"inputs":[],"output":{"name":"osstring"}}],[11,"fmt","","",218,null],[11,"eq","","",218,null],[11,"eq","","",218,null],[11,"partial_cmp","","",218,null],[11,"lt","","",218,null],[11,"le","","",218,null],[11,"gt","","",218,null],[11,"ge","","",218,null],[11,"partial_cmp","","",218,null],[11,"cmp","","",218,null],[11,"hash","","",218,null],[11,"eq","","",219,null],[11,"eq","","",219,null],[11,"partial_cmp","","",219,null],[11,"lt","","",219,null],[11,"le","","",219,null],[11,"gt","","",219,null],[11,"ge","","",219,null],[11,"partial_cmp","","",219,null],[11,"cmp","","",219,null],[11,"eq","","",218,null],[11,"eq","","",219,null],[11,"partial_cmp","","",218,null],[11,"partial_cmp","","",219,null],[11,"eq","","",218,null],[11,"partial_cmp","","",218,null],[11,"eq","collections::borrow","",220,null],[11,"eq","std::ffi::os_str","",219,null],[11,"partial_cmp","collections::borrow","",220,null],[11,"partial_cmp","std::ffi::os_str","",219,null],[11,"eq","collections::borrow","",220,null],[11,"partial_cmp","","",220,null],[11,"eq","","",220,null],[11,"eq","std::ffi::os_str","",218,null],[11,"partial_cmp","collections::borrow","",220,null],[11,"partial_cmp","std::ffi::os_str","",218,null],[11,"hash","","",219,null],[11,"fmt","","",219,null],[11,"borrow","","",218,null],[11,"to_owned","","",219,null],[11,"as_ref","","",219,null],[11,"as_ref","","",218,null],[11,"as_ref","collections::string","",221,null],[11,"clone","std::fs","",222,null],[11,"clone","","",223,null],[11,"fmt","","",224,null],[11,"eq","","",224,null],[11,"ne","","",224,null],[11,"clone","","",224,null],[11,"hash","","",225,null],[11,"eq","","",225,null],[11,"ne","","",225,null],[11,"clone","","",225,null],[11,"open","","Attempts to open a file in read-only mode.",226,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"create","","Opens a file in write-only mode.",226,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"sync_all","","Attempts to sync all OS-internal metadata to disk.",226,null],[11,"sync_data","","This function is similar to `sync_all`, except that it may not\nsynchronize file metadata to the filesystem.",226,null],[11,"set_len","","Truncates or extends the underlying file, updating the size of\nthis file to become `size`.",226,null],[11,"metadata","","Queries metadata about the underlying file.",226,null],[11,"try_clone","","Creates a new independently owned handle to the underlying file.",226,null],[11,"fmt","","",226,null],[11,"read","","",226,null],[11,"read_to_end","","",226,null],[11,"write","","",226,null],[11,"flush","","",226,null],[11,"seek","","",226,null],[11,"new","","Creates a blank new set of options ready for configuration.",223,{"inputs":[],"output":{"name":"openoptions"}}],[11,"read","","Sets the option for read access.",223,null],[11,"write","","Sets the option for write access.",223,null],[11,"append","","Sets the option for the append mode.",223,null],[11,"truncate","","Sets the option for truncating a previous file.",223,null],[11,"create","","Sets the option for creating a new file.",223,null],[11,"create_new","","Sets the option to always create a new file.",223,null],[11,"open","","Opens a file at `path` with the options specified by `self`.",223,null],[11,"file_type","","Returns the file type for this metadata.",222,null],[11,"is_dir","","Returns whether this metadata is for a directory.",222,null],[11,"is_file","","Returns whether this metadata is for a regular file.",222,null],[11,"len","","Returns the size of the file, in bytes, this metadata is for.",222,null],[11,"permissions","","Returns the permissions of the file this metadata is for.",222,null],[11,"modified","","Returns the last modification time listed in this metadata.",222,null],[11,"accessed","","Returns the last access time of this metadata.",222,null],[11,"created","","Returns the creation time listed in the this metadata.",222,null],[11,"readonly","","Returns whether these permissions describe a readonly file.",224,null],[11,"set_readonly","","Modifies the readonly flag for this set of permissions.",224,null],[11,"is_dir","","Test whether this file type represents a directory.",225,null],[11,"is_file","","Test whether this file type represents a regular file.",225,null],[11,"is_symlink","","Test whether this file type represents a symbolic link.",225,null],[11,"next","","",227,null],[11,"path","","Returns the full path to the file that this entry represents.",228,null],[11,"metadata","","Return the metadata for the file that this entry points at.",228,null],[11,"file_type","","Return the file type for the file that this entry points at.",228,null],[11,"file_name","","Returns the bare file name of this directory entry without any other\nleading path component.",228,null],[11,"new","","Creates a new set of options with default mode/security settings for all\nplatforms and also non-recursive.",229,{"inputs":[],"output":{"name":"dirbuilder"}}],[11,"recursive","","Indicate that directories create should be created recursively, creating\nall parent directories if they do not exist with the same security and\npermissions settings.",229,null],[11,"create","","Create the specified directory with the options configured in this\nbuilder.",229,null],[11,"new","std::io::buffered","Creates a new `BufReader` with a default buffer capacity.",230,{"inputs":[{"name":"r"}],"output":{"name":"bufreader"}}],[11,"with_capacity","","Creates a new `BufReader` with the specified buffer capacity.",230,{"inputs":[{"name":"usize"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"get_ref","","Gets a reference to the underlying reader.",230,null],[11,"get_mut","","Gets a mutable reference to the underlying reader.",230,null],[11,"into_inner","","Unwraps this `BufReader`, returning the underlying reader.",230,null],[11,"read","","",230,null],[11,"fill_buf","","",230,null],[11,"consume","","",230,null],[11,"fmt","","",230,null],[11,"seek","","Seek to an offset, in bytes, in the underlying reader.",230,null],[11,"fmt","","",231,null],[11,"new","","Creates a new `BufWriter` with a default buffer capacity.",232,{"inputs":[{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"with_capacity","","Creates a new `BufWriter` with the specified buffer capacity.",232,{"inputs":[{"name":"usize"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",232,null],[11,"get_mut","","Gets a mutable reference to the underlying writer.",232,null],[11,"into_inner","","Unwraps this `BufWriter`, returning the underlying writer.",232,null],[11,"write","","",232,null],[11,"flush","","",232,null],[11,"fmt","","",232,null],[11,"seek","","Seek to the offset, in bytes, in the underlying writer.",232,null],[11,"drop","","",232,null],[11,"error","","Returns the error which caused the call to `into_inner()` to fail.",231,null],[11,"into_inner","","Returns the buffered writer instance which generated the error.",231,null],[11,"from","std::io::error","",217,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"description","std::io::buffered","",231,null],[11,"fmt","","",231,null],[11,"new","","Creates a new `LineWriter`.",233,{"inputs":[{"name":"w"}],"output":{"name":"linewriter"}}],[11,"with_capacity","","Creates a new `LineWriter` with a specified capacity for the internal\nbuffer.",233,{"inputs":[{"name":"usize"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",233,null],[11,"get_mut","","Gets a mutable reference to the underlying writer.",233,null],[11,"into_inner","","Unwraps this `LineWriter`, returning the underlying writer.",233,null],[11,"write","","",233,null],[11,"flush","","",233,null],[11,"fmt","","",233,null],[11,"fmt","std::io::cursor","",234,null],[11,"clone","","",234,null],[11,"new","","Creates a new cursor wrapping the provided underlying I/O object.",234,{"inputs":[{"name":"t"}],"output":{"name":"cursor"}}],[11,"into_inner","","Consumes this cursor, returning the underlying value.",234,null],[11,"get_ref","","Gets a reference to the underlying value in this cursor.",234,null],[11,"get_mut","","Gets a mutable reference to the underlying value in this cursor.",234,null],[11,"position","","Returns the current position of this cursor.",234,null],[11,"set_position","","Sets the position of this cursor.",234,null],[11,"seek","","",234,null],[11,"read","","",234,null],[11,"fill_buf","","",234,null],[11,"consume","","",234,null],[11,"write","","",234,null],[11,"flush","","",234,null],[11,"write","","",234,null],[11,"flush","","",234,null],[11,"write","","",234,null],[11,"flush","","",234,null],[11,"fmt","std::io::error","",217,null],[11,"fmt","","",235,null],[11,"clone","","",235,null],[11,"eq","","",235,null],[11,"new","","Creates a new I/O error from a known kind of error as well as an\narbitrary error payload.",217,{"inputs":[{"name":"errorkind"},{"name":"e"}],"output":{"name":"error"}}],[11,"last_os_error","","Returns an error representing the last OS error which occurred.",217,{"inputs":[],"output":{"name":"error"}}],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS error code.",217,{"inputs":[{"name":"i32"}],"output":{"name":"error"}}],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",217,null],[11,"get_ref","","Returns a reference to the inner error wrapped by this error (if any).",217,null],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by this error\n(if any).",217,null],[11,"into_inner","","Consumes the `Error`, returning its inner error (if any).",217,null],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",217,null],[11,"fmt","","",217,null],[11,"description","","",217,null],[11,"cause","","",217,null],[11,"read","alloc::boxed","",147,null],[11,"read_to_end","","",147,null],[11,"read_to_string","","",147,null],[11,"read_exact","","",147,null],[11,"write","","",147,null],[11,"flush","","",147,null],[11,"write_all","","",147,null],[11,"write_fmt","","",147,null],[11,"seek","","",147,null],[11,"fill_buf","","",147,null],[11,"consume","","",147,null],[11,"read_until","","",147,null],[11,"read_line","","",147,null],[11,"write","collections::vec","",193,null],[11,"write_all","","",193,null],[11,"flush","","",193,null],[11,"read","std::io::util","",236,null],[11,"fill_buf","","",236,null],[11,"consume","","",236,null],[11,"read","","",237,null],[11,"write","","",238,null],[11,"flush","","",238,null],[11,"lock","std::io::stdio","Locks this handle to the standard input stream, returning a readable\nguard.",239,null],[11,"read_line","","Locks this handle and reads a line of input into the specified buffer.",239,null],[11,"read","","",239,null],[11,"read_to_end","","",239,null],[11,"read_to_string","","",239,null],[11,"read_exact","","",239,null],[11,"read","","",240,null],[11,"read_to_end","","",240,null],[11,"fill_buf","","",240,null],[11,"consume","","",240,null],[11,"lock","","Locks this handle to the standard output stream, returning a writable\nguard.",241,null],[11,"write","","",241,null],[11,"flush","","",241,null],[11,"write_all","","",241,null],[11,"write_fmt","","",241,null],[11,"write","","",242,null],[11,"flush","","",242,null],[11,"lock","","Locks this handle to the standard error stream, returning a writable\nguard.",243,null],[11,"write","","",243,null],[11,"flush","","",243,null],[11,"write_all","","",243,null],[11,"write_fmt","","",243,null],[11,"write","","",244,null],[11,"flush","","",244,null],[11,"fmt","std::io","",245,null],[11,"clone","","",245,null],[11,"eq","","",245,null],[11,"ne","","",245,null],[11,"read","","",246,null],[11,"fill_buf","","",246,null],[11,"consume","","",246,null],[11,"limit","","Returns the number of bytes that can be read before this instance will\nreturn EOF.",247,null],[11,"read","","",247,null],[11,"fill_buf","","",247,null],[11,"consume","","",247,null],[11,"next","","",248,null],[11,"fmt","","",249,null],[11,"next","","",250,null],[11,"description","","",249,null],[11,"cause","","",249,null],[11,"fmt","","",249,null],[11,"next","","",251,null],[11,"next","","",252,null],[11,"cmp","std::net::ip","",253,null],[11,"partial_cmp","","",253,null],[11,"lt","","",253,null],[11,"le","","",253,null],[11,"gt","","",253,null],[11,"ge","","",253,null],[11,"hash","","",253,null],[11,"fmt","","",253,null],[11,"eq","","",253,null],[11,"ne","","",253,null],[11,"clone","","",253,null],[11,"fmt","","",254,null],[11,"hash","","",254,null],[11,"clone","","",254,null],[11,"eq","","",254,null],[11,"new","","Creates a new IPv4 address from four eight-bit octets.",255,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"ipv4addr"}}],[11,"octets","","Returns the four eight-bit integers that make up this address.",255,null],[11,"is_unspecified","","Returns true for the special &#39;unspecified&#39; address (0.0.0.0).",255,null],[11,"is_loopback","","Returns true if this is a loopback address (127.0.0.0/8).",255,null],[11,"is_private","","Returns true if this is a private address.",255,null],[11,"is_link_local","","Returns true if the address is link-local (169.254.0.0/16).",255,null],[11,"is_global","","Returns true if the address appears to be globally routable.\nSee [iana-ipv4-special-registry][ipv4-sr].\n[ipv4-sr]: http://goo.gl/RaZ7lg",255,null],[11,"is_multicast","","Returns true if this is a multicast address (224.0.0.0/4).",255,null],[11,"is_broadcast","","Returns true if this is a broadcast address (255.255.255.255).",255,null],[11,"is_documentation","","Returns true if this address is in a range designated for documentation.",255,null],[11,"to_ipv6_compatible","","Converts this address to an IPv4-compatible IPv6 address.",255,null],[11,"to_ipv6_mapped","","Converts this address to an IPv4-mapped IPv6 address.",255,null],[11,"fmt","","",253,null],[11,"fmt","","",255,null],[11,"fmt","","",255,null],[11,"clone","","",255,null],[11,"eq","","",255,null],[11,"hash","","",255,null],[11,"partial_cmp","","",255,null],[11,"cmp","","",255,null],[11,"from","","",255,{"inputs":[{"name":"u32"}],"output":{"name":"ipv4addr"}}],[11,"from","","",255,null],[11,"new","","Creates a new IPv6 address from eight 16-bit segments.",256,{"inputs":[{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ipv6addr"}}],[11,"segments","","Returns the eight 16-bit segments that make up this address.",256,null],[11,"is_unspecified","","Returns true for the special &#39;unspecified&#39; address (::).",256,null],[11,"is_loopback","","Returns true if this is a loopback address (::1).",256,null],[11,"is_global","","Returns true if the address appears to be globally routable.",256,null],[11,"is_unique_local","","Returns true if this is a unique local address (fc00::/7).",256,null],[11,"is_unicast_link_local","","Returns true if the address is unicast and link-local (fe80::/10).",256,null],[11,"is_unicast_site_local","","Returns true if this is a deprecated unicast site-local address\n(fec0::/10).",256,null],[11,"is_documentation","","Returns true if this is an address reserved for documentation\n(2001:db8::/32).",256,null],[11,"is_unicast_global","","Returns true if the address is a globally routable unicast address.",256,null],[11,"multicast_scope","","Returns the address&#39;s multicast scope if the address is multicast.",256,null],[11,"is_multicast","","Returns true if this is a multicast address (ff00::/8).",256,null],[11,"to_ipv4","","Converts this address to an IPv4 address. Returns None if this address is\nneither IPv4-compatible or IPv4-mapped.",256,null],[11,"octets","","Returns the sixteen eight-bit integers the IPv6 address consists of.",256,null],[11,"fmt","","",256,null],[11,"fmt","","",256,null],[11,"clone","","",256,null],[11,"eq","","",256,null],[11,"hash","","",256,null],[11,"partial_cmp","","",256,null],[11,"cmp","","",256,null],[11,"from","","",256,null],[11,"fmt","std::net::addr","",257,null],[11,"hash","","",257,null],[11,"eq","","",257,null],[11,"ne","","",257,null],[11,"clone","","",257,null],[11,"new","","Creates a new socket address from the (ip, port) pair.",257,{"inputs":[{"name":"ipaddr"},{"name":"u16"}],"output":{"name":"socketaddr"}}],[11,"ip","","Returns the IP address associated with this socket address.",257,null],[11,"set_ip","","Change the IP address associated with this socket address.",257,null],[11,"port","","Returns the port number associated with this socket address.",257,null],[11,"set_port","","Change the port number associated with this socket address.",257,null],[11,"new","","Creates a new socket address from the (ip, port) pair.",258,{"inputs":[{"name":"ipv4addr"},{"name":"u16"}],"output":{"name":"socketaddrv4"}}],[11,"ip","","Returns the IP address associated with this socket address.",258,null],[11,"set_ip","","Change the IP address associated with this socket address.",258,null],[11,"port","","Returns the port number associated with this socket address.",258,null],[11,"set_port","","Change the port number associated with this socket address.",258,null],[11,"new","","Creates a new socket address from the ip/port/flowinfo/scope_id\ncomponents.",259,{"inputs":[{"name":"ipv6addr"},{"name":"u16"},{"name":"u32"},{"name":"u32"}],"output":{"name":"socketaddrv6"}}],[11,"ip","","Returns the IP address associated with this socket address.",259,null],[11,"set_ip","","Change the IP address associated with this socket address.",259,null],[11,"port","","Returns the port number associated with this socket address.",259,null],[11,"set_port","","Change the port number associated with this socket address.",259,null],[11,"flowinfo","","Returns the flow information associated with this address,\ncorresponding to the `sin6_flowinfo` field in C.",259,null],[11,"set_flowinfo","","Change the flow information associated with this socket address.",259,null],[11,"scope_id","","Returns the scope ID associated with this address,\ncorresponding to the `sin6_scope_id` field in C.",259,null],[11,"set_scope_id","","Change the scope ID associated with this socket address.",259,null],[11,"fmt","","",257,null],[11,"fmt","","",258,null],[11,"fmt","","",258,null],[11,"fmt","","",259,null],[11,"fmt","","",259,null],[11,"clone","","",258,null],[11,"clone","","",259,null],[11,"eq","","",258,null],[11,"eq","","",259,null],[11,"hash","","",258,null],[11,"hash","","",259,null],[11,"to_socket_addrs","","",257,null],[11,"to_socket_addrs","","",258,null],[11,"to_socket_addrs","","",259,null],[11,"connect","std::net::tcp","Opens a TCP connection to a remote host.",260,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP connection.",260,null],[11,"local_addr","","Returns the socket address of the local half of this TCP connection.",260,null],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",260,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",260,null],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",260,null],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",260,null],[11,"read_timeout","","Returns the read timeout of this socket.",260,null],[11,"write_timeout","","Returns the write timeout of this socket.",260,null],[11,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",260,null],[11,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",260,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",260,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",260,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",260,null],[11,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",260,null],[11,"read","","",260,null],[11,"read_to_end","","",260,null],[11,"write","","",260,null],[11,"flush","","",260,null],[11,"fmt","","",260,null],[11,"bind","","Creates a new `TcpListener` which will be bound to the specified\naddress.",261,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the local socket address of this listener.",261,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",261,null],[11,"accept","","Accept a new incoming connection from this listener.",261,null],[11,"incoming","","Returns an iterator over the connections being received on this\nlistener.",261,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",261,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",261,null],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",261,null],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",261,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",261,null],[11,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",261,null],[11,"next","","",262,null],[11,"fmt","","",261,null],[11,"bind","std::net::udp","Creates a UDP socket from the given address.",263,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"recv_from","","Receives data from the socket. On success, returns the number of bytes\nread and the address from whence the data came.",263,null],[11,"send_to","","Sends data on the socket to the given address. On success, returns the\nnumber of bytes written.",263,null],[11,"local_addr","","Returns the socket address that this socket was created from.",263,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",263,null],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",263,null],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",263,null],[11,"read_timeout","","Returns the read timeout of this socket.",263,null],[11,"write_timeout","","Returns the write timeout of this socket.",263,null],[11,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",263,null],[11,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",263,null],[11,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this socket.",263,null],[11,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this socket.",263,null],[11,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this socket.",263,null],[11,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this socket.",263,null],[11,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",263,null],[11,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",263,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",263,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",263,null],[11,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",263,null],[11,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",263,null],[11,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",263,null],[11,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",263,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",263,null],[11,"connect","","Connects this UDP socket to a remote address, allowing the `send` and\n`recv` syscalls to be used to send data and also applies filters to only\nreceive data from the specified address.",263,null],[11,"send","","Sends data on the socket to the remote address to which it is connected.",263,null],[11,"recv","","Receives data on the socket from the remote address to which it is\nconnected.",263,null],[11,"set_nonblocking","","Moves this UDP socket into or out of nonblocking mode.",263,null],[11,"fmt","","",263,null],[11,"from_str","std::net::ip","",253,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",255,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",256,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","std::net::addr","",258,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",259,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",257,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","std::net::parser","",264,null],[11,"ne","","",264,null],[11,"clone","","",264,null],[11,"fmt","","",264,null],[11,"fmt","","",264,null],[11,"description","","",264,null],[11,"fmt","std::net","",265,null],[11,"eq","","",265,null],[11,"clone","","",265,null],[11,"next","","",266,null],[11,"clone","std::os::linux::raw::arch","",267,null],[11,"as_raw_stat","std::fs","",222,null],[11,"st_dev","","",222,null],[11,"st_ino","","",222,null],[11,"st_mode","","",222,null],[11,"st_nlink","","",222,null],[11,"st_uid","","",222,null],[11,"st_gid","","",222,null],[11,"st_rdev","","",222,null],[11,"st_size","","",222,null],[11,"st_atime","","",222,null],[11,"st_atime_nsec","","",222,null],[11,"st_mtime","","",222,null],[11,"st_mtime_nsec","","",222,null],[11,"st_ctime","","",222,null],[11,"st_ctime_nsec","","",222,null],[11,"st_blksize","","",222,null],[11,"st_blocks","","",222,null],[11,"as_raw_fd","","",226,null],[11,"from_raw_fd","","",226,{"inputs":[{"name":"i32"}],"output":{"name":"file"}}],[11,"into_raw_fd","","",226,null],[11,"as_raw_fd","std::net::tcp","",260,null],[11,"as_raw_fd","","",261,null],[11,"as_raw_fd","std::net::udp","",263,null],[11,"from_raw_fd","std::net::tcp","",260,{"inputs":[{"name":"i32"}],"output":{"name":"tcpstream"}}],[11,"from_raw_fd","","",261,{"inputs":[{"name":"i32"}],"output":{"name":"tcplistener"}}],[11,"from_raw_fd","std::net::udp","",263,{"inputs":[{"name":"i32"}],"output":{"name":"udpsocket"}}],[11,"into_raw_fd","std::net::tcp","",260,null],[11,"into_raw_fd","","",261,null],[11,"into_raw_fd","std::net::udp","",263,null],[11,"from_vec","std::ffi::os_str","",218,{"inputs":[{"name":"vec"}],"output":{"name":"osstring"}}],[11,"into_vec","","",218,null],[11,"from_bytes","","",219,null],[11,"as_bytes","","",219,null],[11,"mode","std::fs","",224,null],[11,"set_mode","","",224,null],[11,"from_mode","","",224,{"inputs":[{"name":"u32"}],"output":{"name":"permissions"}}],[11,"mode","","",223,null],[11,"custom_flags","","",223,null],[11,"dev","","",222,null],[11,"ino","","",222,null],[11,"mode","","",222,null],[11,"nlink","","",222,null],[11,"uid","","",222,null],[11,"gid","","",222,null],[11,"rdev","","",222,null],[11,"size","","",222,null],[11,"atime","","",222,null],[11,"atime_nsec","","",222,null],[11,"mtime","","",222,null],[11,"mtime_nsec","","",222,null],[11,"ctime","","",222,null],[11,"ctime_nsec","","",222,null],[11,"blksize","","",222,null],[11,"blocks","","",222,null],[11,"is_block_device","","",225,null],[11,"is_char_device","","",225,null],[11,"is_fifo","","",225,null],[11,"is_socket","","",225,null],[11,"ino","","",228,null],[11,"mode","","",229,null],[11,"uid","std::process","",268,null],[11,"gid","","",268,null],[11,"before_exec","","",268,null],[11,"exec","","",268,null],[11,"from_raw","","",269,{"inputs":[{"name":"i32"}],"output":{"name":"exitstatus"}}],[11,"signal","","",269,null],[11,"from_raw_fd","","",270,{"inputs":[{"name":"i32"}],"output":{"name":"stdio"}}],[11,"as_raw_fd","","",271,null],[11,"as_raw_fd","","",272,null],[11,"as_raw_fd","","",273,null],[11,"into_raw_fd","","",271,null],[11,"into_raw_fd","","",272,null],[11,"into_raw_fd","","",273,null],[11,"as_pthread_t","std::thread","",166,null],[11,"into_pthread_t","","",166,null],[11,"clone","std::sys::ext::net","",274,null],[11,"is_unnamed","","Returns true iff the address is unnamed.",274,null],[11,"as_pathname","","Returns the contents of this address if it is a `pathname` address.",274,null],[11,"fmt","","",274,null],[11,"fmt","","",275,null],[11,"connect","","Connects to the socket named by `path`.",275,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"pair","","Creates an unnamed pair of connected sockets.",275,{"inputs":[],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",275,null],[11,"local_addr","","Returns the socket address of the local half of this connection.",275,null],[11,"peer_addr","","Returns the socket address of the remote half of this connection.",275,null],[11,"set_read_timeout","","Sets the read timeout for the socket.",275,null],[11,"set_write_timeout","","Sets the write timeout for the socket.",275,null],[11,"read_timeout","","Returns the read timeout of this socket.",275,null],[11,"write_timeout","","Returns the write timeout of this socket.",275,null],[11,"set_nonblocking","","Moves the socket into or out of nonblocking mode.",275,null],[11,"take_error","","Returns the value of the `SO_ERROR` option.",275,null],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",275,null],[11,"read","","",275,null],[11,"read_to_end","","",275,null],[11,"write","","",275,null],[11,"flush","","",275,null],[11,"as_raw_fd","","",275,null],[11,"from_raw_fd","","",275,{"inputs":[{"name":"i32"}],"output":{"name":"unixstream"}}],[11,"into_raw_fd","","",275,null],[11,"fmt","","",276,null],[11,"bind","","Creates a new `UnixListener` bound to the specified socket.",276,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"accept","","Accepts a new incoming connection to this listener.",276,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",276,null],[11,"local_addr","","Returns the local socket address of this listener.",276,null],[11,"set_nonblocking","","Moves the socket into or out of nonblocking mode.",276,null],[11,"take_error","","Returns the value of the `SO_ERROR` option.",276,null],[11,"incoming","","Returns an iterator over incoming connections.",276,null],[11,"as_raw_fd","","",276,null],[11,"from_raw_fd","","",276,{"inputs":[{"name":"i32"}],"output":{"name":"unixlistener"}}],[11,"into_raw_fd","","",276,null],[11,"fmt","","",277,null],[11,"next","","",277,null],[11,"size_hint","","",277,null],[11,"fmt","","",278,null],[11,"bind","","Creates a Unix datagram socket bound to the given path.",278,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"unbound","","Creates a Unix Datagram socket which is not bound to any address.",278,{"inputs":[],"output":{"name":"result"}}],[11,"pair","","Create an unnamed pair of connected sockets.",278,{"inputs":[],"output":{"name":"result"}}],[11,"connect","","Connects the socket to the specified address.",278,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",278,null],[11,"local_addr","","Returns the address of this socket.",278,null],[11,"peer_addr","","Returns the address of this socket&#39;s peer.",278,null],[11,"recv_from","","Receives data from the socket.",278,null],[11,"recv","","Receives data from the socket.",278,null],[11,"send_to","","Sends data on the socket to the specified address.",278,null],[11,"send","","Sends data on the socket to the socket&#39;s peer.",278,null],[11,"set_read_timeout","","Sets the read timeout for the socket.",278,null],[11,"set_write_timeout","","Sets the write timeout for the socket.",278,null],[11,"read_timeout","","Returns the read timeout of this socket.",278,null],[11,"write_timeout","","Returns the write timeout of this socket.",278,null],[11,"set_nonblocking","","Moves the socket into or out of nonblocking mode.",278,null],[11,"take_error","","Returns the value of the `SO_ERROR` option.",278,null],[11,"shutdown","","Shut down the read, write, or both halves of this connection.",278,null],[11,"as_raw_fd","","",278,null],[11,"from_raw_fd","","",278,{"inputs":[{"name":"i32"}],"output":{"name":"unixdatagram"}}],[11,"into_raw_fd","","",278,null],[11,"deref","std::panic","",279,null],[11,"deref_mut","","",279,null],[11,"call_once","","",279,null],[11,"eq","std::path","",280,null],[11,"ne","","",280,null],[11,"cmp","","",280,null],[11,"partial_cmp","","",280,null],[11,"lt","","",280,null],[11,"le","","",280,null],[11,"gt","","",280,null],[11,"ge","","",280,null],[11,"hash","","",280,null],[11,"fmt","","",280,null],[11,"clone","","",280,null],[11,"is_verbatim","","Determines if the prefix is verbatim, i.e. begins with `\\\\?\\`.",280,null],[11,"fmt","","",281,null],[11,"clone","","",281,null],[11,"kind","","The parsed prefix data.",281,null],[11,"as_os_str","","The raw `OsStr` slice for this prefix.",281,null],[11,"eq","","",281,null],[11,"partial_cmp","","",281,null],[11,"cmp","","",281,null],[11,"hash","","",281,null],[11,"fmt","","",282,null],[11,"hash","","",282,null],[11,"cmp","","",282,null],[11,"partial_cmp","","",282,null],[11,"lt","","",282,null],[11,"le","","",282,null],[11,"gt","","",282,null],[11,"ge","","",282,null],[11,"eq","","",282,null],[11,"ne","","",282,null],[11,"clone","","",282,null],[11,"as_os_str","","Extracts the underlying `OsStr` slice",282,null],[11,"as_ref","","",282,null],[11,"clone","","",283,null],[11,"clone","","",284,null],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",283,null],[11,"as_ref","","",283,null],[11,"as_ref","","",283,null],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",284,null],[11,"as_ref","","",284,null],[11,"as_ref","","",284,null],[11,"next","","",284,null],[11,"next_back","","",284,null],[11,"next","","",283,null],[11,"next_back","","",283,null],[11,"eq","","",283,null],[11,"partial_cmp","","",283,null],[11,"cmp","","",283,null],[11,"clone","","",285,null],[11,"new","","Allocates an empty `PathBuf`.",285,{"inputs":[],"output":{"name":"pathbuf"}}],[11,"as_path","","Coerces to a `Path` slice.",285,null],[11,"push","","Extends `self` with `path`.",285,null],[11,"pop","","Truncate `self` to `self.parent()`.",285,null],[11,"set_file_name","","Updates `self.file_name()` to `file_name`.",285,null],[11,"set_extension","","Updates `self.extension()` to `extension`.",285,null],[11,"into_os_string","","Consumes the `PathBuf`, yielding its internal `OsString` storage.",285,null],[11,"from","","",285,{"inputs":[{"name":"t"}],"output":{"name":"pathbuf"}}],[11,"from","","",285,{"inputs":[{"name":"osstring"}],"output":{"name":"pathbuf"}}],[11,"from","","",285,{"inputs":[{"name":"string"}],"output":{"name":"pathbuf"}}],[11,"from_iter","","",285,{"inputs":[{"name":"i"}],"output":{"name":"pathbuf"}}],[11,"extend","","",285,null],[11,"fmt","","",285,null],[11,"new","","Directly wrap a string slice as a `Path` slice.",286,{"inputs":[{"name":"s"}],"output":{"name":"path"}}],[11,"as_os_str","","Yields the underlying `OsStr` slice.",286,null],[11,"to_str","","Yields a `&amp;str` slice if the `Path` is valid unicode.",286,null],[11,"to_string_lossy","","Converts a `Path` to a `Cow&lt;str&gt;`.",286,null],[11,"to_path_buf","","Converts a `Path` to an owned `PathBuf`.",286,null],[11,"is_absolute","","A path is *absolute* if it is independent of the current directory.",286,null],[11,"is_relative","","A path is *relative* if it is not absolute.",286,null],[11,"has_root","","A path has a root if the body of the path begins with the directory separator.",286,null],[11,"parent","","The path without its final component, if any.",286,null],[11,"file_name","","The final component of the path, if it is a normal file.",286,null],[11,"strip_prefix","","Returns a path that, when joined onto `base`, yields `self`.",286,null],[11,"starts_with","","Determines whether `base` is a prefix of `self`.",286,null],[11,"ends_with","","Determines whether `child` is a suffix of `self`.",286,null],[11,"file_stem","","Extracts the stem (non-extension) portion of `self.file_name()`.",286,null],[11,"extension","","Extracts the extension of `self.file_name()`, if possible.",286,null],[11,"join","","Creates an owned `PathBuf` with `path` adjoined to `self`.",286,null],[11,"with_file_name","","Creates an owned `PathBuf` like `self` but with the given file name.",286,null],[11,"with_extension","","Creates an owned `PathBuf` like `self` but with the given extension.",286,null],[11,"components","","Produce an iterator over the components of the path.",286,null],[11,"iter","","Produce an iterator over the path&#39;s components viewed as `OsStr` slices.",286,null],[11,"display","","Returns an object that implements `Display` for safely printing paths\nthat may contain non-Unicode data.",286,null],[11,"metadata","","Query the file system to get information about a file, directory, etc.",286,null],[11,"symlink_metadata","","Query the metadata about a file without following symlinks.",286,null],[11,"canonicalize","","Returns the canonical form of the path with all intermediate components\nnormalized and symbolic links resolved.",286,null],[11,"read_link","","Reads a symbolic link, returning the file that the link points to.",286,null],[11,"read_dir","","Returns an iterator over the entries within a directory.",286,null],[11,"exists","","Returns whether the path points at an existing entity.",286,null],[11,"is_file","","Returns whether the path is pointing at a regular file.",286,null],[11,"is_dir","","Returns whether the path is pointing at a directory.",286,null],[11,"deref","","",285,null],[11,"borrow","","",285,null],[11,"from","collections::borrow","",220,{"inputs":[{"name":"path"}],"output":{"name":"cow"}}],[11,"from","","",220,{"inputs":[{"name":"pathbuf"}],"output":{"name":"cow"}}],[11,"to_owned","std::path","",286,null],[11,"eq","","",285,null],[11,"hash","","",285,null],[11,"partial_cmp","","",285,null],[11,"cmp","","",285,null],[11,"as_ref","","",285,null],[11,"into","","",285,null],[11,"eq","","",287,null],[11,"ne","","",287,null],[11,"clone","","",287,null],[11,"fmt","","",287,null],[11,"as_ref","","",286,null],[11,"fmt","","",286,null],[11,"fmt","","",288,null],[11,"fmt","","",288,null],[11,"eq","","",286,null],[11,"hash","","",286,null],[11,"partial_cmp","","",286,null],[11,"cmp","","",286,null],[11,"as_ref","","",286,null],[11,"as_ref","std::ffi::os_str","",219,null],[11,"as_ref","collections::borrow","",220,null],[11,"as_ref","std::ffi::os_str","",218,null],[11,"as_ref","collections::string","",221,null],[11,"as_ref","std::path","",285,null],[11,"eq","","",285,null],[11,"eq","","",286,null],[11,"partial_cmp","","",285,null],[11,"partial_cmp","","",286,null],[11,"eq","","",285,null],[11,"partial_cmp","","",285,null],[11,"eq","collections::borrow","",220,null],[11,"eq","std::path","",286,null],[11,"partial_cmp","collections::borrow","",220,null],[11,"partial_cmp","std::path","",286,null],[11,"eq","collections::borrow","",220,null],[11,"partial_cmp","","",220,null],[11,"eq","","",220,null],[11,"eq","std::path","",285,null],[11,"partial_cmp","collections::borrow","",220,null],[11,"partial_cmp","std::path","",285,null],[11,"eq","","",285,null],[11,"eq","std::ffi::os_str","",219,null],[11,"partial_cmp","std::path","",285,null],[11,"partial_cmp","std::ffi::os_str","",219,null],[11,"eq","std::path","",285,null],[11,"partial_cmp","","",285,null],[11,"eq","","",285,null],[11,"eq","collections::borrow","",220,null],[11,"partial_cmp","std::path","",285,null],[11,"partial_cmp","collections::borrow","",220,null],[11,"eq","std::path","",285,null],[11,"eq","std::ffi::os_str","",218,null],[11,"partial_cmp","std::path","",285,null],[11,"partial_cmp","std::ffi::os_str","",218,null],[11,"eq","std::path","",286,null],[11,"eq","std::ffi::os_str","",219,null],[11,"partial_cmp","std::path","",286,null],[11,"partial_cmp","std::ffi::os_str","",219,null],[11,"eq","std::path","",286,null],[11,"partial_cmp","","",286,null],[11,"eq","","",286,null],[11,"eq","collections::borrow","",220,null],[11,"partial_cmp","std::path","",286,null],[11,"partial_cmp","collections::borrow","",220,null],[11,"eq","std::path","",286,null],[11,"eq","std::ffi::os_str","",218,null],[11,"partial_cmp","std::path","",286,null],[11,"partial_cmp","std::ffi::os_str","",218,null],[11,"eq","","",219,null],[11,"partial_cmp","","",219,null],[11,"eq","collections::borrow","",220,null],[11,"partial_cmp","","",220,null],[11,"eq","std::ffi::os_str","",218,null],[11,"partial_cmp","","",218,null],[11,"eq","collections::borrow","",220,null],[11,"eq","std::ffi::os_str","",219,null],[11,"partial_cmp","collections::borrow","",220,null],[11,"partial_cmp","std::ffi::os_str","",219,null],[11,"eq","collections::borrow","",220,null],[11,"partial_cmp","","",220,null],[11,"eq","","",220,null],[11,"eq","std::ffi::os_str","",218,null],[11,"partial_cmp","collections::borrow","",220,null],[11,"partial_cmp","std::ffi::os_str","",218,null],[11,"fmt","std::path","",287,null],[11,"description","","",287,null],[11,"write","std::process","",271,null],[11,"flush","","",271,null],[11,"read","","",272,null],[11,"read_to_end","","",272,null],[11,"read","","",273,null],[11,"read_to_end","","",273,null],[11,"new","","Constructs a new `Command` for launching the program at\npath `program`, with the following default configuration:",268,{"inputs":[{"name":"s"}],"output":{"name":"command"}}],[11,"arg","","Add an argument to pass to the program.",268,null],[11,"args","","Add multiple arguments to pass to the program.",268,null],[11,"env","","Inserts or updates an environment variable mapping.",268,null],[11,"env_remove","","Removes an environment variable mapping.",268,null],[11,"env_clear","","Clears the entire environment map for the child process.",268,null],[11,"current_dir","","Sets the working directory for the child process.",268,null],[11,"stdin","","Configuration for the child process&#39;s stdin handle (file descriptor 0).",268,null],[11,"stdout","","Configuration for the child process&#39;s stdout handle (file descriptor 1).",268,null],[11,"stderr","","Configuration for the child process&#39;s stderr handle (file descriptor 2).",268,null],[11,"spawn","","Executes the command as a child process, returning a handle to it.",268,null],[11,"output","","Executes the command as a child process, waiting for it to finish and\ncollecting all of its output.",268,null],[11,"status","","Executes a command as a child process, waiting for it to finish and\ncollecting its exit status.",268,null],[11,"fmt","","Format the program and arguments of a Command for display. Any\nnon-utf8 data is lossily converted using the utf8 replacement\ncharacter.",268,null],[11,"clone","","",289,null],[11,"eq","","",289,null],[11,"ne","","",289,null],[11,"fmt","","",289,null],[11,"piped","","A new pipe should be arranged to connect the parent and child processes.",270,{"inputs":[],"output":{"name":"stdio"}}],[11,"inherit","","The child inherits from the corresponding parent descriptor.",270,{"inputs":[],"output":{"name":"stdio"}}],[11,"null","","This stream will be ignored. This is the equivalent of attaching the\nstream to `/dev/null`",270,{"inputs":[],"output":{"name":"stdio"}}],[11,"fmt","","",269,null],[11,"clone","","",269,null],[11,"eq","","",269,null],[11,"ne","","",269,null],[11,"success","","Was termination successful? Signal termination not considered a success,\nand success is defined as a zero exit status.",269,null],[11,"code","","Returns the exit code of the process, if any.",269,null],[11,"fmt","","",269,null],[11,"kill","","Forces the child to exit. This is equivalent to sending a\nSIGKILL on unix platforms.",290,null],[11,"id","","Returns the OS-assigned process identifier associated with this child.",290,null],[11,"wait","","Waits for the child to exit completely, returning the status that it\nexited with. This function will continue to have the same return value\nafter it has been called at least once.",290,null],[11,"wait_with_output","","Simultaneously waits for the child to exit and collect all remaining\noutput on the stdout/stderr handles, returning an `Output`\ninstance.",290,null],[11,"new","std::sync::mpsc::select","Creates a new selection structure. This set is initially empty.",291,{"inputs":[],"output":{"name":"select"}}],[11,"handle","","Creates a new handle into this receiver set for a new receiver. Note\nthat this does *not* add the receiver to the receiver set, for that you\nmust call the `add` method on the handle itself.",291,null],[11,"wait","","Waits for an event on this receiver set. The returned value is *not* an\nindex, but rather an id. This id can be queried against any active\n`Handle` structures (each one has an `id` method). The handle with\nthe matching `id` will have some sort of event available on it. The\nevent could either be that data is available or the corresponding\nchannel has been closed.",291,null],[11,"id","","Retrieves the id of this handle.",292,null],[11,"recv","","Blocks to receive a value on the underlying receiver, returning `Some` on\nsuccess or `None` if the channel disconnects. This function has the same\nsemantics as `Receiver.recv`",292,null],[11,"add","","Adds this handle to the receiver set that the handle was created from. This\nmethod can be called multiple times, but it has no effect if `add` was\ncalled previously.",292,null],[11,"remove","","Removes this handle from the `Select` set. This method is unsafe because\nit has no guarantee that the `Handle` was not moved since `add` was\ncalled.",292,null],[11,"drop","","",291,null],[11,"drop","","",292,null],[11,"fmt","","",291,null],[11,"fmt","","",292,null],[11,"clone","std::sync::mpsc","",293,null],[11,"eq","","",293,null],[11,"ne","","",293,null],[11,"fmt","","",294,null],[11,"clone","","",294,null],[11,"eq","","",294,null],[11,"fmt","","",295,null],[11,"clone","","",295,null],[11,"eq","","",295,null],[11,"fmt","","",296,null],[11,"clone","","",296,null],[11,"eq","","",296,null],[11,"clone","","",297,null],[11,"eq","","",297,null],[11,"ne","","",297,null],[11,"send","","Attempts to send a value on this channel, returning it back if it could\nnot be sent.",298,null],[11,"clone","","",298,null],[11,"drop","","",298,null],[11,"fmt","","",298,null],[11,"send","","Sends a value on this synchronous channel.",299,null],[11,"try_send","","Attempts to send a value on this channel without blocking.",299,null],[11,"clone","","",299,null],[11,"drop","","",299,null],[11,"fmt","","",299,null],[11,"try_recv","","Attempts to return a pending value on this receiver without blocking",300,null],[11,"recv","","Attempts to wait for a value on this receiver, returning an error if the\ncorresponding channel has hung up.",300,null],[11,"recv_timeout","","Attempts to wait for a value on this receiver, returning an error if the\ncorresponding channel has hung up, or if it waits more than `timeout`.",300,null],[11,"iter","","Returns an iterator that will block waiting for messages, but never\n`panic!`. It will return `None` when the channel has hung up.",300,null],[11,"next","","",301,null],[11,"next","","",302,null],[11,"into_iter","","",300,null],[11,"drop","","",300,null],[11,"fmt","","",300,null],[11,"fmt","","",293,null],[11,"fmt","","",293,null],[11,"description","","",293,null],[11,"cause","","",293,null],[11,"fmt","","",297,null],[11,"fmt","","",297,null],[11,"description","","",297,null],[11,"cause","","",297,null],[11,"fmt","","",294,null],[11,"description","","",294,null],[11,"cause","","",294,null],[11,"fmt","","",295,null],[11,"description","","",295,null],[11,"cause","","",295,null],[11,"new","std::sync::barrier","Creates a new barrier that can block a given number of threads.",303,{"inputs":[{"name":"usize"}],"output":{"name":"barrier"}}],[11,"wait","","Blocks the current thread until all threads have rendezvoused here.",303,null],[11,"is_leader","","Returns whether this thread from `wait` is the &quot;leader thread&quot;.",304,null],[11,"clone","std::sync::condvar","",305,null],[11,"eq","","",305,null],[11,"ne","","",305,null],[11,"fmt","","",305,null],[11,"timed_out","","Returns whether the wait was known to have timed out.",305,null],[11,"new","","Creates a new condition variable which is ready to be waited on and\nnotified.",306,{"inputs":[],"output":{"name":"condvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",306,null],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",306,null],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",306,null],[11,"notify_one","","Wakes up one blocked thread on this condvar.",306,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",306,null],[11,"default","","",306,{"inputs":[],"output":{"name":"condvar"}}],[11,"drop","","",306,null],[11,"new","","Creates a new condition variable",307,{"inputs":[],"output":{"name":"staticcondvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",307,null],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",307,null],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",307,null],[11,"notify_one","","Wakes up one blocked thread on this condvar.",307,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",307,null],[11,"destroy","","Deallocates all resources associated with this static condvar.",307,null],[11,"drop","std::sync::mutex","",146,null],[11,"default","","",146,{"inputs":[],"output":{"name":"mutex"}}],[11,"fmt","","",146,null],[11,"new","","Creates a new mutex in an unlocked state ready for use.",308,{"inputs":[],"output":{"name":"staticmutex"}}],[11,"lock","","Acquires this lock, see `Mutex::lock`",308,null],[11,"try_lock","","Attempts to grab this lock, see `Mutex::try_lock`",308,null],[11,"destroy","","Deallocates resources associated with this static mutex.",308,null],[11,"deref","","",309,null],[11,"deref_mut","","",309,null],[11,"drop","","",309,null],[11,"new","std::sync::once","Creates a new `Once` value.",310,{"inputs":[],"output":{"name":"once"}}],[11,"call_once","","Performs an initialization routine once and only once. The given closure\nwill be executed if this is the first time `call_once` has been called,\nand otherwise the routine will *not* be invoked.",310,null],[11,"call_once_force","","Performs the same function as `call_once` except ignores poisoning.",310,null],[11,"poisoned","","Returns whether the associated `Once` has been poisoned.",311,null],[11,"new","std::sync::rwlock","Creates a new instance of an `RwLock&lt;T&gt;` which is unlocked.",312,{"inputs":[{"name":"t"}],"output":{"name":"rwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",312,null],[11,"try_read","","Attempts to acquire this rwlock with shared read access.",312,null],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",312,null],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",312,null],[11,"is_poisoned","","Determines whether the lock is poisoned.",312,null],[11,"into_inner","","Consumes this `RwLock`, returning the underlying data.",312,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",312,null],[11,"drop","","",312,null],[11,"fmt","","",312,null],[11,"default","","",312,{"inputs":[],"output":{"name":"rwlock"}}],[11,"new","","Creates a new rwlock.",313,{"inputs":[],"output":{"name":"staticrwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",313,null],[11,"try_read","","Attempts to acquire this lock with shared read access.",313,null],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",313,null],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",313,null],[11,"destroy","","Deallocates all resources associated with this static lock.",313,null],[11,"deref","","",314,null],[11,"deref","","",315,null],[11,"deref_mut","","",315,null],[11,"drop","","",314,null],[11,"drop","","",315,null],[11,"default","core::sync::atomic","",316,{"inputs":[],"output":{"name":"atomicbool"}}],[11,"default","","",317,{"inputs":[],"output":{"name":"atomicptr"}}],[11,"fmt","","",318,null],[11,"clone","","",318,null],[11,"new","","Creates a new `AtomicBool`.",316,{"inputs":[{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",316,null],[11,"store","","Stores a value into the bool.",316,null],[11,"swap","","Stores a value into the bool, returning the old value.",316,null],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",316,null],[11,"compare_exchange","","Stores a value into the `bool` if the current value is the same as the `current` value.",316,null],[11,"compare_exchange_weak","","Stores a value into the `bool` if the current value is the same as the `current` value.",316,null],[11,"fetch_and","","Logical &quot;and&quot; with a boolean value.",316,null],[11,"fetch_nand","","Logical &quot;nand&quot; with a boolean value.",316,null],[11,"fetch_or","","Logical &quot;or&quot; with a boolean value.",316,null],[11,"fetch_xor","","Logical &quot;xor&quot; with a boolean value.",316,null],[11,"new","","Creates a new `AtomicPtr`.",317,null],[11,"load","","Loads a value from the pointer.",317,null],[11,"store","","Stores a value into the pointer.",317,null],[11,"swap","","Stores a value into the pointer, returning the old value.",317,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",317,null],[11,"compare_exchange","","Stores a value into the pointer if the current value is the same as the `current` value.",317,null],[11,"compare_exchange_weak","","Stores a value into the pointer if the current value is the same as the `current` value.",317,null],[11,"default","","",319,{"inputs":[],"output":{"name":"atomici8"}}],[11,"fmt","","",319,null],[11,"new","","Creates a new atomic integer.",319,{"inputs":[{"name":"i8"}],"output":{"name":"atomici8"}}],[11,"load","","Loads a value from the atomic integer.",319,null],[11,"store","","Stores a value into the atomic integer.",319,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",319,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",319,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",319,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",319,null],[11,"fetch_add","","Add to the current value, returning the previous value.",319,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",319,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",319,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",319,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",319,null],[11,"default","","",320,{"inputs":[],"output":{"name":"atomicu8"}}],[11,"fmt","","",320,null],[11,"new","","Creates a new atomic integer.",320,{"inputs":[{"name":"u8"}],"output":{"name":"atomicu8"}}],[11,"load","","Loads a value from the atomic integer.",320,null],[11,"store","","Stores a value into the atomic integer.",320,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",320,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",320,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",320,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",320,null],[11,"fetch_add","","Add to the current value, returning the previous value.",320,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",320,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",320,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",320,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",320,null],[11,"default","","",321,{"inputs":[],"output":{"name":"atomici16"}}],[11,"fmt","","",321,null],[11,"new","","Creates a new atomic integer.",321,{"inputs":[{"name":"i16"}],"output":{"name":"atomici16"}}],[11,"load","","Loads a value from the atomic integer.",321,null],[11,"store","","Stores a value into the atomic integer.",321,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",321,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",321,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",321,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",321,null],[11,"fetch_add","","Add to the current value, returning the previous value.",321,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",321,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",321,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",321,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",321,null],[11,"default","","",322,{"inputs":[],"output":{"name":"atomicu16"}}],[11,"fmt","","",322,null],[11,"new","","Creates a new atomic integer.",322,{"inputs":[{"name":"u16"}],"output":{"name":"atomicu16"}}],[11,"load","","Loads a value from the atomic integer.",322,null],[11,"store","","Stores a value into the atomic integer.",322,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",322,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",322,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",322,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",322,null],[11,"fetch_add","","Add to the current value, returning the previous value.",322,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",322,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",322,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",322,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",322,null],[11,"default","","",323,{"inputs":[],"output":{"name":"atomici32"}}],[11,"fmt","","",323,null],[11,"new","","Creates a new atomic integer.",323,{"inputs":[{"name":"i32"}],"output":{"name":"atomici32"}}],[11,"load","","Loads a value from the atomic integer.",323,null],[11,"store","","Stores a value into the atomic integer.",323,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",323,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",323,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",323,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",323,null],[11,"fetch_add","","Add to the current value, returning the previous value.",323,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",323,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",323,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",323,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",323,null],[11,"default","","",324,{"inputs":[],"output":{"name":"atomicu32"}}],[11,"fmt","","",324,null],[11,"new","","Creates a new atomic integer.",324,{"inputs":[{"name":"u32"}],"output":{"name":"atomicu32"}}],[11,"load","","Loads a value from the atomic integer.",324,null],[11,"store","","Stores a value into the atomic integer.",324,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",324,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",324,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",324,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",324,null],[11,"fetch_add","","Add to the current value, returning the previous value.",324,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",324,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",324,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",324,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",324,null],[11,"default","","",325,{"inputs":[],"output":{"name":"atomici64"}}],[11,"fmt","","",325,null],[11,"new","","Creates a new atomic integer.",325,{"inputs":[{"name":"i64"}],"output":{"name":"atomici64"}}],[11,"load","","Loads a value from the atomic integer.",325,null],[11,"store","","Stores a value into the atomic integer.",325,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",325,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",325,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",325,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",325,null],[11,"fetch_add","","Add to the current value, returning the previous value.",325,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",325,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",325,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",325,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",325,null],[11,"default","","",326,{"inputs":[],"output":{"name":"atomicu64"}}],[11,"fmt","","",326,null],[11,"new","","Creates a new atomic integer.",326,{"inputs":[{"name":"u64"}],"output":{"name":"atomicu64"}}],[11,"load","","Loads a value from the atomic integer.",326,null],[11,"store","","Stores a value into the atomic integer.",326,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",326,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",326,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",326,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",326,null],[11,"fetch_add","","Add to the current value, returning the previous value.",326,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",326,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",326,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",326,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",326,null],[11,"default","","",327,{"inputs":[],"output":{"name":"atomicisize"}}],[11,"fmt","","",327,null],[11,"new","","Creates a new atomic integer.",327,{"inputs":[{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the atomic integer.",327,null],[11,"store","","Stores a value into the atomic integer.",327,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",327,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",327,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",327,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",327,null],[11,"fetch_add","","Add to the current value, returning the previous value.",327,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",327,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",327,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",327,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",327,null],[11,"default","","",328,{"inputs":[],"output":{"name":"atomicusize"}}],[11,"fmt","","",328,null],[11,"new","","Creates a new atomic integer.",328,{"inputs":[{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the atomic integer.",328,null],[11,"store","","Stores a value into the atomic integer.",328,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",328,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",328,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",328,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",328,null],[11,"fetch_add","","Add to the current value, returning the previous value.",328,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",328,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",328,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",328,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",328,null],[11,"fmt","","",316,null],[11,"fmt","","",317,null],[11,"hash","std::time::duration","",329,null],[11,"fmt","","",329,null],[11,"cmp","","",329,null],[11,"partial_cmp","","",329,null],[11,"lt","","",329,null],[11,"le","","",329,null],[11,"gt","","",329,null],[11,"ge","","",329,null],[11,"eq","","",329,null],[11,"ne","","",329,null],[11,"clone","","",329,null],[11,"new","","Creates a new `Duration` from the specified number of seconds and\nadditional nanosecond precision.",329,{"inputs":[{"name":"u64"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"from_secs","","Creates a new `Duration` from the specified number of seconds.",329,{"inputs":[{"name":"u64"}],"output":{"name":"duration"}}],[11,"from_millis","","Creates a new `Duration` from the specified number of milliseconds.",329,{"inputs":[{"name":"u64"}],"output":{"name":"duration"}}],[11,"as_secs","","Returns the number of whole seconds represented by this duration.",329,null],[11,"subsec_nanos","","Returns the nanosecond precision represented by this duration.",329,null],[11,"add","","",329,null],[11,"add_assign","","",329,null],[11,"sub","","",329,null],[11,"sub_assign","","",329,null],[11,"mul","","",329,null],[11,"mul_assign","","",329,null],[11,"div","","",329,null],[11,"div_assign","","",329,null],[11,"cmp","std::time","",330,null],[11,"partial_cmp","","",330,null],[11,"lt","","",330,null],[11,"le","","",330,null],[11,"gt","","",330,null],[11,"ge","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"clone","","",330,null],[11,"cmp","","",331,null],[11,"partial_cmp","","",331,null],[11,"lt","","",331,null],[11,"le","","",331,null],[11,"gt","","",331,null],[11,"ge","","",331,null],[11,"eq","","",331,null],[11,"ne","","",331,null],[11,"clone","","",331,null],[11,"fmt","","",332,null],[11,"clone","","",332,null],[11,"now","","Returns an instant corresponding to &quot;now&quot;.",330,{"inputs":[],"output":{"name":"instant"}}],[11,"duration_since","","Returns the amount of time elapsed from another instant to this one.",330,null],[11,"elapsed","","Returns the amount of time elapsed since this instant was created.",330,null],[11,"add","","",330,null],[11,"add_assign","","",330,null],[11,"sub","","",330,null],[11,"sub_assign","","",330,null],[11,"sub","","",330,null],[11,"fmt","","",330,null],[11,"now","","Returns the system time corresponding to &quot;now&quot;.",331,{"inputs":[],"output":{"name":"systemtime"}}],[11,"duration_since","","Returns the amount of time elapsed from an earlier point in time.",331,null],[11,"elapsed","","Returns the amount of time elapsed since this system time was created.",331,null],[11,"add","","",331,null],[11,"add_assign","","",331,null],[11,"sub","","",331,null],[11,"sub_assign","","",331,null],[11,"fmt","","",331,null],[11,"duration","","Returns the positive duration which represents how far forward the\nsecond system time was from the first.",332,null],[11,"description","","",332,null],[11,"fmt","","",332,null],[11,"fmt","std::sys_common::poison","",333,null],[11,"fmt","","",333,null],[11,"description","","",333,null],[11,"new","","Creates a `PoisonError`.",333,{"inputs":[{"name":"t"}],"output":{"name":"poisonerror"}}],[11,"into_inner","","Consumes this error indicating that a lock is poisoned, returning the\nunderlying guard to allow access regardless.",333,null],[11,"get_ref","","Reaches into this error indicating that a lock is poisoned, returning a\nreference to the underlying guard to allow access regardless.",333,null],[11,"get_mut","","Reaches into this error indicating that a lock is poisoned, returning a\nmutable reference to the underlying guard to allow access regardless.",333,null],[11,"from","","",334,{"inputs":[{"name":"poisonerror"}],"output":{"name":"trylockerror"}}],[11,"fmt","","",334,null],[11,"fmt","","",334,null],[11,"description","","",334,null],[11,"cause","","",334,null],[11,"clone","libc::unix","",335,null],[11,"clone","","",336,null],[11,"clone","","",337,null],[11,"clone","","",338,null],[11,"clone","","",339,null],[11,"clone","","",340,null],[11,"clone","","",341,null],[11,"clone","","",342,null],[11,"clone","","",343,null],[11,"clone","","",344,null],[11,"clone","","",345,null],[11,"clone","","",346,null],[11,"clone","","",347,null],[11,"clone","libc::unix::notbsd","",348,null],[11,"clone","","",349,null],[11,"clone","","",350,null],[11,"clone","","",351,null],[11,"clone","","",352,null],[11,"clone","","",353,null],[11,"clone","","",354,null],[11,"clone","","",355,null],[11,"clone","","",356,null],[11,"clone","","",357,null],[11,"clone","","",358,null],[11,"clone","","",359,null],[11,"clone","","",360,null],[11,"clone","","",361,null],[11,"clone","","",362,null],[11,"clone","libc::unix::notbsd::linux","",363,null],[11,"clone","","",364,null],[11,"clone","","",365,null],[11,"clone","","",366,null],[11,"clone","","",367,null],[11,"clone","","",368,null],[11,"clone","","",369,null],[11,"clone","","",370,null],[11,"clone","","",371,null],[11,"clone","","",372,null],[11,"clone","","",373,null],[11,"clone","","",374,null],[11,"clone","","",375,null],[11,"clone","","",376,null],[11,"clone","","",377,null],[11,"clone","","",378,null],[11,"clone","libc::unix::notbsd::linux::other","",379,null],[11,"clone","","",380,null],[11,"clone","","",381,null],[11,"clone","","",382,null],[11,"clone","","",383,null],[11,"clone","","",384,null],[11,"clone","","",385,null],[11,"clone","","",386,null],[11,"clone","","",387,null],[11,"clone","","",388,null],[11,"clone","","",389,null],[11,"clone","libc::unix::notbsd::linux::other::b64","",390,null],[11,"clone","","",391,null],[11,"clone","libc::unix::notbsd::linux::other::b64::x86_64","",392,null],[11,"clone","","",393,null],[11,"clone","","",394,null],[11,"clone","","",395,null],[11,"clone","","",396,null],[11,"clone","","",397,null],[11,"clone","","",398,null],[11,"clone","","",399,null],[11,"payload","std::panicking","Returns the payload associated with the panic.",400,null],[11,"location","","Returns information about the location from which the panic originated,\nif available.",400,null],[11,"file","","Returns the name of the source file from which the panic originated.",401,null],[11,"line","","Returns the line number from which the panic originated.",401,null],[11,"next","rustc_unicode::char","",402,null],[11,"next","","",403,null],[11,"clone","","",404,null],[11,"eq","","",156,null],[11,"ne","","",156,null],[11,"clone","","",156,null],[11,"fmt","","",156,null],[11,"next","","",404,null],[11,"size_hint","","",404,null],[11,"unpaired_surrogate","","Returns the unpaired surrogate which caused this error.",156,null],[11,"fmt","","",156,null],[11,"new","core::ptr","Creates a new `Unique`.",405,null],[11,"get","","Dereferences the content.",405,null],[11,"get_mut","","Mutably dereferences the content.",405,null],[11,"deref","","",405,null],[11,"fmt","","",405,null],[11,"new","","Creates a new `Shared`.",406,null],[11,"clone","","",406,null],[11,"deref","","",406,null],[11,"fmt","","",406,null],[11,"borrow","collections::borrow","",220,null],[11,"clone","","",220,null],[11,"to_mut","","Acquires a mutable reference to the owned form of the data.",220,null],[11,"into_owned","","Extracts the owned data.",220,null],[11,"deref","","",220,null],[11,"cmp","","",220,null],[11,"eq","","",220,null],[11,"partial_cmp","","",220,null],[11,"fmt","","",220,null],[11,"fmt","","",220,null],[11,"default","","",220,{"inputs":[],"output":{"name":"cow"}}],[11,"hash","","",220,null],[11,"as_ref","","",220,null],[11,"hash","core::option","",407,null],[11,"fmt","","",407,null],[11,"cmp","","",407,null],[11,"partial_cmp","","",407,null],[11,"lt","","",407,null],[11,"le","","",407,null],[11,"gt","","",407,null],[11,"ge","","",407,null],[11,"eq","","",407,null],[11,"ne","","",407,null],[11,"clone","","",407,null],[11,"is_some","","Returns `true` if the option is a `Some` value",407,null],[11,"is_none","","Returns `true` if the option is a `None` value",407,null],[11,"as_ref","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`",407,null],[11,"as_mut","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;mut T&gt;`",407,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",407,null],[11,"unwrap","","Moves the value `v` out of the `Option&lt;T&gt;` if it is `Some(v)`.",407,null],[11,"unwrap_or","","Returns the contained value or a default.",407,null],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",407,null],[11,"map","","Maps an `Option&lt;T&gt;` to `Option&lt;U&gt;` by applying a function to a contained value",407,null],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",407,null],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",407,null],[11,"ok_or","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",407,null],[11,"ok_or_else","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",407,null],[11,"iter","","Returns an iterator over the possibly contained value.",407,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",407,null],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",407,null],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",407,null],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",407,null],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",407,null],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",407,null],[11,"cloned","","Maps an `Option&lt;&amp;T&gt;` to an `Option&lt;T&gt;` by cloning the contents of the\noption.",407,null],[11,"unwrap_or_default","","Returns the contained value or a default",407,null],[11,"default","","",407,{"inputs":[],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",407,null],[11,"fmt","","",408,null],[11,"next","","",408,null],[11,"size_hint","","",408,null],[11,"next_back","","",408,null],[11,"clone","","",408,null],[11,"fmt","","",409,null],[11,"next","","",409,null],[11,"size_hint","","",409,null],[11,"next_back","","",409,null],[11,"fmt","","",410,null],[11,"clone","","",410,null],[11,"next","","",410,null],[11,"size_hint","","",410,null],[11,"next_back","","",410,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",407,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[11,"new","alloc::rc","Constructs a new `Rc&lt;T&gt;`.",57,{"inputs":[{"name":"t"}],"output":{"name":"rc"}}],[11,"try_unwrap","","Unwraps the contained value if the `Rc&lt;T&gt;` has exactly one strong reference.",57,{"inputs":[{"name":"rc"}],"output":{"name":"result"}}],[11,"would_unwrap","","Checks if `Rc::try_unwrap` would return `Ok`.",57,{"inputs":[{"name":"rc"}],"output":{"name":"bool"}}],[11,"downgrade","","Creates a new `Weak&lt;T&gt;` reference from this value.",57,{"inputs":[{"name":"rc"}],"output":{"name":"weak"}}],[11,"weak_count","","Get the number of weak references to this value.",57,{"inputs":[{"name":"rc"}],"output":{"name":"usize"}}],[11,"strong_count","","Get the number of strong references to this value.",57,{"inputs":[{"name":"rc"}],"output":{"name":"usize"}}],[11,"is_unique","","Returns true if there are no other `Rc` or `Weak&lt;T&gt;` values that share\nthe same inner value.",57,{"inputs":[{"name":"rc"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the contained value if the `Rc&lt;T&gt;` has\none strong reference and no weak references.",57,{"inputs":[{"name":"rc"}],"output":{"name":"option"}}],[11,"make_mut","","Make a mutable reference into the given `Rc&lt;T&gt;` by cloning the inner\ndata if the `Rc&lt;T&gt;` doesn&#39;t have one strong reference and no weak\nreferences.",57,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"deref","","",57,null],[11,"drop","","Drops the `Rc&lt;T&gt;`.",57,null],[11,"clone","","Makes a clone of the `Rc&lt;T&gt;`.",57,null],[11,"default","","Creates a new `Rc&lt;T&gt;`, with the `Default` value for `T`.",57,{"inputs":[],"output":{"name":"rc"}}],[11,"eq","","Equality for two `Rc&lt;T&gt;`s.",57,null],[11,"ne","","Inequality for two `Rc&lt;T&gt;`s.",57,null],[11,"partial_cmp","","Partial comparison for two `Rc&lt;T&gt;`s.",57,null],[11,"lt","","Less-than comparison for two `Rc&lt;T&gt;`s.",57,null],[11,"le","","&#39;Less-than or equal to&#39; comparison for two `Rc&lt;T&gt;`s.",57,null],[11,"gt","","Greater-than comparison for two `Rc&lt;T&gt;`s.",57,null],[11,"ge","","&#39;Greater-than or equal to&#39; comparison for two `Rc&lt;T&gt;`s.",57,null],[11,"cmp","","Comparison for two `Rc&lt;T&gt;`s.",57,null],[11,"hash","","",57,null],[11,"fmt","","",57,null],[11,"fmt","","",57,null],[11,"fmt","","",57,null],[11,"from","","",57,{"inputs":[{"name":"t"}],"output":{"name":"rc"}}],[11,"new","","Constructs a new `Weak&lt;T&gt;` without an accompanying instance of T.",411,{"inputs":[],"output":{"name":"weak"}}],[11,"upgrade","","Upgrades a weak reference to a strong reference.",411,null],[11,"drop","","Drops the `Weak&lt;T&gt;`.",411,null],[11,"clone","","Makes a clone of the `Weak&lt;T&gt;`.",411,null],[11,"fmt","","",411,null],[11,"default","","",411,{"inputs":[],"output":{"name":"weak"}}],[11,"borrow","","",57,null],[11,"as_ref","","",57,null],[11,"new","core::cell","Creates a new `Cell` containing the given value.",412,{"inputs":[{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",412,null],[11,"set","","Sets the contained value.",412,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",412,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",412,null],[11,"clone","","",412,null],[11,"default","","",412,{"inputs":[],"output":{"name":"cell"}}],[11,"eq","","",412,null],[11,"partial_cmp","","",412,null],[11,"lt","","",412,null],[11,"le","","",412,null],[11,"gt","","",412,null],[11,"ge","","",412,null],[11,"cmp","","",412,null],[11,"fmt","","",413,null],[11,"eq","","",413,null],[11,"clone","","",413,null],[11,"new","","Creates a new `RefCell` containing `value`.",414,{"inputs":[{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",414,null],[11,"borrow_state","","Query the current state of this `RefCell`",414,null],[11,"borrow","","Immutably borrows the wrapped value.",414,null],[11,"borrow_mut","","Mutably borrows the wrapped value.",414,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",414,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",414,null],[11,"clone","","",414,null],[11,"default","","",414,{"inputs":[],"output":{"name":"refcell"}}],[11,"eq","","",414,null],[11,"partial_cmp","","",414,null],[11,"lt","","",414,null],[11,"le","","",414,null],[11,"gt","","",414,null],[11,"ge","","",414,null],[11,"cmp","","",414,null],[11,"deref","","",415,null],[11,"clone","","Copies a `Ref`.",415,{"inputs":[{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",415,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",416,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"deref","","",416,null],[11,"deref_mut","","",416,null],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",417,{"inputs":[{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",417,null],[11,"get","","Gets a mutable pointer to the wrapped value.",417,null],[11,"default","","",417,{"inputs":[],"output":{"name":"unsafecell"}}],[11,"hash","core::cmp","",418,null],[11,"fmt","","",418,null],[11,"eq","","",418,null],[11,"clone","","",418,null],[11,"reverse","","Reverse the `Ordering`.",418,null],[11,"cmp","","",418,null],[11,"partial_cmp","","",418,null],[11,"clone","alloc::boxed","",419,null],[11,"pointer","","",420,null],[11,"make_place","","",420,{"inputs":[],"output":{"name":"intermediatebox"}}],[11,"finalize","","",420,null],[11,"finalize","","",147,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"make_place","","",419,null],[11,"drop","","",420,null],[11,"new","","Allocates memory on the heap and then places `x` into it.",147,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"from_raw","","Constructs a box from a raw pointer.",147,null],[11,"into_raw","","Consumes the `Box`, returning the wrapped raw pointer.",147,null],[11,"default","","",147,{"inputs":[],"output":{"name":"box"}}],[11,"default","","",147,{"inputs":[],"output":{"name":"box"}}],[11,"clone","","Returns a new box with a `clone()` of this box&#39;s contents.",147,null],[11,"clone_from","","Copies `source`&#39;s contents into `self` without creating a new allocation.",147,null],[11,"clone","","",147,null],[11,"eq","","",147,null],[11,"ne","","",147,null],[11,"partial_cmp","","",147,null],[11,"lt","","",147,null],[11,"le","","",147,null],[11,"ge","","",147,null],[11,"gt","","",147,null],[11,"cmp","","",147,null],[11,"hash","","",147,null],[11,"from","","",147,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",147,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",147,null],[11,"fmt","","",147,null],[11,"fmt","","",147,null],[11,"fmt","","",147,null],[11,"deref","","",147,null],[11,"deref_mut","","",147,null],[11,"next","","",147,null],[11,"size_hint","","",147,null],[11,"next_back","","",147,null],[11,"call_once","","",147,null],[11,"call_once","","",147,null],[11,"clone","","",147,null],[11,"borrow","","",147,null],[11,"borrow_mut","","",147,null],[11,"as_ref","","",147,null],[11,"as_mut","","",147,null],[11,"clone","collections::str","",421,null],[11,"next","","",421,null],[11,"size_hint","","",421,null],[11,"borrow","collections::string","",221,null],[11,"fmt","core::str::pattern","",422,null],[11,"eq","","",422,null],[11,"ne","","",422,null],[11,"clone","","",422,null],[11,"fmt","","",423,null],[11,"clone","","",423,null],[11,"haystack","","",423,null],[11,"next","","",423,null],[11,"next_match","","",423,null],[11,"next_reject","","",423,null],[11,"next_back","","",423,null],[11,"next_match_back","","",423,null],[11,"next_reject_back","","",423,null],[11,"fmt","","",424,null],[11,"clone","","",424,null],[11,"haystack","","",424,null],[11,"next","","",424,null],[11,"next_match","","",424,null],[11,"next_reject","","",424,null],[11,"next_back","","",424,null],[11,"next_match_back","","",424,null],[11,"next_reject_back","","",424,null],[11,"clone","","",425,null],[11,"fmt","","",425,null],[11,"haystack","","",425,null],[11,"next","","",425,null],[11,"next_match","","",425,null],[11,"next_reject","","",425,null],[11,"next_back","","",425,null],[11,"next_match_back","","",425,null],[11,"next_reject_back","","",425,null],[11,"fmt","","",426,null],[11,"clone","","",426,null],[11,"haystack","","",426,null],[11,"next","","",426,null],[11,"next_match","","",426,null],[11,"next_back","","",426,null],[11,"next_match_back","","",426,null],[11,"hash","core::ops","",427,null],[11,"eq","","",427,null],[11,"clone","","",427,null],[11,"fmt","","",427,null],[11,"hash","","",428,null],[11,"eq","","",428,null],[11,"ne","","",428,null],[11,"clone","","",428,null],[11,"fmt","","",428,null],[11,"contains","","# Examples",428,null],[11,"hash","","",429,null],[11,"eq","","",429,null],[11,"ne","","",429,null],[11,"clone","","",429,null],[11,"fmt","","",429,null],[11,"contains","","# Examples",429,null],[11,"hash","","",430,null],[11,"eq","","",430,null],[11,"ne","","",430,null],[11,"clone","","",430,null],[11,"fmt","","",430,null],[11,"contains","","# Examples",430,null],[11,"hash","","",431,null],[11,"eq","","",431,null],[11,"ne","","",431,null],[11,"clone","","",431,null],[11,"fmt","","",431,null],[11,"contains","","# Examples",431,null],[11,"hash","","",432,null],[11,"eq","","",432,null],[11,"ne","","",432,null],[11,"clone","","",432,null],[11,"fmt","","",432,null],[11,"contains","","# Examples",432,null],[11,"fmt","core::iter::range","",433,null],[11,"clone","","",433,null],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",429,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",428,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",431,null],[11,"next","core::iter::range","",433,null],[11,"size_hint","","",433,null],[11,"next","","",433,null],[11,"size_hint","","",433,null],[11,"next","","",433,null],[11,"size_hint","","",433,null],[11,"next","core::ops","",428,null],[11,"size_hint","","",428,null],[11,"next_back","","",428,null],[11,"next","","",429,null],[11,"next","","",431,null],[11,"size_hint","","",431,null],[11,"next_back","","",431,null],[11,"fmt","core::iter::sources","",434,null],[11,"clone","","",434,null],[11,"next","","",434,null],[11,"size_hint","","",434,null],[11,"next_back","","",434,null],[11,"fmt","","",435,null],[11,"next","","",435,null],[11,"size_hint","","",435,null],[11,"next_back","","",435,null],[11,"len","","",435,null],[11,"clone","","",435,null],[11,"default","","",435,{"inputs":[],"output":{"name":"empty"}}],[11,"fmt","","",436,null],[11,"clone","","",436,null],[11,"next","","",436,null],[11,"size_hint","","",436,null],[11,"next_back","","",436,null],[11,"len","","",436,null],[11,"fmt","core::iter","",437,null],[11,"clone","","",437,null],[11,"next","","",437,null],[11,"size_hint","","",437,null],[11,"next_back","","",437,null],[11,"fmt","","",438,null],[11,"clone","","",438,null],[11,"next","","",438,null],[11,"size_hint","","",438,null],[11,"next_back","","",438,null],[11,"fmt","","",439,null],[11,"clone","","",439,null],[11,"next","","",439,null],[11,"size_hint","","",439,null],[11,"fmt","","",440,null],[11,"clone","","",440,null],[11,"next","","",440,null],[11,"count","","",440,null],[11,"nth","","",440,null],[11,"find","","",440,null],[11,"last","","",440,null],[11,"size_hint","","",440,null],[11,"next_back","","",440,null],[11,"fmt","","",441,null],[11,"clone","","",441,null],[11,"next","","",441,null],[11,"size_hint","","",441,null],[11,"next_back","","",441,null],[11,"clone","","",442,null],[11,"fmt","","",442,null],[11,"next","","",442,null],[11,"size_hint","","",442,null],[11,"next_back","","",442,null],[11,"clone","","",443,null],[11,"fmt","","",443,null],[11,"next","","",443,null],[11,"size_hint","","",443,null],[11,"next_back","","",443,null],[11,"clone","","",444,null],[11,"fmt","","",444,null],[11,"next","","",444,null],[11,"size_hint","","",444,null],[11,"next_back","","",444,null],[11,"fmt","","",445,null],[11,"clone","","",445,null],[11,"next","","# Overflow Behavior",445,null],[11,"size_hint","","",445,null],[11,"nth","","",445,null],[11,"count","","",445,null],[11,"next_back","","",445,null],[11,"fmt","","",446,null],[11,"clone","","",446,null],[11,"next","","",446,null],[11,"count","","",446,null],[11,"nth","","",446,null],[11,"last","","",446,null],[11,"size_hint","","",446,null],[11,"peek","","Returns a reference to the next() value without advancing the iterator.",446,null],[11,"is_empty","","Checks if the iterator has finished iterating.",446,null],[11,"clone","","",447,null],[11,"fmt","","",447,null],[11,"next","","",447,null],[11,"size_hint","","",447,null],[11,"clone","","",448,null],[11,"fmt","","",448,null],[11,"next","","",448,null],[11,"size_hint","","",448,null],[11,"fmt","","",449,null],[11,"clone","","",449,null],[11,"next","","",449,null],[11,"nth","","",449,null],[11,"count","","",449,null],[11,"last","","",449,null],[11,"size_hint","","",449,null],[11,"next_back","","",449,null],[11,"fmt","","",450,null],[11,"clone","","",450,null],[11,"next","","",450,null],[11,"nth","","",450,null],[11,"size_hint","","",450,null],[11,"clone","","",451,null],[11,"fmt","","",451,null],[11,"next","","",451,null],[11,"size_hint","","",451,null],[11,"clone","","",452,null],[11,"fmt","","",452,null],[11,"next","","",452,null],[11,"size_hint","","",452,null],[11,"next_back","","",452,null],[11,"fmt","","",453,null],[11,"clone","","",453,null],[11,"next","","",453,null],[11,"nth","","",453,null],[11,"last","","",453,null],[11,"count","","",453,null],[11,"size_hint","","",453,null],[11,"next_back","","",453,null],[11,"clone","","",454,null],[11,"fmt","","",454,null],[11,"next","","",454,null],[11,"size_hint","","",454,null],[11,"next_back","","",454,null],[11,"borrow","collections::vec","",193,null],[11,"borrow_mut","","",193,null],[11,"hash","core::result","",455,null],[11,"fmt","","",455,null],[11,"cmp","","",455,null],[11,"partial_cmp","","",455,null],[11,"lt","","",455,null],[11,"le","","",455,null],[11,"gt","","",455,null],[11,"ge","","",455,null],[11,"eq","","",455,null],[11,"ne","","",455,null],[11,"clone","","",455,null],[11,"is_ok","","Returns true if the result is `Ok`",455,null],[11,"is_err","","Returns true if the result is `Err`",455,null],[11,"ok","","Converts from `Result&lt;T, E&gt;` to `Option&lt;T&gt;`",455,null],[11,"err","","Converts from `Result&lt;T, E&gt;` to `Option&lt;E&gt;`",455,null],[11,"as_ref","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;T, &amp;E&gt;`",455,null],[11,"as_mut","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;mut T, &amp;mut E&gt;`",455,null],[11,"map","","Maps a `Result&lt;T, E&gt;` to `Result&lt;U, E&gt;` by applying a function to a\ncontained `Ok` value, leaving an `Err` value untouched.",455,null],[11,"map_err","","Maps a `Result&lt;T, E&gt;` to `Result&lt;T, F&gt;` by applying a function to a\ncontained `Err` value, leaving an `Ok` value untouched.",455,null],[11,"iter","","Returns an iterator over the possibly contained value.",455,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",455,null],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",455,null],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",455,null],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",455,null],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",455,null],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",455,null],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",455,null],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",455,null],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",455,null],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",455,null],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",455,null],[11,"fmt","","",456,null],[11,"next","","",456,null],[11,"size_hint","","",456,null],[11,"next_back","","",456,null],[11,"clone","","",456,null],[11,"fmt","","",457,null],[11,"next","","",457,null],[11,"size_hint","","",457,null],[11,"next_back","","",457,null],[11,"fmt","","",458,null],[11,"next","","",458,null],[11,"size_hint","","",458,null],[11,"next_back","","",458,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",455,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","glium","",459,null],[11,"fmt","","",459,null],[11,"is","","Returns true if the boxed type is the same as `T`",459,null],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",459,null],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",459,null],[11,"is","","Forwards to the method defined on the type `Any`.",459,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",459,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",459,null],[11,"hash","core::any","",460,null],[11,"fmt","","",460,null],[11,"eq","","",460,null],[11,"ne","","",460,null],[11,"clone","","",460,null],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",460,{"inputs":[],"output":{"name":"typeid"}}],[11,"clone","core::raw","",461,null],[11,"cmp","collections::string","",221,null],[11,"partial_cmp","","",221,null],[11,"lt","","",221,null],[11,"le","","",221,null],[11,"gt","","",221,null],[11,"ge","","",221,null],[11,"fmt","","",153,null],[11,"fmt","","",154,null],[11,"new","","Creates a new empty `String`.",221,{"inputs":[],"output":{"name":"string"}}],[11,"with_capacity","","Creates a new empty `String` with a particular capacity.",221,{"inputs":[{"name":"usize"}],"output":{"name":"string"}}],[11,"from_utf8","","Converts a vector of bytes to a `String`.",221,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[11,"from_utf8_lossy","","Converts a slice of bytes to a string, including invalid characters.",221,null],[11,"from_utf16","","Decode a UTF-16 encoded vector `v` into a `String`, returning `Err`\nif `v` contains any invalid data.",221,null],[11,"from_utf16_lossy","","Decode a UTF-16 encoded vector `v` into a string, replacing\ninvalid data with the replacement character (U+FFFD).",221,null],[11,"from_raw_parts","","Creates a new `String` from a length, capacity, and pointer.",221,null],[11,"from_utf8_unchecked","","Converts a vector of bytes to a `String` without checking that the\nstring contains valid UTF-8.",221,{"inputs":[{"name":"vec"}],"output":{"name":"string"}}],[11,"into_bytes","","Converts a `String` into a byte vector.",221,null],[11,"as_str","","Extracts a string slice containing the entire string.",221,null],[11,"as_mut_str","","Extracts a string slice containing the entire string.",221,null],[11,"push_str","","Appends a given string slice onto the end of this `String`.",221,null],[11,"capacity","","Returns this `String`&#39;s capacity, in bytes.",221,null],[11,"reserve","","Ensures that this `String`&#39;s capacity is at least `additional` bytes\nlarger than its length.",221,null],[11,"reserve_exact","","Ensures that this `String`&#39;s capacity is `additional` bytes\nlarger than its length.",221,null],[11,"shrink_to_fit","","Shrinks the capacity of this `String` to match its length.",221,null],[11,"push","","Appends the given `char` to the end of this `String`.",221,null],[11,"as_bytes","","Returns a byte slice of this `String`&#39;s contents.",221,null],[11,"truncate","","Shortens this `String` to the specified length.",221,null],[11,"pop","","Removes the last character from the string buffer and returns it.",221,null],[11,"remove","","Removes a `char` from this `String` at a byte position and returns it.",221,null],[11,"insert","","Inserts a character into this `String` at a byte position.",221,null],[11,"as_mut_vec","","Returns a mutable reference to the contents of this `String`.",221,null],[11,"len","","Returns the length of this `String`, in bytes.",221,null],[11,"is_empty","","Returns `true` if this `String` has a length of zero.",221,null],[11,"clear","","Truncates this `String`, removing all contents.",221,null],[11,"drain","","Create a draining iterator that removes the specified range in the string\nand yields the removed chars.",221,null],[11,"into_boxed_str","","Converts this `String` into a `Box&lt;str&gt;`.",221,null],[11,"into_bytes","","Returns the bytes that were attempted to convert to a `String`.",153,null],[11,"utf8_error","","Fetch a `Utf8Error` to get more details about the conversion failure.",153,null],[11,"fmt","","",153,null],[11,"fmt","","",154,null],[11,"clone","","",221,null],[11,"clone_from","","",221,null],[11,"from_iter","","",221,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",221,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",221,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"extend","","",221,null],[11,"extend","","",221,null],[11,"extend","","",221,null],[11,"extend","","",221,null],[11,"eq","","",221,null],[11,"ne","","",221,null],[11,"eq","","",221,null],[11,"ne","","",221,null],[11,"eq","","",221,null],[11,"ne","","",221,null],[11,"eq","collections::borrow","",220,null],[11,"ne","","",220,null],[11,"eq","","",220,null],[11,"ne","","",220,null],[11,"eq","","",220,null],[11,"ne","","",220,null],[11,"eq","collections::string","",221,null],[11,"ne","","",221,null],[11,"default","","",221,{"inputs":[],"output":{"name":"string"}}],[11,"fmt","","",221,null],[11,"fmt","","",221,null],[11,"hash","","",221,null],[11,"add","","",221,null],[11,"index","","",221,null],[11,"index","","",221,null],[11,"index","","",221,null],[11,"index","","",221,null],[11,"index","","",221,null],[11,"index","","",221,null],[11,"index_mut","","",221,null],[11,"index_mut","","",221,null],[11,"index_mut","","",221,null],[11,"index_mut","","",221,null],[11,"index_mut","","",221,null],[11,"index_mut","","",221,null],[11,"deref","","",221,null],[11,"deref_mut","","",221,null],[11,"from_str","","",221,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",155,null],[11,"fmt","","",155,null],[11,"fmt","","",155,null],[11,"eq","","",155,null],[11,"as_ref","","",221,null],[11,"as_ref","","",221,null],[11,"from","","",221,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[11,"from","collections::borrow","",220,{"inputs":[{"name":"str"}],"output":{"name":"cow"}}],[11,"from","","",220,{"inputs":[{"name":"string"}],"output":{"name":"cow"}}],[11,"into","collections::string","",221,null],[11,"write_str","","",221,null],[11,"write_char","","",221,null],[11,"drop","","",462,null],[11,"next","","",462,null],[11,"size_hint","","",462,null],[11,"next_back","","",462,null],[11,"new","collections::vec","Constructs a new, empty `Vec&lt;T&gt;`.",193,{"inputs":[],"output":{"name":"vec"}}],[11,"with_capacity","","Constructs a new, empty `Vec&lt;T&gt;` with the specified capacity.",193,{"inputs":[{"name":"usize"}],"output":{"name":"vec"}}],[11,"from_raw_parts","","Creates a `Vec&lt;T&gt;` directly from the raw components of another vector.",193,null],[11,"capacity","","Returns the number of elements the vector can hold without\nreallocating.",193,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the given `Vec&lt;T&gt;`. The collection may reserve more space to avoid\nfrequent reallocations.",193,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to\nbe inserted in the given `Vec&lt;T&gt;`. Does nothing if the capacity is already\nsufficient.",193,null],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",193,null],[11,"into_boxed_slice","","Converts the vector into Box&lt;[T]&gt;.",193,null],[11,"truncate","","Shorten a vector to be `len` elements long, dropping excess elements.",193,null],[11,"as_slice","","Extracts a slice containing the entire vector.",193,null],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",193,null],[11,"set_len","","Sets the length of a vector.",193,null],[11,"swap_remove","","Removes an element from anywhere in the vector and return it, replacing\nit with the last element.",193,null],[11,"insert","","Inserts an element at position `index` within the vector, shifting all\nelements after it to the right.",193,null],[11,"remove","","Removes and returns the element at position `index` within the vector,\nshifting all elements after it to the left.",193,null],[11,"retain","","Retains only the elements specified by the predicate.",193,null],[11,"push","","Appends an element to the back of a collection.",193,null],[11,"pop","","Removes the last element from a vector and returns it, or `None` if it\nis empty.",193,null],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",193,null],[11,"drain","","Create a draining iterator that removes the specified range in the vector\nand yields the removed items.",193,null],[11,"clear","","Clears the vector, removing all values.",193,null],[11,"len","","Returns the number of elements in the vector.",193,null],[11,"is_empty","","Returns `true` if the vector contains no elements.",193,null],[11,"split_off","","Splits the collection into two at the given index.",193,null],[11,"resize","","Resizes the `Vec` in-place so that `len()` is equal to `new_len`.",193,null],[11,"extend_from_slice","","Clones and appends all elements in a slice to the `Vec`.",193,null],[11,"dedup","","Removes consecutive repeated elements in the vector.",193,null],[11,"clone","","",193,null],[11,"clone_from","","",193,null],[11,"hash","","",193,null],[11,"index","","",193,null],[11,"index_mut","","",193,null],[11,"index","","",193,null],[11,"index","","",193,null],[11,"index","","",193,null],[11,"index","","",193,null],[11,"index","","",193,null],[11,"index","","",193,null],[11,"index_mut","","",193,null],[11,"index_mut","","",193,null],[11,"index_mut","","",193,null],[11,"index_mut","","",193,null],[11,"index_mut","","",193,null],[11,"index_mut","","",193,null],[11,"deref","","",193,null],[11,"deref_mut","","",193,null],[11,"from_iter","","",193,{"inputs":[{"name":"i"}],"output":{"name":"vec"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe vector (from start to end). The vector cannot be used after calling\nthis.",193,null],[11,"extend","","",193,null],[11,"extend","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","collections::borrow","",220,null],[11,"ne","","",220,null],[11,"eq","","",220,null],[11,"ne","","",220,null],[11,"eq","","",220,null],[11,"ne","","",220,null],[11,"eq","collections::vec","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"partial_cmp","","",193,null],[11,"cmp","","",193,null],[11,"drop","","",193,null],[11,"default","","",193,{"inputs":[],"output":{"name":"vec"}}],[11,"fmt","","",193,null],[11,"as_ref","","",193,null],[11,"as_mut","","",193,null],[11,"as_ref","","",193,null],[11,"as_mut","","",193,null],[11,"from","","",193,null],[11,"from","","",193,{"inputs":[{"name":"str"}],"output":{"name":"vec"}}],[11,"from","collections::borrow","",220,null],[11,"from","","",220,{"inputs":[{"name":"vec"}],"output":{"name":"cow"}}],[11,"from_iter","","",220,{"inputs":[{"name":"i"}],"output":{"name":"cow"}}],[11,"next","collections::vec","",463,null],[11,"size_hint","","",463,null],[11,"count","","",463,null],[11,"next_back","","",463,null],[11,"clone","","",463,null],[11,"drop","","",463,null],[11,"next","","",464,null],[11,"size_hint","","",464,null],[11,"next_back","","",464,null],[11,"drop","","",464,null],[11,"hash","core::marker","",465,null],[11,"eq","","",465,null],[11,"partial_cmp","","",465,null],[11,"cmp","","",465,null],[11,"clone","","",465,null],[11,"default","","",465,{"inputs":[],"output":{"name":"phantomdata"}}],[11,"default","core::hash::sip","",466,{"inputs":[],"output":{"name":"siphasher13"}}],[11,"clone","","",466,null],[11,"fmt","","",466,null],[11,"default","","",467,{"inputs":[],"output":{"name":"siphasher24"}}],[11,"clone","","",467,null],[11,"fmt","","",467,null],[11,"default","","",468,{"inputs":[],"output":{"name":"siphasher"}}],[11,"clone","","",468,null],[11,"fmt","","",468,null],[11,"new","","Creates a new `SipHasher` with the two initial keys set to 0.",468,{"inputs":[],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",468,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"new","","Creates a new `SipHasher13` with the two initial keys set to 0.",466,{"inputs":[],"output":{"name":"siphasher13"}}],[11,"new_with_keys","","Creates a `SipHasher13` that is keyed off the provided keys.",466,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher13"}}],[11,"new","","Creates a new `SipHasher24` with the two initial keys set to 0.",467,{"inputs":[],"output":{"name":"siphasher24"}}],[11,"new_with_keys","","Creates a `SipHasher24` that is keyed off the provided keys.",467,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher24"}}],[11,"write","","",468,null],[11,"finish","","",468,null],[11,"write","","",466,null],[11,"finish","","",466,null],[11,"write","","",467,null],[11,"finish","","",467,null],[11,"fmt","core::hash","",469,null],[11,"build_hasher","","",469,null],[11,"clone","","",469,null],[11,"default","","",469,{"inputs":[],"output":{"name":"buildhasherdefault"}}],[11,"fmt","glium::program","",140,null],[11,"clone","","",140,null],[11,"fmt","","",140,null],[11,"description","","",140,null],[11,"fmt","","",141,null],[11,"clone","","",141,null],[11,"fmt","","",141,null],[11,"description","","",141,null],[11,"cause","","",141,null],[11,"from","","",141,{"inputs":[{"name":"programcreationerror"}],"output":{"name":"programchoosercreationerror"}}],[11,"fmt","","",142,null],[11,"clone","","",142,null],[11,"fmt","","",142,null],[11,"description","","",142,null],[11,"from","","",143,{"inputs":[{"name":"sourcecode"}],"output":{"name":"programcreationinput"}}],[11,"from","","",143,{"inputs":[{"name":"binary"}],"output":{"name":"programcreationinput"}}],[0,"uniforms","glium","A uniform is a global variable in your program. In order to draw something, you will need to\ngive `glium` the values of all your uniforms. Objects that implement the `Uniform` trait are\nhere to do that.",null,null],[3,"UniformBuffer","glium::uniforms","Buffer that contains a uniform block.",null,null],[3,"Sampler","","A sampler.",null,null],[12,"0","","",470,null],[12,"1","","",470,null],[3,"SamplerBehavior","","Behavior of a sampler.",null,null],[12,"wrap_function","","Functions to use for the X, Y, and Z coordinates.",471,null],[12,"minify_filter","","Filter to use when minifying the texture.",471,null],[12,"magnify_filter","","Filter to use when magnifying the texture.",471,null],[12,"max_anisotropy","","`1` means no anisotropic filtering, any value above `1` sets the max anisotropy.",471,null],[3,"EmptyUniforms","","Object that can be used when you don&#39;t have any uniforms.",null,null],[3,"UniformsStorage","","Stores uniforms.",null,null],[4,"SamplerWrapFunction","","Function to use for out-of-bounds samples.",null,null],[13,"Repeat","","Samples at coord `x + 1` map to coord `x`.",472,null],[13,"Mirror","","Samples at coord `x + 1` map to coord `1 - x`.",472,null],[13,"Clamp","","Samples at coord `x + 1` map to coord `1`.",472,null],[13,"MirrorClamp","","Same as Mirror, but only for one repetition,",472,null],[4,"MagnifySamplerFilter","","The function that the GPU will use when loading the value of a texel.",null,null],[13,"Nearest","","The nearest texel will be loaded.",473,null],[13,"Linear","","All nearby texels will be loaded and their values will be merged.",473,null],[4,"MinifySamplerFilter","","The function that the GPU will use when loading the value of a texel.",null,null],[13,"Nearest","","The nearest texel will be loaded.",474,null],[13,"Linear","","All nearby texels will be loaded and their values will be merged.",474,null],[13,"NearestMipmapNearest","","The nearest texel of the nearest mipmap will be loaded.",474,null],[13,"LinearMipmapNearest","","Takes the nearest texel from the two nearest mipmaps, and merges them.",474,null],[13,"NearestMipmapLinear","","Same as `Linear`, but from the nearest mipmap.",474,null],[13,"LinearMipmapLinear","","Same as `Linear`, but from the two nearest mipmaps.",474,null],[4,"UniformValue","","Represents a value to bind to a uniform.",null,null],[13,"Block","","Contains a handle to the buffer, and a function that indicates whether this buffer\ncan be binded on a block with the given layout.\nThe last parameter is a sender which must be used to send a `SyncFence` that expires when\nthe buffer has finished being used.",475,null],[13,"Subroutine","","",475,null],[13,"SignedInt","","",475,null],[13,"UnsignedInt","","",475,null],[13,"Float","","",475,null],[13,"Mat2","","2x2 column-major matrix.",475,null],[13,"Mat3","","3x3 column-major matrix.",475,null],[13,"Mat4","","4x4 column-major matrix.",475,null],[13,"Vec2","","",475,null],[13,"Vec3","","",475,null],[13,"Vec4","","",475,null],[13,"IntVec2","","",475,null],[13,"IntVec3","","",475,null],[13,"IntVec4","","",475,null],[13,"UnsignedIntVec2","","",475,null],[13,"UnsignedIntVec3","","",475,null],[13,"UnsignedIntVec4","","",475,null],[13,"Bool","","",475,null],[13,"BoolVec2","","",475,null],[13,"BoolVec3","","",475,null],[13,"BoolVec4","","",475,null],[13,"Double","","",475,null],[13,"DoubleVec2","","",475,null],[13,"DoubleVec3","","",475,null],[13,"DoubleVec4","","",475,null],[13,"DoubleMat2","","",475,null],[13,"DoubleMat3","","",475,null],[13,"DoubleMat4","","",475,null],[13,"Int64","","",475,null],[13,"Int64Vec2","","",475,null],[13,"Int64Vec3","","",475,null],[13,"Int64Vec4","","",475,null],[13,"UnsignedInt64","","",475,null],[13,"UnsignedInt64Vec2","","",475,null],[13,"UnsignedInt64Vec3","","",475,null],[13,"UnsignedInt64Vec4","","",475,null],[13,"Texture1d","","",475,null],[13,"CompressedTexture1d","","",475,null],[13,"SrgbTexture1d","","",475,null],[13,"CompressedSrgbTexture1d","","",475,null],[13,"IntegralTexture1d","","",475,null],[13,"UnsignedTexture1d","","",475,null],[13,"DepthTexture1d","","",475,null],[13,"Texture2d","","",475,null],[13,"CompressedTexture2d","","",475,null],[13,"SrgbTexture2d","","",475,null],[13,"CompressedSrgbTexture2d","","",475,null],[13,"IntegralTexture2d","","",475,null],[13,"UnsignedTexture2d","","",475,null],[13,"DepthTexture2d","","",475,null],[13,"Texture2dMultisample","","",475,null],[13,"SrgbTexture2dMultisample","","",475,null],[13,"IntegralTexture2dMultisample","","",475,null],[13,"UnsignedTexture2dMultisample","","",475,null],[13,"DepthTexture2dMultisample","","",475,null],[13,"Texture3d","","",475,null],[13,"CompressedTexture3d","","",475,null],[13,"SrgbTexture3d","","",475,null],[13,"CompressedSrgbTexture3d","","",475,null],[13,"IntegralTexture3d","","",475,null],[13,"UnsignedTexture3d","","",475,null],[13,"DepthTexture3d","","",475,null],[13,"Texture1dArray","","",475,null],[13,"CompressedTexture1dArray","","",475,null],[13,"SrgbTexture1dArray","","",475,null],[13,"CompressedSrgbTexture1dArray","","",475,null],[13,"IntegralTexture1dArray","","",475,null],[13,"UnsignedTexture1dArray","","",475,null],[13,"DepthTexture1dArray","","",475,null],[13,"Texture2dArray","","",475,null],[13,"CompressedTexture2dArray","","",475,null],[13,"SrgbTexture2dArray","","",475,null],[13,"CompressedSrgbTexture2dArray","","",475,null],[13,"IntegralTexture2dArray","","",475,null],[13,"UnsignedTexture2dArray","","",475,null],[13,"DepthTexture2dArray","","",475,null],[13,"Texture2dMultisampleArray","","",475,null],[13,"SrgbTexture2dMultisampleArray","","",475,null],[13,"IntegralTexture2dMultisampleArray","","",475,null],[13,"UnsignedTexture2dMultisampleArray","","",475,null],[13,"DepthTexture2dMultisampleArray","","",475,null],[13,"Cubemap","","",475,null],[13,"CompressedCubemap","","",475,null],[13,"SrgbCubemap","","",475,null],[13,"CompressedSrgbCubemap","","",475,null],[13,"IntegralCubemap","","",475,null],[13,"UnsignedCubemap","","",475,null],[13,"DepthCubemap","","",475,null],[13,"CubemapArray","","",475,null],[13,"CompressedCubemapArray","","",475,null],[13,"SrgbCubemapArray","","",475,null],[13,"CompressedSrgbCubemapArray","","",475,null],[13,"IntegralCubemapArray","","",475,null],[13,"UnsignedCubemapArray","","",475,null],[13,"DepthCubemapArray","","",475,null],[13,"BufferTexture","","",475,null],[4,"UniformType","","Type of a uniform in a program.",null,null],[13,"Float","","",476,null],[13,"FloatVec2","","",476,null],[13,"FloatVec3","","",476,null],[13,"FloatVec4","","",476,null],[13,"Double","","",476,null],[13,"DoubleVec2","","",476,null],[13,"DoubleVec3","","",476,null],[13,"DoubleVec4","","",476,null],[13,"Int","","",476,null],[13,"IntVec2","","",476,null],[13,"IntVec3","","",476,null],[13,"IntVec4","","",476,null],[13,"UnsignedInt","","",476,null],[13,"UnsignedIntVec2","","",476,null],[13,"UnsignedIntVec3","","",476,null],[13,"UnsignedIntVec4","","",476,null],[13,"Int64","","",476,null],[13,"Int64Vec2","","",476,null],[13,"Int64Vec3","","",476,null],[13,"Int64Vec4","","",476,null],[13,"UnsignedInt64","","",476,null],[13,"UnsignedInt64Vec2","","",476,null],[13,"UnsignedInt64Vec3","","",476,null],[13,"UnsignedInt64Vec4","","",476,null],[13,"Bool","","",476,null],[13,"BoolVec2","","",476,null],[13,"BoolVec3","","",476,null],[13,"BoolVec4","","",476,null],[13,"FloatMat2","","",476,null],[13,"FloatMat3","","",476,null],[13,"FloatMat4","","",476,null],[13,"FloatMat2x3","","",476,null],[13,"FloatMat2x4","","",476,null],[13,"FloatMat3x2","","",476,null],[13,"FloatMat3x4","","",476,null],[13,"FloatMat4x2","","",476,null],[13,"FloatMat4x3","","",476,null],[13,"DoubleMat2","","",476,null],[13,"DoubleMat3","","",476,null],[13,"DoubleMat4","","",476,null],[13,"DoubleMat2x3","","",476,null],[13,"DoubleMat2x4","","",476,null],[13,"DoubleMat3x2","","",476,null],[13,"DoubleMat3x4","","",476,null],[13,"DoubleMat4x2","","",476,null],[13,"DoubleMat4x3","","",476,null],[13,"Sampler1d","","",476,null],[13,"ISampler1d","","",476,null],[13,"USampler1d","","",476,null],[13,"Sampler2d","","",476,null],[13,"ISampler2d","","",476,null],[13,"USampler2d","","",476,null],[13,"Sampler3d","","",476,null],[13,"ISampler3d","","",476,null],[13,"USampler3d","","",476,null],[13,"Sampler1dArray","","",476,null],[13,"ISampler1dArray","","",476,null],[13,"USampler1dArray","","",476,null],[13,"Sampler2dArray","","",476,null],[13,"ISampler2dArray","","",476,null],[13,"USampler2dArray","","",476,null],[13,"SamplerCube","","",476,null],[13,"ISamplerCube","","",476,null],[13,"USamplerCube","","",476,null],[13,"Sampler2dRect","","",476,null],[13,"ISampler2dRect","","",476,null],[13,"USampler2dRect","","",476,null],[13,"Sampler2dRectShadow","","",476,null],[13,"SamplerCubeArray","","",476,null],[13,"ISamplerCubeArray","","",476,null],[13,"USamplerCubeArray","","",476,null],[13,"SamplerBuffer","","",476,null],[13,"ISamplerBuffer","","",476,null],[13,"USamplerBuffer","","",476,null],[13,"Sampler2dMultisample","","",476,null],[13,"ISampler2dMultisample","","",476,null],[13,"USampler2dMultisample","","",476,null],[13,"Sampler2dMultisampleArray","","",476,null],[13,"ISampler2dMultisampleArray","","",476,null],[13,"USampler2dMultisampleArray","","",476,null],[13,"Sampler1dShadow","","",476,null],[13,"Sampler2dShadow","","",476,null],[13,"SamplerCubeShadow","","",476,null],[13,"Sampler1dArrayShadow","","",476,null],[13,"Sampler2dArrayShadow","","",476,null],[13,"SamplerCubeArrayShadow","","",476,null],[13,"Image1d","","",476,null],[13,"IImage1d","","",476,null],[13,"UImage1d","","",476,null],[13,"Image2d","","",476,null],[13,"IImage2d","","",476,null],[13,"UImage2d","","",476,null],[13,"Image3d","","",476,null],[13,"IImage3d","","",476,null],[13,"UImage3d","","",476,null],[13,"Image2dRect","","",476,null],[13,"IImage2dRect","","",476,null],[13,"UImage2dRect","","",476,null],[13,"ImageCube","","",476,null],[13,"IImageCube","","",476,null],[13,"UImageCube","","",476,null],[13,"ImageBuffer","","",476,null],[13,"IImageBuffer","","",476,null],[13,"UImageBuffer","","",476,null],[13,"Image1dArray","","",476,null],[13,"IImage1dArray","","",476,null],[13,"UImage1dArray","","",476,null],[13,"Image2dArray","","",476,null],[13,"IImage2dArray","","",476,null],[13,"UImage2dArray","","",476,null],[13,"Image2dMultisample","","",476,null],[13,"IImage2dMultisample","","",476,null],[13,"UImage2dMultisample","","",476,null],[13,"Image2dMultisampleArray","","",476,null],[13,"IImage2dMultisampleArray","","",476,null],[13,"UImage2dMultisampleArray","","",476,null],[13,"AtomicCounterUint","","",476,null],[4,"LayoutMismatchError","","Error about a block layout mismatch.",null,null],[13,"TypeMismatch","","There is a mismatch in the type of one element.",477,null],[12,"expected","glium::uniforms::LayoutMismatchError","Type expected by the shader.",477,null],[12,"obtained","","Type that you gave.",477,null],[13,"LayoutMismatch","glium::uniforms","The expected layout is totally different from what we have.",477,null],[12,"expected","glium::uniforms::LayoutMismatchError","Layout expected by the shader.",477,null],[12,"obtained","","Layout of the input.",477,null],[13,"OffsetMismatch","glium::uniforms","The type of data is good, but there is a misalignment.",477,null],[12,"expected","glium::uniforms::LayoutMismatchError","Expected offset of a member.",477,null],[12,"obtained","","Offset of the same member in the input.",477,null],[13,"MemberMismatch","glium::uniforms","There is a mismatch in a submember of this layout.",477,null],[12,"member","glium::uniforms::LayoutMismatchError","Name of the field.",477,null],[12,"err","","The sub-error.",477,null],[13,"MissingField","glium::uniforms","A field is missing in either the expected of the input data layout.",477,null],[12,"name","glium::uniforms::LayoutMismatchError","Name of the field.",477,null],[11,"fmt","glium::uniforms","",478,null],[11,"new","","Uploads data in the uniforms buffer.",478,{"inputs":[{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"dynamic","","Uploads data in the uniforms buffer.",478,{"inputs":[{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"persistent","","Uploads data in the uniforms buffer.",478,{"inputs":[{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"immutable","","Uploads data in the uniforms buffer.",478,{"inputs":[{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty buffer.",478,{"inputs":[{"name":"f"}],"output":{"name":"result"}}],[11,"empty_dynamic","","Creates an empty buffer.",478,{"inputs":[{"name":"f"}],"output":{"name":"result"}}],[11,"empty_persistent","","Creates an empty buffer.",478,{"inputs":[{"name":"f"}],"output":{"name":"result"}}],[11,"empty_immutable","","Creates an empty buffer.",478,{"inputs":[{"name":"f"}],"output":{"name":"result"}}],[11,"empty_unsized","","Creates an empty buffer.",478,{"inputs":[{"name":"f"},{"name":"usize"}],"output":{"name":"result"}}],[11,"empty_unsized_dynamic","","Creates an empty buffer.",478,{"inputs":[{"name":"f"},{"name":"usize"}],"output":{"name":"result"}}],[11,"empty_unsized_persistent","","Creates an empty buffer.",478,{"inputs":[{"name":"f"},{"name":"usize"}],"output":{"name":"result"}}],[11,"empty_unsized_immutable","","Creates an empty buffer.",478,{"inputs":[{"name":"f"},{"name":"usize"}],"output":{"name":"result"}}],[11,"deref","","",478,null],[11,"deref_mut","","",478,null],[11,"from","glium::buffer","",68,{"inputs":[{"name":"uniformbuffer"}],"output":{"name":"bufferslice"}}],[11,"from","","",69,{"inputs":[{"name":"uniformbuffer"}],"output":{"name":"buffermutslice"}}],[11,"eq","glium::uniforms","",472,null],[11,"hash","","",472,null],[11,"clone","","",472,null],[11,"fmt","","",472,null],[11,"eq","","",473,null],[11,"hash","","",473,null],[11,"clone","","",473,null],[11,"fmt","","",473,null],[11,"eq","","",474,null],[11,"hash","","",474,null],[11,"clone","","",474,null],[11,"fmt","","",474,null],[11,"eq","","",470,null],[11,"ne","","",470,null],[11,"hash","","",470,null],[11,"fmt","","",470,null],[11,"new","","Builds a new `Sampler` with default parameters.",470,{"inputs":[{"name":"t"}],"output":{"name":"sampler"}}],[11,"wrap_function","","Changes the wrap functions of all three coordinates.",470,null],[11,"minify_filter","","Changes the minifying filter of the sampler.",470,null],[11,"magnify_filter","","Changes the magnifying filter of the sampler.",470,null],[11,"anisotropy","","Changes the magnifying filter of the sampler.",470,null],[11,"clone","","",470,null],[11,"eq","","",471,null],[11,"ne","","",471,null],[11,"hash","","",471,null],[11,"clone","","",471,null],[11,"fmt","","",471,null],[11,"default","","",471,{"inputs":[],"output":{"name":"samplerbehavior"}}],[11,"clone","","",479,null],[11,"fmt","","",479,null],[11,"visit_values","","",479,null],[11,"new","","Builds a new storage with a value.",480,{"inputs":[{"name":"str"},{"name":"t"}],"output":{"name":"uniformsstorage"}}],[11,"add","","Adds a value to the storage.",480,null],[11,"visit_values","","",480,null],[11,"eq","","",476,null],[11,"fmt","","",476,null],[11,"clone","","",476,null],[11,"clone","","",475,null],[11,"is_usable_with","","Returns true if this value can be used with a uniform of the given type.",475,null],[8,"Uniforms","","Object that contains the values of all the uniforms to bind to a program.",null,null],[10,"visit_values","","Calls the parameter once with the name and value of each uniform.",481,null],[8,"AsUniformValue","","Value that can be used as the value of a uniform.",null,null],[10,"as_uniform_value","","Builds a `UniformValue`.",482,null],[8,"UniformBlock","","Objects that are suitable for being inside a uniform block or a SSBO.",null,null],[10,"matches","","Checks whether the uniforms&#39; layout matches the given block if `Self` starts at\nthe given offset.",483,{"inputs":[{"name":"blocklayout"},{"name":"usize"}],"output":{"name":"result"}}],[10,"build_layout","","Builds the `BlockLayout` corresponding to the current object.",483,{"inputs":[{"name":"usize"}],"output":{"name":"blocklayout"}}],[11,"fmt","","",477,null],[11,"clone","","",477,null],[11,"description","","",477,null],[11,"cause","","",477,null],[11,"fmt","","",477,null],[0,"vertex","glium","Contains everything related to vertex sources.",null,null],[3,"VertexBuffer","glium::vertex","A list of vertices loaded in the graphics card&#39;s memory.",null,null],[3,"VertexBufferAny","","A list of vertices loaded in the graphics card&#39;s memory.",null,null],[3,"VertexBufferSlice","","Represents a slice of a `VertexBuffer`.",null,null],[3,"TransformFeedbackSession","","Transform feedback allows you to obtain in a buffer the list of the vertices generated by\nthe vertex shader, geometry shader, or tessellation evaluation shader of your program. This\nis usually used to cache the result in order to draw the vertices multiple times with multiple\ndifferent fragment shaders.",null,null],[3,"EmptyVertexAttributes","","Marker that can be passed instead of a buffer to indicate an empty list of buffers.",null,null],[12,"len","","Number of phantom vertices.",484,null],[3,"EmptyInstanceAttributes","","Marker that can be passed instead of a buffer to indicate an empty list of buffers.",null,null],[12,"len","","Number of phantom vertices.",485,null],[3,"PerInstance","","Marker that instructs glium that the buffer is to be used per instance.",null,null],[4,"BufferCreationError","","Error that can happen when creating a vertex buffer.",null,null],[13,"FormatNotSupported","","The vertex format is not supported by the backend.",486,null],[13,"BufferCreationError","","Error while creating the vertex buffer.",486,null],[4,"AttributeType","","",null,null],[13,"I8","","",487,null],[13,"I8I8","","",487,null],[13,"I8I8I8","","",487,null],[13,"I8I8I8I8","","",487,null],[13,"U8","","",487,null],[13,"U8U8","","",487,null],[13,"U8U8U8","","",487,null],[13,"U8U8U8U8","","",487,null],[13,"I16","","",487,null],[13,"I16I16","","",487,null],[13,"I16I16I16","","",487,null],[13,"I16I16I16I16","","",487,null],[13,"U16","","",487,null],[13,"U16U16","","",487,null],[13,"U16U16U16","","",487,null],[13,"U16U16U16U16","","",487,null],[13,"I32","","",487,null],[13,"I32I32","","",487,null],[13,"I32I32I32","","",487,null],[13,"I32I32I32I32","","",487,null],[13,"U32","","",487,null],[13,"U32U32","","",487,null],[13,"U32U32U32","","",487,null],[13,"U32U32U32U32","","",487,null],[13,"I64","","",487,null],[13,"I64I64","","",487,null],[13,"I64I64I64","","",487,null],[13,"I64I64I64I64","","",487,null],[13,"U64","","",487,null],[13,"U64U64","","",487,null],[13,"U64U64U64","","",487,null],[13,"U64U64U64U64","","",487,null],[13,"F16","","",487,null],[13,"F16F16","","",487,null],[13,"F16F16F16","","",487,null],[13,"F16F16F16F16","","",487,null],[13,"F16x2x2","","2x2 matrix of `f16`s",487,null],[13,"F16x2x3","","2x3 matrix of `f16`s",487,null],[13,"F16x2x4","","2x3 matrix of `f16`s",487,null],[13,"F16x3x2","","3x2 matrix of `f16`s",487,null],[13,"F16x3x3","","3x3 matrix of `f16`s",487,null],[13,"F16x3x4","","3x4 matrix of `f16`s",487,null],[13,"F16x4x2","","4x2 matrix of `f16`s",487,null],[13,"F16x4x3","","4x3 matrix of `f16`s",487,null],[13,"F16x4x4","","4x4 matrix of `f16`s",487,null],[13,"F32","","",487,null],[13,"F32F32","","",487,null],[13,"F32F32F32","","",487,null],[13,"F32F32F32F32","","",487,null],[13,"F32x2x2","","2x2 matrix of `f32`s",487,null],[13,"F32x2x3","","2x3 matrix of `f32`s",487,null],[13,"F32x2x4","","2x3 matrix of `f32`s",487,null],[13,"F32x3x2","","3x2 matrix of `f32`s",487,null],[13,"F32x3x3","","3x3 matrix of `f32`s",487,null],[13,"F32x3x4","","3x4 matrix of `f32`s",487,null],[13,"F32x4x2","","4x2 matrix of `f32`s",487,null],[13,"F32x4x3","","4x3 matrix of `f32`s",487,null],[13,"F32x4x4","","4x4 matrix of `f32`s",487,null],[13,"F64","","Warning: using `f64`s can be very slow.",487,null],[13,"F64F64","","Warning: using `f64`s can be very slow.",487,null],[13,"F64F64F64","","Warning: using `f64`s can be very slow.",487,null],[13,"F64F64F64F64","","Warning: using `f64`s can be very slow.",487,null],[13,"F64x2x2","","2x2 matrix of `f64`s\nWarning: using `f64`s can be very slow.",487,null],[13,"F64x2x3","","2x3 matrix of `f64`s\nWarning: using `f64`s can be very slow.",487,null],[13,"F64x2x4","","2x3 matrix of `f64`s\nWarning: using `f64`s can be very slow.",487,null],[13,"F64x3x2","","3x2 matrix of `f64`s\nWarning: using `f64`s can be very slow.",487,null],[13,"F64x3x3","","3x3 matrix of `f64`s\nWarning: using `f64`s can be very slow.",487,null],[13,"F64x3x4","","3x4 matrix of `f64`s\nWarning: using `f64`s can be very slow.",487,null],[13,"F64x4x2","","4x2 matrix of `f64`s\nWarning: using `f64`s can be very slow.",487,null],[13,"F64x4x3","","4x3 matrix of `f64`s\nWarning: using `f64`s can be very slow.",487,null],[13,"F64x4x4","","4x4 matrix of `f64`s\nWarning: using `f64`s can be very slow.",487,null],[13,"I2I10I10I10Reversed","","From MSB to LSB: two bits for the alpha, ten bits for the blue, ten bits for the green,\nten bits for the red.",487,null],[13,"U2U10U10U10Reversed","","From MSB to LSB: two bits for the alpha, ten bits for the blue, ten bits for the green,\nten bits for the red.",487,null],[13,"I10I10I10I2","","Corresponds to `GL_INT_10_10_10_2`.",487,null],[13,"U10U10U10U2","","Corresponds to `GL_UNSIGNED_INT_10_10_10_2`.",487,null],[13,"F10F11F11UnsignedIntReversed","","Three floating points values turned into unsigned integers./",487,null],[13,"FixedFloatI16U16","","Fixed floating points. A 16bits signed value followed by the 16bits unsigned exponent.",487,null],[4,"VerticesSource","","Describes the source to use for the vertices when drawing.",null,null],[13,"VertexBuffer","","A buffer uploaded in the video memory.",488,null],[13,"Marker","","A marker indicating a &quot;phantom list of attributes&quot;.",488,null],[12,"len","glium::vertex::VerticesSource","Number of attributes.",488,null],[12,"per_instance","","Whether or not this buffer is &quot;per instance&quot; (true) or &quot;per vertex&quot; (false).",488,null],[5,"is_transform_feedback_supported","glium::vertex","Returns true if transform feedback is supported by the OpenGL implementation.",null,{"inputs":[{"name":"f"}],"output":{"name":"bool"}}],[11,"fmt","","",486,null],[11,"clone","","",486,null],[11,"from","","",486,{"inputs":[{"name":"buffercreationerror"}],"output":{"name":"creationerror"}}],[11,"fmt","","",486,null],[11,"description","","",486,null],[11,"cause","","",486,null],[11,"get_id","glium","",489,null],[11,"fmt","","",489,null],[11,"per_instance","glium::vertex","Creates a marker that instructs glium to use multiple instances.",490,null],[11,"new","glium","Builds a new vertex buffer.",489,null],[11,"dynamic","","Builds a new vertex buffer.",489,null],[11,"persistent","","Builds a new vertex buffer.",489,null],[11,"immutable","","Builds a new vertex buffer.",489,null],[11,"empty","","Builds an empty vertex buffer.",489,{"inputs":[{"name":"f"},{"name":"usize"}],"output":{"name":"result"}}],[11,"empty_dynamic","","Builds an empty vertex buffer.",489,{"inputs":[{"name":"f"},{"name":"usize"}],"output":{"name":"result"}}],[11,"empty_persistent","","Builds an empty vertex buffer.",489,{"inputs":[{"name":"f"},{"name":"usize"}],"output":{"name":"result"}}],[11,"empty_immutable","","Builds an empty vertex buffer.",489,{"inputs":[{"name":"f"},{"name":"usize"}],"output":{"name":"result"}}],[11,"new_raw","","Builds a new vertex buffer from an indeterminate data type and bindings.",489,null],[11,"new_raw_dynamic","","Dynamic version of `new_raw`.",489,null],[11,"slice","","Accesses a slice of the buffer.",489,null],[11,"get_bindings","","Returns the associated `VertexFormat`.",489,null],[11,"per_instance","","Creates a marker that instructs glium to use multiple instances.",489,null],[11,"into_vertex_buffer_any","","DEPRECATED: use `.into()` instead.\nDiscard the type information and turn the vertex buffer into a `VertexBufferAny`.",489,null],[11,"from","","",489,{"inputs":[{"name":"buffer"}],"output":{"name":"vertexbuffer"}}],[11,"deref","","",489,null],[11,"deref_mut","","",489,null],[11,"from","glium::buffer","",68,{"inputs":[{"name":"vertexbuffer"}],"output":{"name":"bufferslice"}}],[11,"from","","",69,{"inputs":[{"name":"vertexbuffer"}],"output":{"name":"buffermutslice"}}],[11,"deref","glium::vertex","",490,null],[11,"deref_mut","","",490,null],[11,"from","glium::buffer","",68,{"inputs":[{"name":"vertexbufferslice"}],"output":{"name":"bufferslice"}}],[11,"into_vertices_source","glium::vertex","",490,null],[11,"fmt","","",491,null],[11,"get_elements_size","","Returns the number of bytes between two consecutive elements in the buffer.",491,null],[11,"len","","Returns the number of elements in the buffer.",491,null],[11,"get_bindings","","Returns the associated `VertexFormat`.",491,null],[11,"into_vertex_buffer","","Turns the vertex buffer into a `VertexBuffer` without checking the type.",491,null],[11,"per_instance","","Creates a marker that instructs glium to use multiple instances.",491,null],[11,"from","","",491,{"inputs":[{"name":"vertexbuffer"}],"output":{"name":"vertexbufferany"}}],[11,"from","","",491,{"inputs":[{"name":"buffer"}],"output":{"name":"vertexbufferany"}}],[11,"eq","","",487,null],[11,"fmt","","",487,null],[11,"clone","","",487,null],[11,"is_supported","","Returns true if the backend supports this type of attribute.",487,null],[11,"get_size_bytes","","Returns the size in bytes of a value of this type.",487,null],[11,"get_num_components","","Returns the number of values for this type.",487,null],[11,"fmt","","",492,null],[11,"new","","Builds a new transform feedback session.",492,{"inputs":[{"name":"f"},{"name":"program"},{"name":"buffer"}],"output":{"name":"result"}}],[11,"drop","","",492,null],[6,"VertexFormat","","Describes the layout of each vertex in a vertex buffer.",null,null],[8,"IntoVerticesSource","","Objects that can be used as vertex sources.",null,null],[10,"into_vertices_source","","Builds the `VerticesSource`.",493,null],[8,"MultiVerticesSource","","Objects that describe multiple vertex sources.",null,null],[16,"Iterator","","Iterator that enumerates each source.",494,null],[10,"iter","","Iterates over the `VerticesSource`.",494,null],[8,"Vertex","","Trait for structures that represent a vertex.",null,null],[10,"build_bindings","","Builds the `VertexFormat` representing the layout of this element.",495,{"inputs":[],"output":{"name":"vertexformat"}}],[11,"is_supported","","Returns true if the backend supports this vertex format.",495,{"inputs":[{"name":"c"}],"output":{"name":"bool"}}],[8,"Attribute","","Trait for types that can be used as vertex attributes.",null,null],[10,"get_type","","Get the type of data.",496,{"inputs":[],"output":{"name":"attributetype"}}],[11,"is_supported","","Returns true if the backend supports this type of attribute.",496,{"inputs":[{"name":"c"}],"output":{"name":"bool"}}],[11,"clone","","",488,null],[11,"into_vertices_source","","",488,null],[11,"into_vertices_source","","",484,null],[11,"into_vertices_source","","",485,null],[11,"into_vertices_source","","",497,null],[0,"texture","glium","A texture is an image loaded in video memory, which can be sampled in your shaders.",null,null],[3,"TextureAny","glium::texture","A texture whose type isn&#39;t fixed at compile-time.",null,null],[3,"TextureAnyMipmap","","Represents a specific mipmap of a texture.",null,null],[3,"TextureAnyLayer","","Represents a specific layer of an array texture and 3D textures.",null,null],[3,"TextureAnyLayerMipmap","","Represents a specific layer of a specific mipmap. This is the same as `TextureAnyImage`, except\nfor 3D textures, cubemaps and cubemap arrays.",null,null],[3,"TextureAnyImage","","Represents a specific 2D image of a texture. 1D textures are considered as having a height of 1.",null,null],[3,"RawImage1d","","Represents raw data for a two-dimensional image.",null,null],[12,"data","","A contiguous array of pixel data.",498,null],[12,"width","","Number of pixels per column.",498,null],[12,"format","","Formats of the pixels.",498,null],[3,"RawImage2d","","Represents raw data for a two-dimensional image.",null,null],[12,"data","","A contiguous array of pixel data.",499,null],[12,"width","","Number of pixels per column.",499,null],[12,"height","","Number of pixels per row.",499,null],[12,"format","","Formats of the pixels.",499,null],[3,"RawImage3d","","Represents raw data for a two-dimensional image.",null,null],[12,"data","","A contiguous array of pixel data.",500,null],[12,"width","","Number of pixels per column.",500,null],[12,"height","","Number of pixels per row.",500,null],[12,"depth","","Number of pixels per depth.",500,null],[12,"format","","Formats of the pixels.",500,null],[4,"ClientFormat","","List of client-side pixel formats.",null,null],[13,"U8","","",501,null],[13,"U8U8","","",501,null],[13,"U8U8U8","","",501,null],[13,"U8U8U8U8","","",501,null],[13,"I8","","",501,null],[13,"I8I8","","",501,null],[13,"I8I8I8","","",501,null],[13,"I8I8I8I8","","",501,null],[13,"U16","","",501,null],[13,"U16U16","","",501,null],[13,"U16U16U16","","",501,null],[13,"U16U16U16U16","","",501,null],[13,"I16","","",501,null],[13,"I16I16","","",501,null],[13,"I16I16I16","","",501,null],[13,"I16I16I16I16","","",501,null],[13,"U32","","",501,null],[13,"U32U32","","",501,null],[13,"U32U32U32","","",501,null],[13,"U32U32U32U32","","",501,null],[13,"I32","","",501,null],[13,"I32I32","","",501,null],[13,"I32I32I32","","",501,null],[13,"I32I32I32I32","","",501,null],[13,"U3U3U2","","",501,null],[13,"U5U6U5","","",501,null],[13,"U4U4U4U4","","",501,null],[13,"U5U5U5U1","","",501,null],[13,"U10U10U10U2","","",501,null],[13,"F16","","",501,null],[13,"F16F16","","",501,null],[13,"F16F16F16","","",501,null],[13,"F16F16F16F16","","",501,null],[13,"F32","","",501,null],[13,"F32F32","","",501,null],[13,"F32F32F32","","",501,null],[13,"F32F32F32F32","","",501,null],[4,"TextureFormat","","Format of the internal representation of a texture.",null,null],[13,"UncompressedFloat","","",502,null],[13,"UncompressedIntegral","","",502,null],[13,"UncompressedUnsigned","","",502,null],[13,"Srgb","","",502,null],[13,"CompressedFormat","","",502,null],[13,"CompressedSrgbFormat","","",502,null],[13,"DepthFormat","","",502,null],[13,"StencilFormat","","",502,null],[13,"DepthStencilFormat","","",502,null],[4,"UncompressedFloatFormat","","List of uncompressed pixel formats that contain floating-point-like data.",null,null],[13,"U8","","",503,null],[13,"I8","","",503,null],[13,"U16","","",503,null],[13,"I16","","",503,null],[13,"U8U8","","",503,null],[13,"I8I8","","",503,null],[13,"U16U16","","",503,null],[13,"I16I16","","",503,null],[13,"U3U3U2","","",503,null],[13,"U4U4U4","","",503,null],[13,"U5U5U5","","",503,null],[13,"U8U8U8","","",503,null],[13,"I8I8I8","","",503,null],[13,"U10U10U10","","",503,null],[13,"U12U12U12","","",503,null],[13,"U16U16U16","","",503,null],[13,"I16I16I16","","",503,null],[13,"U2U2U2U2","","",503,null],[13,"U4U4U4U4","","",503,null],[13,"U5U5U5U1","","",503,null],[13,"U8U8U8U8","","",503,null],[13,"I8I8I8I8","","",503,null],[13,"U10U10U10U2","","",503,null],[13,"U12U12U12U12","","",503,null],[13,"U16U16U16U16","","",503,null],[13,"I16I16I16I16","","",503,null],[13,"F16","","",503,null],[13,"F16F16","","",503,null],[13,"F16F16F16","","",503,null],[13,"F16F16F16F16","","",503,null],[13,"F32","","",503,null],[13,"F32F32","","",503,null],[13,"F32F32F32","","",503,null],[13,"F32F32F32F32","","",503,null],[13,"F11F11F10","","",503,null],[13,"F9F9F9","","Uses three components of 9 bits of precision that all share the same exponent.",503,null],[4,"UncompressedIntFormat","","List of uncompressed pixel formats that contain signed integral data.",null,null],[13,"I8","","",504,null],[13,"I16","","",504,null],[13,"I32","","",504,null],[13,"I8I8","","",504,null],[13,"I16I16","","",504,null],[13,"I32I32","","",504,null],[13,"I8I8I8","","",504,null],[13,"I16I16I16","","May not be supported by renderbuffers.",504,null],[13,"I32I32I32","","May not be supported by renderbuffers.",504,null],[13,"I8I8I8I8","","May not be supported by renderbuffers.",504,null],[13,"I16I16I16I16","","",504,null],[13,"I32I32I32I32","","",504,null],[4,"UncompressedUintFormat","","List of uncompressed pixel formats that contain unsigned integral data.",null,null],[13,"U8","","",505,null],[13,"U16","","",505,null],[13,"U32","","",505,null],[13,"U8U8","","",505,null],[13,"U16U16","","",505,null],[13,"U32U32","","",505,null],[13,"U8U8U8","","",505,null],[13,"U16U16U16","","May not be supported by renderbuffers.",505,null],[13,"U32U32U32","","May not be supported by renderbuffers.",505,null],[13,"U8U8U8U8","","May not be supported by renderbuffers.",505,null],[13,"U16U16U16U16","","",505,null],[13,"U32U32U32U32","","",505,null],[13,"U10U10U10U2","","",505,null],[4,"CompressedFormat","","List of compressed texture formats.",null,null],[13,"RgtcFormatU","","Red/green compressed texture with one unsigned component.",506,null],[13,"RgtcFormatI","","Red/green compressed texture with one signed component.",506,null],[13,"RgtcFormatUU","","Red/green compressed texture with two unsigned components.",506,null],[13,"RgtcFormatII","","Red/green compressed texture with two signed components.",506,null],[13,"BptcUnorm4","","BPTC format with four components represented as integers.",506,null],[13,"BptcSignedFloat3","","BPTC format with three components (no alpha) represented as signed floats.",506,null],[13,"BptcUnsignedFloat3","","BPTC format with three components (no alpha) represented as unsigned floats.",506,null],[13,"S3tcDxt1NoAlpha","","S3TC DXT1 without alpha, see https://www.opengl.org/wiki/S3_Texture_Compression.",506,null],[13,"S3tcDxt1Alpha","","S3TC DXT1 with 1-bit alpha, see https://www.opengl.org/wiki/S3_Texture_Compression.",506,null],[13,"S3tcDxt3Alpha","","S3TC DXT3, see https://www.opengl.org/wiki/S3_Texture_Compression.",506,null],[13,"S3tcDxt5Alpha","","S3TC DXT5, see https://www.opengl.org/wiki/S3_Texture_Compression.",506,null],[4,"DepthFormat","","List of formats available for depth textures.",null,null],[13,"I16","","",507,null],[13,"I24","","",507,null],[13,"I32","","May not be supported by all hardware.",507,null],[13,"F32","","",507,null],[4,"DepthStencilFormat","","List of formats available for depth-stencil textures.",null,null],[13,"I24I8","","",508,null],[13,"F32I8","","",508,null],[4,"StencilFormat","","List of formats available for stencil textures.",null,null],[13,"I1","","",509,null],[13,"I4","","",509,null],[13,"I8","","",509,null],[13,"I16","","",509,null],[4,"CompressedSrgbFormat","","List of compressed pixel formats in the sRGB color space.",null,null],[13,"Bptc","","BPTC format. sRGB with alpha. Also called `BC7` by DirectX.",510,null],[13,"S3tcDxt1NoAlpha","","",510,null],[13,"S3tcDxt1Alpha","","",510,null],[13,"S3tcDxt3Alpha","","",510,null],[13,"S3tcDxt5Alpha","","",510,null],[4,"SrgbFormat","","List of uncompressed pixel formats that contain floating-point data in the sRGB color space.",null,null],[13,"U8U8U8","","",511,null],[13,"U8U8U8U8","","",511,null],[4,"Dimensions","","Type of a texture.",null,null],[13,"Texture1d","","",512,null],[12,"width","glium::texture::Dimensions","",512,null],[13,"Texture1dArray","glium::texture","",512,null],[12,"width","glium::texture::Dimensions","",512,null],[12,"array_size","","",512,null],[13,"Texture2d","glium::texture","",512,null],[12,"width","glium::texture::Dimensions","",512,null],[12,"height","","",512,null],[13,"Texture2dArray","glium::texture","",512,null],[12,"width","glium::texture::Dimensions","",512,null],[12,"height","","",512,null],[12,"array_size","","",512,null],[13,"Texture2dMultisample","glium::texture","",512,null],[12,"width","glium::texture::Dimensions","",512,null],[12,"height","","",512,null],[12,"samples","","",512,null],[13,"Texture2dMultisampleArray","glium::texture","",512,null],[12,"width","glium::texture::Dimensions","",512,null],[12,"height","","",512,null],[12,"array_size","","",512,null],[12,"samples","","",512,null],[13,"Texture3d","glium::texture","",512,null],[12,"width","glium::texture::Dimensions","",512,null],[12,"height","","",512,null],[12,"depth","","",512,null],[13,"Cubemap","glium::texture","",512,null],[12,"dimension","glium::texture::Dimensions","",512,null],[13,"CubemapArray","glium::texture","",512,null],[12,"dimension","glium::texture::Dimensions","",512,null],[12,"array_size","","",512,null],[4,"InternalFormat","glium::texture","Internal format of a texture.",null,null],[13,"OneComponent","","The format has one component.",513,null],[12,"ty1","glium::texture::InternalFormat","Type of the first component of the format.",513,null],[12,"bits1","","Number of bits of the first component.",513,null],[13,"TwoComponents","glium::texture","The format has two components.",513,null],[12,"ty1","glium::texture::InternalFormat","Type of the first component of the format.",513,null],[12,"bits1","","Number of bits of the first component.",513,null],[12,"ty2","","Type of the second component.",513,null],[12,"bits2","","Number of bits of the second component.",513,null],[13,"ThreeComponents","glium::texture","The format has three components.",513,null],[12,"ty1","glium::texture::InternalFormat","Type of the first component of the format.",513,null],[12,"bits1","","Number of bits of the first component.",513,null],[12,"ty2","","Type of the second component.",513,null],[12,"bits2","","Number of bits of the second component.",513,null],[12,"ty3","","Type of the third component.",513,null],[12,"bits3","","Number of bits of the third component.",513,null],[13,"FourComponents","glium::texture","The format has four components.",513,null],[12,"ty1","glium::texture::InternalFormat","Type of the first component of the format.",513,null],[12,"bits1","","Number of bits of the first component.",513,null],[12,"ty2","","Type of the second component.",513,null],[12,"bits2","","Number of bits of the second component.",513,null],[12,"ty3","","Type of the third component.",513,null],[12,"bits3","","Number of bits of the third component.",513,null],[12,"ty4","","Type of the fourth component.",513,null],[12,"bits4","","Number of bits of the fourth component.",513,null],[4,"InternalFormatType","glium::texture","Format of a component of an internal format.",null,null],[13,"SignedNormalized","","Floating point texture with signed components.",514,null],[13,"UnsignedNormalized","","Floating point texture with unsigned components.",514,null],[13,"Float","","Floating point texture with floats.",514,null],[13,"Int","","Integral texture.",514,null],[13,"UnsignedInt","","Unsigned texture.",514,null],[4,"GetFormatError","","Error that can happen when retrieving the internal format of a texture.",null,null],[13,"NotSupported","","The backend doesn&#39;t support retrieving the internal format.",515,null],[4,"CubeLayer","","Represents a layer of a cubemap.",null,null],[13,"PositiveX","","",516,null],[13,"NegativeX","","",516,null],[13,"PositiveY","","",516,null],[13,"NegativeY","","",516,null],[13,"PositiveZ","","",516,null],[13,"NegativeZ","","",516,null],[4,"TextureKind","","Represents a kind of texture.",null,null],[13,"Float","","",517,null],[13,"Integral","","",517,null],[13,"Unsigned","","",517,null],[13,"Depth","","",517,null],[13,"Stencil","","",517,null],[13,"DepthStencil","","",517,null],[4,"MipmapsOption","","Describes what to do about mipmaps during texture creation.",null,null],[13,"NoMipmap","","No mipmap will be allocated or generated.",518,null],[13,"EmptyMipmaps","","Allocates space for all the possible amount of mipmaps given the texture dimensions.",518,null],[13,"EmptyMipmapsMax","","Allocates space for the specified amount of mipmaps (excluding the top level) but does not\ngenerate mipmaps.",518,null],[13,"AutoGeneratedMipmaps","","Allocates and generates mipmaps for all the possible levels given the texture dimensions.",518,null],[13,"AutoGeneratedMipmapsMax","","Allocates and generates mipmaps for the specified amount of mipmaps (excluding the top level)\nthe possible levels given the texture dimensions.",518,null],[4,"CompressedMipmapsOption","","Describes what to do about mipmaps during compressed texture creation.",null,null],[13,"NoMipmap","","No mipmaps will be allocated or generated.",519,null],[13,"EmptyMipmaps","","Allocates space for all the possible amount of mipmaps given the texture dimensions.",519,null],[13,"EmptyMipmapsMax","","Allocates space for the specified amount of mipmaps (excluding the top level) but does not\ngenerate mipmaps.",519,null],[4,"TextureCreationError","","Error that can happen when creating a texture.",null,null],[13,"FormatNotSupported","","The requested format is not supported by the backend.",520,null],[13,"DimensionsNotSupported","","The requested texture dimensions are not supported.",520,null],[13,"TypeNotSupported","","The texture format is not supported by the backend.",520,null],[5,"is_texture_1d_supported","","Returns true is one-dimensional textures are supported.",null,{"inputs":[{"name":"c"}],"output":{"name":"bool"}}],[5,"is_texture_2d_supported","","Returns true is two-dimensional textures are supported.",null,{"inputs":[{"name":"c"}],"output":{"name":"bool"}}],[5,"is_texture_3d_supported","","Returns true is three-dimensional textures are supported.",null,{"inputs":[{"name":"c"}],"output":{"name":"bool"}}],[5,"is_texture_1d_array_supported","","Returns true is one-dimensional texture arrays are supported.",null,{"inputs":[{"name":"c"}],"output":{"name":"bool"}}],[5,"is_texture_2d_array_supported","","Returns true is two-dimensional texture arrays are supported.",null,{"inputs":[{"name":"c"}],"output":{"name":"bool"}}],[5,"is_texture_2d_multisample_supported","","Returns true is two-dimensional multisample textures are supported.",null,{"inputs":[{"name":"c"}],"output":{"name":"bool"}}],[5,"is_texture_2d_multisample_array_supported","","Returns true is two-dimensional multisample texture arrays are supported.",null,{"inputs":[{"name":"c"}],"output":{"name":"bool"}}],[5,"is_cubemaps_supported","","Returns true is cubemaps are supported.",null,{"inputs":[{"name":"c"}],"output":{"name":"bool"}}],[5,"is_cubemap_arrays_supported","","Returns true is cubemap arrays are supported.",null,{"inputs":[{"name":"c"}],"output":{"name":"bool"}}],[0,"bindless","","Without bindless textures, using a texture in a shader requires binding the texture to a specific\nbind point before drawing. This not only slows down rendering, but may also prevent you from\ngrouping multiple draw calls into one because of the limitation to the number of available\ntexture units.",null,null],[3,"ResidentTexture","glium::texture::bindless","A texture that is resident in video memory. This allows you to use bindless textures in your\nshaders.",null,null],[3,"TextureHandle","","Represents a handle to a texture. Contains a raw pointer to a texture that is hidden from you.",null,null],[3,"BindlessTexturesNotSupportedError","","Bindless textures are not supported.",null,null],[11,"new","","Takes ownership of the given texture and makes it resident.",521,{"inputs":[{"name":"textureany"}],"output":{"name":"result"}}],[11,"into_inner","","Unwraps the texture and restores it.",521,null],[11,"deref","","",521,null],[11,"deref_mut","","",521,null],[11,"drop","","",521,null],[11,"clone","","",522,null],[11,"new","","Builds a new handle.",522,{"inputs":[{"name":"residenttexture"},{"name":"samplerbehavior"}],"output":{"name":"texturehandle"}}],[11,"set","","Sets the value to the given texture.",522,null],[11,"as_uniform_value","","",522,null],[11,"matches","","",522,{"inputs":[{"name":"blocklayout"},{"name":"usize"}],"output":{"name":"result"}}],[11,"build_layout","","",522,{"inputs":[{"name":"usize"}],"output":{"name":"blocklayout"}}],[11,"clone","","",523,null],[11,"fmt","","",523,null],[0,"buffer_texture","glium::texture","A `BufferTexture` is a special kind of one-dimensional texture that gets its data from a buffer.\nBuffer textures have very limited capabilities compared to other texture types.",null,null],[3,"BufferTexture","glium::texture::buffer_texture","A one-dimensional texture that gets its data from a buffer.",null,null],[3,"BufferTextureRef","","Holds a reference to a `BufferTexture`.",null,null],[4,"TextureCreationError","","Error that can happen while building the texture part of a buffer texture.",null,null],[13,"NotSupported","","Buffer textures are not supported at all.",524,null],[13,"FormatNotSupported","","The requested format is not supported in combination with the given texture buffer type.",524,null],[13,"TooLarge","","The size of the buffer that you are trying to bind exceeds `GL_MAX_TEXTURE_BUFFER_SIZE`.",524,null],[4,"CreationError","","Error that can happen while building a buffer texture.",null,null],[13,"BufferCreationError","","Failed to create the buffer.",525,null],[13,"TextureCreationError","","Failed to create the texture.",525,null],[4,"BufferTextureType","","Type of a buffer texture.",null,null],[13,"Float","","The texture will behave as if it contained floating-point data. It can be sampled with\na `samplerBuffer` in your GLSL code.",526,null],[13,"Integral","","The texture will behave as if it contained signed integral data. It can be sampled with\na `isamplerBuffer` in your GLSL code.",526,null],[13,"Unsigned","","The texture will behave as if it contained unsigned integral data. It can be sampled with\na `usamplerBuffer` in your GLSL code.",526,null],[4,"TextureBufferContentType","","",null,null],[13,"U8","","",527,null],[13,"I8","","",527,null],[13,"U16","","",527,null],[13,"I16","","",527,null],[13,"U32","","",527,null],[13,"I32","","",527,null],[13,"U8U8","","",527,null],[13,"I8I8","","",527,null],[13,"U16U16","","",527,null],[13,"I16I16","","",527,null],[13,"U32U32","","",527,null],[13,"I32I32","","",527,null],[13,"U32U32U32","","",527,null],[13,"I32I32I32","","",527,null],[13,"U8U8U8U8","","",527,null],[13,"I8I8I8I8","","",527,null],[13,"U16U16U16U16","","",527,null],[13,"I16I16I16I16","","",527,null],[13,"U32U32U32U32","","",527,null],[13,"I32I32I32I32","","",527,null],[13,"F16","","",527,null],[13,"F32","","",527,null],[13,"F16F16","","",527,null],[13,"F32F32","","",527,null],[13,"F32F32F32","","",527,null],[13,"F16F16F16F16","","",527,null],[13,"F32F32F32F32","","",527,null],[8,"TextureBufferContent","","Trait for data types that can be interpreted by a buffer texture.",null,null],[10,"get_type","","Returns the enumeration corresponding to elements of this data type.",528,{"inputs":[],"output":{"name":"texturebuffercontenttype"}}],[11,"fmt","","",524,null],[11,"clone","","",524,null],[11,"fmt","","",524,null],[11,"description","","",524,null],[11,"fmt","","",525,null],[11,"clone","","",525,null],[11,"fmt","","",525,null],[11,"description","","",525,null],[11,"cause","","",525,null],[11,"from","","",525,{"inputs":[{"name":"buffercreationerror"}],"output":{"name":"creationerror"}}],[11,"from","","",525,{"inputs":[{"name":"texturecreationerror"}],"output":{"name":"creationerror"}}],[11,"eq","","",526,null],[11,"fmt","","",526,null],[11,"clone","","",526,null],[11,"new","","Builds a new texture buffer from data.",529,null],[11,"dynamic","","Builds a new texture buffer from data.",529,null],[11,"persistent","","Builds a new texture buffer from data.",529,null],[11,"immutable","","Builds a new texture buffer from data.",529,null],[11,"empty","","Builds a new empty buffer buffer.",529,{"inputs":[{"name":"f"},{"name":"usize"},{"name":"buffertexturetype"}],"output":{"name":"result"}}],[11,"empty_dynamic","","Builds a new empty buffer buffer.",529,{"inputs":[{"name":"f"},{"name":"usize"},{"name":"buffertexturetype"}],"output":{"name":"result"}}],[11,"empty_persistent","","Builds a new empty buffer buffer.",529,{"inputs":[{"name":"f"},{"name":"usize"},{"name":"buffertexturetype"}],"output":{"name":"result"}}],[11,"empty_immutable","","Builds a new empty buffer buffer.",529,{"inputs":[{"name":"f"},{"name":"usize"},{"name":"buffertexturetype"}],"output":{"name":"result"}}],[11,"from_buffer","","Builds a new buffer texture by taking ownership of a buffer.",529,{"inputs":[{"name":"f"},{"name":"buffer"},{"name":"buffertexturetype"}],"output":{"name":"result"}}],[11,"deref","","",529,null],[11,"deref_mut","","",529,null],[11,"drop","","",529,null],[11,"as_buffer_texture_ref","","Builds a `BufferTextureRef`.",529,null],[11,"as_uniform_value","","",529,null],[11,"clone","","",530,null],[11,"get_texture_type","","Return the type of the texture.",530,null],[0,"pixel_buffer","glium::texture","Pixel buffers are buffers that contain two-dimensional texture data.",null,null],[3,"PixelBuffer","glium::texture::pixel_buffer","Buffer that stores the content of a texture.",null,null],[11,"new_empty","","Builds a new buffer with an uninitialized content.",531,{"inputs":[{"name":"f"},{"name":"usize"}],"output":{"name":"pixelbuffer"}}],[11,"read_as_texture_2d","","Reads the content of the pixel buffer.",531,null],[11,"deref","","",531,null],[11,"deref_mut","","",531,null],[11,"get_id","","",531,null],[11,"eq","glium::texture","",512,null],[11,"ne","","",512,null],[11,"fmt","","",512,null],[11,"clone","","",512,null],[11,"get_width","","Returns the width of the texture.",532,null],[11,"get_height","","Returns the height of the texture.",532,null],[11,"get_depth","","Returns the depth of the texture.",532,null],[11,"kind","","Returns the kind of texture.",532,null],[11,"dimensions","","Returns the dimensions of the texture.",532,null],[11,"get_array_size","","Returns the array size of the texture.",532,null],[11,"get_samples","","Returns the number of samples of the texture if it is a multisampling texture.",532,null],[11,"first_layer","","Returns a structure that represents the first layer of the texture. All textures have a\nfirst layer.",532,null],[11,"layer","","Returns a structure that represents a specific layer of the texture.",532,null],[11,"get_texture_type","","Returns the type of the texture (1D, 2D, 3D, etc.).",532,null],[11,"get_internal_format","","Determines the internal format of this texture.",532,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",532,null],[11,"main_level","","Returns a structure that represents the main mipmap level of the texture.",532,null],[11,"mipmap","","Returns a structure that represents a specific mipmap of the texture.",532,null],[11,"get_id","","",532,null],[11,"fmt","","",532,null],[11,"drop","","",532,null],[11,"clone","","",533,null],[11,"get_texture","","Returns the texture.",533,null],[11,"get_samples","","Returns the number of samples of the texture.",533,null],[11,"get_layer","","Returns the layer of the texture.",533,null],[11,"main_level","","Returns a structure that represents the main mipmap level of this layer of the texture.",533,null],[11,"mipmap","","Returns a structure that represents a specific mipmap of this layer of the texture.",533,null],[11,"clone","","",534,null],[11,"get_width","","Returns the width of the mipmap.",534,null],[11,"get_height","","Returns the height of the mipmap.",534,null],[11,"get_depth","","Returns the depth of the mipmap.",534,null],[11,"get_samples","","Returns the number of samples of the texture.",534,null],[11,"get_texture","","Returns the texture.",534,null],[11,"get_level","","Returns the level of the texture.",534,null],[11,"first_layer","","Returns a structure that represents the first layer of this mipmap of the texture. All\ntextures have a first layer.",534,null],[11,"layer","","Returns a structure that represents a specific layer of this mipmap of the texture.",534,null],[11,"get_array_size","","Returns the array size of the texture.",534,null],[11,"raw_upload_from_pixel_buffer","","Uploads data to the texture from a buffer.",534,null],[11,"raw_upload_from_pixel_buffer_inverted","","Uploads data to the texture from a buffer. The R, G and B components are flipped.",534,null],[11,"clone","","",535,null],[11,"get_texture","","Returns the texture.",535,null],[11,"get_level","","Returns the level of the texture.",535,null],[11,"get_layer","","Returns the layer of the texture.",535,null],[11,"get_width","","Returns the width of this texture slice.",535,null],[11,"get_height","","Returns the height of this texture slice.",535,null],[11,"get_samples","","Returns the number of samples of the texture.",535,null],[11,"into_image","","Turns this into an image.",535,null],[11,"clone","","",536,null],[11,"get_texture","","Returns the texture.",536,null],[11,"get_level","","Returns the level of the texture.",536,null],[11,"get_layer","","Returns the layer of the texture.",536,null],[11,"get_cubemap_layer","","Returns the cubemap layer of this image, or `None` if the texture is not a cubemap.",536,null],[11,"get_width","","Returns the width of this texture slice.",536,null],[11,"get_height","","Returns the height of this texture slice.",536,null],[11,"get_samples","","Returns the number of samples of the texture.",536,null],[11,"raw_read","","Reads the content of the image.",536,null],[11,"raw_read_to_pixel_buffer","","Reads the content of the image to a pixel buffer.",536,null],[11,"raw_clear_buffer","","Clears the content of the texture to a specific value.",536,null],[11,"fmt","","",515,null],[11,"clone","","",515,null],[11,"fmt","","",515,null],[11,"description","","",515,null],[11,"eq","","",513,null],[11,"ne","","",513,null],[11,"fmt","","",513,null],[11,"clone","","",513,null],[11,"get_total_bits","","Returns the total number of bits of this format.",513,null],[11,"eq","","",514,null],[11,"fmt","","",514,null],[11,"clone","","",514,null],[0,"texture1d","","Contains the implementation of `Texture1d`.",null,null],[3,"Texture1d","glium::texture::texture1d","A one-dimensional texture  containing floating-point data.",null,null],[3,"Texture1dMipmap","","Represents a single mipmap level of a `Texture1d`.",null,null],[11,"get_id","","",537,null],[11,"fmt","","",537,null],[11,"deref","","",537,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::texture1d","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",537,null],[11,"get_internal_format","","Determines the internal format of this texture.",537,null],[11,"new","","Builds a new texture by uploading data.",537,{"inputs":[{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",537,{"inputs":[{"name":"f"},{"name":"t"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",537,{"inputs":[{"name":"f"},{"name":"t"},{"name":"uncompressedfloatformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",537,{"inputs":[{"name":"f"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",537,{"inputs":[{"name":"f"},{"name":"uncompressedfloatformat"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",537,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",537,{"inputs":[{"name":"f"},{"name":"uncompressedfloatformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"texture1d"}}],[11,"width","","Returns the width of that image.",537,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",537,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",537,null],[11,"mipmap","","Access a single mipmap level of this texture.",537,null],[11,"main_level","","Access the main mipmap level of this texture.",537,null],[11,"clone","","",538,null],[11,"deref","","",538,null],[11,"width","","Returns the width of that image.",538,null],[11,"get_texture","","Returns the corresponding texture.",538,null],[11,"get_level","","Returns the texture level.",538,null],[11,"into","","",538,null],[11,"to_color_attachment","","",538,null],[0,"compressed_texture1d","glium::texture","Contains the implementation of `CompressedTexture1d`.",null,null],[3,"CompressedTexture1d","glium::texture::compressed_texture1d","A compressed one-dimensional texture  containing floating-point data.",null,null],[3,"CompressedTexture1dMipmap","","Represents a single mipmap level of a `CompressedTexture1d`.",null,null],[11,"get_id","","",539,null],[11,"fmt","","",539,null],[11,"deref","","",539,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::compressed_texture1d","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",539,null],[11,"get_internal_format","","Determines the internal format of this texture.",539,null],[11,"new","","Builds a new texture by uploading data.",539,{"inputs":[{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",539,{"inputs":[{"name":"f"},{"name":"t"},{"name":"compressedmipmapsoption"}],"output":{"name":"result"}}],[11,"with_compressed_data","","Builds a new texture with a specific format. The input data must also be of the\nspecified compressed format.",539,null],[11,"with_format","","Builds a new texture with a specific format.",539,{"inputs":[{"name":"f"},{"name":"t"},{"name":"compressedformat"},{"name":"compressedmipmapsoption"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",539,{"inputs":[{"name":"f"},{"name":"compressedformat"},{"name":"compressedmipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",539,{"inputs":[{"name":"f"},{"name":"compressedformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"compressedtexture1d"}}],[11,"width","","Returns the width of that image.",539,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",539,null],[11,"read_compressed_data","","Reads the content of the texture to RAM without decompressing it before.",539,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",539,null],[11,"mipmap","","Access a single mipmap level of this texture.",539,null],[11,"main_level","","Access the main mipmap level of this texture.",539,null],[11,"clone","","",540,null],[11,"deref","","",540,null],[11,"width","","Returns the width of that image.",540,null],[11,"read_compressed_data","","Reads the content of the texture level to RAM without decompressing it before.",540,null],[11,"get_texture","","Returns the corresponding texture.",540,null],[11,"get_level","","Returns the texture level.",540,null],[11,"into","","",540,null],[0,"srgb_texture1d","glium::texture","Contains the implementation of `SrgbTexture1d`.",null,null],[3,"SrgbTexture1d","glium::texture::srgb_texture1d","A one-dimensional texture  containing sRGB floating-point data.",null,null],[3,"SrgbTexture1dMipmap","","Represents a single mipmap level of a `SrgbTexture1d`.",null,null],[11,"get_id","","",541,null],[11,"fmt","","",541,null],[11,"deref","","",541,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::srgb_texture1d","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",541,null],[11,"get_internal_format","","Determines the internal format of this texture.",541,null],[11,"new","","Builds a new texture by uploading data.",541,{"inputs":[{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",541,{"inputs":[{"name":"f"},{"name":"t"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",541,{"inputs":[{"name":"f"},{"name":"t"},{"name":"srgbformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",541,{"inputs":[{"name":"f"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",541,{"inputs":[{"name":"f"},{"name":"srgbformat"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",541,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",541,{"inputs":[{"name":"f"},{"name":"srgbformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"srgbtexture1d"}}],[11,"width","","Returns the width of that image.",541,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",541,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",541,null],[11,"mipmap","","Access a single mipmap level of this texture.",541,null],[11,"main_level","","Access the main mipmap level of this texture.",541,null],[11,"clone","","",542,null],[11,"deref","","",542,null],[11,"width","","Returns the width of that image.",542,null],[11,"get_texture","","Returns the corresponding texture.",542,null],[11,"get_level","","Returns the texture level.",542,null],[11,"into","","",542,null],[11,"to_color_attachment","","",542,null],[0,"compressed_srgb_texture1d","glium::texture","Contains the implementation of `CompressedSrgbTexture1d`.",null,null],[3,"CompressedSrgbTexture1d","glium::texture::compressed_srgb_texture1d","A compressed one-dimensional texture  containing sRGB floating-point data.",null,null],[3,"CompressedSrgbTexture1dMipmap","","Represents a single mipmap level of a `CompressedSrgbTexture1d`.",null,null],[11,"get_id","","",543,null],[11,"fmt","","",543,null],[11,"deref","","",543,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::compressed_srgb_texture1d","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",543,null],[11,"get_internal_format","","Determines the internal format of this texture.",543,null],[11,"new","","Builds a new texture by uploading data.",543,{"inputs":[{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",543,{"inputs":[{"name":"f"},{"name":"t"},{"name":"compressedmipmapsoption"}],"output":{"name":"result"}}],[11,"with_compressed_data","","Builds a new texture with a specific format. The input data must also be of the\nspecified compressed format.",543,null],[11,"with_format","","Builds a new texture with a specific format.",543,{"inputs":[{"name":"f"},{"name":"t"},{"name":"compressedsrgbformat"},{"name":"compressedmipmapsoption"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",543,{"inputs":[{"name":"f"},{"name":"compressedsrgbformat"},{"name":"compressedmipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",543,{"inputs":[{"name":"f"},{"name":"compressedsrgbformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"compressedsrgbtexture1d"}}],[11,"width","","Returns the width of that image.",543,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",543,null],[11,"read_compressed_data","","Reads the content of the texture to RAM without decompressing it before.",543,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",543,null],[11,"mipmap","","Access a single mipmap level of this texture.",543,null],[11,"main_level","","Access the main mipmap level of this texture.",543,null],[11,"clone","","",544,null],[11,"deref","","",544,null],[11,"width","","Returns the width of that image.",544,null],[11,"read_compressed_data","","Reads the content of the texture level to RAM without decompressing it before.",544,null],[11,"get_texture","","Returns the corresponding texture.",544,null],[11,"get_level","","Returns the texture level.",544,null],[11,"into","","",544,null],[0,"integral_texture1d","glium::texture","Contains the implementation of `IntegralTexture1d`.",null,null],[3,"IntegralTexture1d","glium::texture::integral_texture1d","A one-dimensional texture  containing signed integral data.",null,null],[3,"IntegralTexture1dMipmap","","Represents a single mipmap level of a `IntegralTexture1d`.",null,null],[11,"get_id","","",545,null],[11,"fmt","","",545,null],[11,"deref","","",545,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::integral_texture1d","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",545,null],[11,"get_internal_format","","Determines the internal format of this texture.",545,null],[11,"new","","Builds a new texture by uploading data.",545,{"inputs":[{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",545,{"inputs":[{"name":"f"},{"name":"t"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",545,{"inputs":[{"name":"f"},{"name":"t"},{"name":"uncompressedintformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",545,{"inputs":[{"name":"f"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",545,{"inputs":[{"name":"f"},{"name":"uncompressedintformat"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",545,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",545,{"inputs":[{"name":"f"},{"name":"uncompressedintformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"integraltexture1d"}}],[11,"width","","Returns the width of that image.",545,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",545,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",545,null],[11,"mipmap","","Access a single mipmap level of this texture.",545,null],[11,"main_level","","Access the main mipmap level of this texture.",545,null],[11,"clone","","",546,null],[11,"deref","","",546,null],[11,"width","","Returns the width of that image.",546,null],[11,"get_texture","","Returns the corresponding texture.",546,null],[11,"get_level","","Returns the texture level.",546,null],[11,"into","","",546,null],[11,"to_color_attachment","","",546,null],[0,"unsigned_texture1d","glium::texture","Contains the implementation of `UnsignedTexture1d`.",null,null],[3,"UnsignedTexture1d","glium::texture::unsigned_texture1d","A one-dimensional texture  containing unsigned integral data.",null,null],[3,"UnsignedTexture1dMipmap","","Represents a single mipmap level of a `UnsignedTexture1d`.",null,null],[11,"get_id","","",547,null],[11,"fmt","","",547,null],[11,"deref","","",547,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::unsigned_texture1d","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",547,null],[11,"get_internal_format","","Determines the internal format of this texture.",547,null],[11,"new","","Builds a new texture by uploading data.",547,{"inputs":[{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",547,{"inputs":[{"name":"f"},{"name":"t"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",547,{"inputs":[{"name":"f"},{"name":"t"},{"name":"uncompresseduintformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",547,{"inputs":[{"name":"f"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",547,{"inputs":[{"name":"f"},{"name":"uncompresseduintformat"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",547,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",547,{"inputs":[{"name":"f"},{"name":"uncompresseduintformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"unsignedtexture1d"}}],[11,"width","","Returns the width of that image.",547,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",547,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",547,null],[11,"mipmap","","Access a single mipmap level of this texture.",547,null],[11,"main_level","","Access the main mipmap level of this texture.",547,null],[11,"clone","","",548,null],[11,"deref","","",548,null],[11,"width","","Returns the width of that image.",548,null],[11,"get_texture","","Returns the corresponding texture.",548,null],[11,"get_level","","Returns the texture level.",548,null],[11,"into","","",548,null],[11,"to_color_attachment","","",548,null],[0,"depth_texture1d","glium::texture","Contains the implementation of `DepthTexture1d`.",null,null],[3,"DepthTexture1d","glium::texture::depth_texture1d","A one-dimensional texture  containing depth data.",null,null],[3,"DepthTexture1dMipmap","","Represents a single mipmap level of a `DepthTexture1d`.",null,null],[11,"get_id","","",549,null],[11,"fmt","","",549,null],[11,"deref","","",549,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::depth_texture1d","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",549,null],[11,"get_internal_format","","Determines the internal format of this texture.",549,null],[11,"new","","Builds a new texture by uploading data.",549,{"inputs":[{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",549,{"inputs":[{"name":"f"},{"name":"t"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",549,{"inputs":[{"name":"f"},{"name":"t"},{"name":"depthformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",549,{"inputs":[{"name":"f"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",549,{"inputs":[{"name":"f"},{"name":"depthformat"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",549,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",549,{"inputs":[{"name":"f"},{"name":"depthformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"depthtexture1d"}}],[11,"width","","Returns the width of that image.",549,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",549,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",549,null],[11,"mipmap","","Access a single mipmap level of this texture.",549,null],[11,"main_level","","Access the main mipmap level of this texture.",549,null],[11,"clone","","",550,null],[11,"deref","","",550,null],[11,"width","","Returns the width of that image.",550,null],[11,"get_texture","","Returns the corresponding texture.",550,null],[11,"get_level","","Returns the texture level.",550,null],[11,"into","","",550,null],[11,"to_depth_attachment","","",550,null],[0,"stencil_texture1d","glium::texture","Contains the implementation of `StencilTexture1d`.",null,null],[3,"StencilTexture1d","glium::texture::stencil_texture1d","A one-dimensional texture  containing stencil data.",null,null],[3,"StencilTexture1dMipmap","","Represents a single mipmap level of a `StencilTexture1d`.",null,null],[11,"get_id","","",551,null],[11,"fmt","","",551,null],[11,"deref","","",551,null],[11,"get_internal_format","","Determines the internal format of this texture.",551,null],[11,"new","","Builds a new texture by uploading data.",551,{"inputs":[{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",551,{"inputs":[{"name":"f"},{"name":"t"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",551,{"inputs":[{"name":"f"},{"name":"t"},{"name":"stencilformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",551,{"inputs":[{"name":"f"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",551,{"inputs":[{"name":"f"},{"name":"stencilformat"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",551,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",551,{"inputs":[{"name":"f"},{"name":"stencilformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"stenciltexture1d"}}],[11,"width","","Returns the width of that image.",551,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",551,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",551,null],[11,"mipmap","","Access a single mipmap level of this texture.",551,null],[11,"main_level","","Access the main mipmap level of this texture.",551,null],[11,"clone","","",552,null],[11,"deref","","",552,null],[11,"width","","Returns the width of that image.",552,null],[11,"get_texture","","Returns the corresponding texture.",552,null],[11,"get_level","","Returns the texture level.",552,null],[11,"into","","",552,null],[11,"to_stencil_attachment","","",552,null],[0,"depth_stencil_texture1d","glium::texture","Contains the implementation of `DepthStencilTexture1d`.",null,null],[3,"DepthStencilTexture1d","glium::texture::depth_stencil_texture1d","A one-dimensional texture  containing both depth and stencil data.",null,null],[3,"DepthStencilTexture1dMipmap","","Represents a single mipmap level of a `DepthStencilTexture1d`.",null,null],[11,"get_id","","",553,null],[11,"fmt","","",553,null],[11,"deref","","",553,null],[11,"get_internal_format","","Determines the internal format of this texture.",553,null],[11,"new","","Builds a new texture by uploading data.",553,{"inputs":[{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",553,{"inputs":[{"name":"f"},{"name":"t"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",553,{"inputs":[{"name":"f"},{"name":"t"},{"name":"depthstencilformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",553,{"inputs":[{"name":"f"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",553,{"inputs":[{"name":"f"},{"name":"depthstencilformat"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",553,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",553,{"inputs":[{"name":"f"},{"name":"depthstencilformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"depthstenciltexture1d"}}],[11,"width","","Returns the width of that image.",553,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",553,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",553,null],[11,"mipmap","","Access a single mipmap level of this texture.",553,null],[11,"main_level","","Access the main mipmap level of this texture.",553,null],[11,"clone","","",554,null],[11,"deref","","",554,null],[11,"width","","Returns the width of that image.",554,null],[11,"get_texture","","Returns the corresponding texture.",554,null],[11,"get_level","","Returns the texture level.",554,null],[11,"into","","",554,null],[11,"to_depth_stencil_attachment","","",554,null],[0,"texture2d","glium::texture","Contains the implementation of `Texture2d`.",null,null],[3,"Texture2d","glium::texture::texture2d","A two-dimensional texture  containing floating-point data.",null,null],[3,"Texture2dMipmap","","Represents a single mipmap level of a `Texture2d`.",null,null],[11,"get_id","","",555,null],[11,"fmt","","",555,null],[11,"deref","","",555,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::texture2d","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",555,null],[11,"get_internal_format","","Determines the internal format of this texture.",555,null],[11,"new","","Builds a new texture by uploading data.",555,{"inputs":[{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",555,{"inputs":[{"name":"f"},{"name":"t"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",555,{"inputs":[{"name":"f"},{"name":"t"},{"name":"uncompressedfloatformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",555,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",555,{"inputs":[{"name":"f"},{"name":"uncompressedfloatformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",555,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",555,{"inputs":[{"name":"f"},{"name":"uncompressedfloatformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"texture2d"}}],[11,"width","","Returns the width of that image.",555,null],[11,"height","","Returns the height of that image.",555,null],[11,"dimensions","","Returns the width and height of that image.",555,null],[11,"as_surface","","Starts drawing on the texture.",555,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",555,null],[11,"read","","Reads the content of the texture to RAM.",555,null],[11,"read_to_pixel_buffer","","Reads the content of the texture into a buffer in video memory.",555,null],[11,"write","","Uploads some data in the texture.",555,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",555,null],[11,"mipmap","","Access a single mipmap level of this texture.",555,null],[11,"main_level","","Access the main mipmap level of this texture.",555,null],[11,"clone","","",556,null],[11,"deref","","",556,null],[11,"width","","Returns the width of that image.",556,null],[11,"height","","Returns the height of that image.",556,null],[11,"dimensions","","Returns the width and height of that image.",556,null],[11,"write","","Uploads some data in the texture level.",556,null],[11,"get_texture","","Returns the corresponding texture.",556,null],[11,"get_level","","Returns the texture level.",556,null],[11,"into","","",556,null],[11,"to_color_attachment","","",556,null],[0,"compressed_texture2d","glium::texture","Contains the implementation of `CompressedTexture2d`.",null,null],[3,"CompressedTexture2d","glium::texture::compressed_texture2d","A compressed two-dimensional texture  containing floating-point data.",null,null],[3,"CompressedTexture2dMipmap","","Represents a single mipmap level of a `CompressedTexture2d`.",null,null],[11,"get_id","","",557,null],[11,"fmt","","",557,null],[11,"deref","","",557,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::compressed_texture2d","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",557,null],[11,"get_internal_format","","Determines the internal format of this texture.",557,null],[11,"new","","Builds a new texture by uploading data.",557,{"inputs":[{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",557,{"inputs":[{"name":"f"},{"name":"t"},{"name":"compressedmipmapsoption"}],"output":{"name":"result"}}],[11,"with_compressed_data","","Builds a new texture with a specific format. The input data must also be of the\nspecified compressed format.",557,null],[11,"with_format","","Builds a new texture with a specific format.",557,{"inputs":[{"name":"f"},{"name":"t"},{"name":"compressedformat"},{"name":"compressedmipmapsoption"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",557,{"inputs":[{"name":"f"},{"name":"compressedformat"},{"name":"compressedmipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",557,{"inputs":[{"name":"f"},{"name":"compressedformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"compressedtexture2d"}}],[11,"width","","Returns the width of that image.",557,null],[11,"height","","Returns the height of that image.",557,null],[11,"dimensions","","Returns the width and height of that image.",557,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",557,null],[11,"read","","Reads the content of the texture to RAM.",557,null],[11,"read_to_pixel_buffer","","Reads the content of the texture into a buffer in video memory.",557,null],[11,"read_compressed_data","","Reads the content of the texture to RAM without decompressing it before.",557,null],[11,"write","","Uploads some data in the texture.",557,null],[11,"write_compressed_data","","Uploads some data in the texture by using a compressed format as input.",557,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",557,null],[11,"mipmap","","Access a single mipmap level of this texture.",557,null],[11,"main_level","","Access the main mipmap level of this texture.",557,null],[11,"clone","","",558,null],[11,"deref","","",558,null],[11,"width","","Returns the width of that image.",558,null],[11,"height","","Returns the height of that image.",558,null],[11,"dimensions","","Returns the width and height of that image.",558,null],[11,"write","","Uploads some data in the texture level.",558,null],[11,"write_compressed_data","","Uploads some data in the texture level by using a compressed format as input.",558,null],[11,"read_compressed_data","","Reads the content of the texture level to RAM without decompressing it before.",558,null],[11,"get_texture","","Returns the corresponding texture.",558,null],[11,"get_level","","Returns the texture level.",558,null],[11,"into","","",558,null],[0,"srgb_texture2d","glium::texture","Contains the implementation of `SrgbTexture2d`.",null,null],[3,"SrgbTexture2d","glium::texture::srgb_texture2d","A two-dimensional texture  containing sRGB floating-point data.",null,null],[3,"SrgbTexture2dMipmap","","Represents a single mipmap level of a `SrgbTexture2d`.",null,null],[11,"get_id","","",559,null],[11,"fmt","","",559,null],[11,"deref","","",559,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::srgb_texture2d","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",559,null],[11,"get_internal_format","","Determines the internal format of this texture.",559,null],[11,"new","","Builds a new texture by uploading data.",559,{"inputs":[{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",559,{"inputs":[{"name":"f"},{"name":"t"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",559,{"inputs":[{"name":"f"},{"name":"t"},{"name":"srgbformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",559,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",559,{"inputs":[{"name":"f"},{"name":"srgbformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",559,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",559,{"inputs":[{"name":"f"},{"name":"srgbformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"srgbtexture2d"}}],[11,"width","","Returns the width of that image.",559,null],[11,"height","","Returns the height of that image.",559,null],[11,"dimensions","","Returns the width and height of that image.",559,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",559,null],[11,"read","","Reads the content of the texture to RAM.",559,null],[11,"read_to_pixel_buffer","","Reads the content of the texture into a buffer in video memory.",559,null],[11,"write","","Uploads some data in the texture.",559,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",559,null],[11,"mipmap","","Access a single mipmap level of this texture.",559,null],[11,"main_level","","Access the main mipmap level of this texture.",559,null],[11,"clone","","",560,null],[11,"deref","","",560,null],[11,"width","","Returns the width of that image.",560,null],[11,"height","","Returns the height of that image.",560,null],[11,"dimensions","","Returns the width and height of that image.",560,null],[11,"write","","Uploads some data in the texture level.",560,null],[11,"get_texture","","Returns the corresponding texture.",560,null],[11,"get_level","","Returns the texture level.",560,null],[11,"into","","",560,null],[11,"to_color_attachment","","",560,null],[0,"compressed_srgb_texture2d","glium::texture","Contains the implementation of `CompressedSrgbTexture2d`.",null,null],[3,"CompressedSrgbTexture2d","glium::texture::compressed_srgb_texture2d","A compressed two-dimensional texture  containing sRGB floating-point data.",null,null],[3,"CompressedSrgbTexture2dMipmap","","Represents a single mipmap level of a `CompressedSrgbTexture2d`.",null,null],[11,"get_id","","",561,null],[11,"fmt","","",561,null],[11,"deref","","",561,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::compressed_srgb_texture2d","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",561,null],[11,"get_internal_format","","Determines the internal format of this texture.",561,null],[11,"new","","Builds a new texture by uploading data.",561,{"inputs":[{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",561,{"inputs":[{"name":"f"},{"name":"t"},{"name":"compressedmipmapsoption"}],"output":{"name":"result"}}],[11,"with_compressed_data","","Builds a new texture with a specific format. The input data must also be of the\nspecified compressed format.",561,null],[11,"with_format","","Builds a new texture with a specific format.",561,{"inputs":[{"name":"f"},{"name":"t"},{"name":"compressedsrgbformat"},{"name":"compressedmipmapsoption"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",561,{"inputs":[{"name":"f"},{"name":"compressedsrgbformat"},{"name":"compressedmipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",561,{"inputs":[{"name":"f"},{"name":"compressedsrgbformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"compressedsrgbtexture2d"}}],[11,"width","","Returns the width of that image.",561,null],[11,"height","","Returns the height of that image.",561,null],[11,"dimensions","","Returns the width and height of that image.",561,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",561,null],[11,"read","","Reads the content of the texture to RAM.",561,null],[11,"read_to_pixel_buffer","","Reads the content of the texture into a buffer in video memory.",561,null],[11,"read_compressed_data","","Reads the content of the texture to RAM without decompressing it before.",561,null],[11,"write","","Uploads some data in the texture.",561,null],[11,"write_compressed_data","","Uploads some data in the texture by using a compressed format as input.",561,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",561,null],[11,"mipmap","","Access a single mipmap level of this texture.",561,null],[11,"main_level","","Access the main mipmap level of this texture.",561,null],[11,"clone","","",562,null],[11,"deref","","",562,null],[11,"width","","Returns the width of that image.",562,null],[11,"height","","Returns the height of that image.",562,null],[11,"dimensions","","Returns the width and height of that image.",562,null],[11,"write","","Uploads some data in the texture level.",562,null],[11,"write_compressed_data","","Uploads some data in the texture level by using a compressed format as input.",562,null],[11,"read_compressed_data","","Reads the content of the texture level to RAM without decompressing it before.",562,null],[11,"get_texture","","Returns the corresponding texture.",562,null],[11,"get_level","","Returns the texture level.",562,null],[11,"into","","",562,null],[0,"integral_texture2d","glium::texture","Contains the implementation of `IntegralTexture2d`.",null,null],[3,"IntegralTexture2d","glium::texture::integral_texture2d","A two-dimensional texture  containing signed integral data.",null,null],[3,"IntegralTexture2dMipmap","","Represents a single mipmap level of a `IntegralTexture2d`.",null,null],[11,"get_id","","",563,null],[11,"fmt","","",563,null],[11,"deref","","",563,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::integral_texture2d","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",563,null],[11,"get_internal_format","","Determines the internal format of this texture.",563,null],[11,"new","","Builds a new texture by uploading data.",563,{"inputs":[{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",563,{"inputs":[{"name":"f"},{"name":"t"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",563,{"inputs":[{"name":"f"},{"name":"t"},{"name":"uncompressedintformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",563,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",563,{"inputs":[{"name":"f"},{"name":"uncompressedintformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",563,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",563,{"inputs":[{"name":"f"},{"name":"uncompressedintformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"integraltexture2d"}}],[11,"width","","Returns the width of that image.",563,null],[11,"height","","Returns the height of that image.",563,null],[11,"dimensions","","Returns the width and height of that image.",563,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",563,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",563,null],[11,"mipmap","","Access a single mipmap level of this texture.",563,null],[11,"main_level","","Access the main mipmap level of this texture.",563,null],[11,"clone","","",564,null],[11,"deref","","",564,null],[11,"width","","Returns the width of that image.",564,null],[11,"height","","Returns the height of that image.",564,null],[11,"dimensions","","Returns the width and height of that image.",564,null],[11,"get_texture","","Returns the corresponding texture.",564,null],[11,"get_level","","Returns the texture level.",564,null],[11,"into","","",564,null],[11,"to_color_attachment","","",564,null],[0,"unsigned_texture2d","glium::texture","Contains the implementation of `UnsignedTexture2d`.",null,null],[3,"UnsignedTexture2d","glium::texture::unsigned_texture2d","A two-dimensional texture  containing unsigned integral data.",null,null],[3,"UnsignedTexture2dMipmap","","Represents a single mipmap level of a `UnsignedTexture2d`.",null,null],[11,"get_id","","",565,null],[11,"fmt","","",565,null],[11,"deref","","",565,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::unsigned_texture2d","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",565,null],[11,"get_internal_format","","Determines the internal format of this texture.",565,null],[11,"new","","Builds a new texture by uploading data.",565,{"inputs":[{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",565,{"inputs":[{"name":"f"},{"name":"t"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",565,{"inputs":[{"name":"f"},{"name":"t"},{"name":"uncompresseduintformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",565,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",565,{"inputs":[{"name":"f"},{"name":"uncompresseduintformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",565,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",565,{"inputs":[{"name":"f"},{"name":"uncompresseduintformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"unsignedtexture2d"}}],[11,"width","","Returns the width of that image.",565,null],[11,"height","","Returns the height of that image.",565,null],[11,"dimensions","","Returns the width and height of that image.",565,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",565,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",565,null],[11,"mipmap","","Access a single mipmap level of this texture.",565,null],[11,"main_level","","Access the main mipmap level of this texture.",565,null],[11,"clone","","",566,null],[11,"deref","","",566,null],[11,"width","","Returns the width of that image.",566,null],[11,"height","","Returns the height of that image.",566,null],[11,"dimensions","","Returns the width and height of that image.",566,null],[11,"get_texture","","Returns the corresponding texture.",566,null],[11,"get_level","","Returns the texture level.",566,null],[11,"into","","",566,null],[11,"to_color_attachment","","",566,null],[0,"depth_texture2d","glium::texture","Contains the implementation of `DepthTexture2d`.",null,null],[3,"DepthTexture2d","glium::texture::depth_texture2d","A two-dimensional texture  containing depth data.",null,null],[3,"DepthTexture2dMipmap","","Represents a single mipmap level of a `DepthTexture2d`.",null,null],[11,"get_id","","",567,null],[11,"fmt","","",567,null],[11,"deref","","",567,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::depth_texture2d","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",567,null],[11,"get_internal_format","","Determines the internal format of this texture.",567,null],[11,"new","","Builds a new texture by uploading data.",567,{"inputs":[{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",567,{"inputs":[{"name":"f"},{"name":"t"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",567,{"inputs":[{"name":"f"},{"name":"t"},{"name":"depthformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",567,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",567,{"inputs":[{"name":"f"},{"name":"depthformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",567,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",567,{"inputs":[{"name":"f"},{"name":"depthformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"depthtexture2d"}}],[11,"width","","Returns the width of that image.",567,null],[11,"height","","Returns the height of that image.",567,null],[11,"dimensions","","Returns the width and height of that image.",567,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",567,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",567,null],[11,"mipmap","","Access a single mipmap level of this texture.",567,null],[11,"main_level","","Access the main mipmap level of this texture.",567,null],[11,"clone","","",568,null],[11,"deref","","",568,null],[11,"width","","Returns the width of that image.",568,null],[11,"height","","Returns the height of that image.",568,null],[11,"dimensions","","Returns the width and height of that image.",568,null],[11,"get_texture","","Returns the corresponding texture.",568,null],[11,"get_level","","Returns the texture level.",568,null],[11,"into","","",568,null],[11,"to_depth_attachment","","",568,null],[0,"stencil_texture2d","glium::texture","Contains the implementation of `StencilTexture2d`.",null,null],[3,"StencilTexture2d","glium::texture::stencil_texture2d","A two-dimensional texture  containing stencil data.",null,null],[3,"StencilTexture2dMipmap","","Represents a single mipmap level of a `StencilTexture2d`.",null,null],[11,"get_id","","",569,null],[11,"fmt","","",569,null],[11,"deref","","",569,null],[11,"get_internal_format","","Determines the internal format of this texture.",569,null],[11,"new","","Builds a new texture by uploading data.",569,{"inputs":[{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",569,{"inputs":[{"name":"f"},{"name":"t"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",569,{"inputs":[{"name":"f"},{"name":"t"},{"name":"stencilformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",569,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",569,{"inputs":[{"name":"f"},{"name":"stencilformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",569,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",569,{"inputs":[{"name":"f"},{"name":"stencilformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"stenciltexture2d"}}],[11,"width","","Returns the width of that image.",569,null],[11,"height","","Returns the height of that image.",569,null],[11,"dimensions","","Returns the width and height of that image.",569,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",569,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",569,null],[11,"mipmap","","Access a single mipmap level of this texture.",569,null],[11,"main_level","","Access the main mipmap level of this texture.",569,null],[11,"clone","","",570,null],[11,"deref","","",570,null],[11,"width","","Returns the width of that image.",570,null],[11,"height","","Returns the height of that image.",570,null],[11,"dimensions","","Returns the width and height of that image.",570,null],[11,"get_texture","","Returns the corresponding texture.",570,null],[11,"get_level","","Returns the texture level.",570,null],[11,"into","","",570,null],[11,"to_stencil_attachment","","",570,null],[0,"depth_stencil_texture2d","glium::texture","Contains the implementation of `DepthStencilTexture2d`.",null,null],[3,"DepthStencilTexture2d","glium::texture::depth_stencil_texture2d","A two-dimensional texture  containing both depth and stencil data.",null,null],[3,"DepthStencilTexture2dMipmap","","Represents a single mipmap level of a `DepthStencilTexture2d`.",null,null],[11,"get_id","","",571,null],[11,"fmt","","",571,null],[11,"deref","","",571,null],[11,"get_internal_format","","Determines the internal format of this texture.",571,null],[11,"new","","Builds a new texture by uploading data.",571,{"inputs":[{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",571,{"inputs":[{"name":"f"},{"name":"t"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",571,{"inputs":[{"name":"f"},{"name":"t"},{"name":"depthstencilformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",571,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",571,{"inputs":[{"name":"f"},{"name":"depthstencilformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",571,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",571,{"inputs":[{"name":"f"},{"name":"depthstencilformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"depthstenciltexture2d"}}],[11,"width","","Returns the width of that image.",571,null],[11,"height","","Returns the height of that image.",571,null],[11,"dimensions","","Returns the width and height of that image.",571,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",571,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",571,null],[11,"mipmap","","Access a single mipmap level of this texture.",571,null],[11,"main_level","","Access the main mipmap level of this texture.",571,null],[11,"clone","","",572,null],[11,"deref","","",572,null],[11,"width","","Returns the width of that image.",572,null],[11,"height","","Returns the height of that image.",572,null],[11,"dimensions","","Returns the width and height of that image.",572,null],[11,"get_texture","","Returns the corresponding texture.",572,null],[11,"get_level","","Returns the texture level.",572,null],[11,"into","","",572,null],[11,"to_depth_stencil_attachment","","",572,null],[0,"texture2d_multisample","glium::texture","Contains the implementation of `Texture2dMultisample`.",null,null],[3,"Texture2dMultisample","glium::texture::texture2d_multisample","A two-dimensional texture  containing floating-point data.",null,null],[3,"Texture2dMultisampleMipmap","","Represents a single mipmap level of a `Texture2dMultisample`.",null,null],[11,"get_id","","",573,null],[11,"fmt","","",573,null],[11,"deref","","",573,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::texture2d_multisample","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",573,null],[11,"get_internal_format","","Determines the internal format of this texture.",573,null],[11,"empty","","Creates an empty texture.",573,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",573,{"inputs":[{"name":"f"},{"name":"uncompressedfloatformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",573,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",573,{"inputs":[{"name":"f"},{"name":"uncompressedfloatformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"texture2dmultisample"}}],[11,"width","","Returns the width of that image.",573,null],[11,"height","","Returns the height of that image.",573,null],[11,"samples","","Returns the number of samples of that image.",573,null],[11,"dimensions","","Returns the width and height of that image.",573,null],[11,"as_surface","","Starts drawing on the texture.",573,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",573,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",573,null],[11,"mipmap","","Access a single mipmap level of this texture.",573,null],[11,"main_level","","Access the main mipmap level of this texture.",573,null],[11,"clone","","",574,null],[11,"deref","","",574,null],[11,"width","","Returns the width of that image.",574,null],[11,"height","","Returns the height of that image.",574,null],[11,"samples","","Returns the number of samples of that image.",574,null],[11,"dimensions","","Returns the width and height of that image.",574,null],[11,"get_texture","","Returns the corresponding texture.",574,null],[11,"get_level","","Returns the texture level.",574,null],[11,"into","","",574,null],[11,"to_color_attachment","","",574,null],[0,"integral_texture2d_multisample","glium::texture","Contains the implementation of `IntegralTexture2dMultisample`.",null,null],[3,"IntegralTexture2dMultisample","glium::texture::integral_texture2d_multisample","A two-dimensional texture  containing signed integral data.",null,null],[3,"IntegralTexture2dMultisampleMipmap","","Represents a single mipmap level of a `IntegralTexture2dMultisample`.",null,null],[11,"get_id","","",575,null],[11,"fmt","","",575,null],[11,"deref","","",575,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::integral_texture2d_multisample","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",575,null],[11,"get_internal_format","","Determines the internal format of this texture.",575,null],[11,"empty","","Creates an empty texture.",575,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",575,{"inputs":[{"name":"f"},{"name":"uncompressedintformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",575,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",575,{"inputs":[{"name":"f"},{"name":"uncompressedintformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"integraltexture2dmultisample"}}],[11,"width","","Returns the width of that image.",575,null],[11,"height","","Returns the height of that image.",575,null],[11,"samples","","Returns the number of samples of that image.",575,null],[11,"dimensions","","Returns the width and height of that image.",575,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",575,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",575,null],[11,"mipmap","","Access a single mipmap level of this texture.",575,null],[11,"main_level","","Access the main mipmap level of this texture.",575,null],[11,"clone","","",576,null],[11,"deref","","",576,null],[11,"width","","Returns the width of that image.",576,null],[11,"height","","Returns the height of that image.",576,null],[11,"samples","","Returns the number of samples of that image.",576,null],[11,"dimensions","","Returns the width and height of that image.",576,null],[11,"get_texture","","Returns the corresponding texture.",576,null],[11,"get_level","","Returns the texture level.",576,null],[11,"into","","",576,null],[11,"to_color_attachment","","",576,null],[0,"srgb_texture2d_multisample","glium::texture","Contains the implementation of `SrgbTexture2dMultisample`.",null,null],[3,"SrgbTexture2dMultisample","glium::texture::srgb_texture2d_multisample","A two-dimensional texture  containing sRGB floating-point data.",null,null],[3,"SrgbTexture2dMultisampleMipmap","","Represents a single mipmap level of a `SrgbTexture2dMultisample`.",null,null],[11,"get_id","","",577,null],[11,"fmt","","",577,null],[11,"deref","","",577,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::srgb_texture2d_multisample","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",577,null],[11,"get_internal_format","","Determines the internal format of this texture.",577,null],[11,"empty","","Creates an empty texture.",577,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",577,{"inputs":[{"name":"f"},{"name":"srgbformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",577,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",577,{"inputs":[{"name":"f"},{"name":"srgbformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"srgbtexture2dmultisample"}}],[11,"width","","Returns the width of that image.",577,null],[11,"height","","Returns the height of that image.",577,null],[11,"samples","","Returns the number of samples of that image.",577,null],[11,"dimensions","","Returns the width and height of that image.",577,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",577,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",577,null],[11,"mipmap","","Access a single mipmap level of this texture.",577,null],[11,"main_level","","Access the main mipmap level of this texture.",577,null],[11,"clone","","",578,null],[11,"deref","","",578,null],[11,"width","","Returns the width of that image.",578,null],[11,"height","","Returns the height of that image.",578,null],[11,"samples","","Returns the number of samples of that image.",578,null],[11,"dimensions","","Returns the width and height of that image.",578,null],[11,"get_texture","","Returns the corresponding texture.",578,null],[11,"get_level","","Returns the texture level.",578,null],[11,"into","","",578,null],[11,"to_color_attachment","","",578,null],[0,"unsigned_texture2d_multisample","glium::texture","Contains the implementation of `UnsignedTexture2dMultisample`.",null,null],[3,"UnsignedTexture2dMultisample","glium::texture::unsigned_texture2d_multisample","A two-dimensional texture  containing unsigned integral data.",null,null],[3,"UnsignedTexture2dMultisampleMipmap","","Represents a single mipmap level of a `UnsignedTexture2dMultisample`.",null,null],[11,"get_id","","",579,null],[11,"fmt","","",579,null],[11,"deref","","",579,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::unsigned_texture2d_multisample","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",579,null],[11,"get_internal_format","","Determines the internal format of this texture.",579,null],[11,"empty","","Creates an empty texture.",579,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",579,{"inputs":[{"name":"f"},{"name":"uncompresseduintformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",579,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",579,{"inputs":[{"name":"f"},{"name":"uncompresseduintformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"unsignedtexture2dmultisample"}}],[11,"width","","Returns the width of that image.",579,null],[11,"height","","Returns the height of that image.",579,null],[11,"samples","","Returns the number of samples of that image.",579,null],[11,"dimensions","","Returns the width and height of that image.",579,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",579,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",579,null],[11,"mipmap","","Access a single mipmap level of this texture.",579,null],[11,"main_level","","Access the main mipmap level of this texture.",579,null],[11,"clone","","",580,null],[11,"deref","","",580,null],[11,"width","","Returns the width of that image.",580,null],[11,"height","","Returns the height of that image.",580,null],[11,"samples","","Returns the number of samples of that image.",580,null],[11,"dimensions","","Returns the width and height of that image.",580,null],[11,"get_texture","","Returns the corresponding texture.",580,null],[11,"get_level","","Returns the texture level.",580,null],[11,"into","","",580,null],[11,"to_color_attachment","","",580,null],[0,"depth_texture2d_multisample","glium::texture","Contains the implementation of `DepthTexture2dMultisample`.",null,null],[3,"DepthTexture2dMultisample","glium::texture::depth_texture2d_multisample","A two-dimensional texture  containing depth data.",null,null],[3,"DepthTexture2dMultisampleMipmap","","Represents a single mipmap level of a `DepthTexture2dMultisample`.",null,null],[11,"get_id","","",581,null],[11,"fmt","","",581,null],[11,"deref","","",581,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::depth_texture2d_multisample","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",581,null],[11,"get_internal_format","","Determines the internal format of this texture.",581,null],[11,"empty","","Creates an empty texture.",581,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",581,{"inputs":[{"name":"f"},{"name":"depthformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",581,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",581,{"inputs":[{"name":"f"},{"name":"depthformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"depthtexture2dmultisample"}}],[11,"width","","Returns the width of that image.",581,null],[11,"height","","Returns the height of that image.",581,null],[11,"samples","","Returns the number of samples of that image.",581,null],[11,"dimensions","","Returns the width and height of that image.",581,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",581,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",581,null],[11,"mipmap","","Access a single mipmap level of this texture.",581,null],[11,"main_level","","Access the main mipmap level of this texture.",581,null],[11,"clone","","",582,null],[11,"deref","","",582,null],[11,"width","","Returns the width of that image.",582,null],[11,"height","","Returns the height of that image.",582,null],[11,"samples","","Returns the number of samples of that image.",582,null],[11,"dimensions","","Returns the width and height of that image.",582,null],[11,"get_texture","","Returns the corresponding texture.",582,null],[11,"get_level","","Returns the texture level.",582,null],[11,"into","","",582,null],[11,"to_depth_attachment","","",582,null],[0,"stencil_texture2d_multisample","glium::texture","Contains the implementation of `StencilTexture2dMultisample`.",null,null],[3,"StencilTexture2dMultisample","glium::texture::stencil_texture2d_multisample","A two-dimensional texture  containing stencil data.",null,null],[3,"StencilTexture2dMultisampleMipmap","","Represents a single mipmap level of a `StencilTexture2dMultisample`.",null,null],[11,"get_id","","",583,null],[11,"fmt","","",583,null],[11,"deref","","",583,null],[11,"get_internal_format","","Determines the internal format of this texture.",583,null],[11,"empty","","Creates an empty texture.",583,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",583,{"inputs":[{"name":"f"},{"name":"stencilformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",583,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",583,{"inputs":[{"name":"f"},{"name":"stencilformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"stenciltexture2dmultisample"}}],[11,"width","","Returns the width of that image.",583,null],[11,"height","","Returns the height of that image.",583,null],[11,"samples","","Returns the number of samples of that image.",583,null],[11,"dimensions","","Returns the width and height of that image.",583,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",583,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",583,null],[11,"mipmap","","Access a single mipmap level of this texture.",583,null],[11,"main_level","","Access the main mipmap level of this texture.",583,null],[11,"clone","","",584,null],[11,"deref","","",584,null],[11,"width","","Returns the width of that image.",584,null],[11,"height","","Returns the height of that image.",584,null],[11,"samples","","Returns the number of samples of that image.",584,null],[11,"dimensions","","Returns the width and height of that image.",584,null],[11,"get_texture","","Returns the corresponding texture.",584,null],[11,"get_level","","Returns the texture level.",584,null],[11,"into","","",584,null],[11,"to_stencil_attachment","","",584,null],[0,"depth_stencil_texture2d_multisample","glium::texture","Contains the implementation of `DepthStencilTexture2dMultisample`.",null,null],[3,"DepthStencilTexture2dMultisample","glium::texture::depth_stencil_texture2d_multisample","A two-dimensional texture  containing both depth and stencil data.",null,null],[3,"DepthStencilTexture2dMultisampleMipmap","","Represents a single mipmap level of a `DepthStencilTexture2dMultisample`.",null,null],[11,"get_id","","",585,null],[11,"fmt","","",585,null],[11,"deref","","",585,null],[11,"get_internal_format","","Determines the internal format of this texture.",585,null],[11,"empty","","Creates an empty texture.",585,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",585,{"inputs":[{"name":"f"},{"name":"depthstencilformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",585,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",585,{"inputs":[{"name":"f"},{"name":"depthstencilformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"depthstenciltexture2dmultisample"}}],[11,"width","","Returns the width of that image.",585,null],[11,"height","","Returns the height of that image.",585,null],[11,"samples","","Returns the number of samples of that image.",585,null],[11,"dimensions","","Returns the width and height of that image.",585,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",585,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",585,null],[11,"mipmap","","Access a single mipmap level of this texture.",585,null],[11,"main_level","","Access the main mipmap level of this texture.",585,null],[11,"clone","","",586,null],[11,"deref","","",586,null],[11,"width","","Returns the width of that image.",586,null],[11,"height","","Returns the height of that image.",586,null],[11,"samples","","Returns the number of samples of that image.",586,null],[11,"dimensions","","Returns the width and height of that image.",586,null],[11,"get_texture","","Returns the corresponding texture.",586,null],[11,"get_level","","Returns the texture level.",586,null],[11,"into","","",586,null],[11,"to_depth_stencil_attachment","","",586,null],[0,"texture3d","glium::texture","Contains the implementation of `Texture3d`.",null,null],[3,"Texture3d","glium::texture::texture3d","A three-dimensional texture  containing floating-point data.",null,null],[3,"Texture3dMipmap","","Represents a single mipmap level of a `Texture3d`.",null,null],[11,"get_id","","",587,null],[11,"fmt","","",587,null],[11,"deref","","",587,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::texture3d","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",587,null],[11,"get_internal_format","","Determines the internal format of this texture.",587,null],[11,"new","","Builds a new texture by uploading data.",587,{"inputs":[{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",587,{"inputs":[{"name":"f"},{"name":"t"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",587,{"inputs":[{"name":"f"},{"name":"t"},{"name":"uncompressedfloatformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",587,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",587,{"inputs":[{"name":"f"},{"name":"uncompressedfloatformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",587,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",587,{"inputs":[{"name":"f"},{"name":"uncompressedfloatformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"texture3d"}}],[11,"width","","Returns the width of that image.",587,null],[11,"height","","Returns the height of that image.",587,null],[11,"depth","","Returns the depth of that image.",587,null],[11,"dimensions","","Returns the width, height and depth of that image.",587,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",587,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",587,null],[11,"mipmap","","Access a single mipmap level of this texture.",587,null],[11,"main_level","","Access the main mipmap level of this texture.",587,null],[11,"clone","","",588,null],[11,"deref","","",588,null],[11,"width","","Returns the width of that image.",588,null],[11,"height","","Returns the height of that image.",588,null],[11,"depth","","Returns the depth of that image.",588,null],[11,"dimensions","","Returns the width, height and depth of that image.",588,null],[11,"get_texture","","Returns the corresponding texture.",588,null],[11,"get_level","","Returns the texture level.",588,null],[11,"into","","",588,null],[11,"to_color_attachment","","",588,null],[0,"compressed_texture3d","glium::texture","Contains the implementation of `CompressedTexture3d`.",null,null],[3,"CompressedTexture3d","glium::texture::compressed_texture3d","A compressed three-dimensional texture  containing floating-point data.",null,null],[3,"CompressedTexture3dMipmap","","Represents a single mipmap level of a `CompressedTexture3d`.",null,null],[11,"get_id","","",589,null],[11,"fmt","","",589,null],[11,"deref","","",589,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::compressed_texture3d","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",589,null],[11,"get_internal_format","","Determines the internal format of this texture.",589,null],[11,"new","","Builds a new texture by uploading data.",589,{"inputs":[{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",589,{"inputs":[{"name":"f"},{"name":"t"},{"name":"compressedmipmapsoption"}],"output":{"name":"result"}}],[11,"with_compressed_data","","Builds a new texture with a specific format. The input data must also be of the\nspecified compressed format.",589,null],[11,"with_format","","Builds a new texture with a specific format.",589,{"inputs":[{"name":"f"},{"name":"t"},{"name":"compressedformat"},{"name":"compressedmipmapsoption"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",589,{"inputs":[{"name":"f"},{"name":"compressedformat"},{"name":"compressedmipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",589,{"inputs":[{"name":"f"},{"name":"compressedformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"compressedtexture3d"}}],[11,"width","","Returns the width of that image.",589,null],[11,"height","","Returns the height of that image.",589,null],[11,"depth","","Returns the depth of that image.",589,null],[11,"dimensions","","Returns the width, height and depth of that image.",589,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",589,null],[11,"read_compressed_data","","Reads the content of the texture to RAM without decompressing it before.",589,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",589,null],[11,"mipmap","","Access a single mipmap level of this texture.",589,null],[11,"main_level","","Access the main mipmap level of this texture.",589,null],[11,"clone","","",590,null],[11,"deref","","",590,null],[11,"width","","Returns the width of that image.",590,null],[11,"height","","Returns the height of that image.",590,null],[11,"depth","","Returns the depth of that image.",590,null],[11,"dimensions","","Returns the width, height and depth of that image.",590,null],[11,"read_compressed_data","","Reads the content of the texture level to RAM without decompressing it before.",590,null],[11,"get_texture","","Returns the corresponding texture.",590,null],[11,"get_level","","Returns the texture level.",590,null],[11,"into","","",590,null],[0,"srgb_texture3d","glium::texture","Contains the implementation of `SrgbTexture3d`.",null,null],[3,"SrgbTexture3d","glium::texture::srgb_texture3d","A three-dimensional texture  containing sRGB floating-point data.",null,null],[3,"SrgbTexture3dMipmap","","Represents a single mipmap level of a `SrgbTexture3d`.",null,null],[11,"get_id","","",591,null],[11,"fmt","","",591,null],[11,"deref","","",591,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::srgb_texture3d","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",591,null],[11,"get_internal_format","","Determines the internal format of this texture.",591,null],[11,"new","","Builds a new texture by uploading data.",591,{"inputs":[{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",591,{"inputs":[{"name":"f"},{"name":"t"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",591,{"inputs":[{"name":"f"},{"name":"t"},{"name":"srgbformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",591,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",591,{"inputs":[{"name":"f"},{"name":"srgbformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",591,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",591,{"inputs":[{"name":"f"},{"name":"srgbformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"srgbtexture3d"}}],[11,"width","","Returns the width of that image.",591,null],[11,"height","","Returns the height of that image.",591,null],[11,"depth","","Returns the depth of that image.",591,null],[11,"dimensions","","Returns the width, height and depth of that image.",591,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",591,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",591,null],[11,"mipmap","","Access a single mipmap level of this texture.",591,null],[11,"main_level","","Access the main mipmap level of this texture.",591,null],[11,"clone","","",592,null],[11,"deref","","",592,null],[11,"width","","Returns the width of that image.",592,null],[11,"height","","Returns the height of that image.",592,null],[11,"depth","","Returns the depth of that image.",592,null],[11,"dimensions","","Returns the width, height and depth of that image.",592,null],[11,"get_texture","","Returns the corresponding texture.",592,null],[11,"get_level","","Returns the texture level.",592,null],[11,"into","","",592,null],[11,"to_color_attachment","","",592,null],[0,"compressed_srgb_texture3d","glium::texture","Contains the implementation of `CompressedSrgbTexture3d`.",null,null],[3,"CompressedSrgbTexture3d","glium::texture::compressed_srgb_texture3d","A compressed three-dimensional texture  containing sRGB floating-point data.",null,null],[3,"CompressedSrgbTexture3dMipmap","","Represents a single mipmap level of a `CompressedSrgbTexture3d`.",null,null],[11,"get_id","","",593,null],[11,"fmt","","",593,null],[11,"deref","","",593,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::compressed_srgb_texture3d","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",593,null],[11,"get_internal_format","","Determines the internal format of this texture.",593,null],[11,"new","","Builds a new texture by uploading data.",593,{"inputs":[{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",593,{"inputs":[{"name":"f"},{"name":"t"},{"name":"compressedmipmapsoption"}],"output":{"name":"result"}}],[11,"with_compressed_data","","Builds a new texture with a specific format. The input data must also be of the\nspecified compressed format.",593,null],[11,"with_format","","Builds a new texture with a specific format.",593,{"inputs":[{"name":"f"},{"name":"t"},{"name":"compressedsrgbformat"},{"name":"compressedmipmapsoption"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",593,{"inputs":[{"name":"f"},{"name":"compressedsrgbformat"},{"name":"compressedmipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",593,{"inputs":[{"name":"f"},{"name":"compressedsrgbformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"compressedsrgbtexture3d"}}],[11,"width","","Returns the width of that image.",593,null],[11,"height","","Returns the height of that image.",593,null],[11,"depth","","Returns the depth of that image.",593,null],[11,"dimensions","","Returns the width, height and depth of that image.",593,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",593,null],[11,"read_compressed_data","","Reads the content of the texture to RAM without decompressing it before.",593,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",593,null],[11,"mipmap","","Access a single mipmap level of this texture.",593,null],[11,"main_level","","Access the main mipmap level of this texture.",593,null],[11,"clone","","",594,null],[11,"deref","","",594,null],[11,"width","","Returns the width of that image.",594,null],[11,"height","","Returns the height of that image.",594,null],[11,"depth","","Returns the depth of that image.",594,null],[11,"dimensions","","Returns the width, height and depth of that image.",594,null],[11,"read_compressed_data","","Reads the content of the texture level to RAM without decompressing it before.",594,null],[11,"get_texture","","Returns the corresponding texture.",594,null],[11,"get_level","","Returns the texture level.",594,null],[11,"into","","",594,null],[0,"integral_texture3d","glium::texture","Contains the implementation of `IntegralTexture3d`.",null,null],[3,"IntegralTexture3d","glium::texture::integral_texture3d","A three-dimensional texture  containing signed integral data.",null,null],[3,"IntegralTexture3dMipmap","","Represents a single mipmap level of a `IntegralTexture3d`.",null,null],[11,"get_id","","",595,null],[11,"fmt","","",595,null],[11,"deref","","",595,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::integral_texture3d","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",595,null],[11,"get_internal_format","","Determines the internal format of this texture.",595,null],[11,"new","","Builds a new texture by uploading data.",595,{"inputs":[{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",595,{"inputs":[{"name":"f"},{"name":"t"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",595,{"inputs":[{"name":"f"},{"name":"t"},{"name":"uncompressedintformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",595,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",595,{"inputs":[{"name":"f"},{"name":"uncompressedintformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",595,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",595,{"inputs":[{"name":"f"},{"name":"uncompressedintformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"integraltexture3d"}}],[11,"width","","Returns the width of that image.",595,null],[11,"height","","Returns the height of that image.",595,null],[11,"depth","","Returns the depth of that image.",595,null],[11,"dimensions","","Returns the width, height and depth of that image.",595,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",595,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",595,null],[11,"mipmap","","Access a single mipmap level of this texture.",595,null],[11,"main_level","","Access the main mipmap level of this texture.",595,null],[11,"clone","","",596,null],[11,"deref","","",596,null],[11,"width","","Returns the width of that image.",596,null],[11,"height","","Returns the height of that image.",596,null],[11,"depth","","Returns the depth of that image.",596,null],[11,"dimensions","","Returns the width, height and depth of that image.",596,null],[11,"get_texture","","Returns the corresponding texture.",596,null],[11,"get_level","","Returns the texture level.",596,null],[11,"into","","",596,null],[11,"to_color_attachment","","",596,null],[0,"unsigned_texture3d","glium::texture","Contains the implementation of `UnsignedTexture3d`.",null,null],[3,"UnsignedTexture3d","glium::texture::unsigned_texture3d","A three-dimensional texture  containing unsigned integral data.",null,null],[3,"UnsignedTexture3dMipmap","","Represents a single mipmap level of a `UnsignedTexture3d`.",null,null],[11,"get_id","","",597,null],[11,"fmt","","",597,null],[11,"deref","","",597,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::unsigned_texture3d","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",597,null],[11,"get_internal_format","","Determines the internal format of this texture.",597,null],[11,"new","","Builds a new texture by uploading data.",597,{"inputs":[{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",597,{"inputs":[{"name":"f"},{"name":"t"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",597,{"inputs":[{"name":"f"},{"name":"t"},{"name":"uncompresseduintformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",597,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",597,{"inputs":[{"name":"f"},{"name":"uncompresseduintformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",597,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",597,{"inputs":[{"name":"f"},{"name":"uncompresseduintformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"unsignedtexture3d"}}],[11,"width","","Returns the width of that image.",597,null],[11,"height","","Returns the height of that image.",597,null],[11,"depth","","Returns the depth of that image.",597,null],[11,"dimensions","","Returns the width, height and depth of that image.",597,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",597,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",597,null],[11,"mipmap","","Access a single mipmap level of this texture.",597,null],[11,"main_level","","Access the main mipmap level of this texture.",597,null],[11,"clone","","",598,null],[11,"deref","","",598,null],[11,"width","","Returns the width of that image.",598,null],[11,"height","","Returns the height of that image.",598,null],[11,"depth","","Returns the depth of that image.",598,null],[11,"dimensions","","Returns the width, height and depth of that image.",598,null],[11,"get_texture","","Returns the corresponding texture.",598,null],[11,"get_level","","Returns the texture level.",598,null],[11,"into","","",598,null],[11,"to_color_attachment","","",598,null],[0,"depth_texture3d","glium::texture","Contains the implementation of `DepthTexture3d`.",null,null],[3,"DepthTexture3d","glium::texture::depth_texture3d","A three-dimensional texture  containing depth data.",null,null],[3,"DepthTexture3dMipmap","","Represents a single mipmap level of a `DepthTexture3d`.",null,null],[11,"get_id","","",599,null],[11,"fmt","","",599,null],[11,"deref","","",599,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::depth_texture3d","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",599,null],[11,"get_internal_format","","Determines the internal format of this texture.",599,null],[11,"new","","Builds a new texture by uploading data.",599,{"inputs":[{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",599,{"inputs":[{"name":"f"},{"name":"t"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",599,{"inputs":[{"name":"f"},{"name":"t"},{"name":"depthformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",599,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",599,{"inputs":[{"name":"f"},{"name":"depthformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",599,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",599,{"inputs":[{"name":"f"},{"name":"depthformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"depthtexture3d"}}],[11,"width","","Returns the width of that image.",599,null],[11,"height","","Returns the height of that image.",599,null],[11,"depth","","Returns the depth of that image.",599,null],[11,"dimensions","","Returns the width, height and depth of that image.",599,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",599,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",599,null],[11,"mipmap","","Access a single mipmap level of this texture.",599,null],[11,"main_level","","Access the main mipmap level of this texture.",599,null],[11,"clone","","",600,null],[11,"deref","","",600,null],[11,"width","","Returns the width of that image.",600,null],[11,"height","","Returns the height of that image.",600,null],[11,"depth","","Returns the depth of that image.",600,null],[11,"dimensions","","Returns the width, height and depth of that image.",600,null],[11,"get_texture","","Returns the corresponding texture.",600,null],[11,"get_level","","Returns the texture level.",600,null],[11,"into","","",600,null],[11,"to_depth_attachment","","",600,null],[0,"depth_stencil_texture3d","glium::texture","Contains the implementation of `DepthStencilTexture3d`.",null,null],[3,"DepthStencilTexture3d","glium::texture::depth_stencil_texture3d","A three-dimensional texture  containing both depth and stencil data.",null,null],[3,"DepthStencilTexture3dMipmap","","Represents a single mipmap level of a `DepthStencilTexture3d`.",null,null],[11,"get_id","","",601,null],[11,"fmt","","",601,null],[11,"deref","","",601,null],[11,"get_internal_format","","Determines the internal format of this texture.",601,null],[11,"new","","Builds a new texture by uploading data.",601,{"inputs":[{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",601,{"inputs":[{"name":"f"},{"name":"t"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",601,{"inputs":[{"name":"f"},{"name":"t"},{"name":"depthstencilformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",601,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",601,{"inputs":[{"name":"f"},{"name":"depthstencilformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",601,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",601,{"inputs":[{"name":"f"},{"name":"depthstencilformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"depthstenciltexture3d"}}],[11,"width","","Returns the width of that image.",601,null],[11,"height","","Returns the height of that image.",601,null],[11,"depth","","Returns the depth of that image.",601,null],[11,"dimensions","","Returns the width, height and depth of that image.",601,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",601,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",601,null],[11,"mipmap","","Access a single mipmap level of this texture.",601,null],[11,"main_level","","Access the main mipmap level of this texture.",601,null],[11,"clone","","",602,null],[11,"deref","","",602,null],[11,"width","","Returns the width of that image.",602,null],[11,"height","","Returns the height of that image.",602,null],[11,"depth","","Returns the depth of that image.",602,null],[11,"dimensions","","Returns the width, height and depth of that image.",602,null],[11,"get_texture","","Returns the corresponding texture.",602,null],[11,"get_level","","Returns the texture level.",602,null],[11,"into","","",602,null],[11,"to_depth_stencil_attachment","","",602,null],[0,"texture1d_array","glium::texture","Contains the implementation of `Texture1dArray`.",null,null],[3,"Texture1dArray","glium::texture::texture1d_array","An array of one-dimensional textures  containing floating-point data.",null,null],[3,"Texture1dArrayLayer","","Represents a single layer of a `Texture1dArray`.",null,null],[3,"Texture1dArrayMipmap","","Represents a single mipmap level of a `Texture1dArray`.",null,null],[3,"Texture1dArrayLayerMipmap","","Represents a single layer of a mipmap level of a `Texture1dArray`.",null,null],[11,"get_id","","",603,null],[11,"fmt","","",603,null],[11,"deref","","",603,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::texture1d_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",603,null],[11,"get_internal_format","","Determines the internal format of this texture.",603,null],[11,"new","","Builds a new texture by uploading data.",603,{"inputs":[{"name":"f"},{"name":"vec"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",603,{"inputs":[{"name":"f"},{"name":"vec"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",603,{"inputs":[{"name":"f"},{"name":"vec"},{"name":"uncompressedfloatformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",603,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",603,{"inputs":[{"name":"f"},{"name":"uncompressedfloatformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",603,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",603,{"inputs":[{"name":"f"},{"name":"uncompressedfloatformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"texture1darray"}}],[11,"width","","Returns the width of that image.",603,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",603,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",603,null],[11,"first_layer","","Access the first layer of this texture.",603,null],[11,"layer","","Access a single layer of this texture.",603,null],[11,"mipmap","","Access a single mipmap level of this texture.",603,null],[11,"main_level","","Access the main mipmap level of this texture.",603,null],[11,"clone","","",604,null],[11,"width","","Returns the width of that image.",604,null],[11,"get_texture","","Returns the corresponding texture.",604,null],[11,"get_layer","","Returns the layer index.",604,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",604,null],[11,"mipmap","","Access a single mipmap level of this layer.",604,null],[11,"main_level","","Access the main mipmap level of this layer.",604,null],[11,"clone","","",605,null],[11,"deref","","",605,null],[11,"width","","Returns the width of that image.",605,null],[11,"get_texture","","Returns the corresponding texture.",605,null],[11,"get_level","","Returns the texture level.",605,null],[11,"first_layer","","Access the first layer of this texture.",605,null],[11,"layer","","Access a single layer of this texture.",605,null],[11,"clone","","",606,null],[11,"width","","Returns the width of that image.",606,null],[11,"into","","",606,null],[11,"to_color_attachment","","",606,null],[0,"compressed_texture1d_array","glium::texture","Contains the implementation of `CompressedTexture1dArray`.",null,null],[3,"CompressedTexture1dArray","glium::texture::compressed_texture1d_array","An array of compressed one-dimensional textures  containing floating-point data.",null,null],[3,"CompressedTexture1dArrayLayer","","Represents a single layer of a `CompressedTexture1dArray`.",null,null],[3,"CompressedTexture1dArrayMipmap","","Represents a single mipmap level of a `CompressedTexture1dArray`.",null,null],[3,"CompressedTexture1dArrayLayerMipmap","","Represents a single layer of a mipmap level of a `CompressedTexture1dArray`.",null,null],[11,"get_id","","",607,null],[11,"fmt","","",607,null],[11,"deref","","",607,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::compressed_texture1d_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",607,null],[11,"get_internal_format","","Determines the internal format of this texture.",607,null],[11,"new","","Builds a new texture by uploading data.",607,{"inputs":[{"name":"f"},{"name":"vec"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",607,{"inputs":[{"name":"f"},{"name":"vec"},{"name":"compressedmipmapsoption"}],"output":{"name":"result"}}],[11,"with_compressed_data","","Builds a new texture with a specific format. The input data must also be of the\nspecified compressed format.",607,{"inputs":[{"name":"f"},{"name":"vec"},{"name":"u32"},{"name":"u32"},{"name":"compressedformat"},{"name":"compressedmipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",607,{"inputs":[{"name":"f"},{"name":"vec"},{"name":"compressedformat"},{"name":"compressedmipmapsoption"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",607,{"inputs":[{"name":"f"},{"name":"compressedformat"},{"name":"compressedmipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",607,{"inputs":[{"name":"f"},{"name":"compressedformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"compressedtexture1darray"}}],[11,"width","","Returns the width of that image.",607,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",607,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",607,null],[11,"first_layer","","Access the first layer of this texture.",607,null],[11,"layer","","Access a single layer of this texture.",607,null],[11,"mipmap","","Access a single mipmap level of this texture.",607,null],[11,"main_level","","Access the main mipmap level of this texture.",607,null],[11,"clone","","",608,null],[11,"width","","Returns the width of that image.",608,null],[11,"get_texture","","Returns the corresponding texture.",608,null],[11,"get_layer","","Returns the layer index.",608,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",608,null],[11,"mipmap","","Access a single mipmap level of this layer.",608,null],[11,"main_level","","Access the main mipmap level of this layer.",608,null],[11,"clone","","",609,null],[11,"deref","","",609,null],[11,"width","","Returns the width of that image.",609,null],[11,"get_texture","","Returns the corresponding texture.",609,null],[11,"get_level","","Returns the texture level.",609,null],[11,"first_layer","","Access the first layer of this texture.",609,null],[11,"layer","","Access a single layer of this texture.",609,null],[11,"clone","","",610,null],[11,"width","","Returns the width of that image.",610,null],[11,"into","","",610,null],[0,"srgb_texture1d_array","glium::texture","Contains the implementation of `SrgbTexture1dArray`.",null,null],[3,"SrgbTexture1dArray","glium::texture::srgb_texture1d_array","An array of one-dimensional textures  containing sRGB floating-point data.",null,null],[3,"SrgbTexture1dArrayLayer","","Represents a single layer of a `SrgbTexture1dArray`.",null,null],[3,"SrgbTexture1dArrayMipmap","","Represents a single mipmap level of a `SrgbTexture1dArray`.",null,null],[3,"SrgbTexture1dArrayLayerMipmap","","Represents a single layer of a mipmap level of a `SrgbTexture1dArray`.",null,null],[11,"get_id","","",611,null],[11,"fmt","","",611,null],[11,"deref","","",611,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::srgb_texture1d_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",611,null],[11,"get_internal_format","","Determines the internal format of this texture.",611,null],[11,"new","","Builds a new texture by uploading data.",611,{"inputs":[{"name":"f"},{"name":"vec"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",611,{"inputs":[{"name":"f"},{"name":"vec"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",611,{"inputs":[{"name":"f"},{"name":"vec"},{"name":"srgbformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",611,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",611,{"inputs":[{"name":"f"},{"name":"srgbformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",611,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",611,{"inputs":[{"name":"f"},{"name":"srgbformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"srgbtexture1darray"}}],[11,"width","","Returns the width of that image.",611,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",611,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",611,null],[11,"first_layer","","Access the first layer of this texture.",611,null],[11,"layer","","Access a single layer of this texture.",611,null],[11,"mipmap","","Access a single mipmap level of this texture.",611,null],[11,"main_level","","Access the main mipmap level of this texture.",611,null],[11,"clone","","",612,null],[11,"width","","Returns the width of that image.",612,null],[11,"get_texture","","Returns the corresponding texture.",612,null],[11,"get_layer","","Returns the layer index.",612,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",612,null],[11,"mipmap","","Access a single mipmap level of this layer.",612,null],[11,"main_level","","Access the main mipmap level of this layer.",612,null],[11,"clone","","",613,null],[11,"deref","","",613,null],[11,"width","","Returns the width of that image.",613,null],[11,"get_texture","","Returns the corresponding texture.",613,null],[11,"get_level","","Returns the texture level.",613,null],[11,"first_layer","","Access the first layer of this texture.",613,null],[11,"layer","","Access a single layer of this texture.",613,null],[11,"clone","","",614,null],[11,"width","","Returns the width of that image.",614,null],[11,"into","","",614,null],[11,"to_color_attachment","","",614,null],[0,"compressed_srgb_texture1d_array","glium::texture","Contains the implementation of `CompressedSrgbTexture1dArray`.",null,null],[3,"CompressedSrgbTexture1dArray","glium::texture::compressed_srgb_texture1d_array","An array of compressed one-dimensional textures  containing sRGB floating-point data.",null,null],[3,"CompressedSrgbTexture1dArrayLayer","","Represents a single layer of a `CompressedSrgbTexture1dArray`.",null,null],[3,"CompressedSrgbTexture1dArrayMipmap","","Represents a single mipmap level of a `CompressedSrgbTexture1dArray`.",null,null],[3,"CompressedSrgbTexture1dArrayLayerMipmap","","Represents a single layer of a mipmap level of a `CompressedSrgbTexture1dArray`.",null,null],[11,"get_id","","",615,null],[11,"fmt","","",615,null],[11,"deref","","",615,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::compressed_srgb_texture1d_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",615,null],[11,"get_internal_format","","Determines the internal format of this texture.",615,null],[11,"new","","Builds a new texture by uploading data.",615,{"inputs":[{"name":"f"},{"name":"vec"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",615,{"inputs":[{"name":"f"},{"name":"vec"},{"name":"compressedmipmapsoption"}],"output":{"name":"result"}}],[11,"with_compressed_data","","Builds a new texture with a specific format. The input data must also be of the\nspecified compressed format.",615,{"inputs":[{"name":"f"},{"name":"vec"},{"name":"u32"},{"name":"u32"},{"name":"compressedsrgbformat"},{"name":"compressedmipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",615,{"inputs":[{"name":"f"},{"name":"vec"},{"name":"compressedsrgbformat"},{"name":"compressedmipmapsoption"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",615,{"inputs":[{"name":"f"},{"name":"compressedsrgbformat"},{"name":"compressedmipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",615,{"inputs":[{"name":"f"},{"name":"compressedsrgbformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"compressedsrgbtexture1darray"}}],[11,"width","","Returns the width of that image.",615,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",615,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",615,null],[11,"first_layer","","Access the first layer of this texture.",615,null],[11,"layer","","Access a single layer of this texture.",615,null],[11,"mipmap","","Access a single mipmap level of this texture.",615,null],[11,"main_level","","Access the main mipmap level of this texture.",615,null],[11,"clone","","",616,null],[11,"width","","Returns the width of that image.",616,null],[11,"get_texture","","Returns the corresponding texture.",616,null],[11,"get_layer","","Returns the layer index.",616,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",616,null],[11,"mipmap","","Access a single mipmap level of this layer.",616,null],[11,"main_level","","Access the main mipmap level of this layer.",616,null],[11,"clone","","",617,null],[11,"deref","","",617,null],[11,"width","","Returns the width of that image.",617,null],[11,"get_texture","","Returns the corresponding texture.",617,null],[11,"get_level","","Returns the texture level.",617,null],[11,"first_layer","","Access the first layer of this texture.",617,null],[11,"layer","","Access a single layer of this texture.",617,null],[11,"clone","","",618,null],[11,"width","","Returns the width of that image.",618,null],[11,"into","","",618,null],[0,"integral_texture1d_array","glium::texture","Contains the implementation of `IntegralTexture1dArray`.",null,null],[3,"IntegralTexture1dArray","glium::texture::integral_texture1d_array","An array of one-dimensional textures  containing signed integral data.",null,null],[3,"IntegralTexture1dArrayLayer","","Represents a single layer of a `IntegralTexture1dArray`.",null,null],[3,"IntegralTexture1dArrayMipmap","","Represents a single mipmap level of a `IntegralTexture1dArray`.",null,null],[3,"IntegralTexture1dArrayLayerMipmap","","Represents a single layer of a mipmap level of a `IntegralTexture1dArray`.",null,null],[11,"get_id","","",619,null],[11,"fmt","","",619,null],[11,"deref","","",619,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::integral_texture1d_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",619,null],[11,"get_internal_format","","Determines the internal format of this texture.",619,null],[11,"new","","Builds a new texture by uploading data.",619,{"inputs":[{"name":"f"},{"name":"vec"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",619,{"inputs":[{"name":"f"},{"name":"vec"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",619,{"inputs":[{"name":"f"},{"name":"vec"},{"name":"uncompressedintformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",619,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",619,{"inputs":[{"name":"f"},{"name":"uncompressedintformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",619,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",619,{"inputs":[{"name":"f"},{"name":"uncompressedintformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"integraltexture1darray"}}],[11,"width","","Returns the width of that image.",619,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",619,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",619,null],[11,"first_layer","","Access the first layer of this texture.",619,null],[11,"layer","","Access a single layer of this texture.",619,null],[11,"mipmap","","Access a single mipmap level of this texture.",619,null],[11,"main_level","","Access the main mipmap level of this texture.",619,null],[11,"clone","","",620,null],[11,"width","","Returns the width of that image.",620,null],[11,"get_texture","","Returns the corresponding texture.",620,null],[11,"get_layer","","Returns the layer index.",620,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",620,null],[11,"mipmap","","Access a single mipmap level of this layer.",620,null],[11,"main_level","","Access the main mipmap level of this layer.",620,null],[11,"clone","","",621,null],[11,"deref","","",621,null],[11,"width","","Returns the width of that image.",621,null],[11,"get_texture","","Returns the corresponding texture.",621,null],[11,"get_level","","Returns the texture level.",621,null],[11,"first_layer","","Access the first layer of this texture.",621,null],[11,"layer","","Access a single layer of this texture.",621,null],[11,"clone","","",622,null],[11,"width","","Returns the width of that image.",622,null],[11,"into","","",622,null],[11,"to_color_attachment","","",622,null],[0,"unsigned_texture1d_array","glium::texture","Contains the implementation of `UnsignedTexture1dArray`.",null,null],[3,"UnsignedTexture1dArray","glium::texture::unsigned_texture1d_array","An array of one-dimensional textures  containing unsigned integral data.",null,null],[3,"UnsignedTexture1dArrayLayer","","Represents a single layer of a `UnsignedTexture1dArray`.",null,null],[3,"UnsignedTexture1dArrayMipmap","","Represents a single mipmap level of a `UnsignedTexture1dArray`.",null,null],[3,"UnsignedTexture1dArrayLayerMipmap","","Represents a single layer of a mipmap level of a `UnsignedTexture1dArray`.",null,null],[11,"get_id","","",623,null],[11,"fmt","","",623,null],[11,"deref","","",623,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::unsigned_texture1d_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",623,null],[11,"get_internal_format","","Determines the internal format of this texture.",623,null],[11,"new","","Builds a new texture by uploading data.",623,{"inputs":[{"name":"f"},{"name":"vec"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",623,{"inputs":[{"name":"f"},{"name":"vec"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",623,{"inputs":[{"name":"f"},{"name":"vec"},{"name":"uncompresseduintformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",623,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",623,{"inputs":[{"name":"f"},{"name":"uncompresseduintformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",623,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",623,{"inputs":[{"name":"f"},{"name":"uncompresseduintformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"unsignedtexture1darray"}}],[11,"width","","Returns the width of that image.",623,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",623,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",623,null],[11,"first_layer","","Access the first layer of this texture.",623,null],[11,"layer","","Access a single layer of this texture.",623,null],[11,"mipmap","","Access a single mipmap level of this texture.",623,null],[11,"main_level","","Access the main mipmap level of this texture.",623,null],[11,"clone","","",624,null],[11,"width","","Returns the width of that image.",624,null],[11,"get_texture","","Returns the corresponding texture.",624,null],[11,"get_layer","","Returns the layer index.",624,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",624,null],[11,"mipmap","","Access a single mipmap level of this layer.",624,null],[11,"main_level","","Access the main mipmap level of this layer.",624,null],[11,"clone","","",625,null],[11,"deref","","",625,null],[11,"width","","Returns the width of that image.",625,null],[11,"get_texture","","Returns the corresponding texture.",625,null],[11,"get_level","","Returns the texture level.",625,null],[11,"first_layer","","Access the first layer of this texture.",625,null],[11,"layer","","Access a single layer of this texture.",625,null],[11,"clone","","",626,null],[11,"width","","Returns the width of that image.",626,null],[11,"into","","",626,null],[11,"to_color_attachment","","",626,null],[0,"depth_texture1d_array","glium::texture","Contains the implementation of `DepthTexture1dArray`.",null,null],[3,"DepthTexture1dArray","glium::texture::depth_texture1d_array","An array of one-dimensional textures  containing depth data.",null,null],[3,"DepthTexture1dArrayLayer","","Represents a single layer of a `DepthTexture1dArray`.",null,null],[3,"DepthTexture1dArrayMipmap","","Represents a single mipmap level of a `DepthTexture1dArray`.",null,null],[3,"DepthTexture1dArrayLayerMipmap","","Represents a single layer of a mipmap level of a `DepthTexture1dArray`.",null,null],[11,"get_id","","",627,null],[11,"fmt","","",627,null],[11,"deref","","",627,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::depth_texture1d_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",627,null],[11,"get_internal_format","","Determines the internal format of this texture.",627,null],[11,"new","","Builds a new texture by uploading data.",627,{"inputs":[{"name":"f"},{"name":"vec"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",627,{"inputs":[{"name":"f"},{"name":"vec"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",627,{"inputs":[{"name":"f"},{"name":"vec"},{"name":"depthformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",627,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",627,{"inputs":[{"name":"f"},{"name":"depthformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",627,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",627,{"inputs":[{"name":"f"},{"name":"depthformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"depthtexture1darray"}}],[11,"width","","Returns the width of that image.",627,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",627,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",627,null],[11,"first_layer","","Access the first layer of this texture.",627,null],[11,"layer","","Access a single layer of this texture.",627,null],[11,"mipmap","","Access a single mipmap level of this texture.",627,null],[11,"main_level","","Access the main mipmap level of this texture.",627,null],[11,"clone","","",628,null],[11,"width","","Returns the width of that image.",628,null],[11,"get_texture","","Returns the corresponding texture.",628,null],[11,"get_layer","","Returns the layer index.",628,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",628,null],[11,"mipmap","","Access a single mipmap level of this layer.",628,null],[11,"main_level","","Access the main mipmap level of this layer.",628,null],[11,"clone","","",629,null],[11,"deref","","",629,null],[11,"width","","Returns the width of that image.",629,null],[11,"get_texture","","Returns the corresponding texture.",629,null],[11,"get_level","","Returns the texture level.",629,null],[11,"first_layer","","Access the first layer of this texture.",629,null],[11,"layer","","Access a single layer of this texture.",629,null],[11,"clone","","",630,null],[11,"width","","Returns the width of that image.",630,null],[11,"into","","",630,null],[11,"to_depth_attachment","","",630,null],[0,"stencil_texture1d_array","glium::texture","Contains the implementation of `StencilTexture1dArray`.",null,null],[3,"StencilTexture1dArray","glium::texture::stencil_texture1d_array","An array of one-dimensional textures  containing stencil data.",null,null],[3,"StencilTexture1dArrayLayer","","Represents a single layer of a `StencilTexture1dArray`.",null,null],[3,"StencilTexture1dArrayMipmap","","Represents a single mipmap level of a `StencilTexture1dArray`.",null,null],[3,"StencilTexture1dArrayLayerMipmap","","Represents a single layer of a mipmap level of a `StencilTexture1dArray`.",null,null],[11,"get_id","","",631,null],[11,"fmt","","",631,null],[11,"deref","","",631,null],[11,"get_internal_format","","Determines the internal format of this texture.",631,null],[11,"new","","Builds a new texture by uploading data.",631,{"inputs":[{"name":"f"},{"name":"vec"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",631,{"inputs":[{"name":"f"},{"name":"vec"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",631,{"inputs":[{"name":"f"},{"name":"vec"},{"name":"stencilformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",631,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",631,{"inputs":[{"name":"f"},{"name":"stencilformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",631,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",631,{"inputs":[{"name":"f"},{"name":"stencilformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"stenciltexture1darray"}}],[11,"width","","Returns the width of that image.",631,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",631,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",631,null],[11,"first_layer","","Access the first layer of this texture.",631,null],[11,"layer","","Access a single layer of this texture.",631,null],[11,"mipmap","","Access a single mipmap level of this texture.",631,null],[11,"main_level","","Access the main mipmap level of this texture.",631,null],[11,"clone","","",632,null],[11,"width","","Returns the width of that image.",632,null],[11,"get_texture","","Returns the corresponding texture.",632,null],[11,"get_layer","","Returns the layer index.",632,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",632,null],[11,"mipmap","","Access a single mipmap level of this layer.",632,null],[11,"main_level","","Access the main mipmap level of this layer.",632,null],[11,"clone","","",633,null],[11,"deref","","",633,null],[11,"width","","Returns the width of that image.",633,null],[11,"get_texture","","Returns the corresponding texture.",633,null],[11,"get_level","","Returns the texture level.",633,null],[11,"first_layer","","Access the first layer of this texture.",633,null],[11,"layer","","Access a single layer of this texture.",633,null],[11,"clone","","",634,null],[11,"width","","Returns the width of that image.",634,null],[11,"into","","",634,null],[11,"to_stencil_attachment","","",634,null],[0,"depth_stencil_texture1d_array","glium::texture","Contains the implementation of `DepthStencilTexture1dArray`.",null,null],[3,"DepthStencilTexture1dArray","glium::texture::depth_stencil_texture1d_array","An array of one-dimensional textures  containing both depth and stencil data.",null,null],[3,"DepthStencilTexture1dArrayLayer","","Represents a single layer of a `DepthStencilTexture1dArray`.",null,null],[3,"DepthStencilTexture1dArrayMipmap","","Represents a single mipmap level of a `DepthStencilTexture1dArray`.",null,null],[3,"DepthStencilTexture1dArrayLayerMipmap","","Represents a single layer of a mipmap level of a `DepthStencilTexture1dArray`.",null,null],[11,"get_id","","",635,null],[11,"fmt","","",635,null],[11,"deref","","",635,null],[11,"get_internal_format","","Determines the internal format of this texture.",635,null],[11,"new","","Builds a new texture by uploading data.",635,{"inputs":[{"name":"f"},{"name":"vec"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",635,{"inputs":[{"name":"f"},{"name":"vec"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",635,{"inputs":[{"name":"f"},{"name":"vec"},{"name":"depthstencilformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",635,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",635,{"inputs":[{"name":"f"},{"name":"depthstencilformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",635,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",635,{"inputs":[{"name":"f"},{"name":"depthstencilformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"depthstenciltexture1darray"}}],[11,"width","","Returns the width of that image.",635,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",635,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",635,null],[11,"first_layer","","Access the first layer of this texture.",635,null],[11,"layer","","Access a single layer of this texture.",635,null],[11,"mipmap","","Access a single mipmap level of this texture.",635,null],[11,"main_level","","Access the main mipmap level of this texture.",635,null],[11,"clone","","",636,null],[11,"width","","Returns the width of that image.",636,null],[11,"get_texture","","Returns the corresponding texture.",636,null],[11,"get_layer","","Returns the layer index.",636,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",636,null],[11,"mipmap","","Access a single mipmap level of this layer.",636,null],[11,"main_level","","Access the main mipmap level of this layer.",636,null],[11,"clone","","",637,null],[11,"deref","","",637,null],[11,"width","","Returns the width of that image.",637,null],[11,"get_texture","","Returns the corresponding texture.",637,null],[11,"get_level","","Returns the texture level.",637,null],[11,"first_layer","","Access the first layer of this texture.",637,null],[11,"layer","","Access a single layer of this texture.",637,null],[11,"clone","","",638,null],[11,"width","","Returns the width of that image.",638,null],[11,"into","","",638,null],[11,"to_depth_stencil_attachment","","",638,null],[0,"texture2d_array","glium::texture","Contains the implementation of `Texture2dArray`.",null,null],[3,"Texture2dArray","glium::texture::texture2d_array","An array of two-dimensional textures  containing floating-point data.",null,null],[3,"Texture2dArrayLayer","","Represents a single layer of a `Texture2dArray`.",null,null],[3,"Texture2dArrayMipmap","","Represents a single mipmap level of a `Texture2dArray`.",null,null],[3,"Texture2dArrayLayerMipmap","","Represents a single layer of a mipmap level of a `Texture2dArray`.",null,null],[11,"get_id","","",639,null],[11,"fmt","","",639,null],[11,"deref","","",639,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::texture2d_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",639,null],[11,"get_internal_format","","Determines the internal format of this texture.",639,null],[11,"new","","Builds a new texture by uploading data.",639,{"inputs":[{"name":"f"},{"name":"vec"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",639,{"inputs":[{"name":"f"},{"name":"vec"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",639,{"inputs":[{"name":"f"},{"name":"vec"},{"name":"uncompressedfloatformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",639,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",639,{"inputs":[{"name":"f"},{"name":"uncompressedfloatformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",639,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",639,{"inputs":[{"name":"f"},{"name":"uncompressedfloatformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"texture2darray"}}],[11,"width","","Returns the width of that image.",639,null],[11,"height","","Returns the height of that image.",639,null],[11,"array_size","","Returns the number of array layers.",639,null],[11,"dimensions","","Returns the width and height of that image.",639,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",639,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",639,null],[11,"first_layer","","Access the first layer of this texture.",639,null],[11,"layer","","Access a single layer of this texture.",639,null],[11,"mipmap","","Access a single mipmap level of this texture.",639,null],[11,"main_level","","Access the main mipmap level of this texture.",639,null],[11,"clone","","",640,null],[11,"width","","Returns the width of that image.",640,null],[11,"height","","Returns the height of that image.",640,null],[11,"dimensions","","Returns the width and height of that image.",640,null],[11,"get_texture","","Returns the corresponding texture.",640,null],[11,"get_layer","","Returns the layer index.",640,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",640,null],[11,"mipmap","","Access a single mipmap level of this layer.",640,null],[11,"main_level","","Access the main mipmap level of this layer.",640,null],[11,"clone","","",641,null],[11,"deref","","",641,null],[11,"width","","Returns the width of that image.",641,null],[11,"height","","Returns the height of that image.",641,null],[11,"array_size","","Returns the number of array layers.",641,null],[11,"dimensions","","Returns the width and height of that image.",641,null],[11,"get_texture","","Returns the corresponding texture.",641,null],[11,"get_level","","Returns the texture level.",641,null],[11,"first_layer","","Access the first layer of this texture.",641,null],[11,"layer","","Access a single layer of this texture.",641,null],[11,"clone","","",642,null],[11,"width","","Returns the width of that image.",642,null],[11,"height","","Returns the height of that image.",642,null],[11,"dimensions","","Returns the width and height of that image.",642,null],[11,"into","","",642,null],[11,"to_color_attachment","","",642,null],[0,"compressed_texture2d_array","glium::texture","Contains the implementation of `CompressedTexture2dArray`.",null,null],[3,"CompressedTexture2dArray","glium::texture::compressed_texture2d_array","An array of compressed two-dimensional textures  containing floating-point data.",null,null],[3,"CompressedTexture2dArrayLayer","","Represents a single layer of a `CompressedTexture2dArray`.",null,null],[3,"CompressedTexture2dArrayMipmap","","Represents a single mipmap level of a `CompressedTexture2dArray`.",null,null],[3,"CompressedTexture2dArrayLayerMipmap","","Represents a single layer of a mipmap level of a `CompressedTexture2dArray`.",null,null],[11,"get_id","","",643,null],[11,"fmt","","",643,null],[11,"deref","","",643,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::compressed_texture2d_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",643,null],[11,"get_internal_format","","Determines the internal format of this texture.",643,null],[11,"new","","Builds a new texture by uploading data.",643,{"inputs":[{"name":"f"},{"name":"vec"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",643,{"inputs":[{"name":"f"},{"name":"vec"},{"name":"compressedmipmapsoption"}],"output":{"name":"result"}}],[11,"with_compressed_data","","Builds a new texture with a specific format. The input data must also be of the\nspecified compressed format.",643,{"inputs":[{"name":"f"},{"name":"vec"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"compressedformat"},{"name":"compressedmipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",643,{"inputs":[{"name":"f"},{"name":"vec"},{"name":"compressedformat"},{"name":"compressedmipmapsoption"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",643,{"inputs":[{"name":"f"},{"name":"compressedformat"},{"name":"compressedmipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",643,{"inputs":[{"name":"f"},{"name":"compressedformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"compressedtexture2darray"}}],[11,"width","","Returns the width of that image.",643,null],[11,"height","","Returns the height of that image.",643,null],[11,"array_size","","Returns the number of array layers.",643,null],[11,"dimensions","","Returns the width and height of that image.",643,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",643,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",643,null],[11,"first_layer","","Access the first layer of this texture.",643,null],[11,"layer","","Access a single layer of this texture.",643,null],[11,"mipmap","","Access a single mipmap level of this texture.",643,null],[11,"main_level","","Access the main mipmap level of this texture.",643,null],[11,"clone","","",644,null],[11,"width","","Returns the width of that image.",644,null],[11,"height","","Returns the height of that image.",644,null],[11,"dimensions","","Returns the width and height of that image.",644,null],[11,"get_texture","","Returns the corresponding texture.",644,null],[11,"get_layer","","Returns the layer index.",644,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",644,null],[11,"mipmap","","Access a single mipmap level of this layer.",644,null],[11,"main_level","","Access the main mipmap level of this layer.",644,null],[11,"clone","","",645,null],[11,"deref","","",645,null],[11,"width","","Returns the width of that image.",645,null],[11,"height","","Returns the height of that image.",645,null],[11,"array_size","","Returns the number of array layers.",645,null],[11,"dimensions","","Returns the width and height of that image.",645,null],[11,"get_texture","","Returns the corresponding texture.",645,null],[11,"get_level","","Returns the texture level.",645,null],[11,"first_layer","","Access the first layer of this texture.",645,null],[11,"layer","","Access a single layer of this texture.",645,null],[11,"clone","","",646,null],[11,"width","","Returns the width of that image.",646,null],[11,"height","","Returns the height of that image.",646,null],[11,"dimensions","","Returns the width and height of that image.",646,null],[11,"into","","",646,null],[0,"srgb_texture2d_array","glium::texture","Contains the implementation of `SrgbTexture2dArray`.",null,null],[3,"SrgbTexture2dArray","glium::texture::srgb_texture2d_array","An array of two-dimensional textures  containing sRGB floating-point data.",null,null],[3,"SrgbTexture2dArrayLayer","","Represents a single layer of a `SrgbTexture2dArray`.",null,null],[3,"SrgbTexture2dArrayMipmap","","Represents a single mipmap level of a `SrgbTexture2dArray`.",null,null],[3,"SrgbTexture2dArrayLayerMipmap","","Represents a single layer of a mipmap level of a `SrgbTexture2dArray`.",null,null],[11,"get_id","","",647,null],[11,"fmt","","",647,null],[11,"deref","","",647,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::srgb_texture2d_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",647,null],[11,"get_internal_format","","Determines the internal format of this texture.",647,null],[11,"new","","Builds a new texture by uploading data.",647,{"inputs":[{"name":"f"},{"name":"vec"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",647,{"inputs":[{"name":"f"},{"name":"vec"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",647,{"inputs":[{"name":"f"},{"name":"vec"},{"name":"srgbformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",647,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",647,{"inputs":[{"name":"f"},{"name":"srgbformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",647,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",647,{"inputs":[{"name":"f"},{"name":"srgbformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"srgbtexture2darray"}}],[11,"width","","Returns the width of that image.",647,null],[11,"height","","Returns the height of that image.",647,null],[11,"array_size","","Returns the number of array layers.",647,null],[11,"dimensions","","Returns the width and height of that image.",647,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",647,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",647,null],[11,"first_layer","","Access the first layer of this texture.",647,null],[11,"layer","","Access a single layer of this texture.",647,null],[11,"mipmap","","Access a single mipmap level of this texture.",647,null],[11,"main_level","","Access the main mipmap level of this texture.",647,null],[11,"clone","","",648,null],[11,"width","","Returns the width of that image.",648,null],[11,"height","","Returns the height of that image.",648,null],[11,"dimensions","","Returns the width and height of that image.",648,null],[11,"get_texture","","Returns the corresponding texture.",648,null],[11,"get_layer","","Returns the layer index.",648,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",648,null],[11,"mipmap","","Access a single mipmap level of this layer.",648,null],[11,"main_level","","Access the main mipmap level of this layer.",648,null],[11,"clone","","",649,null],[11,"deref","","",649,null],[11,"width","","Returns the width of that image.",649,null],[11,"height","","Returns the height of that image.",649,null],[11,"array_size","","Returns the number of array layers.",649,null],[11,"dimensions","","Returns the width and height of that image.",649,null],[11,"get_texture","","Returns the corresponding texture.",649,null],[11,"get_level","","Returns the texture level.",649,null],[11,"first_layer","","Access the first layer of this texture.",649,null],[11,"layer","","Access a single layer of this texture.",649,null],[11,"clone","","",650,null],[11,"width","","Returns the width of that image.",650,null],[11,"height","","Returns the height of that image.",650,null],[11,"dimensions","","Returns the width and height of that image.",650,null],[11,"into","","",650,null],[11,"to_color_attachment","","",650,null],[0,"compressed_srgb_texture2d_array","glium::texture","Contains the implementation of `CompressedSrgbTexture2dArray`.",null,null],[3,"CompressedSrgbTexture2dArray","glium::texture::compressed_srgb_texture2d_array","An array of compressed two-dimensional textures  containing sRGB floating-point data.",null,null],[3,"CompressedSrgbTexture2dArrayLayer","","Represents a single layer of a `CompressedSrgbTexture2dArray`.",null,null],[3,"CompressedSrgbTexture2dArrayMipmap","","Represents a single mipmap level of a `CompressedSrgbTexture2dArray`.",null,null],[3,"CompressedSrgbTexture2dArrayLayerMipmap","","Represents a single layer of a mipmap level of a `CompressedSrgbTexture2dArray`.",null,null],[11,"get_id","","",651,null],[11,"fmt","","",651,null],[11,"deref","","",651,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::compressed_srgb_texture2d_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",651,null],[11,"get_internal_format","","Determines the internal format of this texture.",651,null],[11,"new","","Builds a new texture by uploading data.",651,{"inputs":[{"name":"f"},{"name":"vec"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",651,{"inputs":[{"name":"f"},{"name":"vec"},{"name":"compressedmipmapsoption"}],"output":{"name":"result"}}],[11,"with_compressed_data","","Builds a new texture with a specific format. The input data must also be of the\nspecified compressed format.",651,{"inputs":[{"name":"f"},{"name":"vec"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"compressedsrgbformat"},{"name":"compressedmipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",651,{"inputs":[{"name":"f"},{"name":"vec"},{"name":"compressedsrgbformat"},{"name":"compressedmipmapsoption"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",651,{"inputs":[{"name":"f"},{"name":"compressedsrgbformat"},{"name":"compressedmipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",651,{"inputs":[{"name":"f"},{"name":"compressedsrgbformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"compressedsrgbtexture2darray"}}],[11,"width","","Returns the width of that image.",651,null],[11,"height","","Returns the height of that image.",651,null],[11,"array_size","","Returns the number of array layers.",651,null],[11,"dimensions","","Returns the width and height of that image.",651,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",651,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",651,null],[11,"first_layer","","Access the first layer of this texture.",651,null],[11,"layer","","Access a single layer of this texture.",651,null],[11,"mipmap","","Access a single mipmap level of this texture.",651,null],[11,"main_level","","Access the main mipmap level of this texture.",651,null],[11,"clone","","",652,null],[11,"width","","Returns the width of that image.",652,null],[11,"height","","Returns the height of that image.",652,null],[11,"dimensions","","Returns the width and height of that image.",652,null],[11,"get_texture","","Returns the corresponding texture.",652,null],[11,"get_layer","","Returns the layer index.",652,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",652,null],[11,"mipmap","","Access a single mipmap level of this layer.",652,null],[11,"main_level","","Access the main mipmap level of this layer.",652,null],[11,"clone","","",653,null],[11,"deref","","",653,null],[11,"width","","Returns the width of that image.",653,null],[11,"height","","Returns the height of that image.",653,null],[11,"array_size","","Returns the number of array layers.",653,null],[11,"dimensions","","Returns the width and height of that image.",653,null],[11,"get_texture","","Returns the corresponding texture.",653,null],[11,"get_level","","Returns the texture level.",653,null],[11,"first_layer","","Access the first layer of this texture.",653,null],[11,"layer","","Access a single layer of this texture.",653,null],[11,"clone","","",654,null],[11,"width","","Returns the width of that image.",654,null],[11,"height","","Returns the height of that image.",654,null],[11,"dimensions","","Returns the width and height of that image.",654,null],[11,"into","","",654,null],[0,"integral_texture2d_array","glium::texture","Contains the implementation of `IntegralTexture2dArray`.",null,null],[3,"IntegralTexture2dArray","glium::texture::integral_texture2d_array","An array of two-dimensional textures  containing signed integral data.",null,null],[3,"IntegralTexture2dArrayLayer","","Represents a single layer of a `IntegralTexture2dArray`.",null,null],[3,"IntegralTexture2dArrayMipmap","","Represents a single mipmap level of a `IntegralTexture2dArray`.",null,null],[3,"IntegralTexture2dArrayLayerMipmap","","Represents a single layer of a mipmap level of a `IntegralTexture2dArray`.",null,null],[11,"get_id","","",655,null],[11,"fmt","","",655,null],[11,"deref","","",655,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::integral_texture2d_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",655,null],[11,"get_internal_format","","Determines the internal format of this texture.",655,null],[11,"new","","Builds a new texture by uploading data.",655,{"inputs":[{"name":"f"},{"name":"vec"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",655,{"inputs":[{"name":"f"},{"name":"vec"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",655,{"inputs":[{"name":"f"},{"name":"vec"},{"name":"uncompressedintformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",655,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",655,{"inputs":[{"name":"f"},{"name":"uncompressedintformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",655,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",655,{"inputs":[{"name":"f"},{"name":"uncompressedintformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"integraltexture2darray"}}],[11,"width","","Returns the width of that image.",655,null],[11,"height","","Returns the height of that image.",655,null],[11,"array_size","","Returns the number of array layers.",655,null],[11,"dimensions","","Returns the width and height of that image.",655,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",655,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",655,null],[11,"first_layer","","Access the first layer of this texture.",655,null],[11,"layer","","Access a single layer of this texture.",655,null],[11,"mipmap","","Access a single mipmap level of this texture.",655,null],[11,"main_level","","Access the main mipmap level of this texture.",655,null],[11,"clone","","",656,null],[11,"width","","Returns the width of that image.",656,null],[11,"height","","Returns the height of that image.",656,null],[11,"dimensions","","Returns the width and height of that image.",656,null],[11,"get_texture","","Returns the corresponding texture.",656,null],[11,"get_layer","","Returns the layer index.",656,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",656,null],[11,"mipmap","","Access a single mipmap level of this layer.",656,null],[11,"main_level","","Access the main mipmap level of this layer.",656,null],[11,"clone","","",657,null],[11,"deref","","",657,null],[11,"width","","Returns the width of that image.",657,null],[11,"height","","Returns the height of that image.",657,null],[11,"array_size","","Returns the number of array layers.",657,null],[11,"dimensions","","Returns the width and height of that image.",657,null],[11,"get_texture","","Returns the corresponding texture.",657,null],[11,"get_level","","Returns the texture level.",657,null],[11,"first_layer","","Access the first layer of this texture.",657,null],[11,"layer","","Access a single layer of this texture.",657,null],[11,"clone","","",658,null],[11,"width","","Returns the width of that image.",658,null],[11,"height","","Returns the height of that image.",658,null],[11,"dimensions","","Returns the width and height of that image.",658,null],[11,"into","","",658,null],[11,"to_color_attachment","","",658,null],[0,"unsigned_texture2d_array","glium::texture","Contains the implementation of `UnsignedTexture2dArray`.",null,null],[3,"UnsignedTexture2dArray","glium::texture::unsigned_texture2d_array","An array of two-dimensional textures  containing unsigned integral data.",null,null],[3,"UnsignedTexture2dArrayLayer","","Represents a single layer of a `UnsignedTexture2dArray`.",null,null],[3,"UnsignedTexture2dArrayMipmap","","Represents a single mipmap level of a `UnsignedTexture2dArray`.",null,null],[3,"UnsignedTexture2dArrayLayerMipmap","","Represents a single layer of a mipmap level of a `UnsignedTexture2dArray`.",null,null],[11,"get_id","","",659,null],[11,"fmt","","",659,null],[11,"deref","","",659,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::unsigned_texture2d_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",659,null],[11,"get_internal_format","","Determines the internal format of this texture.",659,null],[11,"new","","Builds a new texture by uploading data.",659,{"inputs":[{"name":"f"},{"name":"vec"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",659,{"inputs":[{"name":"f"},{"name":"vec"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",659,{"inputs":[{"name":"f"},{"name":"vec"},{"name":"uncompresseduintformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",659,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",659,{"inputs":[{"name":"f"},{"name":"uncompresseduintformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",659,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",659,{"inputs":[{"name":"f"},{"name":"uncompresseduintformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"unsignedtexture2darray"}}],[11,"width","","Returns the width of that image.",659,null],[11,"height","","Returns the height of that image.",659,null],[11,"array_size","","Returns the number of array layers.",659,null],[11,"dimensions","","Returns the width and height of that image.",659,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",659,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",659,null],[11,"first_layer","","Access the first layer of this texture.",659,null],[11,"layer","","Access a single layer of this texture.",659,null],[11,"mipmap","","Access a single mipmap level of this texture.",659,null],[11,"main_level","","Access the main mipmap level of this texture.",659,null],[11,"clone","","",660,null],[11,"width","","Returns the width of that image.",660,null],[11,"height","","Returns the height of that image.",660,null],[11,"dimensions","","Returns the width and height of that image.",660,null],[11,"get_texture","","Returns the corresponding texture.",660,null],[11,"get_layer","","Returns the layer index.",660,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",660,null],[11,"mipmap","","Access a single mipmap level of this layer.",660,null],[11,"main_level","","Access the main mipmap level of this layer.",660,null],[11,"clone","","",661,null],[11,"deref","","",661,null],[11,"width","","Returns the width of that image.",661,null],[11,"height","","Returns the height of that image.",661,null],[11,"array_size","","Returns the number of array layers.",661,null],[11,"dimensions","","Returns the width and height of that image.",661,null],[11,"get_texture","","Returns the corresponding texture.",661,null],[11,"get_level","","Returns the texture level.",661,null],[11,"first_layer","","Access the first layer of this texture.",661,null],[11,"layer","","Access a single layer of this texture.",661,null],[11,"clone","","",662,null],[11,"width","","Returns the width of that image.",662,null],[11,"height","","Returns the height of that image.",662,null],[11,"dimensions","","Returns the width and height of that image.",662,null],[11,"into","","",662,null],[11,"to_color_attachment","","",662,null],[0,"depth_texture2d_array","glium::texture","Contains the implementation of `DepthTexture2dArray`.",null,null],[3,"DepthTexture2dArray","glium::texture::depth_texture2d_array","An array of two-dimensional textures  containing depth data.",null,null],[3,"DepthTexture2dArrayLayer","","Represents a single layer of a `DepthTexture2dArray`.",null,null],[3,"DepthTexture2dArrayMipmap","","Represents a single mipmap level of a `DepthTexture2dArray`.",null,null],[3,"DepthTexture2dArrayLayerMipmap","","Represents a single layer of a mipmap level of a `DepthTexture2dArray`.",null,null],[11,"get_id","","",663,null],[11,"fmt","","",663,null],[11,"deref","","",663,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::depth_texture2d_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",663,null],[11,"get_internal_format","","Determines the internal format of this texture.",663,null],[11,"new","","Builds a new texture by uploading data.",663,{"inputs":[{"name":"f"},{"name":"vec"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",663,{"inputs":[{"name":"f"},{"name":"vec"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",663,{"inputs":[{"name":"f"},{"name":"vec"},{"name":"depthformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",663,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",663,{"inputs":[{"name":"f"},{"name":"depthformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",663,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",663,{"inputs":[{"name":"f"},{"name":"depthformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"depthtexture2darray"}}],[11,"width","","Returns the width of that image.",663,null],[11,"height","","Returns the height of that image.",663,null],[11,"array_size","","Returns the number of array layers.",663,null],[11,"dimensions","","Returns the width and height of that image.",663,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",663,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",663,null],[11,"first_layer","","Access the first layer of this texture.",663,null],[11,"layer","","Access a single layer of this texture.",663,null],[11,"mipmap","","Access a single mipmap level of this texture.",663,null],[11,"main_level","","Access the main mipmap level of this texture.",663,null],[11,"clone","","",664,null],[11,"width","","Returns the width of that image.",664,null],[11,"height","","Returns the height of that image.",664,null],[11,"dimensions","","Returns the width and height of that image.",664,null],[11,"get_texture","","Returns the corresponding texture.",664,null],[11,"get_layer","","Returns the layer index.",664,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",664,null],[11,"mipmap","","Access a single mipmap level of this layer.",664,null],[11,"main_level","","Access the main mipmap level of this layer.",664,null],[11,"clone","","",665,null],[11,"deref","","",665,null],[11,"width","","Returns the width of that image.",665,null],[11,"height","","Returns the height of that image.",665,null],[11,"array_size","","Returns the number of array layers.",665,null],[11,"dimensions","","Returns the width and height of that image.",665,null],[11,"get_texture","","Returns the corresponding texture.",665,null],[11,"get_level","","Returns the texture level.",665,null],[11,"first_layer","","Access the first layer of this texture.",665,null],[11,"layer","","Access a single layer of this texture.",665,null],[11,"clone","","",666,null],[11,"width","","Returns the width of that image.",666,null],[11,"height","","Returns the height of that image.",666,null],[11,"dimensions","","Returns the width and height of that image.",666,null],[11,"into","","",666,null],[11,"to_depth_attachment","","",666,null],[0,"stencil_texture2d_array","glium::texture","Contains the implementation of `StencilTexture2dArray`.",null,null],[3,"StencilTexture2dArray","glium::texture::stencil_texture2d_array","An array of two-dimensional textures  containing stencil data.",null,null],[3,"StencilTexture2dArrayLayer","","Represents a single layer of a `StencilTexture2dArray`.",null,null],[3,"StencilTexture2dArrayMipmap","","Represents a single mipmap level of a `StencilTexture2dArray`.",null,null],[3,"StencilTexture2dArrayLayerMipmap","","Represents a single layer of a mipmap level of a `StencilTexture2dArray`.",null,null],[11,"get_id","","",667,null],[11,"fmt","","",667,null],[11,"deref","","",667,null],[11,"get_internal_format","","Determines the internal format of this texture.",667,null],[11,"new","","Builds a new texture by uploading data.",667,{"inputs":[{"name":"f"},{"name":"vec"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",667,{"inputs":[{"name":"f"},{"name":"vec"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",667,{"inputs":[{"name":"f"},{"name":"vec"},{"name":"stencilformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",667,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",667,{"inputs":[{"name":"f"},{"name":"stencilformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",667,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",667,{"inputs":[{"name":"f"},{"name":"stencilformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"stenciltexture2darray"}}],[11,"width","","Returns the width of that image.",667,null],[11,"height","","Returns the height of that image.",667,null],[11,"array_size","","Returns the number of array layers.",667,null],[11,"dimensions","","Returns the width and height of that image.",667,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",667,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",667,null],[11,"first_layer","","Access the first layer of this texture.",667,null],[11,"layer","","Access a single layer of this texture.",667,null],[11,"mipmap","","Access a single mipmap level of this texture.",667,null],[11,"main_level","","Access the main mipmap level of this texture.",667,null],[11,"clone","","",668,null],[11,"width","","Returns the width of that image.",668,null],[11,"height","","Returns the height of that image.",668,null],[11,"dimensions","","Returns the width and height of that image.",668,null],[11,"get_texture","","Returns the corresponding texture.",668,null],[11,"get_layer","","Returns the layer index.",668,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",668,null],[11,"mipmap","","Access a single mipmap level of this layer.",668,null],[11,"main_level","","Access the main mipmap level of this layer.",668,null],[11,"clone","","",669,null],[11,"deref","","",669,null],[11,"width","","Returns the width of that image.",669,null],[11,"height","","Returns the height of that image.",669,null],[11,"array_size","","Returns the number of array layers.",669,null],[11,"dimensions","","Returns the width and height of that image.",669,null],[11,"get_texture","","Returns the corresponding texture.",669,null],[11,"get_level","","Returns the texture level.",669,null],[11,"first_layer","","Access the first layer of this texture.",669,null],[11,"layer","","Access a single layer of this texture.",669,null],[11,"clone","","",670,null],[11,"width","","Returns the width of that image.",670,null],[11,"height","","Returns the height of that image.",670,null],[11,"dimensions","","Returns the width and height of that image.",670,null],[11,"into","","",670,null],[11,"to_stencil_attachment","","",670,null],[0,"depth_stencil_texture2d_array","glium::texture","Contains the implementation of `DepthStencilTexture2dArray`.",null,null],[3,"DepthStencilTexture2dArray","glium::texture::depth_stencil_texture2d_array","An array of two-dimensional textures  containing both depth and stencil data.",null,null],[3,"DepthStencilTexture2dArrayLayer","","Represents a single layer of a `DepthStencilTexture2dArray`.",null,null],[3,"DepthStencilTexture2dArrayMipmap","","Represents a single mipmap level of a `DepthStencilTexture2dArray`.",null,null],[3,"DepthStencilTexture2dArrayLayerMipmap","","Represents a single layer of a mipmap level of a `DepthStencilTexture2dArray`.",null,null],[11,"get_id","","",671,null],[11,"fmt","","",671,null],[11,"deref","","",671,null],[11,"get_internal_format","","Determines the internal format of this texture.",671,null],[11,"new","","Builds a new texture by uploading data.",671,{"inputs":[{"name":"f"},{"name":"vec"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",671,{"inputs":[{"name":"f"},{"name":"vec"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",671,{"inputs":[{"name":"f"},{"name":"vec"},{"name":"depthstencilformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",671,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",671,{"inputs":[{"name":"f"},{"name":"depthstencilformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",671,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",671,{"inputs":[{"name":"f"},{"name":"depthstencilformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"depthstenciltexture2darray"}}],[11,"width","","Returns the width of that image.",671,null],[11,"height","","Returns the height of that image.",671,null],[11,"array_size","","Returns the number of array layers.",671,null],[11,"dimensions","","Returns the width and height of that image.",671,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",671,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",671,null],[11,"first_layer","","Access the first layer of this texture.",671,null],[11,"layer","","Access a single layer of this texture.",671,null],[11,"mipmap","","Access a single mipmap level of this texture.",671,null],[11,"main_level","","Access the main mipmap level of this texture.",671,null],[11,"clone","","",672,null],[11,"width","","Returns the width of that image.",672,null],[11,"height","","Returns the height of that image.",672,null],[11,"dimensions","","Returns the width and height of that image.",672,null],[11,"get_texture","","Returns the corresponding texture.",672,null],[11,"get_layer","","Returns the layer index.",672,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",672,null],[11,"mipmap","","Access a single mipmap level of this layer.",672,null],[11,"main_level","","Access the main mipmap level of this layer.",672,null],[11,"clone","","",673,null],[11,"deref","","",673,null],[11,"width","","Returns the width of that image.",673,null],[11,"height","","Returns the height of that image.",673,null],[11,"array_size","","Returns the number of array layers.",673,null],[11,"dimensions","","Returns the width and height of that image.",673,null],[11,"get_texture","","Returns the corresponding texture.",673,null],[11,"get_level","","Returns the texture level.",673,null],[11,"first_layer","","Access the first layer of this texture.",673,null],[11,"layer","","Access a single layer of this texture.",673,null],[11,"clone","","",674,null],[11,"width","","Returns the width of that image.",674,null],[11,"height","","Returns the height of that image.",674,null],[11,"dimensions","","Returns the width and height of that image.",674,null],[11,"into","","",674,null],[11,"to_depth_stencil_attachment","","",674,null],[0,"texture2d_multisample_array","glium::texture","Contains the implementation of `Texture2dMultisampleArray`.",null,null],[3,"Texture2dMultisampleArray","glium::texture::texture2d_multisample_array","An array of two-dimensional textures  containing floating-point data.",null,null],[3,"Texture2dMultisampleArrayLayer","","Represents a single layer of a `Texture2dMultisampleArray`.",null,null],[3,"Texture2dMultisampleArrayMipmap","","Represents a single mipmap level of a `Texture2dMultisampleArray`.",null,null],[3,"Texture2dMultisampleArrayLayerMipmap","","Represents a single layer of a mipmap level of a `Texture2dMultisampleArray`.",null,null],[11,"get_id","","",675,null],[11,"fmt","","",675,null],[11,"deref","","",675,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::texture2d_multisample_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",675,null],[11,"get_internal_format","","Determines the internal format of this texture.",675,null],[11,"empty","","Creates an empty texture.",675,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",675,{"inputs":[{"name":"f"},{"name":"uncompressedfloatformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",675,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",675,{"inputs":[{"name":"f"},{"name":"uncompressedfloatformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"texture2dmultisamplearray"}}],[11,"width","","Returns the width of that image.",675,null],[11,"height","","Returns the height of that image.",675,null],[11,"array_size","","Returns the number of array layers.",675,null],[11,"samples","","Returns the number of samples of that image.",675,null],[11,"dimensions","","Returns the width and height of that image.",675,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",675,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",675,null],[11,"first_layer","","Access the first layer of this texture.",675,null],[11,"layer","","Access a single layer of this texture.",675,null],[11,"mipmap","","Access a single mipmap level of this texture.",675,null],[11,"main_level","","Access the main mipmap level of this texture.",675,null],[11,"clone","","",676,null],[11,"width","","Returns the width of that image.",676,null],[11,"height","","Returns the height of that image.",676,null],[11,"samples","","Returns the number of samples of that image.",676,null],[11,"dimensions","","Returns the width and height of that image.",676,null],[11,"get_texture","","Returns the corresponding texture.",676,null],[11,"get_layer","","Returns the layer index.",676,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",676,null],[11,"mipmap","","Access a single mipmap level of this layer.",676,null],[11,"main_level","","Access the main mipmap level of this layer.",676,null],[11,"clone","","",677,null],[11,"deref","","",677,null],[11,"width","","Returns the width of that image.",677,null],[11,"height","","Returns the height of that image.",677,null],[11,"array_size","","Returns the number of array layers.",677,null],[11,"samples","","Returns the number of samples of that image.",677,null],[11,"dimensions","","Returns the width and height of that image.",677,null],[11,"get_texture","","Returns the corresponding texture.",677,null],[11,"get_level","","Returns the texture level.",677,null],[11,"first_layer","","Access the first layer of this texture.",677,null],[11,"layer","","Access a single layer of this texture.",677,null],[11,"clone","","",678,null],[11,"width","","Returns the width of that image.",678,null],[11,"height","","Returns the height of that image.",678,null],[11,"samples","","Returns the number of samples of that image.",678,null],[11,"dimensions","","Returns the width and height of that image.",678,null],[11,"into","","",678,null],[11,"to_color_attachment","","",678,null],[0,"srgb_texture2d_multisample_array","glium::texture","Contains the implementation of `SrgbTexture2dMultisampleArray`.",null,null],[3,"SrgbTexture2dMultisampleArray","glium::texture::srgb_texture2d_multisample_array","An array of two-dimensional textures  containing sRGB floating-point data.",null,null],[3,"SrgbTexture2dMultisampleArrayLayer","","Represents a single layer of a `SrgbTexture2dMultisampleArray`.",null,null],[3,"SrgbTexture2dMultisampleArrayMipmap","","Represents a single mipmap level of a `SrgbTexture2dMultisampleArray`.",null,null],[3,"SrgbTexture2dMultisampleArrayLayerMipmap","","Represents a single layer of a mipmap level of a `SrgbTexture2dMultisampleArray`.",null,null],[11,"get_id","","",679,null],[11,"fmt","","",679,null],[11,"deref","","",679,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::srgb_texture2d_multisample_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",679,null],[11,"get_internal_format","","Determines the internal format of this texture.",679,null],[11,"empty","","Creates an empty texture.",679,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",679,{"inputs":[{"name":"f"},{"name":"srgbformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",679,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",679,{"inputs":[{"name":"f"},{"name":"srgbformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"srgbtexture2dmultisamplearray"}}],[11,"width","","Returns the width of that image.",679,null],[11,"height","","Returns the height of that image.",679,null],[11,"array_size","","Returns the number of array layers.",679,null],[11,"samples","","Returns the number of samples of that image.",679,null],[11,"dimensions","","Returns the width and height of that image.",679,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",679,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",679,null],[11,"first_layer","","Access the first layer of this texture.",679,null],[11,"layer","","Access a single layer of this texture.",679,null],[11,"mipmap","","Access a single mipmap level of this texture.",679,null],[11,"main_level","","Access the main mipmap level of this texture.",679,null],[11,"clone","","",680,null],[11,"width","","Returns the width of that image.",680,null],[11,"height","","Returns the height of that image.",680,null],[11,"samples","","Returns the number of samples of that image.",680,null],[11,"dimensions","","Returns the width and height of that image.",680,null],[11,"get_texture","","Returns the corresponding texture.",680,null],[11,"get_layer","","Returns the layer index.",680,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",680,null],[11,"mipmap","","Access a single mipmap level of this layer.",680,null],[11,"main_level","","Access the main mipmap level of this layer.",680,null],[11,"clone","","",681,null],[11,"deref","","",681,null],[11,"width","","Returns the width of that image.",681,null],[11,"height","","Returns the height of that image.",681,null],[11,"array_size","","Returns the number of array layers.",681,null],[11,"samples","","Returns the number of samples of that image.",681,null],[11,"dimensions","","Returns the width and height of that image.",681,null],[11,"get_texture","","Returns the corresponding texture.",681,null],[11,"get_level","","Returns the texture level.",681,null],[11,"first_layer","","Access the first layer of this texture.",681,null],[11,"layer","","Access a single layer of this texture.",681,null],[11,"clone","","",682,null],[11,"width","","Returns the width of that image.",682,null],[11,"height","","Returns the height of that image.",682,null],[11,"samples","","Returns the number of samples of that image.",682,null],[11,"dimensions","","Returns the width and height of that image.",682,null],[11,"into","","",682,null],[11,"to_color_attachment","","",682,null],[0,"integral_texture2d_multisample_array","glium::texture","Contains the implementation of `IntegralTexture2dMultisampleArray`.",null,null],[3,"IntegralTexture2dMultisampleArray","glium::texture::integral_texture2d_multisample_array","An array of two-dimensional textures  containing signed integral data.",null,null],[3,"IntegralTexture2dMultisampleArrayLayer","","Represents a single layer of a `IntegralTexture2dMultisampleArray`.",null,null],[3,"IntegralTexture2dMultisampleArrayMipmap","","Represents a single mipmap level of a `IntegralTexture2dMultisampleArray`.",null,null],[3,"IntegralTexture2dMultisampleArrayLayerMipmap","","Represents a single layer of a mipmap level of a `IntegralTexture2dMultisampleArray`.",null,null],[11,"get_id","","",683,null],[11,"fmt","","",683,null],[11,"deref","","",683,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::integral_texture2d_multisample_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",683,null],[11,"get_internal_format","","Determines the internal format of this texture.",683,null],[11,"empty","","Creates an empty texture.",683,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",683,{"inputs":[{"name":"f"},{"name":"uncompressedintformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",683,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",683,{"inputs":[{"name":"f"},{"name":"uncompressedintformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"integraltexture2dmultisamplearray"}}],[11,"width","","Returns the width of that image.",683,null],[11,"height","","Returns the height of that image.",683,null],[11,"array_size","","Returns the number of array layers.",683,null],[11,"samples","","Returns the number of samples of that image.",683,null],[11,"dimensions","","Returns the width and height of that image.",683,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",683,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",683,null],[11,"first_layer","","Access the first layer of this texture.",683,null],[11,"layer","","Access a single layer of this texture.",683,null],[11,"mipmap","","Access a single mipmap level of this texture.",683,null],[11,"main_level","","Access the main mipmap level of this texture.",683,null],[11,"clone","","",684,null],[11,"width","","Returns the width of that image.",684,null],[11,"height","","Returns the height of that image.",684,null],[11,"samples","","Returns the number of samples of that image.",684,null],[11,"dimensions","","Returns the width and height of that image.",684,null],[11,"get_texture","","Returns the corresponding texture.",684,null],[11,"get_layer","","Returns the layer index.",684,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",684,null],[11,"mipmap","","Access a single mipmap level of this layer.",684,null],[11,"main_level","","Access the main mipmap level of this layer.",684,null],[11,"clone","","",685,null],[11,"deref","","",685,null],[11,"width","","Returns the width of that image.",685,null],[11,"height","","Returns the height of that image.",685,null],[11,"array_size","","Returns the number of array layers.",685,null],[11,"samples","","Returns the number of samples of that image.",685,null],[11,"dimensions","","Returns the width and height of that image.",685,null],[11,"get_texture","","Returns the corresponding texture.",685,null],[11,"get_level","","Returns the texture level.",685,null],[11,"first_layer","","Access the first layer of this texture.",685,null],[11,"layer","","Access a single layer of this texture.",685,null],[11,"clone","","",686,null],[11,"width","","Returns the width of that image.",686,null],[11,"height","","Returns the height of that image.",686,null],[11,"samples","","Returns the number of samples of that image.",686,null],[11,"dimensions","","Returns the width and height of that image.",686,null],[11,"into","","",686,null],[11,"to_color_attachment","","",686,null],[0,"unsigned_texture2d_multisample_array","glium::texture","Contains the implementation of `UnsignedTexture2dMultisampleArray`.",null,null],[3,"UnsignedTexture2dMultisampleArray","glium::texture::unsigned_texture2d_multisample_array","An array of two-dimensional textures  containing unsigned integral data.",null,null],[3,"UnsignedTexture2dMultisampleArrayLayer","","Represents a single layer of a `UnsignedTexture2dMultisampleArray`.",null,null],[3,"UnsignedTexture2dMultisampleArrayMipmap","","Represents a single mipmap level of a `UnsignedTexture2dMultisampleArray`.",null,null],[3,"UnsignedTexture2dMultisampleArrayLayerMipmap","","Represents a single layer of a mipmap level of a `UnsignedTexture2dMultisampleArray`.",null,null],[11,"get_id","","",687,null],[11,"fmt","","",687,null],[11,"deref","","",687,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::unsigned_texture2d_multisample_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",687,null],[11,"get_internal_format","","Determines the internal format of this texture.",687,null],[11,"empty","","Creates an empty texture.",687,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",687,{"inputs":[{"name":"f"},{"name":"uncompresseduintformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",687,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",687,{"inputs":[{"name":"f"},{"name":"uncompresseduintformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"unsignedtexture2dmultisamplearray"}}],[11,"width","","Returns the width of that image.",687,null],[11,"height","","Returns the height of that image.",687,null],[11,"array_size","","Returns the number of array layers.",687,null],[11,"samples","","Returns the number of samples of that image.",687,null],[11,"dimensions","","Returns the width and height of that image.",687,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",687,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",687,null],[11,"first_layer","","Access the first layer of this texture.",687,null],[11,"layer","","Access a single layer of this texture.",687,null],[11,"mipmap","","Access a single mipmap level of this texture.",687,null],[11,"main_level","","Access the main mipmap level of this texture.",687,null],[11,"clone","","",688,null],[11,"width","","Returns the width of that image.",688,null],[11,"height","","Returns the height of that image.",688,null],[11,"samples","","Returns the number of samples of that image.",688,null],[11,"dimensions","","Returns the width and height of that image.",688,null],[11,"get_texture","","Returns the corresponding texture.",688,null],[11,"get_layer","","Returns the layer index.",688,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",688,null],[11,"mipmap","","Access a single mipmap level of this layer.",688,null],[11,"main_level","","Access the main mipmap level of this layer.",688,null],[11,"clone","","",689,null],[11,"deref","","",689,null],[11,"width","","Returns the width of that image.",689,null],[11,"height","","Returns the height of that image.",689,null],[11,"array_size","","Returns the number of array layers.",689,null],[11,"samples","","Returns the number of samples of that image.",689,null],[11,"dimensions","","Returns the width and height of that image.",689,null],[11,"get_texture","","Returns the corresponding texture.",689,null],[11,"get_level","","Returns the texture level.",689,null],[11,"first_layer","","Access the first layer of this texture.",689,null],[11,"layer","","Access a single layer of this texture.",689,null],[11,"clone","","",690,null],[11,"width","","Returns the width of that image.",690,null],[11,"height","","Returns the height of that image.",690,null],[11,"samples","","Returns the number of samples of that image.",690,null],[11,"dimensions","","Returns the width and height of that image.",690,null],[11,"into","","",690,null],[11,"to_color_attachment","","",690,null],[0,"depth_texture2d_multisample_array","glium::texture","Contains the implementation of `DepthTexture2dMultisampleArray`.",null,null],[3,"DepthTexture2dMultisampleArray","glium::texture::depth_texture2d_multisample_array","An array of two-dimensional textures  containing depth data.",null,null],[3,"DepthTexture2dMultisampleArrayLayer","","Represents a single layer of a `DepthTexture2dMultisampleArray`.",null,null],[3,"DepthTexture2dMultisampleArrayMipmap","","Represents a single mipmap level of a `DepthTexture2dMultisampleArray`.",null,null],[3,"DepthTexture2dMultisampleArrayLayerMipmap","","Represents a single layer of a mipmap level of a `DepthTexture2dMultisampleArray`.",null,null],[11,"get_id","","",691,null],[11,"fmt","","",691,null],[11,"deref","","",691,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::depth_texture2d_multisample_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",691,null],[11,"get_internal_format","","Determines the internal format of this texture.",691,null],[11,"empty","","Creates an empty texture.",691,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",691,{"inputs":[{"name":"f"},{"name":"depthformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",691,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",691,{"inputs":[{"name":"f"},{"name":"depthformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"depthtexture2dmultisamplearray"}}],[11,"width","","Returns the width of that image.",691,null],[11,"height","","Returns the height of that image.",691,null],[11,"array_size","","Returns the number of array layers.",691,null],[11,"samples","","Returns the number of samples of that image.",691,null],[11,"dimensions","","Returns the width and height of that image.",691,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",691,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",691,null],[11,"first_layer","","Access the first layer of this texture.",691,null],[11,"layer","","Access a single layer of this texture.",691,null],[11,"mipmap","","Access a single mipmap level of this texture.",691,null],[11,"main_level","","Access the main mipmap level of this texture.",691,null],[11,"clone","","",692,null],[11,"width","","Returns the width of that image.",692,null],[11,"height","","Returns the height of that image.",692,null],[11,"samples","","Returns the number of samples of that image.",692,null],[11,"dimensions","","Returns the width and height of that image.",692,null],[11,"get_texture","","Returns the corresponding texture.",692,null],[11,"get_layer","","Returns the layer index.",692,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",692,null],[11,"mipmap","","Access a single mipmap level of this layer.",692,null],[11,"main_level","","Access the main mipmap level of this layer.",692,null],[11,"clone","","",693,null],[11,"deref","","",693,null],[11,"width","","Returns the width of that image.",693,null],[11,"height","","Returns the height of that image.",693,null],[11,"array_size","","Returns the number of array layers.",693,null],[11,"samples","","Returns the number of samples of that image.",693,null],[11,"dimensions","","Returns the width and height of that image.",693,null],[11,"get_texture","","Returns the corresponding texture.",693,null],[11,"get_level","","Returns the texture level.",693,null],[11,"first_layer","","Access the first layer of this texture.",693,null],[11,"layer","","Access a single layer of this texture.",693,null],[11,"clone","","",694,null],[11,"width","","Returns the width of that image.",694,null],[11,"height","","Returns the height of that image.",694,null],[11,"samples","","Returns the number of samples of that image.",694,null],[11,"dimensions","","Returns the width and height of that image.",694,null],[11,"into","","",694,null],[11,"to_depth_attachment","","",694,null],[0,"stencil_texture2d_multisample_array","glium::texture","Contains the implementation of `StencilTexture2dMultisampleArray`.",null,null],[3,"StencilTexture2dMultisampleArray","glium::texture::stencil_texture2d_multisample_array","An array of two-dimensional textures  containing stencil data.",null,null],[3,"StencilTexture2dMultisampleArrayLayer","","Represents a single layer of a `StencilTexture2dMultisampleArray`.",null,null],[3,"StencilTexture2dMultisampleArrayMipmap","","Represents a single mipmap level of a `StencilTexture2dMultisampleArray`.",null,null],[3,"StencilTexture2dMultisampleArrayLayerMipmap","","Represents a single layer of a mipmap level of a `StencilTexture2dMultisampleArray`.",null,null],[11,"get_id","","",695,null],[11,"fmt","","",695,null],[11,"deref","","",695,null],[11,"get_internal_format","","Determines the internal format of this texture.",695,null],[11,"empty","","Creates an empty texture.",695,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",695,{"inputs":[{"name":"f"},{"name":"stencilformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",695,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",695,{"inputs":[{"name":"f"},{"name":"stencilformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"stenciltexture2dmultisamplearray"}}],[11,"width","","Returns the width of that image.",695,null],[11,"height","","Returns the height of that image.",695,null],[11,"array_size","","Returns the number of array layers.",695,null],[11,"samples","","Returns the number of samples of that image.",695,null],[11,"dimensions","","Returns the width and height of that image.",695,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",695,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",695,null],[11,"first_layer","","Access the first layer of this texture.",695,null],[11,"layer","","Access a single layer of this texture.",695,null],[11,"mipmap","","Access a single mipmap level of this texture.",695,null],[11,"main_level","","Access the main mipmap level of this texture.",695,null],[11,"clone","","",696,null],[11,"width","","Returns the width of that image.",696,null],[11,"height","","Returns the height of that image.",696,null],[11,"samples","","Returns the number of samples of that image.",696,null],[11,"dimensions","","Returns the width and height of that image.",696,null],[11,"get_texture","","Returns the corresponding texture.",696,null],[11,"get_layer","","Returns the layer index.",696,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",696,null],[11,"mipmap","","Access a single mipmap level of this layer.",696,null],[11,"main_level","","Access the main mipmap level of this layer.",696,null],[11,"clone","","",697,null],[11,"deref","","",697,null],[11,"width","","Returns the width of that image.",697,null],[11,"height","","Returns the height of that image.",697,null],[11,"array_size","","Returns the number of array layers.",697,null],[11,"samples","","Returns the number of samples of that image.",697,null],[11,"dimensions","","Returns the width and height of that image.",697,null],[11,"get_texture","","Returns the corresponding texture.",697,null],[11,"get_level","","Returns the texture level.",697,null],[11,"first_layer","","Access the first layer of this texture.",697,null],[11,"layer","","Access a single layer of this texture.",697,null],[11,"clone","","",698,null],[11,"width","","Returns the width of that image.",698,null],[11,"height","","Returns the height of that image.",698,null],[11,"samples","","Returns the number of samples of that image.",698,null],[11,"dimensions","","Returns the width and height of that image.",698,null],[11,"into","","",698,null],[11,"to_stencil_attachment","","",698,null],[0,"depth_stencil_texture2d_multisample_array","glium::texture","Contains the implementation of `DepthStencilTexture2dMultisampleArray`.",null,null],[3,"DepthStencilTexture2dMultisampleArray","glium::texture::depth_stencil_texture2d_multisample_array","An array of two-dimensional textures  containing both depth and stencil data.",null,null],[3,"DepthStencilTexture2dMultisampleArrayLayer","","Represents a single layer of a `DepthStencilTexture2dMultisampleArray`.",null,null],[3,"DepthStencilTexture2dMultisampleArrayMipmap","","Represents a single mipmap level of a `DepthStencilTexture2dMultisampleArray`.",null,null],[3,"DepthStencilTexture2dMultisampleArrayLayerMipmap","","Represents a single layer of a mipmap level of a `DepthStencilTexture2dMultisampleArray`.",null,null],[11,"get_id","","",699,null],[11,"fmt","","",699,null],[11,"deref","","",699,null],[11,"get_internal_format","","Determines the internal format of this texture.",699,null],[11,"empty","","Creates an empty texture.",699,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",699,{"inputs":[{"name":"f"},{"name":"depthstencilformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",699,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",699,{"inputs":[{"name":"f"},{"name":"depthstencilformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"depthstenciltexture2dmultisamplearray"}}],[11,"width","","Returns the width of that image.",699,null],[11,"height","","Returns the height of that image.",699,null],[11,"array_size","","Returns the number of array layers.",699,null],[11,"samples","","Returns the number of samples of that image.",699,null],[11,"dimensions","","Returns the width and height of that image.",699,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",699,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",699,null],[11,"first_layer","","Access the first layer of this texture.",699,null],[11,"layer","","Access a single layer of this texture.",699,null],[11,"mipmap","","Access a single mipmap level of this texture.",699,null],[11,"main_level","","Access the main mipmap level of this texture.",699,null],[11,"clone","","",700,null],[11,"width","","Returns the width of that image.",700,null],[11,"height","","Returns the height of that image.",700,null],[11,"samples","","Returns the number of samples of that image.",700,null],[11,"dimensions","","Returns the width and height of that image.",700,null],[11,"get_texture","","Returns the corresponding texture.",700,null],[11,"get_layer","","Returns the layer index.",700,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",700,null],[11,"mipmap","","Access a single mipmap level of this layer.",700,null],[11,"main_level","","Access the main mipmap level of this layer.",700,null],[11,"clone","","",701,null],[11,"deref","","",701,null],[11,"width","","Returns the width of that image.",701,null],[11,"height","","Returns the height of that image.",701,null],[11,"array_size","","Returns the number of array layers.",701,null],[11,"samples","","Returns the number of samples of that image.",701,null],[11,"dimensions","","Returns the width and height of that image.",701,null],[11,"get_texture","","Returns the corresponding texture.",701,null],[11,"get_level","","Returns the texture level.",701,null],[11,"first_layer","","Access the first layer of this texture.",701,null],[11,"layer","","Access a single layer of this texture.",701,null],[11,"clone","","",702,null],[11,"width","","Returns the width of that image.",702,null],[11,"height","","Returns the height of that image.",702,null],[11,"samples","","Returns the number of samples of that image.",702,null],[11,"dimensions","","Returns the width and height of that image.",702,null],[11,"into","","",702,null],[11,"to_depth_stencil_attachment","","",702,null],[0,"cubemap","glium::texture","Contains the implementation of `Cubemap`.",null,null],[3,"Cubemap","glium::texture::cubemap","A cube texture  containing floating-point data.",null,null],[3,"CubemapMipmap","","Represents a single mipmap level of a `Cubemap`.",null,null],[3,"CubemapImage","","Represents a single image of a mipmap level of a layer of `Cubemap`.",null,null],[11,"get_id","","",703,null],[11,"fmt","","",703,null],[11,"deref","","",703,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::cubemap","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",703,null],[11,"get_internal_format","","Determines the internal format of this texture.",703,null],[11,"empty","","Creates an empty texture.",703,{"inputs":[{"name":"f"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",703,{"inputs":[{"name":"f"},{"name":"uncompressedfloatformat"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",703,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",703,{"inputs":[{"name":"f"},{"name":"uncompressedfloatformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"cubemap"}}],[11,"width","","Returns the width of that image.",703,null],[11,"height","","Returns the height of that image.",703,null],[11,"dimensions","","Returns the dimension of that image.",703,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",703,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",703,null],[11,"mipmap","","Access a single mipmap level of this texture.",703,null],[11,"main_level","","Access the main mipmap level of this texture.",703,null],[11,"clone","","",704,null],[11,"deref","","",704,null],[11,"width","","Returns the width of that image.",704,null],[11,"height","","Returns the height of that image.",704,null],[11,"dimensions","","Returns the dimension of that image.",704,null],[11,"get_texture","","Returns the corresponding texture.",704,null],[11,"get_level","","Returns the texture level.",704,null],[11,"image","","Provides an object representing a single layer of this cubemap.",704,null],[11,"clone","","",705,null],[11,"width","","Returns the width of that image.",705,null],[11,"height","","Returns the height of that image.",705,null],[11,"dimensions","","Returns the dimension of that image.",705,null],[11,"into","","",705,null],[11,"to_color_attachment","","",705,null],[0,"compressed_cubemap","glium::texture","Contains the implementation of `CompressedCubemap`.",null,null],[3,"CompressedCubemap","glium::texture::compressed_cubemap","A compressed cube texture  containing floating-point data.",null,null],[3,"CompressedCubemapMipmap","","Represents a single mipmap level of a `CompressedCubemap`.",null,null],[3,"CompressedCubemapImage","","Represents a single image of a mipmap level of a layer of `CompressedCubemap`.",null,null],[11,"get_id","","",706,null],[11,"fmt","","",706,null],[11,"deref","","",706,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::compressed_cubemap","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",706,null],[11,"get_internal_format","","Determines the internal format of this texture.",706,null],[11,"empty_with_format","","Creates an empty texture with a specific format.",706,{"inputs":[{"name":"f"},{"name":"compressedformat"},{"name":"compressedmipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",706,{"inputs":[{"name":"f"},{"name":"compressedformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"compressedcubemap"}}],[11,"width","","Returns the width of that image.",706,null],[11,"height","","Returns the height of that image.",706,null],[11,"dimensions","","Returns the dimension of that image.",706,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",706,null],[11,"read_compressed_data","","Reads the content of the texture to RAM without decompressing it before.",706,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",706,null],[11,"mipmap","","Access a single mipmap level of this texture.",706,null],[11,"main_level","","Access the main mipmap level of this texture.",706,null],[11,"clone","","",707,null],[11,"deref","","",707,null],[11,"width","","Returns the width of that image.",707,null],[11,"height","","Returns the height of that image.",707,null],[11,"dimensions","","Returns the dimension of that image.",707,null],[11,"read_compressed_data","","Reads the content of the texture level to RAM without decompressing it before.",707,null],[11,"get_texture","","Returns the corresponding texture.",707,null],[11,"get_level","","Returns the texture level.",707,null],[11,"image","","Provides an object representing a single layer of this cubemap.",707,null],[11,"clone","","",708,null],[11,"width","","Returns the width of that image.",708,null],[11,"height","","Returns the height of that image.",708,null],[11,"dimensions","","Returns the dimension of that image.",708,null],[11,"into","","",708,null],[0,"srgb_cubemap","glium::texture","Contains the implementation of `SrgbCubemap`.",null,null],[3,"SrgbCubemap","glium::texture::srgb_cubemap","A cube texture  containing sRGB floating-point data.",null,null],[3,"SrgbCubemapMipmap","","Represents a single mipmap level of a `SrgbCubemap`.",null,null],[3,"SrgbCubemapImage","","Represents a single image of a mipmap level of a layer of `SrgbCubemap`.",null,null],[11,"get_id","","",709,null],[11,"fmt","","",709,null],[11,"deref","","",709,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::srgb_cubemap","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",709,null],[11,"get_internal_format","","Determines the internal format of this texture.",709,null],[11,"empty","","Creates an empty texture.",709,{"inputs":[{"name":"f"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",709,{"inputs":[{"name":"f"},{"name":"srgbformat"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",709,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",709,{"inputs":[{"name":"f"},{"name":"srgbformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"srgbcubemap"}}],[11,"width","","Returns the width of that image.",709,null],[11,"height","","Returns the height of that image.",709,null],[11,"dimensions","","Returns the dimension of that image.",709,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",709,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",709,null],[11,"mipmap","","Access a single mipmap level of this texture.",709,null],[11,"main_level","","Access the main mipmap level of this texture.",709,null],[11,"clone","","",710,null],[11,"deref","","",710,null],[11,"width","","Returns the width of that image.",710,null],[11,"height","","Returns the height of that image.",710,null],[11,"dimensions","","Returns the dimension of that image.",710,null],[11,"get_texture","","Returns the corresponding texture.",710,null],[11,"get_level","","Returns the texture level.",710,null],[11,"image","","Provides an object representing a single layer of this cubemap.",710,null],[11,"clone","","",711,null],[11,"width","","Returns the width of that image.",711,null],[11,"height","","Returns the height of that image.",711,null],[11,"dimensions","","Returns the dimension of that image.",711,null],[11,"into","","",711,null],[11,"to_color_attachment","","",711,null],[0,"compressed_srgb_cubemap","glium::texture","Contains the implementation of `CompressedSrgbCubemap`.",null,null],[3,"CompressedSrgbCubemap","glium::texture::compressed_srgb_cubemap","A compressed cube texture  containing sRGB floating-point data.",null,null],[3,"CompressedSrgbCubemapMipmap","","Represents a single mipmap level of a `CompressedSrgbCubemap`.",null,null],[3,"CompressedSrgbCubemapImage","","Represents a single image of a mipmap level of a layer of `CompressedSrgbCubemap`.",null,null],[11,"get_id","","",712,null],[11,"fmt","","",712,null],[11,"deref","","",712,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::compressed_srgb_cubemap","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",712,null],[11,"get_internal_format","","Determines the internal format of this texture.",712,null],[11,"empty_with_format","","Creates an empty texture with a specific format.",712,{"inputs":[{"name":"f"},{"name":"compressedsrgbformat"},{"name":"compressedmipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",712,{"inputs":[{"name":"f"},{"name":"compressedsrgbformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"compressedsrgbcubemap"}}],[11,"width","","Returns the width of that image.",712,null],[11,"height","","Returns the height of that image.",712,null],[11,"dimensions","","Returns the dimension of that image.",712,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",712,null],[11,"read_compressed_data","","Reads the content of the texture to RAM without decompressing it before.",712,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",712,null],[11,"mipmap","","Access a single mipmap level of this texture.",712,null],[11,"main_level","","Access the main mipmap level of this texture.",712,null],[11,"clone","","",713,null],[11,"deref","","",713,null],[11,"width","","Returns the width of that image.",713,null],[11,"height","","Returns the height of that image.",713,null],[11,"dimensions","","Returns the dimension of that image.",713,null],[11,"read_compressed_data","","Reads the content of the texture level to RAM without decompressing it before.",713,null],[11,"get_texture","","Returns the corresponding texture.",713,null],[11,"get_level","","Returns the texture level.",713,null],[11,"image","","Provides an object representing a single layer of this cubemap.",713,null],[11,"clone","","",714,null],[11,"width","","Returns the width of that image.",714,null],[11,"height","","Returns the height of that image.",714,null],[11,"dimensions","","Returns the dimension of that image.",714,null],[11,"into","","",714,null],[0,"integral_cubemap","glium::texture","Contains the implementation of `IntegralCubemap`.",null,null],[3,"IntegralCubemap","glium::texture::integral_cubemap","A cube texture  containing signed integral data.",null,null],[3,"IntegralCubemapMipmap","","Represents a single mipmap level of a `IntegralCubemap`.",null,null],[3,"IntegralCubemapImage","","Represents a single image of a mipmap level of a layer of `IntegralCubemap`.",null,null],[11,"get_id","","",715,null],[11,"fmt","","",715,null],[11,"deref","","",715,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::integral_cubemap","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",715,null],[11,"get_internal_format","","Determines the internal format of this texture.",715,null],[11,"empty","","Creates an empty texture.",715,{"inputs":[{"name":"f"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",715,{"inputs":[{"name":"f"},{"name":"uncompressedintformat"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",715,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",715,{"inputs":[{"name":"f"},{"name":"uncompressedintformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"integralcubemap"}}],[11,"width","","Returns the width of that image.",715,null],[11,"height","","Returns the height of that image.",715,null],[11,"dimensions","","Returns the dimension of that image.",715,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",715,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",715,null],[11,"mipmap","","Access a single mipmap level of this texture.",715,null],[11,"main_level","","Access the main mipmap level of this texture.",715,null],[11,"clone","","",716,null],[11,"deref","","",716,null],[11,"width","","Returns the width of that image.",716,null],[11,"height","","Returns the height of that image.",716,null],[11,"dimensions","","Returns the dimension of that image.",716,null],[11,"get_texture","","Returns the corresponding texture.",716,null],[11,"get_level","","Returns the texture level.",716,null],[11,"image","","Provides an object representing a single layer of this cubemap.",716,null],[11,"clone","","",717,null],[11,"width","","Returns the width of that image.",717,null],[11,"height","","Returns the height of that image.",717,null],[11,"dimensions","","Returns the dimension of that image.",717,null],[11,"into","","",717,null],[11,"to_color_attachment","","",717,null],[0,"unsigned_cubemap","glium::texture","Contains the implementation of `UnsignedCubemap`.",null,null],[3,"UnsignedCubemap","glium::texture::unsigned_cubemap","A cube texture  containing unsigned integral data.",null,null],[3,"UnsignedCubemapMipmap","","Represents a single mipmap level of a `UnsignedCubemap`.",null,null],[3,"UnsignedCubemapImage","","Represents a single image of a mipmap level of a layer of `UnsignedCubemap`.",null,null],[11,"get_id","","",718,null],[11,"fmt","","",718,null],[11,"deref","","",718,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::unsigned_cubemap","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",718,null],[11,"get_internal_format","","Determines the internal format of this texture.",718,null],[11,"empty","","Creates an empty texture.",718,{"inputs":[{"name":"f"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",718,{"inputs":[{"name":"f"},{"name":"uncompresseduintformat"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",718,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",718,{"inputs":[{"name":"f"},{"name":"uncompresseduintformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"unsignedcubemap"}}],[11,"width","","Returns the width of that image.",718,null],[11,"height","","Returns the height of that image.",718,null],[11,"dimensions","","Returns the dimension of that image.",718,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",718,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",718,null],[11,"mipmap","","Access a single mipmap level of this texture.",718,null],[11,"main_level","","Access the main mipmap level of this texture.",718,null],[11,"clone","","",719,null],[11,"deref","","",719,null],[11,"width","","Returns the width of that image.",719,null],[11,"height","","Returns the height of that image.",719,null],[11,"dimensions","","Returns the dimension of that image.",719,null],[11,"get_texture","","Returns the corresponding texture.",719,null],[11,"get_level","","Returns the texture level.",719,null],[11,"image","","Provides an object representing a single layer of this cubemap.",719,null],[11,"clone","","",720,null],[11,"width","","Returns the width of that image.",720,null],[11,"height","","Returns the height of that image.",720,null],[11,"dimensions","","Returns the dimension of that image.",720,null],[11,"into","","",720,null],[11,"to_color_attachment","","",720,null],[0,"depth_cubemap","glium::texture","Contains the implementation of `DepthCubemap`.",null,null],[3,"DepthCubemap","glium::texture::depth_cubemap","A cube texture  containing depth data.",null,null],[3,"DepthCubemapMipmap","","Represents a single mipmap level of a `DepthCubemap`.",null,null],[3,"DepthCubemapImage","","Represents a single image of a mipmap level of a layer of `DepthCubemap`.",null,null],[11,"get_id","","",721,null],[11,"fmt","","",721,null],[11,"deref","","",721,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::depth_cubemap","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",721,null],[11,"get_internal_format","","Determines the internal format of this texture.",721,null],[11,"empty","","Creates an empty texture.",721,{"inputs":[{"name":"f"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",721,{"inputs":[{"name":"f"},{"name":"depthformat"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",721,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",721,{"inputs":[{"name":"f"},{"name":"depthformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"depthcubemap"}}],[11,"width","","Returns the width of that image.",721,null],[11,"height","","Returns the height of that image.",721,null],[11,"dimensions","","Returns the dimension of that image.",721,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",721,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",721,null],[11,"mipmap","","Access a single mipmap level of this texture.",721,null],[11,"main_level","","Access the main mipmap level of this texture.",721,null],[11,"clone","","",722,null],[11,"deref","","",722,null],[11,"width","","Returns the width of that image.",722,null],[11,"height","","Returns the height of that image.",722,null],[11,"dimensions","","Returns the dimension of that image.",722,null],[11,"get_texture","","Returns the corresponding texture.",722,null],[11,"get_level","","Returns the texture level.",722,null],[11,"image","","Provides an object representing a single layer of this cubemap.",722,null],[11,"clone","","",723,null],[11,"width","","Returns the width of that image.",723,null],[11,"height","","Returns the height of that image.",723,null],[11,"dimensions","","Returns the dimension of that image.",723,null],[11,"into","","",723,null],[11,"to_depth_attachment","","",723,null],[0,"stencil_cubemap","glium::texture","Contains the implementation of `StencilCubemap`.",null,null],[3,"StencilCubemap","glium::texture::stencil_cubemap","A cube texture  containing stencil data.",null,null],[3,"StencilCubemapMipmap","","Represents a single mipmap level of a `StencilCubemap`.",null,null],[3,"StencilCubemapImage","","Represents a single image of a mipmap level of a layer of `StencilCubemap`.",null,null],[11,"get_id","","",724,null],[11,"fmt","","",724,null],[11,"deref","","",724,null],[11,"get_internal_format","","Determines the internal format of this texture.",724,null],[11,"empty","","Creates an empty texture.",724,{"inputs":[{"name":"f"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",724,{"inputs":[{"name":"f"},{"name":"stencilformat"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",724,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",724,{"inputs":[{"name":"f"},{"name":"stencilformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"stencilcubemap"}}],[11,"width","","Returns the width of that image.",724,null],[11,"height","","Returns the height of that image.",724,null],[11,"dimensions","","Returns the dimension of that image.",724,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",724,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",724,null],[11,"mipmap","","Access a single mipmap level of this texture.",724,null],[11,"main_level","","Access the main mipmap level of this texture.",724,null],[11,"clone","","",725,null],[11,"deref","","",725,null],[11,"width","","Returns the width of that image.",725,null],[11,"height","","Returns the height of that image.",725,null],[11,"dimensions","","Returns the dimension of that image.",725,null],[11,"get_texture","","Returns the corresponding texture.",725,null],[11,"get_level","","Returns the texture level.",725,null],[11,"image","","Provides an object representing a single layer of this cubemap.",725,null],[11,"clone","","",726,null],[11,"width","","Returns the width of that image.",726,null],[11,"height","","Returns the height of that image.",726,null],[11,"dimensions","","Returns the dimension of that image.",726,null],[11,"into","","",726,null],[11,"to_stencil_attachment","","",726,null],[0,"depth_stencil_cubemap","glium::texture","Contains the implementation of `DepthStencilCubemap`.",null,null],[3,"DepthStencilCubemap","glium::texture::depth_stencil_cubemap","A cube texture  containing both depth and stencil data.",null,null],[3,"DepthStencilCubemapMipmap","","Represents a single mipmap level of a `DepthStencilCubemap`.",null,null],[3,"DepthStencilCubemapImage","","Represents a single image of a mipmap level of a layer of `DepthStencilCubemap`.",null,null],[11,"get_id","","",727,null],[11,"fmt","","",727,null],[11,"deref","","",727,null],[11,"get_internal_format","","Determines the internal format of this texture.",727,null],[11,"empty","","Creates an empty texture.",727,{"inputs":[{"name":"f"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",727,{"inputs":[{"name":"f"},{"name":"depthstencilformat"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",727,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",727,{"inputs":[{"name":"f"},{"name":"depthstencilformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"depthstencilcubemap"}}],[11,"width","","Returns the width of that image.",727,null],[11,"height","","Returns the height of that image.",727,null],[11,"dimensions","","Returns the dimension of that image.",727,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",727,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",727,null],[11,"mipmap","","Access a single mipmap level of this texture.",727,null],[11,"main_level","","Access the main mipmap level of this texture.",727,null],[11,"clone","","",728,null],[11,"deref","","",728,null],[11,"width","","Returns the width of that image.",728,null],[11,"height","","Returns the height of that image.",728,null],[11,"dimensions","","Returns the dimension of that image.",728,null],[11,"get_texture","","Returns the corresponding texture.",728,null],[11,"get_level","","Returns the texture level.",728,null],[11,"image","","Provides an object representing a single layer of this cubemap.",728,null],[11,"clone","","",729,null],[11,"width","","Returns the width of that image.",729,null],[11,"height","","Returns the height of that image.",729,null],[11,"dimensions","","Returns the dimension of that image.",729,null],[11,"into","","",729,null],[11,"to_depth_stencil_attachment","","",729,null],[0,"cubemap_array","glium::texture","Contains the implementation of `CubemapArray`.",null,null],[3,"CubemapArray","glium::texture::cubemap_array","An array of cube textures  containing floating-point data.",null,null],[3,"CubemapArrayLayer","","Represents a single layer of a `CubemapArray`.",null,null],[3,"CubemapArrayMipmap","","Represents a single mipmap level of a `CubemapArray`.",null,null],[3,"CubemapArrayLayerMipmap","","Represents a single layer of a mipmap level of a `CubemapArray`.",null,null],[3,"CubemapArrayImage","","Represents a single image of a mipmap level of a layer of `CubemapArray`.",null,null],[11,"get_id","","",730,null],[11,"fmt","","",730,null],[11,"deref","","",730,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::cubemap_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",730,null],[11,"get_internal_format","","Determines the internal format of this texture.",730,null],[11,"empty","","Creates an empty texture.",730,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",730,{"inputs":[{"name":"f"},{"name":"uncompressedfloatformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",730,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",730,{"inputs":[{"name":"f"},{"name":"uncompressedfloatformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"cubemaparray"}}],[11,"width","","Returns the width of that image.",730,null],[11,"height","","Returns the height of that image.",730,null],[11,"array_size","","Returns the number of array layers.",730,null],[11,"dimensions","","Returns the dimension of that image.",730,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",730,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",730,null],[11,"first_layer","","Access the first layer of this texture.",730,null],[11,"layer","","Access a single layer of this texture.",730,null],[11,"mipmap","","Access a single mipmap level of this texture.",730,null],[11,"main_level","","Access the main mipmap level of this texture.",730,null],[11,"clone","","",731,null],[11,"width","","Returns the width of that image.",731,null],[11,"height","","Returns the height of that image.",731,null],[11,"dimensions","","Returns the dimension of that image.",731,null],[11,"get_texture","","Returns the corresponding texture.",731,null],[11,"get_layer","","Returns the layer index.",731,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",731,null],[11,"mipmap","","Access a single mipmap level of this layer.",731,null],[11,"main_level","","Access the main mipmap level of this layer.",731,null],[11,"clone","","",732,null],[11,"deref","","",732,null],[11,"width","","Returns the width of that image.",732,null],[11,"height","","Returns the height of that image.",732,null],[11,"array_size","","Returns the number of array layers.",732,null],[11,"dimensions","","Returns the dimension of that image.",732,null],[11,"get_texture","","Returns the corresponding texture.",732,null],[11,"get_level","","Returns the texture level.",732,null],[11,"first_layer","","Access the first layer of this texture.",732,null],[11,"layer","","Access a single layer of this texture.",732,null],[11,"clone","","",733,null],[11,"width","","Returns the width of that image.",733,null],[11,"height","","Returns the height of that image.",733,null],[11,"dimensions","","Returns the dimension of that image.",733,null],[11,"image","","Provides an object representing a single layer of this cubemap.",733,null],[11,"clone","","",734,null],[11,"width","","Returns the width of that image.",734,null],[11,"height","","Returns the height of that image.",734,null],[11,"dimensions","","Returns the dimension of that image.",734,null],[11,"into","","",734,null],[11,"to_color_attachment","","",734,null],[0,"compressed_cubemap_array","glium::texture","Contains the implementation of `CompressedCubemapArray`.",null,null],[3,"CompressedCubemapArray","glium::texture::compressed_cubemap_array","An array of compressed cube textures  containing floating-point data.",null,null],[3,"CompressedCubemapArrayLayer","","Represents a single layer of a `CompressedCubemapArray`.",null,null],[3,"CompressedCubemapArrayMipmap","","Represents a single mipmap level of a `CompressedCubemapArray`.",null,null],[3,"CompressedCubemapArrayLayerMipmap","","Represents a single layer of a mipmap level of a `CompressedCubemapArray`.",null,null],[3,"CompressedCubemapArrayImage","","Represents a single image of a mipmap level of a layer of `CompressedCubemapArray`.",null,null],[11,"get_id","","",735,null],[11,"fmt","","",735,null],[11,"deref","","",735,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::compressed_cubemap_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",735,null],[11,"get_internal_format","","Determines the internal format of this texture.",735,null],[11,"empty_with_format","","Creates an empty texture with a specific format.",735,{"inputs":[{"name":"f"},{"name":"compressedformat"},{"name":"compressedmipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",735,{"inputs":[{"name":"f"},{"name":"compressedformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"compressedcubemaparray"}}],[11,"width","","Returns the width of that image.",735,null],[11,"height","","Returns the height of that image.",735,null],[11,"array_size","","Returns the number of array layers.",735,null],[11,"dimensions","","Returns the dimension of that image.",735,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",735,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",735,null],[11,"first_layer","","Access the first layer of this texture.",735,null],[11,"layer","","Access a single layer of this texture.",735,null],[11,"mipmap","","Access a single mipmap level of this texture.",735,null],[11,"main_level","","Access the main mipmap level of this texture.",735,null],[11,"clone","","",736,null],[11,"width","","Returns the width of that image.",736,null],[11,"height","","Returns the height of that image.",736,null],[11,"dimensions","","Returns the dimension of that image.",736,null],[11,"get_texture","","Returns the corresponding texture.",736,null],[11,"get_layer","","Returns the layer index.",736,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",736,null],[11,"mipmap","","Access a single mipmap level of this layer.",736,null],[11,"main_level","","Access the main mipmap level of this layer.",736,null],[11,"clone","","",737,null],[11,"deref","","",737,null],[11,"width","","Returns the width of that image.",737,null],[11,"height","","Returns the height of that image.",737,null],[11,"array_size","","Returns the number of array layers.",737,null],[11,"dimensions","","Returns the dimension of that image.",737,null],[11,"get_texture","","Returns the corresponding texture.",737,null],[11,"get_level","","Returns the texture level.",737,null],[11,"first_layer","","Access the first layer of this texture.",737,null],[11,"layer","","Access a single layer of this texture.",737,null],[11,"clone","","",738,null],[11,"width","","Returns the width of that image.",738,null],[11,"height","","Returns the height of that image.",738,null],[11,"dimensions","","Returns the dimension of that image.",738,null],[11,"image","","Provides an object representing a single layer of this cubemap.",738,null],[11,"clone","","",739,null],[11,"width","","Returns the width of that image.",739,null],[11,"height","","Returns the height of that image.",739,null],[11,"dimensions","","Returns the dimension of that image.",739,null],[11,"into","","",739,null],[0,"srgb_cubemap_array","glium::texture","Contains the implementation of `SrgbCubemapArray`.",null,null],[3,"SrgbCubemapArray","glium::texture::srgb_cubemap_array","An array of cube textures  containing sRGB floating-point data.",null,null],[3,"SrgbCubemapArrayLayer","","Represents a single layer of a `SrgbCubemapArray`.",null,null],[3,"SrgbCubemapArrayMipmap","","Represents a single mipmap level of a `SrgbCubemapArray`.",null,null],[3,"SrgbCubemapArrayLayerMipmap","","Represents a single layer of a mipmap level of a `SrgbCubemapArray`.",null,null],[3,"SrgbCubemapArrayImage","","Represents a single image of a mipmap level of a layer of `SrgbCubemapArray`.",null,null],[11,"get_id","","",740,null],[11,"fmt","","",740,null],[11,"deref","","",740,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::srgb_cubemap_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",740,null],[11,"get_internal_format","","Determines the internal format of this texture.",740,null],[11,"empty","","Creates an empty texture.",740,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",740,{"inputs":[{"name":"f"},{"name":"srgbformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",740,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",740,{"inputs":[{"name":"f"},{"name":"srgbformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"srgbcubemaparray"}}],[11,"width","","Returns the width of that image.",740,null],[11,"height","","Returns the height of that image.",740,null],[11,"array_size","","Returns the number of array layers.",740,null],[11,"dimensions","","Returns the dimension of that image.",740,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",740,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",740,null],[11,"first_layer","","Access the first layer of this texture.",740,null],[11,"layer","","Access a single layer of this texture.",740,null],[11,"mipmap","","Access a single mipmap level of this texture.",740,null],[11,"main_level","","Access the main mipmap level of this texture.",740,null],[11,"clone","","",741,null],[11,"width","","Returns the width of that image.",741,null],[11,"height","","Returns the height of that image.",741,null],[11,"dimensions","","Returns the dimension of that image.",741,null],[11,"get_texture","","Returns the corresponding texture.",741,null],[11,"get_layer","","Returns the layer index.",741,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",741,null],[11,"mipmap","","Access a single mipmap level of this layer.",741,null],[11,"main_level","","Access the main mipmap level of this layer.",741,null],[11,"clone","","",742,null],[11,"deref","","",742,null],[11,"width","","Returns the width of that image.",742,null],[11,"height","","Returns the height of that image.",742,null],[11,"array_size","","Returns the number of array layers.",742,null],[11,"dimensions","","Returns the dimension of that image.",742,null],[11,"get_texture","","Returns the corresponding texture.",742,null],[11,"get_level","","Returns the texture level.",742,null],[11,"first_layer","","Access the first layer of this texture.",742,null],[11,"layer","","Access a single layer of this texture.",742,null],[11,"clone","","",743,null],[11,"width","","Returns the width of that image.",743,null],[11,"height","","Returns the height of that image.",743,null],[11,"dimensions","","Returns the dimension of that image.",743,null],[11,"image","","Provides an object representing a single layer of this cubemap.",743,null],[11,"clone","","",744,null],[11,"width","","Returns the width of that image.",744,null],[11,"height","","Returns the height of that image.",744,null],[11,"dimensions","","Returns the dimension of that image.",744,null],[11,"into","","",744,null],[11,"to_color_attachment","","",744,null],[0,"compressed_srgb_cubemap_array","glium::texture","Contains the implementation of `CompressedSrgbCubemapArray`.",null,null],[3,"CompressedSrgbCubemapArray","glium::texture::compressed_srgb_cubemap_array","An array of compressed cube textures  containing sRGB floating-point data.",null,null],[3,"CompressedSrgbCubemapArrayLayer","","Represents a single layer of a `CompressedSrgbCubemapArray`.",null,null],[3,"CompressedSrgbCubemapArrayMipmap","","Represents a single mipmap level of a `CompressedSrgbCubemapArray`.",null,null],[3,"CompressedSrgbCubemapArrayLayerMipmap","","Represents a single layer of a mipmap level of a `CompressedSrgbCubemapArray`.",null,null],[3,"CompressedSrgbCubemapArrayImage","","Represents a single image of a mipmap level of a layer of `CompressedSrgbCubemapArray`.",null,null],[11,"get_id","","",745,null],[11,"fmt","","",745,null],[11,"deref","","",745,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::compressed_srgb_cubemap_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",745,null],[11,"get_internal_format","","Determines the internal format of this texture.",745,null],[11,"empty_with_format","","Creates an empty texture with a specific format.",745,{"inputs":[{"name":"f"},{"name":"compressedsrgbformat"},{"name":"compressedmipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",745,{"inputs":[{"name":"f"},{"name":"compressedsrgbformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"compressedsrgbcubemaparray"}}],[11,"width","","Returns the width of that image.",745,null],[11,"height","","Returns the height of that image.",745,null],[11,"array_size","","Returns the number of array layers.",745,null],[11,"dimensions","","Returns the dimension of that image.",745,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",745,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",745,null],[11,"first_layer","","Access the first layer of this texture.",745,null],[11,"layer","","Access a single layer of this texture.",745,null],[11,"mipmap","","Access a single mipmap level of this texture.",745,null],[11,"main_level","","Access the main mipmap level of this texture.",745,null],[11,"clone","","",746,null],[11,"width","","Returns the width of that image.",746,null],[11,"height","","Returns the height of that image.",746,null],[11,"dimensions","","Returns the dimension of that image.",746,null],[11,"get_texture","","Returns the corresponding texture.",746,null],[11,"get_layer","","Returns the layer index.",746,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",746,null],[11,"mipmap","","Access a single mipmap level of this layer.",746,null],[11,"main_level","","Access the main mipmap level of this layer.",746,null],[11,"clone","","",747,null],[11,"deref","","",747,null],[11,"width","","Returns the width of that image.",747,null],[11,"height","","Returns the height of that image.",747,null],[11,"array_size","","Returns the number of array layers.",747,null],[11,"dimensions","","Returns the dimension of that image.",747,null],[11,"get_texture","","Returns the corresponding texture.",747,null],[11,"get_level","","Returns the texture level.",747,null],[11,"first_layer","","Access the first layer of this texture.",747,null],[11,"layer","","Access a single layer of this texture.",747,null],[11,"clone","","",748,null],[11,"width","","Returns the width of that image.",748,null],[11,"height","","Returns the height of that image.",748,null],[11,"dimensions","","Returns the dimension of that image.",748,null],[11,"image","","Provides an object representing a single layer of this cubemap.",748,null],[11,"clone","","",749,null],[11,"width","","Returns the width of that image.",749,null],[11,"height","","Returns the height of that image.",749,null],[11,"dimensions","","Returns the dimension of that image.",749,null],[11,"into","","",749,null],[0,"integral_cubemap_array","glium::texture","Contains the implementation of `IntegralCubemapArray`.",null,null],[3,"IntegralCubemapArray","glium::texture::integral_cubemap_array","An array of cube textures  containing signed integral data.",null,null],[3,"IntegralCubemapArrayLayer","","Represents a single layer of a `IntegralCubemapArray`.",null,null],[3,"IntegralCubemapArrayMipmap","","Represents a single mipmap level of a `IntegralCubemapArray`.",null,null],[3,"IntegralCubemapArrayLayerMipmap","","Represents a single layer of a mipmap level of a `IntegralCubemapArray`.",null,null],[3,"IntegralCubemapArrayImage","","Represents a single image of a mipmap level of a layer of `IntegralCubemapArray`.",null,null],[11,"get_id","","",750,null],[11,"fmt","","",750,null],[11,"deref","","",750,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::integral_cubemap_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",750,null],[11,"get_internal_format","","Determines the internal format of this texture.",750,null],[11,"empty","","Creates an empty texture.",750,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",750,{"inputs":[{"name":"f"},{"name":"uncompressedintformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",750,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",750,{"inputs":[{"name":"f"},{"name":"uncompressedintformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"integralcubemaparray"}}],[11,"width","","Returns the width of that image.",750,null],[11,"height","","Returns the height of that image.",750,null],[11,"array_size","","Returns the number of array layers.",750,null],[11,"dimensions","","Returns the dimension of that image.",750,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",750,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",750,null],[11,"first_layer","","Access the first layer of this texture.",750,null],[11,"layer","","Access a single layer of this texture.",750,null],[11,"mipmap","","Access a single mipmap level of this texture.",750,null],[11,"main_level","","Access the main mipmap level of this texture.",750,null],[11,"clone","","",751,null],[11,"width","","Returns the width of that image.",751,null],[11,"height","","Returns the height of that image.",751,null],[11,"dimensions","","Returns the dimension of that image.",751,null],[11,"get_texture","","Returns the corresponding texture.",751,null],[11,"get_layer","","Returns the layer index.",751,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",751,null],[11,"mipmap","","Access a single mipmap level of this layer.",751,null],[11,"main_level","","Access the main mipmap level of this layer.",751,null],[11,"clone","","",752,null],[11,"deref","","",752,null],[11,"width","","Returns the width of that image.",752,null],[11,"height","","Returns the height of that image.",752,null],[11,"array_size","","Returns the number of array layers.",752,null],[11,"dimensions","","Returns the dimension of that image.",752,null],[11,"get_texture","","Returns the corresponding texture.",752,null],[11,"get_level","","Returns the texture level.",752,null],[11,"first_layer","","Access the first layer of this texture.",752,null],[11,"layer","","Access a single layer of this texture.",752,null],[11,"clone","","",753,null],[11,"width","","Returns the width of that image.",753,null],[11,"height","","Returns the height of that image.",753,null],[11,"dimensions","","Returns the dimension of that image.",753,null],[11,"image","","Provides an object representing a single layer of this cubemap.",753,null],[11,"clone","","",754,null],[11,"width","","Returns the width of that image.",754,null],[11,"height","","Returns the height of that image.",754,null],[11,"dimensions","","Returns the dimension of that image.",754,null],[11,"into","","",754,null],[11,"to_color_attachment","","",754,null],[0,"unsigned_cubemap_array","glium::texture","Contains the implementation of `UnsignedCubemapArray`.",null,null],[3,"UnsignedCubemapArray","glium::texture::unsigned_cubemap_array","An array of cube textures  containing unsigned integral data.",null,null],[3,"UnsignedCubemapArrayLayer","","Represents a single layer of a `UnsignedCubemapArray`.",null,null],[3,"UnsignedCubemapArrayMipmap","","Represents a single mipmap level of a `UnsignedCubemapArray`.",null,null],[3,"UnsignedCubemapArrayLayerMipmap","","Represents a single layer of a mipmap level of a `UnsignedCubemapArray`.",null,null],[3,"UnsignedCubemapArrayImage","","Represents a single image of a mipmap level of a layer of `UnsignedCubemapArray`.",null,null],[11,"get_id","","",755,null],[11,"fmt","","",755,null],[11,"deref","","",755,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::unsigned_cubemap_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",755,null],[11,"get_internal_format","","Determines the internal format of this texture.",755,null],[11,"empty","","Creates an empty texture.",755,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",755,{"inputs":[{"name":"f"},{"name":"uncompresseduintformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",755,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",755,{"inputs":[{"name":"f"},{"name":"uncompresseduintformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"unsignedcubemaparray"}}],[11,"width","","Returns the width of that image.",755,null],[11,"height","","Returns the height of that image.",755,null],[11,"array_size","","Returns the number of array layers.",755,null],[11,"dimensions","","Returns the dimension of that image.",755,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",755,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",755,null],[11,"first_layer","","Access the first layer of this texture.",755,null],[11,"layer","","Access a single layer of this texture.",755,null],[11,"mipmap","","Access a single mipmap level of this texture.",755,null],[11,"main_level","","Access the main mipmap level of this texture.",755,null],[11,"clone","","",756,null],[11,"width","","Returns the width of that image.",756,null],[11,"height","","Returns the height of that image.",756,null],[11,"dimensions","","Returns the dimension of that image.",756,null],[11,"get_texture","","Returns the corresponding texture.",756,null],[11,"get_layer","","Returns the layer index.",756,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",756,null],[11,"mipmap","","Access a single mipmap level of this layer.",756,null],[11,"main_level","","Access the main mipmap level of this layer.",756,null],[11,"clone","","",757,null],[11,"deref","","",757,null],[11,"width","","Returns the width of that image.",757,null],[11,"height","","Returns the height of that image.",757,null],[11,"array_size","","Returns the number of array layers.",757,null],[11,"dimensions","","Returns the dimension of that image.",757,null],[11,"get_texture","","Returns the corresponding texture.",757,null],[11,"get_level","","Returns the texture level.",757,null],[11,"first_layer","","Access the first layer of this texture.",757,null],[11,"layer","","Access a single layer of this texture.",757,null],[11,"clone","","",758,null],[11,"width","","Returns the width of that image.",758,null],[11,"height","","Returns the height of that image.",758,null],[11,"dimensions","","Returns the dimension of that image.",758,null],[11,"image","","Provides an object representing a single layer of this cubemap.",758,null],[11,"clone","","",759,null],[11,"width","","Returns the width of that image.",759,null],[11,"height","","Returns the height of that image.",759,null],[11,"dimensions","","Returns the dimension of that image.",759,null],[11,"into","","",759,null],[11,"to_color_attachment","","",759,null],[0,"depth_cubemap_array","glium::texture","Contains the implementation of `DepthCubemapArray`.",null,null],[3,"DepthCubemapArray","glium::texture::depth_cubemap_array","An array of cube textures  containing depth data.",null,null],[3,"DepthCubemapArrayLayer","","Represents a single layer of a `DepthCubemapArray`.",null,null],[3,"DepthCubemapArrayMipmap","","Represents a single mipmap level of a `DepthCubemapArray`.",null,null],[3,"DepthCubemapArrayLayerMipmap","","Represents a single layer of a mipmap level of a `DepthCubemapArray`.",null,null],[3,"DepthCubemapArrayImage","","Represents a single image of a mipmap level of a layer of `DepthCubemapArray`.",null,null],[11,"get_id","","",760,null],[11,"fmt","","",760,null],[11,"deref","","",760,null],[11,"as_uniform_value","glium::uniforms","",470,null],[11,"sampled","glium::texture::depth_cubemap_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",760,null],[11,"get_internal_format","","Determines the internal format of this texture.",760,null],[11,"empty","","Creates an empty texture.",760,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",760,{"inputs":[{"name":"f"},{"name":"depthformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",760,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",760,{"inputs":[{"name":"f"},{"name":"depthformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"depthcubemaparray"}}],[11,"width","","Returns the width of that image.",760,null],[11,"height","","Returns the height of that image.",760,null],[11,"array_size","","Returns the number of array layers.",760,null],[11,"dimensions","","Returns the dimension of that image.",760,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",760,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",760,null],[11,"first_layer","","Access the first layer of this texture.",760,null],[11,"layer","","Access a single layer of this texture.",760,null],[11,"mipmap","","Access a single mipmap level of this texture.",760,null],[11,"main_level","","Access the main mipmap level of this texture.",760,null],[11,"clone","","",761,null],[11,"width","","Returns the width of that image.",761,null],[11,"height","","Returns the height of that image.",761,null],[11,"dimensions","","Returns the dimension of that image.",761,null],[11,"get_texture","","Returns the corresponding texture.",761,null],[11,"get_layer","","Returns the layer index.",761,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",761,null],[11,"mipmap","","Access a single mipmap level of this layer.",761,null],[11,"main_level","","Access the main mipmap level of this layer.",761,null],[11,"clone","","",762,null],[11,"deref","","",762,null],[11,"width","","Returns the width of that image.",762,null],[11,"height","","Returns the height of that image.",762,null],[11,"array_size","","Returns the number of array layers.",762,null],[11,"dimensions","","Returns the dimension of that image.",762,null],[11,"get_texture","","Returns the corresponding texture.",762,null],[11,"get_level","","Returns the texture level.",762,null],[11,"first_layer","","Access the first layer of this texture.",762,null],[11,"layer","","Access a single layer of this texture.",762,null],[11,"clone","","",763,null],[11,"width","","Returns the width of that image.",763,null],[11,"height","","Returns the height of that image.",763,null],[11,"dimensions","","Returns the dimension of that image.",763,null],[11,"image","","Provides an object representing a single layer of this cubemap.",763,null],[11,"clone","","",764,null],[11,"width","","Returns the width of that image.",764,null],[11,"height","","Returns the height of that image.",764,null],[11,"dimensions","","Returns the dimension of that image.",764,null],[11,"into","","",764,null],[11,"to_depth_attachment","","",764,null],[0,"stencil_cubemap_array","glium::texture","Contains the implementation of `StencilCubemapArray`.",null,null],[3,"StencilCubemapArray","glium::texture::stencil_cubemap_array","An array of cube textures  containing stencil data.",null,null],[3,"StencilCubemapArrayLayer","","Represents a single layer of a `StencilCubemapArray`.",null,null],[3,"StencilCubemapArrayMipmap","","Represents a single mipmap level of a `StencilCubemapArray`.",null,null],[3,"StencilCubemapArrayLayerMipmap","","Represents a single layer of a mipmap level of a `StencilCubemapArray`.",null,null],[3,"StencilCubemapArrayImage","","Represents a single image of a mipmap level of a layer of `StencilCubemapArray`.",null,null],[11,"get_id","","",765,null],[11,"fmt","","",765,null],[11,"deref","","",765,null],[11,"get_internal_format","","Determines the internal format of this texture.",765,null],[11,"empty","","Creates an empty texture.",765,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",765,{"inputs":[{"name":"f"},{"name":"stencilformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",765,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",765,{"inputs":[{"name":"f"},{"name":"stencilformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"stencilcubemaparray"}}],[11,"width","","Returns the width of that image.",765,null],[11,"height","","Returns the height of that image.",765,null],[11,"array_size","","Returns the number of array layers.",765,null],[11,"dimensions","","Returns the dimension of that image.",765,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",765,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",765,null],[11,"first_layer","","Access the first layer of this texture.",765,null],[11,"layer","","Access a single layer of this texture.",765,null],[11,"mipmap","","Access a single mipmap level of this texture.",765,null],[11,"main_level","","Access the main mipmap level of this texture.",765,null],[11,"clone","","",766,null],[11,"width","","Returns the width of that image.",766,null],[11,"height","","Returns the height of that image.",766,null],[11,"dimensions","","Returns the dimension of that image.",766,null],[11,"get_texture","","Returns the corresponding texture.",766,null],[11,"get_layer","","Returns the layer index.",766,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",766,null],[11,"mipmap","","Access a single mipmap level of this layer.",766,null],[11,"main_level","","Access the main mipmap level of this layer.",766,null],[11,"clone","","",767,null],[11,"deref","","",767,null],[11,"width","","Returns the width of that image.",767,null],[11,"height","","Returns the height of that image.",767,null],[11,"array_size","","Returns the number of array layers.",767,null],[11,"dimensions","","Returns the dimension of that image.",767,null],[11,"get_texture","","Returns the corresponding texture.",767,null],[11,"get_level","","Returns the texture level.",767,null],[11,"first_layer","","Access the first layer of this texture.",767,null],[11,"layer","","Access a single layer of this texture.",767,null],[11,"clone","","",768,null],[11,"width","","Returns the width of that image.",768,null],[11,"height","","Returns the height of that image.",768,null],[11,"dimensions","","Returns the dimension of that image.",768,null],[11,"image","","Provides an object representing a single layer of this cubemap.",768,null],[11,"clone","","",769,null],[11,"width","","Returns the width of that image.",769,null],[11,"height","","Returns the height of that image.",769,null],[11,"dimensions","","Returns the dimension of that image.",769,null],[11,"into","","",769,null],[11,"to_stencil_attachment","","",769,null],[0,"depth_stencil_cubemap_array","glium::texture","Contains the implementation of `DepthStencilCubemapArray`.",null,null],[3,"DepthStencilCubemapArray","glium::texture::depth_stencil_cubemap_array","An array of cube textures  containing both depth and stencil data.",null,null],[3,"DepthStencilCubemapArrayLayer","","Represents a single layer of a `DepthStencilCubemapArray`.",null,null],[3,"DepthStencilCubemapArrayMipmap","","Represents a single mipmap level of a `DepthStencilCubemapArray`.",null,null],[3,"DepthStencilCubemapArrayLayerMipmap","","Represents a single layer of a mipmap level of a `DepthStencilCubemapArray`.",null,null],[3,"DepthStencilCubemapArrayImage","","Represents a single image of a mipmap level of a layer of `DepthStencilCubemapArray`.",null,null],[11,"get_id","","",770,null],[11,"fmt","","",770,null],[11,"deref","","",770,null],[11,"get_internal_format","","Determines the internal format of this texture.",770,null],[11,"empty","","Creates an empty texture.",770,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",770,{"inputs":[{"name":"f"},{"name":"depthstencilformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",770,{"inputs":[{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference&#39;s lifetime has ended.",770,{"inputs":[{"name":"f"},{"name":"depthstencilformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"depthstencilcubemaparray"}}],[11,"width","","Returns the width of that image.",770,null],[11,"height","","Returns the height of that image.",770,null],[11,"array_size","","Returns the number of array layers.",770,null],[11,"dimensions","","Returns the dimension of that image.",770,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",770,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",770,null],[11,"first_layer","","Access the first layer of this texture.",770,null],[11,"layer","","Access a single layer of this texture.",770,null],[11,"mipmap","","Access a single mipmap level of this texture.",770,null],[11,"main_level","","Access the main mipmap level of this texture.",770,null],[11,"clone","","",771,null],[11,"width","","Returns the width of that image.",771,null],[11,"height","","Returns the height of that image.",771,null],[11,"dimensions","","Returns the dimension of that image.",771,null],[11,"get_texture","","Returns the corresponding texture.",771,null],[11,"get_layer","","Returns the layer index.",771,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",771,null],[11,"mipmap","","Access a single mipmap level of this layer.",771,null],[11,"main_level","","Access the main mipmap level of this layer.",771,null],[11,"clone","","",772,null],[11,"deref","","",772,null],[11,"width","","Returns the width of that image.",772,null],[11,"height","","Returns the height of that image.",772,null],[11,"array_size","","Returns the number of array layers.",772,null],[11,"dimensions","","Returns the dimension of that image.",772,null],[11,"get_texture","","Returns the corresponding texture.",772,null],[11,"get_level","","Returns the texture level.",772,null],[11,"first_layer","","Access the first layer of this texture.",772,null],[11,"layer","","Access a single layer of this texture.",772,null],[11,"clone","","",773,null],[11,"width","","Returns the width of that image.",773,null],[11,"height","","Returns the height of that image.",773,null],[11,"dimensions","","Returns the dimension of that image.",773,null],[11,"image","","Provides an object representing a single layer of this cubemap.",773,null],[11,"clone","","",774,null],[11,"width","","Returns the width of that image.",774,null],[11,"height","","Returns the height of that image.",774,null],[11,"dimensions","","Returns the dimension of that image.",774,null],[11,"into","","",774,null],[11,"to_depth_stencil_attachment","","",774,null],[8,"PixelValue","glium::texture","A trait that must be implemented for any type that can represent the value of a pixel.",null,null],[10,"get_format","","Returns corresponding client format.",775,{"inputs":[],"output":{"name":"clientformat"}}],[8,"Texture1dDataSource","","Trait that describes data for a one-dimensional texture.",null,null],[16,"Data","","The type of each pixel.",776,null],[10,"into_raw","","Returns the raw representation of the data.",776,null],[8,"Texture1dDataSink","","Trait that describes types that can be built from one-dimensional texture data.",null,null],[10,"from_raw","","Builds a new object from raw data.",777,{"inputs":[{"name":"cow"},{"name":"u32"}],"output":{"name":"self"}}],[8,"Texture2dDataSource","","Trait that describes data for a two-dimensional texture.",null,null],[16,"Data","","The type of each pixel.",778,null],[10,"into_raw","","Returns the raw representation of the data.",778,null],[8,"Texture2dDataSink","","Trait that describes types that can be built from two-dimensional texture data.",null,null],[10,"from_raw","","Builds a new object from raw data.",779,{"inputs":[{"name":"cow"},{"name":"u32"},{"name":"u32"}],"output":{"name":"self"}}],[8,"Texture3dDataSource","","Trait that describes data for a two-dimensional texture.",null,null],[16,"Data","","The type of each pixel.",780,null],[10,"into_raw","","Returns the raw representation of the data.",780,null],[8,"Texture3dDataSink","","Trait that describes types that can be built from one-dimensional texture data.",null,null],[10,"from_raw","","Builds a new object from raw data.",781,{"inputs":[{"name":"cow"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"self"}}],[11,"hash","","",516,null],[11,"eq","","",516,null],[11,"fmt","","",516,null],[11,"clone","","",516,null],[11,"get_layer_index","","In some situations whole cubemaps can be binded at once. If this is the case, each layer\nof the cubemap has a specific index.",516,null],[11,"hash","","",517,null],[11,"eq","","",517,null],[11,"fmt","","",517,null],[11,"clone","","",517,null],[11,"eq","","",518,null],[11,"ne","","",518,null],[11,"clone","","",518,null],[11,"fmt","","",518,null],[11,"from","","",518,{"inputs":[{"name":"compressedmipmapsoption"}],"output":{"name":"mipmapsoption"}}],[11,"eq","","",519,null],[11,"ne","","",519,null],[11,"clone","","",519,null],[11,"fmt","","",519,null],[11,"into_raw","collections::vec","",193,null],[11,"into_raw","glium::texture","",498,null],[11,"from_raw","collections::vec","",193,{"inputs":[{"name":"cow"},{"name":"u32"}],"output":{"name":"self"}}],[11,"from_raw_rgb","glium::texture","Builds a raw image from a vector of interleaved RGB values.",499,null],[11,"from_raw_rgba","","Builds a raw image from a vector of interleaved RGBA values.",499,null],[11,"from_raw_rgb_reversed","","Builds a raw image from a vector of interleaved RGB values, flipping it vertically.",499,null],[11,"from_raw_rgba_reversed","","Builds a raw image from a vector of interleaved RGBA values, flipping it vertically.",499,null],[11,"from_vec_raw1d","","Transforms a Vec&lt;RawImage1d&gt; into a RawImage2d",499,{"inputs":[{"name":"vec"}],"output":{"name":"rawimage2d"}}],[11,"into_raw","collections::vec","",193,null],[11,"into_raw","glium::texture","",499,null],[11,"from_raw","collections::vec","",193,{"inputs":[{"name":"cow"},{"name":"u32"},{"name":"u32"}],"output":{"name":"self"}}],[11,"from_raw","glium::texture","",499,{"inputs":[{"name":"cow"},{"name":"u32"},{"name":"u32"}],"output":{"name":"self"}}],[11,"from_vec_raw2d","","Transforms a Vec&lt;RawImage2d&gt; into a RawImage3d",500,{"inputs":[{"name":"vec"}],"output":{"name":"rawimage3d"}}],[11,"into_raw","collections::vec","",193,null],[11,"into_raw","glium::texture","",500,null],[11,"from_raw","collections::vec","",193,{"inputs":[{"name":"cow"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"self"}}],[11,"eq","glium::texture","",520,null],[11,"clone","","",520,null],[11,"fmt","","",520,null],[11,"fmt","","",520,null],[11,"description","","",520,null],[11,"from","","",520,{"inputs":[{"name":"formatnotsupportederror"}],"output":{"name":"texturecreationerror"}}],[11,"clone","glium","",37,null],[11,"fmt","","",37,null],[11,"eq","glium::backend","",48,null],[11,"fmt","","",48,null],[11,"clone","","",48,null],[11,"new","","Builds a new context.",782,{"inputs":[{"name":"b"},{"name":"bool"},{"name":"debugcallbackbehavior"}],"output":{"name":"result"}}],[11,"get_framebuffer_dimensions","","Calls `get_framebuffer_dimensions` on the backend object stored by this context.",782,null],[11,"rebuild","","Changes the OpenGL context associated with this context.",782,null],[11,"swap_buffers","","Swaps the buffers in the backend.",782,null],[11,"get_version","","DEPRECATED. Use `get_opengl_version` instead.",782,null],[11,"get_opengl_version","","Returns the OpenGL version detected by this context.",782,null],[11,"get_supported_glsl_version","","Returns the GLSL version guaranteed to be supported.",782,null],[11,"is_glsl_version_supported","","Returns true if the given GLSL version is supported.",782,null],[11,"get_opengl_version_string","","Returns a string containing this GL version or release number used by this context.",782,null],[11,"get_opengl_vendor_string","","Returns a string containing the company responsible for this GL implementation.",782,null],[11,"get_opengl_renderer_string","","Returns a string containing the name of the GL renderer used by this context.",782,null],[11,"is_debug","","Returns true if the context is in debug mode.",782,null],[11,"is_forward_compatible","","Returns true if the context is in &quot;forward-compatible&quot; mode.",782,null],[11,"get_opengl_profile","","Returns this context&#39;s OpenGL profile if available.",782,null],[11,"is_robust","","Returns true if out-of-bound buffer access from the GPU side (inside a program) cannot\nresult in a crash.",782,null],[11,"is_context_loss_possible","","Returns true if a context loss is possible.",782,null],[11,"is_context_lost","","Returns true if the context has been lost and needs to be recreated.",782,null],[11,"get_release_behavior","","Returns the behavior when the current OpenGL context is changed.",782,null],[11,"get_max_anisotropy_support","","Returns the maximum value that can be used for anisotropic filtering, or `None`\nif the hardware doesn&#39;t support it.",782,null],[11,"get_max_viewport_dimensions","","Returns the maximum dimensions of the viewport.",782,null],[11,"release_shader_compiler","","Releases the shader compiler, indicating that no new programs will be created for a while.",782,null],[11,"get_free_video_memory","","Returns an estimate of the amount of video memory available in bytes.",782,null],[11,"read_front_buffer","","Reads the content of the front buffer.",782,null],[11,"exec_in_context","","Execute an arbitrary closure with the OpenGL context active. Useful if another\ncomponent needs to directly manipulate OpenGL state.",782,null],[11,"assert_no_error","","Asserts that there are no OpenGL errors pending.",782,null],[11,"synchronize","","DEPRECATED. Renamed `finish`.",782,null],[11,"finish","","Calls `glFinish()`. This waits until all the previously issued commands have finished\nbeing executed.",782,null],[11,"flush","","Calls `glFlush()`. This starts executing the commands that you have issued if it is not\nyet the case.",782,null],[11,"insert_debug_marker","","Inserts a debugging string in the commands queue. If you use an OpenGL debugger, you will\nbe able to see that string.",782,null],[11,"debug_insert_debug_marker","","Same as `insert_debug_marker`, except that if you don&#39;t compile with `debug_assertions`\nit is a no-op and returns `Ok`.",782,null],[11,"get_version","","",782,null],[11,"get_extensions","","",782,null],[11,"get_capabilities","","",782,null],[11,"drop","","",782,null],[11,"default","glium::debug","",73,{"inputs":[],"output":{"name":"debugcallbackbehavior"}}],[11,"eq","glium::framebuffer","",95,null],[11,"ne","","",95,null],[11,"fmt","","",95,null],[11,"clone","","",95,null],[11,"fmt","","",95,null],[11,"description","","",95,null],[11,"eq","glium::texture","",501,null],[11,"clone","","",501,null],[11,"fmt","","",501,null],[11,"get_size","","Returns the size in bytes of a pixel of this type.",501,null],[11,"get_num_components","","Returns the number of components of this client format.",501,null],[11,"eq","","",503,null],[11,"hash","","",503,null],[11,"clone","","",503,null],[11,"fmt","","",503,null],[11,"get_formats_list","","Returns a list of all the possible values of this enumeration.",503,{"inputs":[],"output":{"name":"vec"}}],[11,"to_texture_format","","Turns this format into a more generic `TextureFormat`.",503,null],[11,"is_supported","","Returns true if this format is supported by the backend.",503,null],[11,"is_color_renderable","","Returns true if a texture or renderbuffer with this format can be used as a framebuffer\nattachment.",503,null],[11,"eq","","",511,null],[11,"hash","","",511,null],[11,"clone","","",511,null],[11,"fmt","","",511,null],[11,"get_formats_list","","Returns a list of all the possible values of this enumeration.",511,{"inputs":[],"output":{"name":"vec"}}],[11,"to_texture_format","","Turns this format into a more generic `TextureFormat`.",511,null],[11,"is_supported","","Returns true if this format is supported by the backend.",511,null],[11,"is_color_renderable","","Returns true if a texture or renderbuffer with this format can be used as a framebuffer\nattachment.",511,null],[11,"eq","","",504,null],[11,"hash","","",504,null],[11,"clone","","",504,null],[11,"fmt","","",504,null],[11,"get_formats_list","","Returns a list of all the possible values of this enumeration.",504,{"inputs":[],"output":{"name":"vec"}}],[11,"to_texture_format","","Turns this format into a more generic `TextureFormat`.",504,null],[11,"is_supported","","Returns true if this format is supported by the backend.",504,null],[11,"is_color_renderable","","Returns true if a texture or renderbuffer with this format can be used as a framebuffer\nattachment.",504,null],[11,"eq","","",505,null],[11,"hash","","",505,null],[11,"clone","","",505,null],[11,"fmt","","",505,null],[11,"get_formats_list","","Returns a list of all the possible values of this enumeration.",505,{"inputs":[],"output":{"name":"vec"}}],[11,"to_texture_format","","Turns this format into a more generic `TextureFormat`.",505,null],[11,"is_supported","","Returns true if this format is supported by the backend.",505,null],[11,"is_color_renderable","","Returns true if a texture or renderbuffer with this format can be used as a framebuffer\nattachment.",505,null],[11,"eq","","",506,null],[11,"hash","","",506,null],[11,"clone","","",506,null],[11,"fmt","","",506,null],[11,"get_formats_list","","Returns a list of all the possible values of this enumeration.",506,{"inputs":[],"output":{"name":"vec"}}],[11,"to_texture_format","","Turns this format into a more generic `TextureFormat`.",506,null],[11,"is_supported","","Returns true if this format is supported by the backend.",506,null],[11,"eq","","",510,null],[11,"hash","","",510,null],[11,"clone","","",510,null],[11,"fmt","","",510,null],[11,"get_formats_list","","Returns a list of all the possible values of this enumeration.",510,{"inputs":[],"output":{"name":"vec"}}],[11,"to_texture_format","","Turns this format into a more generic `TextureFormat`.",510,null],[11,"is_supported","","Returns true if this format is supported by the backend.",510,null],[11,"eq","","",507,null],[11,"hash","","",507,null],[11,"clone","","",507,null],[11,"fmt","","",507,null],[11,"get_formats_list","","Returns a list of all the possible values of this enumeration.",507,{"inputs":[],"output":{"name":"vec"}}],[11,"to_texture_format","","Turns this format into a more generic `TextureFormat`.",507,null],[11,"is_supported","","Returns true if this format is supported by the backend.",507,null],[11,"eq","","",508,null],[11,"hash","","",508,null],[11,"clone","","",508,null],[11,"fmt","","",508,null],[11,"get_formats_list","","Returns a list of all the possible values of this enumeration.",508,{"inputs":[],"output":{"name":"vec"}}],[11,"to_texture_format","","Turns this format into a more generic `TextureFormat`.",508,null],[11,"is_supported","","Returns true if this format is supported by the backend.",508,null],[11,"eq","","",509,null],[11,"hash","","",509,null],[11,"clone","","",509,null],[11,"fmt","","",509,null],[11,"get_formats_list","","Returns a list of all the possible values of this enumeration.",509,{"inputs":[],"output":{"name":"vec"}}],[11,"to_texture_format","","Turns this format into a more generic `TextureFormat`.",509,null],[11,"is_supported_for_textures","","Returns true if this format is supported by the backend for textures.",509,null],[11,"is_supported_for_renderbuffers","","Returns true if this format is supported by the backend for renderbuffers.",509,null],[11,"eq","","",502,null],[11,"ne","","",502,null],[11,"hash","","",502,null],[11,"clone","","",502,null],[11,"fmt","","",502,null],[11,"get_formats_list","","Returns a list of all the possible values of this enumeration.",502,{"inputs":[],"output":{"name":"vec"}}],[11,"is_supported_for_textures","","Returns true if this format is supported by the backend for textures.",502,null],[11,"is_supported_for_renderbuffers","","Returns true if this format is supported by the backend for renderbuffers.",502,null],[11,"is_renderable","","Returns true if the format is color-renderable, depth-renderable, depth-stencil-renderable\nor stencil-renderable.",502,null],[11,"new","glium","Builds a new `SyncFence` that is injected in the server.",783,{"inputs":[{"name":"f"}],"output":{"name":"result"}}],[11,"wait","","Blocks until the operation has finished on the server.",783,null],[11,"drop","","",783,null],[11,"into_sync_fence","","Turns the prototype into a real fence.",784,null],[11,"drop","","",784,null],[11,"eq","","",34,null],[11,"ne","","",34,null],[11,"clone","","",34,null],[11,"fmt","","",34,null],[11,"eq","","",43,null],[11,"clone","","",43,null],[11,"fmt","","",43,null],[11,"partial_cmp","","",34,null],[11,"hash","core::num","",785,null],[11,"default","","",785,{"inputs":[],"output":{"name":"wrapping"}}],[11,"clone","","",785,null],[11,"cmp","","",785,null],[11,"partial_cmp","","",785,null],[11,"lt","","",785,null],[11,"le","","",785,null],[11,"gt","","",785,null],[11,"ge","","",785,null],[11,"eq","","",785,null],[11,"ne","","",785,null],[11,"fmt","","",785,null],[11,"fmt","","",785,null],[11,"fmt","","",785,null],[11,"fmt","","",785,null],[11,"fmt","","",785,null],[11,"fmt","","",785,null],[11,"shl","","",785,null],[11,"shl_assign","","",785,null],[11,"shr","","",785,null],[11,"shr_assign","","",785,null],[11,"shl","","",785,null],[11,"shl_assign","","",785,null],[11,"shr","","",785,null],[11,"shr_assign","","",785,null],[11,"shl","","",785,null],[11,"shl_assign","","",785,null],[11,"shr","","",785,null],[11,"shr_assign","","",785,null],[11,"shl","","",785,null],[11,"shl_assign","","",785,null],[11,"shr","","",785,null],[11,"shr_assign","","",785,null],[11,"shl","","",785,null],[11,"shl_assign","","",785,null],[11,"shr","","",785,null],[11,"shr_assign","","",785,null],[11,"shl","","",785,null],[11,"shl_assign","","",785,null],[11,"shr","","",785,null],[11,"shr_assign","","",785,null],[11,"shl","","",785,null],[11,"shl_assign","","",785,null],[11,"shr","","",785,null],[11,"shr_assign","","",785,null],[11,"shl","","",785,null],[11,"shl_assign","","",785,null],[11,"shr","","",785,null],[11,"shr_assign","","",785,null],[11,"shl","","",785,null],[11,"shl_assign","","",785,null],[11,"shr","","",785,null],[11,"shr_assign","","",785,null],[11,"shl","","",785,null],[11,"shl_assign","","",785,null],[11,"shr","","",785,null],[11,"shr_assign","","",785,null],[11,"add","","",785,null],[11,"add_assign","","",785,null],[11,"sub","","",785,null],[11,"sub_assign","","",785,null],[11,"mul","","",785,null],[11,"mul_assign","","",785,null],[11,"div","","",785,null],[11,"div_assign","","",785,null],[11,"rem","","",785,null],[11,"rem_assign","","",785,null],[11,"not","","",785,null],[11,"bitxor","","",785,null],[11,"bitxor_assign","","",785,null],[11,"bitor","","",785,null],[11,"bitor_assign","","",785,null],[11,"bitand","","",785,null],[11,"bitand_assign","","",785,null],[11,"neg","","",785,null],[11,"add","","",785,null],[11,"add_assign","","",785,null],[11,"sub","","",785,null],[11,"sub_assign","","",785,null],[11,"mul","","",785,null],[11,"mul_assign","","",785,null],[11,"div","","",785,null],[11,"div_assign","","",785,null],[11,"rem","","",785,null],[11,"rem_assign","","",785,null],[11,"not","","",785,null],[11,"bitxor","","",785,null],[11,"bitxor_assign","","",785,null],[11,"bitor","","",785,null],[11,"bitor_assign","","",785,null],[11,"bitand","","",785,null],[11,"bitand_assign","","",785,null],[11,"neg","","",785,null],[11,"add","","",785,null],[11,"add_assign","","",785,null],[11,"sub","","",785,null],[11,"sub_assign","","",785,null],[11,"mul","","",785,null],[11,"mul_assign","","",785,null],[11,"div","","",785,null],[11,"div_assign","","",785,null],[11,"rem","","",785,null],[11,"rem_assign","","",785,null],[11,"not","","",785,null],[11,"bitxor","","",785,null],[11,"bitxor_assign","","",785,null],[11,"bitor","","",785,null],[11,"bitor_assign","","",785,null],[11,"bitand","","",785,null],[11,"bitand_assign","","",785,null],[11,"neg","","",785,null],[11,"add","","",785,null],[11,"add_assign","","",785,null],[11,"sub","","",785,null],[11,"sub_assign","","",785,null],[11,"mul","","",785,null],[11,"mul_assign","","",785,null],[11,"div","","",785,null],[11,"div_assign","","",785,null],[11,"rem","","",785,null],[11,"rem_assign","","",785,null],[11,"not","","",785,null],[11,"bitxor","","",785,null],[11,"bitxor_assign","","",785,null],[11,"bitor","","",785,null],[11,"bitor_assign","","",785,null],[11,"bitand","","",785,null],[11,"bitand_assign","","",785,null],[11,"neg","","",785,null],[11,"add","","",785,null],[11,"add_assign","","",785,null],[11,"sub","","",785,null],[11,"sub_assign","","",785,null],[11,"mul","","",785,null],[11,"mul_assign","","",785,null],[11,"div","","",785,null],[11,"div_assign","","",785,null],[11,"rem","","",785,null],[11,"rem_assign","","",785,null],[11,"not","","",785,null],[11,"bitxor","","",785,null],[11,"bitxor_assign","","",785,null],[11,"bitor","","",785,null],[11,"bitor_assign","","",785,null],[11,"bitand","","",785,null],[11,"bitand_assign","","",785,null],[11,"neg","","",785,null],[11,"add","","",785,null],[11,"add_assign","","",785,null],[11,"sub","","",785,null],[11,"sub_assign","","",785,null],[11,"mul","","",785,null],[11,"mul_assign","","",785,null],[11,"div","","",785,null],[11,"div_assign","","",785,null],[11,"rem","","",785,null],[11,"rem_assign","","",785,null],[11,"not","","",785,null],[11,"bitxor","","",785,null],[11,"bitxor_assign","","",785,null],[11,"bitor","","",785,null],[11,"bitor_assign","","",785,null],[11,"bitand","","",785,null],[11,"bitand_assign","","",785,null],[11,"neg","","",785,null],[11,"add","","",785,null],[11,"add_assign","","",785,null],[11,"sub","","",785,null],[11,"sub_assign","","",785,null],[11,"mul","","",785,null],[11,"mul_assign","","",785,null],[11,"div","","",785,null],[11,"div_assign","","",785,null],[11,"rem","","",785,null],[11,"rem_assign","","",785,null],[11,"not","","",785,null],[11,"bitxor","","",785,null],[11,"bitxor_assign","","",785,null],[11,"bitor","","",785,null],[11,"bitor_assign","","",785,null],[11,"bitand","","",785,null],[11,"bitand_assign","","",785,null],[11,"neg","","",785,null],[11,"add","","",785,null],[11,"add_assign","","",785,null],[11,"sub","","",785,null],[11,"sub_assign","","",785,null],[11,"mul","","",785,null],[11,"mul_assign","","",785,null],[11,"div","","",785,null],[11,"div_assign","","",785,null],[11,"rem","","",785,null],[11,"rem_assign","","",785,null],[11,"not","","",785,null],[11,"bitxor","","",785,null],[11,"bitxor_assign","","",785,null],[11,"bitor","","",785,null],[11,"bitor_assign","","",785,null],[11,"bitand","","",785,null],[11,"bitand_assign","","",785,null],[11,"neg","","",785,null],[11,"add","","",785,null],[11,"add_assign","","",785,null],[11,"sub","","",785,null],[11,"sub_assign","","",785,null],[11,"mul","","",785,null],[11,"mul_assign","","",785,null],[11,"div","","",785,null],[11,"div_assign","","",785,null],[11,"rem","","",785,null],[11,"rem_assign","","",785,null],[11,"not","","",785,null],[11,"bitxor","","",785,null],[11,"bitxor_assign","","",785,null],[11,"bitor","","",785,null],[11,"bitor_assign","","",785,null],[11,"bitand","","",785,null],[11,"bitand_assign","","",785,null],[11,"neg","","",785,null],[11,"add","","",785,null],[11,"add_assign","","",785,null],[11,"sub","","",785,null],[11,"sub_assign","","",785,null],[11,"mul","","",785,null],[11,"mul_assign","","",785,null],[11,"div","","",785,null],[11,"div_assign","","",785,null],[11,"rem","","",785,null],[11,"rem_assign","","",785,null],[11,"not","","",785,null],[11,"bitxor","","",785,null],[11,"bitxor_assign","","",785,null],[11,"bitor","","",785,null],[11,"bitor_assign","","",785,null],[11,"bitand","","",785,null],[11,"bitand_assign","","",785,null],[11,"neg","","",785,null],[11,"eq","core::num::dec2flt","",152,null],[11,"ne","","",152,null],[11,"clone","","",152,null],[11,"fmt","","",152,null],[11,"fmt","","",152,null],[11,"fmt","core::num","",786,null],[11,"eq","","",786,null],[11,"clone","","",786,null],[11,"clone","","",151,null],[11,"fmt","","",151,null],[11,"fmt","","",151,null],[11,"eq","","",150,null],[11,"ne","","",150,null],[11,"clone","","",150,null],[11,"fmt","","",150,null],[11,"fmt","","",150,null],[11,"hash","core::nonzero","",787,null],[11,"fmt","","",787,null],[11,"partial_cmp","","",787,null],[11,"lt","","",787,null],[11,"le","","",787,null],[11,"gt","","",787,null],[11,"ge","","",787,null],[11,"cmp","","",787,null],[11,"eq","","",787,null],[11,"ne","","",787,null],[11,"clone","","",787,null],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually &quot;non-zero&quot;.",787,{"inputs":[{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",787,null],[11,"fmt","core::char","",788,null],[11,"clone","","",788,null],[11,"next","","",788,null],[11,"size_hint","","",788,null],[11,"count","","",788,null],[11,"last","","",788,null],[11,"len","","",788,null],[11,"fmt","","",789,null],[11,"clone","","",789,null],[11,"next","","",789,null],[11,"size_hint","","",789,null],[11,"count","","",789,null],[11,"nth","","",789,null],[11,"last","","",789,null],[11,"len","","",789,null],[11,"fmt","","",790,null],[11,"as_slice","","Returns the remaining bytes of this iterator as a slice.",790,null],[11,"next","","",790,null],[11,"size_hint","","",790,null],[11,"fmt","","",791,null],[11,"as_slice","","Returns the remaining bytes of this iterator as a slice.",791,null],[11,"next","","",791,null],[11,"size_hint","","",791,null],[11,"fmt","core::slice","",792,null],[11,"as_slice","","View the underlying data as a subslice of the original data.",792,null],[11,"next","","",792,null],[11,"size_hint","","",792,null],[11,"count","","",792,null],[11,"nth","","",792,null],[11,"last","","",792,null],[11,"next_back","","",792,null],[11,"clone","","",792,null],[11,"fmt","","",793,null],[11,"into_slice","","View the underlying data as a subslice of the original data.",793,null],[11,"next","","",793,null],[11,"size_hint","","",793,null],[11,"count","","",793,null],[11,"nth","","",793,null],[11,"last","","",793,null],[11,"next_back","","",793,null],[11,"fmt","","",794,null],[11,"clone","","",794,null],[11,"next","","",794,null],[11,"size_hint","","",794,null],[11,"next_back","","",794,null],[11,"fmt","","",795,null],[11,"next","","",795,null],[11,"size_hint","","",795,null],[11,"next_back","","",795,null],[11,"fmt","","",796,null],[11,"fmt","","",797,null],[11,"fmt","","",798,null],[11,"fmt","","",799,null],[11,"next","","",796,null],[11,"size_hint","","",796,null],[11,"next","","",797,null],[11,"size_hint","","",797,null],[11,"next","","",798,null],[11,"size_hint","","",798,null],[11,"next","","",799,null],[11,"size_hint","","",799,null],[11,"fmt","","",800,null],[11,"clone","","",800,null],[11,"next","","",800,null],[11,"size_hint","","",800,null],[11,"count","","",800,null],[11,"nth","","",800,null],[11,"last","","",800,null],[11,"next_back","","",800,null],[11,"fmt","","",801,null],[11,"clone","","",801,null],[11,"next","","",801,null],[11,"size_hint","","",801,null],[11,"count","","",801,null],[11,"nth","","",801,null],[11,"last","","",801,null],[11,"next_back","","",801,null],[11,"fmt","","",802,null],[11,"next","","",802,null],[11,"size_hint","","",802,null],[11,"count","","",802,null],[11,"nth","","",802,null],[11,"last","","",802,null],[11,"next_back","","",802,null],[11,"eq","core::str","",148,null],[11,"ne","","",148,null],[11,"clone","","",148,null],[11,"fmt","","",148,null],[11,"fmt","","",148,null],[11,"fmt","","",149,null],[11,"clone","","",149,null],[11,"eq","","",149,null],[11,"ne","","",149,null],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",149,null],[11,"fmt","","",149,null],[11,"fmt","","",803,null],[11,"clone","","",803,null],[11,"next","","",803,null],[11,"size_hint","","",803,null],[11,"next_back","","",803,null],[11,"as_str","","View the underlying data as a subslice of the original data.",803,null],[11,"fmt","","",804,null],[11,"clone","","",804,null],[11,"next","","",804,null],[11,"size_hint","","",804,null],[11,"next_back","","",804,null],[11,"as_str","","View the underlying data as a subslice of the original data.",804,null],[11,"fmt","","",805,null],[11,"clone","","",805,null],[11,"next","","",805,null],[11,"size_hint","","",805,null],[11,"count","","",805,null],[11,"last","","",805,null],[11,"nth","","",805,null],[11,"next_back","","",805,null],[11,"len","","",805,null],[11,"fmt","","",806,null],[11,"next","","",806,null],[11,"clone","","",806,null],[11,"fmt","","",807,null],[11,"next","","",807,null],[11,"clone","","",807,null],[11,"next_back","","",806,null],[11,"next_back","","",807,null],[11,"fmt","","",808,null],[11,"next","","",808,null],[11,"clone","","",808,null],[11,"fmt","","",809,null],[11,"next","","",809,null],[11,"clone","","",809,null],[11,"next_back","","",808,null],[11,"next_back","","",809,null],[11,"fmt","","",810,null],[11,"next","","",810,null],[11,"clone","","",810,null],[11,"fmt","","",811,null],[11,"next","","",811,null],[11,"clone","","",811,null],[11,"fmt","","",812,null],[11,"next","","",812,null],[11,"clone","","",812,null],[11,"fmt","","",813,null],[11,"next","","",813,null],[11,"clone","","",813,null],[11,"next_back","","",812,null],[11,"next_back","","",813,null],[11,"fmt","","",814,null],[11,"next","","",814,null],[11,"clone","","",814,null],[11,"fmt","","",815,null],[11,"next","","",815,null],[11,"clone","","",815,null],[11,"next_back","","",814,null],[11,"next_back","","",815,null],[11,"fmt","","",816,null],[11,"clone","","",816,null],[11,"next","","",816,null],[11,"size_hint","","",816,null],[11,"next_back","","",816,null],[11,"fmt","","",817,null],[11,"clone","","",817,null],[11,"next","","",817,null],[11,"size_hint","","",817,null],[11,"next_back","","",817,null],[11,"fmt","core::fmt","",818,null],[11,"field","core::fmt::builders","Adds a new field to the generated struct output.",819,null],[11,"finish","","Finishes output and returns any error encountered.",819,null],[11,"field","","Adds a new field to the generated tuple struct output.",820,null],[11,"finish","","Finishes output and returns any error encountered.",820,null],[11,"entry","","Adds a new entry to the set output.",821,null],[11,"entries","","Adds the contents of an iterator of entries to the set output.",821,null],[11,"finish","","Finishes output and returns any error encountered.",821,null],[11,"entry","","Adds a new entry to the list output.",822,null],[11,"entries","","Adds the contents of an iterator of entries to the list output.",822,null],[11,"finish","","Finishes output and returns any error encountered.",822,null],[11,"entry","","Adds a new entry to the map output.",823,null],[11,"entries","","Adds the contents of an iterator of entries to the map output.",823,null],[11,"finish","","Finishes output and returns any error encountered.",823,null],[11,"partial_cmp","core::fmt","",157,null],[11,"eq","","",157,null],[11,"cmp","","",157,null],[11,"hash","","",157,null],[11,"default","","",157,{"inputs":[],"output":{"name":"error"}}],[11,"fmt","","",157,null],[11,"clone","","",157,null],[11,"clone","","",824,null],[11,"fmt","","",824,null],[11,"fmt","","",824,null],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",825,null],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",825,null],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",825,null],[11,"write_fmt","","Writes some formatted information into this instance",825,null],[11,"flags","","Flags for formatting (packed version of rt::Flag)",825,null],[11,"fill","","Character used as &#39;fill&#39; whenever there is alignment",825,null],[11,"align","","Flag indicating what form of alignment was requested",825,null],[11,"width","","Optionally specified integer width that the output should be",825,null],[11,"precision","","Optionally specified precision for numeric types",825,null],[11,"sign_plus","","Determines if the `+` flag was specified.",825,null],[11,"sign_minus","","Determines if the `-` flag was specified.",825,null],[11,"alternate","","Determines if the `#` flag was specified.",825,null],[11,"sign_aware_zero_pad","","Determines if the `0` flag was specified.",825,null],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",825,null],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",825,null],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",825,null],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",825,null],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",825,null],[11,"write_str","","",825,null],[11,"write_char","","",825,null],[11,"write_fmt","","",825,null],[11,"fmt","","",157,null],[11,"fmt","core::marker","",465,null],[11,"fmt","core::cell","",412,null],[11,"fmt","","",414,null],[11,"fmt","","",415,null],[11,"fmt","","",416,null],[11,"fmt","","",417,null],[6,"VertexFormat","glium","Describes the layout of each vertex in a vertex buffer.",null,null],[8,"CapabilitiesSource","","Trait for objects that describe the capabilities of an OpenGL backend.",null,null],[10,"get_version","","Returns the version of the backend.",826,null],[10,"get_extensions","","Returns the list of extensions that are supported.",826,null],[10,"get_capabilities","","Returns the capabilities of the backend.",826,null],[8,"GlObject","","Trait for objects that are OpenGL objects.",null,null],[16,"Id","","The type of identifier for this object.",827,null],[10,"get_id","","Returns the id of the object.",827,null],[8,"Surface","","Object that can be drawn upon.",null,null],[10,"clear","","Clears some attachments of the target.",828,null],[11,"clear_color","","Clears the color attachment of the target.",828,null],[11,"clear_color_srgb","","Clears the color attachment of the target. The color is in sRGB format.",828,null],[11,"clear_depth","","Clears the depth attachment of the target.",828,null],[11,"clear_stencil","","Clears the stencil attachment of the target.",828,null],[11,"clear_color_and_depth","","Clears the color and depth attachments of the target.",828,null],[11,"clear_color_srgb_and_depth","","Clears the color and depth attachments of the target. The color is in sRGB format.",828,null],[11,"clear_color_and_stencil","","Clears the color and stencil attachments of the target.",828,null],[11,"clear_color_srgb_and_stencil","","Clears the color and stencil attachments of the target. The color is in sRGB format.",828,null],[11,"clear_depth_and_stencil","","Clears the depth and stencil attachments of the target.",828,null],[11,"clear_all","","Clears the color, depth and stencil attachments of the target.",828,null],[11,"clear_all_srgb","","Clears the color, depth and stencil attachments of the target. The color is in sRGB format.",828,null],[10,"get_dimensions","","Returns the dimensions in pixels of the target.",828,null],[10,"get_depth_buffer_bits","","Returns the number of bits of each pixel of the depth buffer.",828,null],[11,"has_depth_buffer","","Returns true if the surface has a depth buffer available.",828,null],[10,"get_stencil_buffer_bits","","Returns the number of bits of each pixel of the stencil buffer.",828,null],[11,"has_stencil_buffer","","Returns true if the surface has a stencil buffer available.",828,null],[10,"draw","","Draws.",828,null],[10,"blit_from_frame","","Blits from the default framebuffer.",828,null],[10,"blit_from_simple_framebuffer","","Blits from a simple framebuffer.",828,null],[10,"blit_from_multioutput_framebuffer","","Blits from a multi-output framebuffer.",828,null],[10,"blit_color","","Copies a rectangle of pixels from this surface to another surface.",828,null],[11,"blit_whole_color_to","","Copies the entire surface to a target surface. See `blit_color`.",828,null],[11,"fill","","Copies the entire surface to the entire target. See `blit_color`.",828,null],[8,"DisplayBuild","","Objects that can build a facade object.",null,null],[16,"Facade","","The object that this `DisplayBuild` builds.",829,null],[16,"Err","","The type of error that initialization can return.",829,null],[11,"build_glium","","Build a context and a facade to draw on it.",829,null],[10,"build_glium_debug","","Build a context and a facade to draw on it.",829,null],[11,"build_glium_unchecked","","Build a context and a facade to draw on it",829,null],[10,"build_glium_unchecked_debug","","Build a context and a facade to draw on it",829,null],[10,"rebuild_glium","","Changes the settings of an existing facade.",829,null],[11,"hash","","",44,null],[11,"fmt","","",44,null],[11,"clone","","",44,null],[11,"eq","","",44,null],[11,"ne","","",44,null],[11,"eq","","",35,null],[11,"ne","","",35,null],[11,"default","","",35,{"inputs":[],"output":{"name":"rect"}}],[11,"clone","","",35,null],[11,"fmt","","",35,null],[11,"eq","","",36,null],[11,"ne","","",36,null],[11,"default","","",36,{"inputs":[],"output":{"name":"blittarget"}}],[11,"clone","","",36,null],[11,"fmt","","",36,null],[11,"fmt","","",45,null],[11,"clone","","",45,null],[11,"description","","",45,null],[11,"cause","","",45,null],[11,"fmt","","",45,null],[11,"eq","","",46,null],[11,"clone","","",46,null],[11,"fmt","","",46,null],[11,"description","","",46,null],[11,"fmt","","",46,null],[11,"new","","Builds a new `Frame`. Use the `draw` function on `Display` instead of this function.",830,null],[11,"finish","","Stop drawing, swap the buffers, and consume the Frame.",830,null],[11,"set_finish","","Stop drawing, swap the buffers.",830,null],[11,"clear","","",830,null],[11,"get_dimensions","","",830,null],[11,"get_depth_buffer_bits","","",830,null],[11,"get_stencil_buffer_bits","","",830,null],[11,"draw","","",830,null],[11,"blit_color","","",830,null],[11,"blit_from_frame","","",830,null],[11,"blit_from_simple_framebuffer","","",830,null],[11,"blit_from_multioutput_framebuffer","","",830,null],[11,"drop","","",830,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"fmt","","",47,null],[11,"clone","","",47,null],[11,"fmt","","",47,null],[11,"description","","",47,null],[11,"cause","","",47,null],[11,"from","","",47,{"inputs":[{"name":"t"}],"output":{"name":"gliumcreationerror"}}],[14,"assert_no_gl_error!","","Calls the `assert_no_error` method on a `glium::Display` instance\nwith file and line number information.",null,null],[14,"uniform!","","Returns an implementation-defined type which implements the `Uniform` trait.",null,null],[14,"implement_vertex!","","Implements the `glium::vertex::Vertex` trait for the given type.",null,null],[14,"implement_buffer_content!","","Implements the `glium::buffer::Content` trait for the given type.",null,null],[14,"implement_uniform_block!","","Implements the `glium::uniforms::UniformBlock` trait for the given type.",null,null],[14,"program!","","Builds a program depending on the GLSL version supported by the backend.",null,null]],"paths":[[4,"Event"],[4,"TouchPhase"],[3,"Touch"],[4,"ElementState"],[4,"MouseButton"],[4,"MouseScrollDelta"],[4,"VirtualKeyCode"],[3,"HeadlessRendererBuilder"],[3,"HeadlessContext"],[3,"WindowBuilder"],[3,"Window"],[3,"WindowProxy"],[3,"PollEventsIterator"],[3,"WaitEventsIterator"],[3,"AvailableMonitorsIter"],[3,"MonitorId"],[4,"CreationError"],[4,"ContextError"],[4,"Api"],[4,"GlProfile"],[4,"GlRequest"],[4,"Robustness"],[4,"ReleaseBehavior"],[4,"MouseCursor"],[4,"CursorState"],[3,"PixelFormat"],[3,"PixelFormatRequirements"],[3,"WindowAttributes"],[3,"GlAttributes"],[4,"NativeMonitorId"],[8,"WindowExt"],[8,"GlContext"],[3,"Blend"],[3,"Depth"],[3,"Version"],[3,"Rect"],[3,"BlitTarget"],[4,"Profile"],[4,"BlendingFunction"],[4,"LinearBlendingFactor"],[4,"DepthTest"],[4,"StencilTest"],[4,"StencilOperation"],[4,"Api"],[4,"Handle"],[4,"DrawError"],[4,"SwapBuffersError"],[4,"GliumCreationError"],[4,"ReleaseBehavior"],[3,"GlutinFacade"],[3,"PollEventsIter"],[3,"WaitEventsIter"],[3,"WinRef"],[3,"GlutinWindowBackend"],[3,"GlutinHeadlessBackend"],[8,"Backend"],[8,"Facade"],[3,"Rc"],[4,"ReadError"],[4,"CopyError"],[4,"BufferCreationError"],[4,"BufferMode"],[4,"BufferType"],[3,"Mapping"],[3,"ReadMapping"],[3,"WriteMapping"],[3,"Inserter"],[3,"Buffer"],[3,"BufferSlice"],[3,"BufferMutSlice"],[3,"BufferAny"],[3,"BufferAnySlice"],[8,"Content"],[4,"DebugCallbackBehavior"],[4,"Severity"],[4,"Source"],[4,"MessageType"],[3,"TimestampQuery"],[3,"Stencil"],[3,"DrawParameters"],[3,"ConditionalRendering"],[4,"DepthClamp"],[4,"QueryCreationError"],[4,"BackfaceCullingMode"],[4,"PolygonMode"],[4,"Smooth"],[4,"ProvokingVertex"],[4,"SamplesQueryParam"],[3,"SamplesPassedQuery"],[3,"TimeElapsedQuery"],[3,"AnySamplesPassedQuery"],[3,"PrimitivesGeneratedQuery"],[3,"TransformFeedbackPrimitivesWrittenQuery"],[4,"DefaultFramebufferAttachment"],[4,"RenderBufferCreationError"],[4,"ValidationError"],[4,"ColorAttachment"],[4,"DepthAttachment"],[4,"StencilAttachment"],[4,"DepthStencilAttachment"],[3,"DefaultFramebuffer"],[3,"RenderBuffer"],[3,"DepthRenderBuffer"],[3,"StencilRenderBuffer"],[3,"DepthStencilRenderBuffer"],[3,"RenderBufferAny"],[8,"ToColorAttachment"],[8,"ToDepthAttachment"],[8,"ToStencilAttachment"],[8,"ToDepthStencilAttachment"],[3,"SimpleFrameBuffer"],[3,"MultiOutputFrameBuffer"],[3,"EmptyFrameBuffer"],[3,"DrawCommandNoIndices"],[3,"DrawCommandIndices"],[3,"NoIndices"],[4,"BufferCreationError"],[4,"IndicesSource"],[4,"PrimitiveType"],[4,"IndexType"],[3,"IndexBuffer"],[3,"IndexBufferSlice"],[3,"IndexBufferAny"],[3,"DrawCommandsNoIndicesBuffer"],[3,"DrawCommandsIndicesBuffer"],[8,"Index"],[3,"ComputeCommand"],[3,"Uniform"],[3,"UniformBlock"],[3,"Attribute"],[3,"TransformFeedbackVarying"],[3,"TransformFeedbackBuffer"],[3,"SubroutineData"],[3,"SubroutineUniform"],[3,"SourceCode"],[3,"Binary"],[4,"BlockLayout"],[4,"OutputPrimitives"],[4,"TransformFeedbackMode"],[4,"ShaderStage"],[4,"ProgramCreationError"],[4,"ProgramChooserCreationError"],[4,"GetBinaryError"],[4,"ProgramCreationInput"],[3,"ComputeShader"],[3,"Program"],[3,"Mutex"],[3,"Box"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"ParseIntError"],[3,"TryFromIntError"],[3,"ParseFloatError"],[3,"FromUtf8Error"],[3,"FromUtf16Error"],[4,"ParseError"],[3,"DecodeUtf16Error"],[3,"Error"],[8,"Error"],[3,"EscapeDefault"],[4,"LocalKeyState"],[3,"LocalKey"],[3,"Key"],[3,"Key"],[3,"Builder"],[3,"Thread"],[3,"JoinHandle"],[3,"HashMap"],[3,"Iter"],[3,"Keys"],[3,"Values"],[3,"IterMut"],[3,"IntoIter"],[3,"ValuesMut"],[3,"Drain"],[4,"Entry"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"RandomState"],[3,"DefaultHasher"],[3,"HashSet"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"],[3,"PeekMut"],[3,"BinaryHeap"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Vec"],[3,"VecDeque"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"Iter"],[3,"IntoIter"],[3,"LinkedList"],[3,"IterMut"],[3,"FrontPlace"],[3,"BackPlace"],[3,"Vars"],[3,"VarsOs"],[4,"VarError"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"ArgsOs"],[3,"CString"],[3,"CStr"],[3,"NulError"],[3,"FromBytesWithNulError"],[3,"IntoStringError"],[3,"Error"],[3,"OsString"],[3,"OsStr"],[4,"Cow"],[3,"String"],[3,"Metadata"],[3,"OpenOptions"],[3,"Permissions"],[3,"FileType"],[3,"File"],[3,"ReadDir"],[3,"DirEntry"],[3,"DirBuilder"],[3,"BufReader"],[3,"IntoInnerError"],[3,"BufWriter"],[3,"LineWriter"],[3,"Cursor"],[4,"ErrorKind"],[3,"Empty"],[3,"Repeat"],[3,"Sink"],[3,"Stdin"],[3,"StdinLock"],[3,"Stdout"],[3,"StdoutLock"],[3,"Stderr"],[3,"StderrLock"],[4,"SeekFrom"],[3,"Chain"],[3,"Take"],[3,"Bytes"],[4,"CharsError"],[3,"Chars"],[3,"Split"],[3,"Lines"],[4,"IpAddr"],[4,"Ipv6MulticastScope"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[4,"SocketAddr"],[3,"SocketAddrV4"],[3,"SocketAddrV6"],[3,"TcpStream"],[3,"TcpListener"],[3,"Incoming"],[3,"UdpSocket"],[3,"AddrParseError"],[4,"Shutdown"],[3,"LookupHost"],[3,"stat"],[3,"Command"],[3,"ExitStatus"],[3,"Stdio"],[3,"ChildStdin"],[3,"ChildStdout"],[3,"ChildStderr"],[3,"SocketAddr"],[3,"UnixStream"],[3,"UnixListener"],[3,"Incoming"],[3,"UnixDatagram"],[3,"AssertUnwindSafe"],[4,"Prefix"],[3,"PrefixComponent"],[4,"Component"],[3,"Components"],[3,"Iter"],[3,"PathBuf"],[3,"Path"],[3,"StripPrefixError"],[3,"Display"],[3,"Output"],[3,"Child"],[3,"Select"],[3,"Handle"],[3,"SendError"],[3,"RecvError"],[4,"TryRecvError"],[4,"RecvTimeoutError"],[4,"TrySendError"],[3,"Sender"],[3,"SyncSender"],[3,"Receiver"],[3,"Iter"],[3,"IntoIter"],[3,"Barrier"],[3,"BarrierWaitResult"],[3,"WaitTimeoutResult"],[3,"Condvar"],[3,"StaticCondvar"],[3,"StaticMutex"],[3,"MutexGuard"],[3,"Once"],[3,"OnceState"],[3,"RwLock"],[3,"StaticRwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"AtomicBool"],[3,"AtomicPtr"],[4,"Ordering"],[3,"AtomicI8"],[3,"AtomicU8"],[3,"AtomicI16"],[3,"AtomicU16"],[3,"AtomicI32"],[3,"AtomicU32"],[3,"AtomicI64"],[3,"AtomicU64"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"Duration"],[3,"Instant"],[3,"SystemTime"],[3,"SystemTimeError"],[3,"PoisonError"],[4,"TryLockError"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"fd_set"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"passwd"],[3,"statvfs"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"fsid_t"],[3,"mq_attr"],[3,"cpu_set_t"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"termios"],[3,"flock"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"sigset_t"],[3,"sysinfo"],[3,"stat"],[3,"stat64"],[3,"pthread_attr_t"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"PanicInfo"],[3,"Location"],[3,"ToLowercase"],[3,"ToUppercase"],[3,"DecodeUtf16"],[3,"Unique"],[3,"Shared"],[4,"Option"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Weak"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"Ref"],[3,"RefMut"],[3,"UnsafeCell"],[4,"Ordering"],[3,"ExchangeHeapSingleton"],[3,"IntermediateBox"],[3,"EncodeUtf16"],[4,"SearchStep"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"RangeInclusive"],[3,"RangeToInclusive"],[3,"StepBy"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[8,"Any"],[3,"TypeId"],[3,"TraitObject"],[3,"Drain"],[3,"IntoIter"],[3,"Drain"],[3,"PhantomData"],[3,"SipHasher13"],[3,"SipHasher24"],[3,"SipHasher"],[3,"BuildHasherDefault"],[3,"Sampler"],[3,"SamplerBehavior"],[4,"SamplerWrapFunction"],[4,"MagnifySamplerFilter"],[4,"MinifySamplerFilter"],[4,"UniformValue"],[4,"UniformType"],[4,"LayoutMismatchError"],[3,"UniformBuffer"],[3,"EmptyUniforms"],[3,"UniformsStorage"],[8,"Uniforms"],[8,"AsUniformValue"],[8,"UniformBlock"],[3,"EmptyVertexAttributes"],[3,"EmptyInstanceAttributes"],[4,"BufferCreationError"],[4,"AttributeType"],[4,"VerticesSource"],[3,"VertexBuffer"],[3,"VertexBufferSlice"],[3,"VertexBufferAny"],[3,"TransformFeedbackSession"],[8,"IntoVerticesSource"],[8,"MultiVerticesSource"],[8,"Vertex"],[8,"Attribute"],[3,"PerInstance"],[3,"RawImage1d"],[3,"RawImage2d"],[3,"RawImage3d"],[4,"ClientFormat"],[4,"TextureFormat"],[4,"UncompressedFloatFormat"],[4,"UncompressedIntFormat"],[4,"UncompressedUintFormat"],[4,"CompressedFormat"],[4,"DepthFormat"],[4,"DepthStencilFormat"],[4,"StencilFormat"],[4,"CompressedSrgbFormat"],[4,"SrgbFormat"],[4,"Dimensions"],[4,"InternalFormat"],[4,"InternalFormatType"],[4,"GetFormatError"],[4,"CubeLayer"],[4,"TextureKind"],[4,"MipmapsOption"],[4,"CompressedMipmapsOption"],[4,"TextureCreationError"],[3,"ResidentTexture"],[3,"TextureHandle"],[3,"BindlessTexturesNotSupportedError"],[4,"TextureCreationError"],[4,"CreationError"],[4,"BufferTextureType"],[4,"TextureBufferContentType"],[8,"TextureBufferContent"],[3,"BufferTexture"],[3,"BufferTextureRef"],[3,"PixelBuffer"],[3,"TextureAny"],[3,"TextureAnyLayer"],[3,"TextureAnyMipmap"],[3,"TextureAnyLayerMipmap"],[3,"TextureAnyImage"],[3,"Texture1d"],[3,"Texture1dMipmap"],[3,"CompressedTexture1d"],[3,"CompressedTexture1dMipmap"],[3,"SrgbTexture1d"],[3,"SrgbTexture1dMipmap"],[3,"CompressedSrgbTexture1d"],[3,"CompressedSrgbTexture1dMipmap"],[3,"IntegralTexture1d"],[3,"IntegralTexture1dMipmap"],[3,"UnsignedTexture1d"],[3,"UnsignedTexture1dMipmap"],[3,"DepthTexture1d"],[3,"DepthTexture1dMipmap"],[3,"StencilTexture1d"],[3,"StencilTexture1dMipmap"],[3,"DepthStencilTexture1d"],[3,"DepthStencilTexture1dMipmap"],[3,"Texture2d"],[3,"Texture2dMipmap"],[3,"CompressedTexture2d"],[3,"CompressedTexture2dMipmap"],[3,"SrgbTexture2d"],[3,"SrgbTexture2dMipmap"],[3,"CompressedSrgbTexture2d"],[3,"CompressedSrgbTexture2dMipmap"],[3,"IntegralTexture2d"],[3,"IntegralTexture2dMipmap"],[3,"UnsignedTexture2d"],[3,"UnsignedTexture2dMipmap"],[3,"DepthTexture2d"],[3,"DepthTexture2dMipmap"],[3,"StencilTexture2d"],[3,"StencilTexture2dMipmap"],[3,"DepthStencilTexture2d"],[3,"DepthStencilTexture2dMipmap"],[3,"Texture2dMultisample"],[3,"Texture2dMultisampleMipmap"],[3,"IntegralTexture2dMultisample"],[3,"IntegralTexture2dMultisampleMipmap"],[3,"SrgbTexture2dMultisample"],[3,"SrgbTexture2dMultisampleMipmap"],[3,"UnsignedTexture2dMultisample"],[3,"UnsignedTexture2dMultisampleMipmap"],[3,"DepthTexture2dMultisample"],[3,"DepthTexture2dMultisampleMipmap"],[3,"StencilTexture2dMultisample"],[3,"StencilTexture2dMultisampleMipmap"],[3,"DepthStencilTexture2dMultisample"],[3,"DepthStencilTexture2dMultisampleMipmap"],[3,"Texture3d"],[3,"Texture3dMipmap"],[3,"CompressedTexture3d"],[3,"CompressedTexture3dMipmap"],[3,"SrgbTexture3d"],[3,"SrgbTexture3dMipmap"],[3,"CompressedSrgbTexture3d"],[3,"CompressedSrgbTexture3dMipmap"],[3,"IntegralTexture3d"],[3,"IntegralTexture3dMipmap"],[3,"UnsignedTexture3d"],[3,"UnsignedTexture3dMipmap"],[3,"DepthTexture3d"],[3,"DepthTexture3dMipmap"],[3,"DepthStencilTexture3d"],[3,"DepthStencilTexture3dMipmap"],[3,"Texture1dArray"],[3,"Texture1dArrayLayer"],[3,"Texture1dArrayMipmap"],[3,"Texture1dArrayLayerMipmap"],[3,"CompressedTexture1dArray"],[3,"CompressedTexture1dArrayLayer"],[3,"CompressedTexture1dArrayMipmap"],[3,"CompressedTexture1dArrayLayerMipmap"],[3,"SrgbTexture1dArray"],[3,"SrgbTexture1dArrayLayer"],[3,"SrgbTexture1dArrayMipmap"],[3,"SrgbTexture1dArrayLayerMipmap"],[3,"CompressedSrgbTexture1dArray"],[3,"CompressedSrgbTexture1dArrayLayer"],[3,"CompressedSrgbTexture1dArrayMipmap"],[3,"CompressedSrgbTexture1dArrayLayerMipmap"],[3,"IntegralTexture1dArray"],[3,"IntegralTexture1dArrayLayer"],[3,"IntegralTexture1dArrayMipmap"],[3,"IntegralTexture1dArrayLayerMipmap"],[3,"UnsignedTexture1dArray"],[3,"UnsignedTexture1dArrayLayer"],[3,"UnsignedTexture1dArrayMipmap"],[3,"UnsignedTexture1dArrayLayerMipmap"],[3,"DepthTexture1dArray"],[3,"DepthTexture1dArrayLayer"],[3,"DepthTexture1dArrayMipmap"],[3,"DepthTexture1dArrayLayerMipmap"],[3,"StencilTexture1dArray"],[3,"StencilTexture1dArrayLayer"],[3,"StencilTexture1dArrayMipmap"],[3,"StencilTexture1dArrayLayerMipmap"],[3,"DepthStencilTexture1dArray"],[3,"DepthStencilTexture1dArrayLayer"],[3,"DepthStencilTexture1dArrayMipmap"],[3,"DepthStencilTexture1dArrayLayerMipmap"],[3,"Texture2dArray"],[3,"Texture2dArrayLayer"],[3,"Texture2dArrayMipmap"],[3,"Texture2dArrayLayerMipmap"],[3,"CompressedTexture2dArray"],[3,"CompressedTexture2dArrayLayer"],[3,"CompressedTexture2dArrayMipmap"],[3,"CompressedTexture2dArrayLayerMipmap"],[3,"SrgbTexture2dArray"],[3,"SrgbTexture2dArrayLayer"],[3,"SrgbTexture2dArrayMipmap"],[3,"SrgbTexture2dArrayLayerMipmap"],[3,"CompressedSrgbTexture2dArray"],[3,"CompressedSrgbTexture2dArrayLayer"],[3,"CompressedSrgbTexture2dArrayMipmap"],[3,"CompressedSrgbTexture2dArrayLayerMipmap"],[3,"IntegralTexture2dArray"],[3,"IntegralTexture2dArrayLayer"],[3,"IntegralTexture2dArrayMipmap"],[3,"IntegralTexture2dArrayLayerMipmap"],[3,"UnsignedTexture2dArray"],[3,"UnsignedTexture2dArrayLayer"],[3,"UnsignedTexture2dArrayMipmap"],[3,"UnsignedTexture2dArrayLayerMipmap"],[3,"DepthTexture2dArray"],[3,"DepthTexture2dArrayLayer"],[3,"DepthTexture2dArrayMipmap"],[3,"DepthTexture2dArrayLayerMipmap"],[3,"StencilTexture2dArray"],[3,"StencilTexture2dArrayLayer"],[3,"StencilTexture2dArrayMipmap"],[3,"StencilTexture2dArrayLayerMipmap"],[3,"DepthStencilTexture2dArray"],[3,"DepthStencilTexture2dArrayLayer"],[3,"DepthStencilTexture2dArrayMipmap"],[3,"DepthStencilTexture2dArrayLayerMipmap"],[3,"Texture2dMultisampleArray"],[3,"Texture2dMultisampleArrayLayer"],[3,"Texture2dMultisampleArrayMipmap"],[3,"Texture2dMultisampleArrayLayerMipmap"],[3,"SrgbTexture2dMultisampleArray"],[3,"SrgbTexture2dMultisampleArrayLayer"],[3,"SrgbTexture2dMultisampleArrayMipmap"],[3,"SrgbTexture2dMultisampleArrayLayerMipmap"],[3,"IntegralTexture2dMultisampleArray"],[3,"IntegralTexture2dMultisampleArrayLayer"],[3,"IntegralTexture2dMultisampleArrayMipmap"],[3,"IntegralTexture2dMultisampleArrayLayerMipmap"],[3,"UnsignedTexture2dMultisampleArray"],[3,"UnsignedTexture2dMultisampleArrayLayer"],[3,"UnsignedTexture2dMultisampleArrayMipmap"],[3,"UnsignedTexture2dMultisampleArrayLayerMipmap"],[3,"DepthTexture2dMultisampleArray"],[3,"DepthTexture2dMultisampleArrayLayer"],[3,"DepthTexture2dMultisampleArrayMipmap"],[3,"DepthTexture2dMultisampleArrayLayerMipmap"],[3,"StencilTexture2dMultisampleArray"],[3,"StencilTexture2dMultisampleArrayLayer"],[3,"StencilTexture2dMultisampleArrayMipmap"],[3,"StencilTexture2dMultisampleArrayLayerMipmap"],[3,"DepthStencilTexture2dMultisampleArray"],[3,"DepthStencilTexture2dMultisampleArrayLayer"],[3,"DepthStencilTexture2dMultisampleArrayMipmap"],[3,"DepthStencilTexture2dMultisampleArrayLayerMipmap"],[3,"Cubemap"],[3,"CubemapMipmap"],[3,"CubemapImage"],[3,"CompressedCubemap"],[3,"CompressedCubemapMipmap"],[3,"CompressedCubemapImage"],[3,"SrgbCubemap"],[3,"SrgbCubemapMipmap"],[3,"SrgbCubemapImage"],[3,"CompressedSrgbCubemap"],[3,"CompressedSrgbCubemapMipmap"],[3,"CompressedSrgbCubemapImage"],[3,"IntegralCubemap"],[3,"IntegralCubemapMipmap"],[3,"IntegralCubemapImage"],[3,"UnsignedCubemap"],[3,"UnsignedCubemapMipmap"],[3,"UnsignedCubemapImage"],[3,"DepthCubemap"],[3,"DepthCubemapMipmap"],[3,"DepthCubemapImage"],[3,"StencilCubemap"],[3,"StencilCubemapMipmap"],[3,"StencilCubemapImage"],[3,"DepthStencilCubemap"],[3,"DepthStencilCubemapMipmap"],[3,"DepthStencilCubemapImage"],[3,"CubemapArray"],[3,"CubemapArrayLayer"],[3,"CubemapArrayMipmap"],[3,"CubemapArrayLayerMipmap"],[3,"CubemapArrayImage"],[3,"CompressedCubemapArray"],[3,"CompressedCubemapArrayLayer"],[3,"CompressedCubemapArrayMipmap"],[3,"CompressedCubemapArrayLayerMipmap"],[3,"CompressedCubemapArrayImage"],[3,"SrgbCubemapArray"],[3,"SrgbCubemapArrayLayer"],[3,"SrgbCubemapArrayMipmap"],[3,"SrgbCubemapArrayLayerMipmap"],[3,"SrgbCubemapArrayImage"],[3,"CompressedSrgbCubemapArray"],[3,"CompressedSrgbCubemapArrayLayer"],[3,"CompressedSrgbCubemapArrayMipmap"],[3,"CompressedSrgbCubemapArrayLayerMipmap"],[3,"CompressedSrgbCubemapArrayImage"],[3,"IntegralCubemapArray"],[3,"IntegralCubemapArrayLayer"],[3,"IntegralCubemapArrayMipmap"],[3,"IntegralCubemapArrayLayerMipmap"],[3,"IntegralCubemapArrayImage"],[3,"UnsignedCubemapArray"],[3,"UnsignedCubemapArrayLayer"],[3,"UnsignedCubemapArrayMipmap"],[3,"UnsignedCubemapArrayLayerMipmap"],[3,"UnsignedCubemapArrayImage"],[3,"DepthCubemapArray"],[3,"DepthCubemapArrayLayer"],[3,"DepthCubemapArrayMipmap"],[3,"DepthCubemapArrayLayerMipmap"],[3,"DepthCubemapArrayImage"],[3,"StencilCubemapArray"],[3,"StencilCubemapArrayLayer"],[3,"StencilCubemapArrayMipmap"],[3,"StencilCubemapArrayLayerMipmap"],[3,"StencilCubemapArrayImage"],[3,"DepthStencilCubemapArray"],[3,"DepthStencilCubemapArrayLayer"],[3,"DepthStencilCubemapArrayMipmap"],[3,"DepthStencilCubemapArrayLayerMipmap"],[3,"DepthStencilCubemapArrayImage"],[8,"PixelValue"],[8,"Texture1dDataSource"],[8,"Texture1dDataSink"],[8,"Texture2dDataSource"],[8,"Texture2dDataSink"],[8,"Texture3dDataSource"],[8,"Texture3dDataSink"],[3,"Context"],[3,"SyncFence"],[3,"LinearSyncFence"],[3,"Wrapping"],[4,"FpCategory"],[3,"NonZero"],[3,"EscapeUnicode"],[3,"EscapeDefault"],[3,"EncodeUtf8"],[3,"EncodeUtf16"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[4,"Alignment"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Arguments"],[3,"Formatter"],[8,"CapabilitiesSource"],[8,"GlObject"],[8,"Surface"],[8,"DisplayBuild"],[3,"Frame"]]};
searchIndex["glutin"] = {"doc":"The purpose of this library is to provide an OpenGL context on as many\n platforms as possible.","items":[[3,"Touch","glutin","Represents touch event",null,null],[12,"phase","","",0,null],[12,"location","","",0,null],[12,"id","","unique identifier of a finger.",0,null],[3,"HeadlessRendererBuilder","","Object that allows you to build headless contexts.",null,null],[12,"dimensions","","The dimensions to use.",1,null],[12,"opengl","","The OpenGL attributes to build the context with.",1,null],[3,"HeadlessContext","","Represents a headless OpenGL context.",null,null],[3,"WindowProxy","","Represents a thread safe subset of operations that can be called\non a window. This structure can be safely cloned and sent between\nthreads.",null,null],[3,"PollEventsIterator","","An iterator for the `poll_events` function.",null,null],[3,"WaitEventsIterator","","An iterator for the `wait_events` function.",null,null],[3,"AvailableMonitorsIter","","An iterator for the list of available monitors.",null,null],[3,"MonitorId","","Identifier for a monitor.",null,null],[3,"Window","","Represents an OpenGL context and the Window or environment around it.",null,null],[3,"WindowBuilder","","Object that allows you to build windows.",null,null],[12,"window","","The attributes to use to create the window.",2,null],[12,"opengl","","The attributes to use to create the context.",2,null],[3,"PixelFormat","","Describes a possible format. Unused.",null,null],[12,"hardware_accelerated","","",3,null],[12,"color_bits","","",3,null],[12,"alpha_bits","","",3,null],[12,"depth_bits","","",3,null],[12,"stencil_bits","","",3,null],[12,"stereoscopy","","",3,null],[12,"double_buffer","","",3,null],[12,"multisampling","","",3,null],[12,"srgb","","",3,null],[3,"PixelFormatRequirements","","Describes how the backend should choose a pixel format.",null,null],[12,"hardware_accelerated","","If true, only hardware-accelerated formats will be conisdered. If false, only software\nrenderers. `None` means &quot;don&#39;t care&quot;. Default is `Some(true)`.",4,null],[12,"color_bits","","Minimum number of bits for the color buffer, excluding alpha. `None` means &quot;don&#39;t care&quot;.\nThe default is `Some(24)`.",4,null],[12,"float_color_buffer","","If true, the color buffer must be in a floating point format. Default is `false`.",4,null],[12,"alpha_bits","","Minimum number of bits for the alpha in the color buffer. `None` means &quot;don&#39;t care&quot;.\nThe default is `Some(8)`.",4,null],[12,"depth_bits","","Minimum number of bits for the depth buffer. `None` means &quot;don&#39;t care&quot;.\nThe default value is `Some(24)`.",4,null],[12,"stencil_bits","","Minimum number of bits for the depth buffer. `None` means &quot;don&#39;t care&quot;.\nThe default value is `Some(8)`.",4,null],[12,"double_buffer","","If true, only double-buffered formats will be considered. If false, only single-buffer\nformats. `None` means &quot;don&#39;t care&quot;. The default is `Some(true)`.",4,null],[12,"multisampling","","Contains the minimum number of samples per pixel in the color, depth and stencil buffers.\n`None` means &quot;don&#39;t care&quot;. Default is `None`.\nA value of `Some(0)` indicates that multisampling must not be enabled.",4,null],[12,"stereoscopy","","If true, only stereoscopic formats will be considered. If false, only non-stereoscopic\nformats. The default is `false`.",4,null],[12,"srgb","","If true, only sRGB-capable formats will be considered. If false, don&#39;t care.\nThe default is `false`.",4,null],[12,"release_behavior","","The behavior when changing the current context. Default is `Flush`.",4,null],[3,"WindowAttributes","","Attributes to use when creating a window.",null,null],[12,"dimensions","","The dimensions of the window. If this is `None`, some platform-specific dimensions will be\nused.",5,null],[12,"min_dimensions","","The minimum dimensions a window can be, If this is `None`, the window will have no minimum dimensions (aside from reserved).",5,null],[12,"max_dimensions","","The maximum dimensions a window can be, If this is `None`, the maximum will have no maximum or will be set to the primary monitor&#39;s dimensions by the platform.",5,null],[12,"monitor","","If `Some`, the window will be in fullscreen mode with the given monitor.",5,null],[12,"title","","The title of the window in the title bar.",5,null],[12,"visible","","Whether the window should be immediately visible upon creation.",5,null],[12,"transparent","","Whether the the window should be transparent. If this is true, writing colors\nwith alpha values different than `1.0` will produce a transparent window.",5,null],[12,"decorations","","Whether the window should have borders and bars.",5,null],[12,"multitouch","","[iOS only] Enable multitouch, see [UIView#multipleTouchEnabled]\n(https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIView_Class/#//apple_ref/occ/instp/UIView/multipleTouchEnabled)",5,null],[3,"GlAttributes","","Attributes to use when creating an OpenGL context.",null,null],[12,"sharing","","An existing context to share the new the context with.",6,null],[12,"version","","Version to try create. See `GlRequest` for more infos.",6,null],[12,"profile","","OpenGL profile to use.",6,null],[12,"debug","","Whether to enable the `debug` flag of the context.",6,null],[12,"robustness","","How the OpenGL context should detect errors.",6,null],[12,"vsync","","Whether to use vsync. If vsync is enabled, calling `swap_buffers` will block until the\nscreen refreshes. This is typically used to prevent screen tearing.",6,null],[4,"Event","","",null,null],[13,"Resized","","The size of the window has changed.",7,null],[13,"Moved","","The position of the window has changed.",7,null],[13,"Closed","","The window has been closed.",7,null],[13,"DroppedFile","","A file has been dropped into the window.",7,null],[13,"ReceivedCharacter","","The window received a unicode character.",7,null],[13,"Focused","","The window gained or lost focus.",7,null],[13,"KeyboardInput","","An event from the keyboard has been received.",7,null],[13,"MouseMoved","","The cursor has moved on the window.",7,null],[13,"MouseWheel","","A mouse wheel movement or touchpad scroll occurred.",7,null],[13,"MouseInput","","An event from the mouse has been received.",7,null],[13,"TouchpadPressure","","Touchpad pressure event.",7,null],[13,"Awakened","","The event loop was woken up by another thread.",7,null],[13,"Refresh","","The window needs to be redrawn.",7,null],[13,"Suspended","","App has been suspended or resumed.",7,null],[13,"Touch","","Touch event has been received",7,null],[4,"TouchPhase","","",null,null],[13,"Started","","",8,null],[13,"Moved","","",8,null],[13,"Ended","","",8,null],[13,"Cancelled","","",8,null],[4,"ElementState","","",null,null],[13,"Pressed","","",9,null],[13,"Released","","",9,null],[4,"MouseButton","","",null,null],[13,"Left","","",10,null],[13,"Right","","",10,null],[13,"Middle","","",10,null],[13,"Other","","",10,null],[4,"MouseScrollDelta","","",null,null],[13,"LineDelta","","Amount in lines or rows to scroll in the horizontal\nand vertical directions.",11,null],[13,"PixelDelta","","Amount in pixels to scroll in the horizontal and\nvertical direction.",11,null],[4,"VirtualKeyCode","","",null,null],[13,"Key1","","The &#39;1&#39; key over the letters.",12,null],[13,"Key2","","The &#39;2&#39; key over the letters.",12,null],[13,"Key3","","The &#39;3&#39; key over the letters.",12,null],[13,"Key4","","The &#39;4&#39; key over the letters.",12,null],[13,"Key5","","The &#39;5&#39; key over the letters.",12,null],[13,"Key6","","The &#39;6&#39; key over the letters.",12,null],[13,"Key7","","The &#39;7&#39; key over the letters.",12,null],[13,"Key8","","The &#39;8&#39; key over the letters.",12,null],[13,"Key9","","The &#39;9&#39; key over the letters.",12,null],[13,"Key0","","The &#39;0&#39; key over the &#39;O&#39; and &#39;P&#39; keys.",12,null],[13,"A","","",12,null],[13,"B","","",12,null],[13,"C","","",12,null],[13,"D","","",12,null],[13,"E","","",12,null],[13,"F","","",12,null],[13,"G","","",12,null],[13,"H","","",12,null],[13,"I","","",12,null],[13,"J","","",12,null],[13,"K","","",12,null],[13,"L","","",12,null],[13,"M","","",12,null],[13,"N","","",12,null],[13,"O","","",12,null],[13,"P","","",12,null],[13,"Q","","",12,null],[13,"R","","",12,null],[13,"S","","",12,null],[13,"T","","",12,null],[13,"U","","",12,null],[13,"V","","",12,null],[13,"W","","",12,null],[13,"X","","",12,null],[13,"Y","","",12,null],[13,"Z","","",12,null],[13,"Escape","","The Escape key, next to F1.",12,null],[13,"F1","","",12,null],[13,"F2","","",12,null],[13,"F3","","",12,null],[13,"F4","","",12,null],[13,"F5","","",12,null],[13,"F6","","",12,null],[13,"F7","","",12,null],[13,"F8","","",12,null],[13,"F9","","",12,null],[13,"F10","","",12,null],[13,"F11","","",12,null],[13,"F12","","",12,null],[13,"F13","","",12,null],[13,"F14","","",12,null],[13,"F15","","",12,null],[13,"Snapshot","","Print Screen/SysRq.",12,null],[13,"Scroll","","Scroll Lock.",12,null],[13,"Pause","","Pause/Break key, next to Scroll lock.",12,null],[13,"Insert","","`Insert`, next to Backspace.",12,null],[13,"Home","","",12,null],[13,"Delete","","",12,null],[13,"End","","",12,null],[13,"PageDown","","",12,null],[13,"PageUp","","",12,null],[13,"Left","","",12,null],[13,"Up","","",12,null],[13,"Right","","",12,null],[13,"Down","","",12,null],[13,"Back","","The Backspace key, right over Enter.",12,null],[13,"Return","","The Enter key.",12,null],[13,"Space","","The space bar.",12,null],[13,"Numlock","","",12,null],[13,"Numpad0","","",12,null],[13,"Numpad1","","",12,null],[13,"Numpad2","","",12,null],[13,"Numpad3","","",12,null],[13,"Numpad4","","",12,null],[13,"Numpad5","","",12,null],[13,"Numpad6","","",12,null],[13,"Numpad7","","",12,null],[13,"Numpad8","","",12,null],[13,"Numpad9","","",12,null],[13,"AbntC1","","",12,null],[13,"AbntC2","","",12,null],[13,"Add","","",12,null],[13,"Apostrophe","","",12,null],[13,"Apps","","",12,null],[13,"At","","",12,null],[13,"Ax","","",12,null],[13,"Backslash","","",12,null],[13,"Calculator","","",12,null],[13,"Capital","","",12,null],[13,"Colon","","",12,null],[13,"Comma","","",12,null],[13,"Convert","","",12,null],[13,"Decimal","","",12,null],[13,"Divide","","",12,null],[13,"Equals","","",12,null],[13,"Grave","","",12,null],[13,"Kana","","",12,null],[13,"Kanji","","",12,null],[13,"LAlt","","",12,null],[13,"LBracket","","",12,null],[13,"LControl","","",12,null],[13,"LMenu","","",12,null],[13,"LShift","","",12,null],[13,"LWin","","",12,null],[13,"Mail","","",12,null],[13,"MediaSelect","","",12,null],[13,"MediaStop","","",12,null],[13,"Minus","","",12,null],[13,"Multiply","","",12,null],[13,"Mute","","",12,null],[13,"MyComputer","","",12,null],[13,"NavigateForward","","",12,null],[13,"NavigateBackward","","",12,null],[13,"NextTrack","","",12,null],[13,"NoConvert","","",12,null],[13,"NumpadComma","","",12,null],[13,"NumpadEnter","","",12,null],[13,"NumpadEquals","","",12,null],[13,"OEM102","","",12,null],[13,"Period","","",12,null],[13,"PlayPause","","",12,null],[13,"Power","","",12,null],[13,"PrevTrack","","",12,null],[13,"RAlt","","",12,null],[13,"RBracket","","",12,null],[13,"RControl","","",12,null],[13,"RMenu","","",12,null],[13,"RShift","","",12,null],[13,"RWin","","",12,null],[13,"Semicolon","","",12,null],[13,"Slash","","",12,null],[13,"Sleep","","",12,null],[13,"Stop","","",12,null],[13,"Subtract","","",12,null],[13,"Sysrq","","",12,null],[13,"Tab","","",12,null],[13,"Underline","","",12,null],[13,"Unlabeled","","",12,null],[13,"VolumeDown","","",12,null],[13,"VolumeUp","","",12,null],[13,"Wake","","",12,null],[13,"WebBack","","",12,null],[13,"WebFavorites","","",12,null],[13,"WebForward","","",12,null],[13,"WebHome","","",12,null],[13,"WebRefresh","","",12,null],[13,"WebSearch","","",12,null],[13,"WebStop","","",12,null],[13,"Yen","","",12,null],[4,"NativeMonitorId","","Native platform identifier for a monitor. Different platforms use fundamentally different types\nto represent a monitor ID.",null,null],[13,"Numeric","","Cocoa and X11 use a numeric identifier to represent a monitor.",13,null],[13,"Name","","Win32 uses a Unicode string to represent a monitor.",13,null],[13,"Unavailable","","Other platforms (Android) don&#39;t support monitor identification.",13,null],[4,"CreationError","","Error that can happen while creating a window or a headless renderer.",null,null],[13,"OsError","","",14,null],[13,"NotSupported","","TODO: remove this error",14,null],[13,"NoBackendAvailable","","",14,null],[13,"RobustnessNotSupported","","",14,null],[13,"OpenGlVersionNotSupported","","",14,null],[13,"NoAvailablePixelFormat","","",14,null],[4,"ContextError","","Error that can happen when manipulating an OpenGL context.",null,null],[13,"IoError","","",15,null],[13,"ContextLost","","",15,null],[4,"Api","","All APIs related to OpenGL that you can possibly get while using glutin.",null,null],[13,"OpenGl","","The classical OpenGL. Available on Windows, Linux, OS/X.",16,null],[13,"OpenGlEs","","OpenGL embedded system. Available on Linux, Android.",16,null],[13,"WebGl","","OpenGL for the web. Very similar to OpenGL ES.",16,null],[4,"GlProfile","","Describes the requested OpenGL context profiles.",null,null],[13,"Compatibility","","Include all the immediate more functions and definitions.",17,null],[13,"Core","","Include all the future-compatible functions and definitions.",17,null],[4,"GlRequest","","Describes the OpenGL API and version that are being requested when a context is created.",null,null],[13,"Latest","","Request the latest version of the &quot;best&quot; API of this platform.",18,null],[13,"Specific","","Request a specific version of a specific API.",18,null],[13,"GlThenGles","","If OpenGL is available, create an OpenGL context with the specified `opengl_version`.\nElse if OpenGL ES or WebGL is available, create a context with the\nspecified `opengles_version`.",18,null],[12,"opengl_version","glutin::GlRequest","The version to use for OpenGL.",18,null],[12,"opengles_version","","The version to use for OpenGL ES.",18,null],[4,"Robustness","glutin","Specifies the tolerance of the OpenGL context to faults. If you accept raw OpenGL commands\nand/or raw shader code from an untrusted source, you should definitely care about this.",null,null],[13,"NotRobust","","Not everything is checked. Your application can crash if you do something wrong with your\nshaders.",19,null],[13,"NoError","","The driver doesn&#39;t check anything. This option is very dangerous. Please know what you&#39;re\ndoing before using it. See the `GL_KHR_no_error` extension.",19,null],[13,"RobustNoResetNotification","","Everything is checked to avoid any crash. The driver will attempt to avoid any problem,\nbut if a problem occurs the behavior is implementation-defined. You are just guaranteed not\nto get a crash.",19,null],[13,"TryRobustNoResetNotification","","Same as `RobustNoResetNotification` but the context creation doesn&#39;t fail if it&#39;s not\nsupported.",19,null],[13,"RobustLoseContextOnReset","","Everything is checked to avoid any crash. If a problem occurs, the context will enter a\n&quot;context lost&quot; state. It must then be recreated. For the moment, glutin doesn&#39;t provide a\nway to recreate a context with the same window :-/",19,null],[13,"TryRobustLoseContextOnReset","","Same as `RobustLoseContextOnReset` but the context creation doesn&#39;t fail if it&#39;s not\nsupported.",19,null],[4,"ReleaseBehavior","","The behavior of the driver when you change the current context.",null,null],[13,"None","","Doesn&#39;t do anything. Most notably doesn&#39;t flush.",20,null],[13,"Flush","","Flushes the context that was previously current as if `glFlush` was called.",20,null],[4,"MouseCursor","","",null,null],[13,"Default","","The platform-dependent default cursor.",21,null],[13,"Crosshair","","A simple crosshair.",21,null],[13,"Hand","","A hand (often used to indicate links in web browsers).",21,null],[13,"Arrow","","Self explanatory.",21,null],[13,"Move","","Indicates something is to be moved.",21,null],[13,"Text","","Indicates text that may be selected or edited.",21,null],[13,"Wait","","Program busy indicator.",21,null],[13,"Help","","Help indicator (often rendered as a &quot;?&quot;)",21,null],[13,"Progress","","Progress indicator. Shows that processing is being done. But in contrast\nwith &quot;Wait&quot; the user may still interact with the program. Often rendered\nas a spinning beach ball, or an arrow with a watch or hourglass.",21,null],[13,"NotAllowed","","Cursor showing that something cannot be done.",21,null],[13,"ContextMenu","","",21,null],[13,"NoneCursor","","",21,null],[13,"Cell","","",21,null],[13,"VerticalText","","",21,null],[13,"Alias","","",21,null],[13,"Copy","","",21,null],[13,"NoDrop","","",21,null],[13,"Grab","","",21,null],[13,"Grabbing","","",21,null],[13,"AllScroll","","",21,null],[13,"ZoomIn","","",21,null],[13,"ZoomOut","","",21,null],[13,"EResize","","Indicate that some edge is to be moved. For example, the &#39;SeResize&#39; cursor\nis used when the movement starts from the south-east corner of the box.",21,null],[13,"NResize","","",21,null],[13,"NeResize","","",21,null],[13,"NwResize","","",21,null],[13,"SResize","","",21,null],[13,"SeResize","","",21,null],[13,"SwResize","","",21,null],[13,"WResize","","",21,null],[13,"EwResize","","",21,null],[13,"NsResize","","",21,null],[13,"NeswResize","","",21,null],[13,"NwseResize","","",21,null],[13,"ColResize","","",21,null],[13,"RowResize","","",21,null],[4,"CursorState","","Describes how glutin handles the cursor.",null,null],[13,"Normal","","Normal cursor behavior.",22,null],[13,"Hide","","The cursor will be invisible when over the window.",22,null],[13,"Grab","","Grabs the mouse cursor. The cursor&#39;s motion will be confined to this\nwindow and the window has exclusive access to further events regarding\nthe cursor.",22,null],[5,"get_available_monitors","","Returns the list of all available monitors.",null,{"inputs":[],"output":{"name":"availablemonitorsiter"}}],[5,"get_primary_monitor","","Returns the primary monitor of the system.",null,{"inputs":[],"output":{"name":"monitorid"}}],[11,"hash","core::num","",23,null],[11,"default","","",23,{"inputs":[],"output":{"name":"wrapping"}}],[11,"clone","","",23,null],[11,"cmp","","",23,null],[11,"partial_cmp","","",23,null],[11,"lt","","",23,null],[11,"le","","",23,null],[11,"gt","","",23,null],[11,"ge","","",23,null],[11,"eq","","",23,null],[11,"ne","","",23,null],[11,"fmt","","",23,null],[11,"fmt","","",23,null],[11,"fmt","","",23,null],[11,"fmt","","",23,null],[11,"fmt","","",23,null],[11,"fmt","","",23,null],[11,"shl","","",23,null],[11,"shl_assign","","",23,null],[11,"shr","","",23,null],[11,"shr_assign","","",23,null],[11,"shl","","",23,null],[11,"shl_assign","","",23,null],[11,"shr","","",23,null],[11,"shr_assign","","",23,null],[11,"shl","","",23,null],[11,"shl_assign","","",23,null],[11,"shr","","",23,null],[11,"shr_assign","","",23,null],[11,"shl","","",23,null],[11,"shl_assign","","",23,null],[11,"shr","","",23,null],[11,"shr_assign","","",23,null],[11,"shl","","",23,null],[11,"shl_assign","","",23,null],[11,"shr","","",23,null],[11,"shr_assign","","",23,null],[11,"shl","","",23,null],[11,"shl_assign","","",23,null],[11,"shr","","",23,null],[11,"shr_assign","","",23,null],[11,"shl","","",23,null],[11,"shl_assign","","",23,null],[11,"shr","","",23,null],[11,"shr_assign","","",23,null],[11,"shl","","",23,null],[11,"shl_assign","","",23,null],[11,"shr","","",23,null],[11,"shr_assign","","",23,null],[11,"shl","","",23,null],[11,"shl_assign","","",23,null],[11,"shr","","",23,null],[11,"shr_assign","","",23,null],[11,"shl","","",23,null],[11,"shl_assign","","",23,null],[11,"shr","","",23,null],[11,"shr_assign","","",23,null],[11,"add","","",23,null],[11,"add_assign","","",23,null],[11,"sub","","",23,null],[11,"sub_assign","","",23,null],[11,"mul","","",23,null],[11,"mul_assign","","",23,null],[11,"div","","",23,null],[11,"div_assign","","",23,null],[11,"rem","","",23,null],[11,"rem_assign","","",23,null],[11,"not","","",23,null],[11,"bitxor","","",23,null],[11,"bitxor_assign","","",23,null],[11,"bitor","","",23,null],[11,"bitor_assign","","",23,null],[11,"bitand","","",23,null],[11,"bitand_assign","","",23,null],[11,"neg","","",23,null],[11,"add","","",23,null],[11,"add_assign","","",23,null],[11,"sub","","",23,null],[11,"sub_assign","","",23,null],[11,"mul","","",23,null],[11,"mul_assign","","",23,null],[11,"div","","",23,null],[11,"div_assign","","",23,null],[11,"rem","","",23,null],[11,"rem_assign","","",23,null],[11,"not","","",23,null],[11,"bitxor","","",23,null],[11,"bitxor_assign","","",23,null],[11,"bitor","","",23,null],[11,"bitor_assign","","",23,null],[11,"bitand","","",23,null],[11,"bitand_assign","","",23,null],[11,"neg","","",23,null],[11,"add","","",23,null],[11,"add_assign","","",23,null],[11,"sub","","",23,null],[11,"sub_assign","","",23,null],[11,"mul","","",23,null],[11,"mul_assign","","",23,null],[11,"div","","",23,null],[11,"div_assign","","",23,null],[11,"rem","","",23,null],[11,"rem_assign","","",23,null],[11,"not","","",23,null],[11,"bitxor","","",23,null],[11,"bitxor_assign","","",23,null],[11,"bitor","","",23,null],[11,"bitor_assign","","",23,null],[11,"bitand","","",23,null],[11,"bitand_assign","","",23,null],[11,"neg","","",23,null],[11,"add","","",23,null],[11,"add_assign","","",23,null],[11,"sub","","",23,null],[11,"sub_assign","","",23,null],[11,"mul","","",23,null],[11,"mul_assign","","",23,null],[11,"div","","",23,null],[11,"div_assign","","",23,null],[11,"rem","","",23,null],[11,"rem_assign","","",23,null],[11,"not","","",23,null],[11,"bitxor","","",23,null],[11,"bitxor_assign","","",23,null],[11,"bitor","","",23,null],[11,"bitor_assign","","",23,null],[11,"bitand","","",23,null],[11,"bitand_assign","","",23,null],[11,"neg","","",23,null],[11,"add","","",23,null],[11,"add_assign","","",23,null],[11,"sub","","",23,null],[11,"sub_assign","","",23,null],[11,"mul","","",23,null],[11,"mul_assign","","",23,null],[11,"div","","",23,null],[11,"div_assign","","",23,null],[11,"rem","","",23,null],[11,"rem_assign","","",23,null],[11,"not","","",23,null],[11,"bitxor","","",23,null],[11,"bitxor_assign","","",23,null],[11,"bitor","","",23,null],[11,"bitor_assign","","",23,null],[11,"bitand","","",23,null],[11,"bitand_assign","","",23,null],[11,"neg","","",23,null],[11,"add","","",23,null],[11,"add_assign","","",23,null],[11,"sub","","",23,null],[11,"sub_assign","","",23,null],[11,"mul","","",23,null],[11,"mul_assign","","",23,null],[11,"div","","",23,null],[11,"div_assign","","",23,null],[11,"rem","","",23,null],[11,"rem_assign","","",23,null],[11,"not","","",23,null],[11,"bitxor","","",23,null],[11,"bitxor_assign","","",23,null],[11,"bitor","","",23,null],[11,"bitor_assign","","",23,null],[11,"bitand","","",23,null],[11,"bitand_assign","","",23,null],[11,"neg","","",23,null],[11,"add","","",23,null],[11,"add_assign","","",23,null],[11,"sub","","",23,null],[11,"sub_assign","","",23,null],[11,"mul","","",23,null],[11,"mul_assign","","",23,null],[11,"div","","",23,null],[11,"div_assign","","",23,null],[11,"rem","","",23,null],[11,"rem_assign","","",23,null],[11,"not","","",23,null],[11,"bitxor","","",23,null],[11,"bitxor_assign","","",23,null],[11,"bitor","","",23,null],[11,"bitor_assign","","",23,null],[11,"bitand","","",23,null],[11,"bitand_assign","","",23,null],[11,"neg","","",23,null],[11,"add","","",23,null],[11,"add_assign","","",23,null],[11,"sub","","",23,null],[11,"sub_assign","","",23,null],[11,"mul","","",23,null],[11,"mul_assign","","",23,null],[11,"div","","",23,null],[11,"div_assign","","",23,null],[11,"rem","","",23,null],[11,"rem_assign","","",23,null],[11,"not","","",23,null],[11,"bitxor","","",23,null],[11,"bitxor_assign","","",23,null],[11,"bitor","","",23,null],[11,"bitor_assign","","",23,null],[11,"bitand","","",23,null],[11,"bitand_assign","","",23,null],[11,"neg","","",23,null],[11,"add","","",23,null],[11,"add_assign","","",23,null],[11,"sub","","",23,null],[11,"sub_assign","","",23,null],[11,"mul","","",23,null],[11,"mul_assign","","",23,null],[11,"div","","",23,null],[11,"div_assign","","",23,null],[11,"rem","","",23,null],[11,"rem_assign","","",23,null],[11,"not","","",23,null],[11,"bitxor","","",23,null],[11,"bitxor_assign","","",23,null],[11,"bitor","","",23,null],[11,"bitor_assign","","",23,null],[11,"bitand","","",23,null],[11,"bitand_assign","","",23,null],[11,"neg","","",23,null],[11,"add","","",23,null],[11,"add_assign","","",23,null],[11,"sub","","",23,null],[11,"sub_assign","","",23,null],[11,"mul","","",23,null],[11,"mul_assign","","",23,null],[11,"div","","",23,null],[11,"div_assign","","",23,null],[11,"rem","","",23,null],[11,"rem_assign","","",23,null],[11,"not","","",23,null],[11,"bitxor","","",23,null],[11,"bitxor_assign","","",23,null],[11,"bitor","","",23,null],[11,"bitor_assign","","",23,null],[11,"bitand","","",23,null],[11,"bitand_assign","","",23,null],[11,"neg","","",23,null],[11,"eq","core::num::dec2flt","",24,null],[11,"ne","","",24,null],[11,"clone","","",24,null],[11,"fmt","","",24,null],[11,"fmt","","",24,null],[11,"fmt","core::num","",25,null],[11,"eq","","",25,null],[11,"clone","","",25,null],[11,"clone","","",26,null],[11,"fmt","","",26,null],[11,"fmt","","",26,null],[11,"eq","","",27,null],[11,"ne","","",27,null],[11,"clone","","",27,null],[11,"fmt","","",27,null],[11,"fmt","","",27,null],[11,"hash","core::nonzero","",28,null],[11,"fmt","","",28,null],[11,"partial_cmp","","",28,null],[11,"lt","","",28,null],[11,"le","","",28,null],[11,"gt","","",28,null],[11,"ge","","",28,null],[11,"cmp","","",28,null],[11,"eq","","",28,null],[11,"ne","","",28,null],[11,"clone","","",28,null],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually &quot;non-zero&quot;.",28,{"inputs":[{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",28,null],[11,"new","core::ptr","Creates a new `Unique`.",29,null],[11,"get","","Dereferences the content.",29,null],[11,"get_mut","","Mutably dereferences the content.",29,null],[11,"deref","","",29,null],[11,"fmt","","",29,null],[11,"new","","Creates a new `Shared`.",30,null],[11,"clone","","",30,null],[11,"deref","","",30,null],[11,"fmt","","",30,null],[11,"hash","core::marker","",31,null],[11,"eq","","",31,null],[11,"partial_cmp","","",31,null],[11,"cmp","","",31,null],[11,"clone","","",31,null],[11,"default","","",31,{"inputs":[],"output":{"name":"phantomdata"}}],[11,"hash","core::ops","",32,null],[11,"eq","","",32,null],[11,"clone","","",32,null],[11,"fmt","","",32,null],[11,"hash","","",33,null],[11,"eq","","",33,null],[11,"ne","","",33,null],[11,"clone","","",33,null],[11,"fmt","","",33,null],[11,"contains","","# Examples",33,null],[11,"hash","","",34,null],[11,"eq","","",34,null],[11,"ne","","",34,null],[11,"clone","","",34,null],[11,"fmt","","",34,null],[11,"contains","","# Examples",34,null],[11,"hash","","",35,null],[11,"eq","","",35,null],[11,"ne","","",35,null],[11,"clone","","",35,null],[11,"fmt","","",35,null],[11,"contains","","# Examples",35,null],[11,"hash","","",36,null],[11,"eq","","",36,null],[11,"ne","","",36,null],[11,"clone","","",36,null],[11,"fmt","","",36,null],[11,"contains","","# Examples",36,null],[11,"hash","","",37,null],[11,"eq","","",37,null],[11,"ne","","",37,null],[11,"clone","","",37,null],[11,"fmt","","",37,null],[11,"contains","","# Examples",37,null],[11,"hash","core::cmp","",38,null],[11,"fmt","","",38,null],[11,"eq","","",38,null],[11,"clone","","",38,null],[11,"reverse","","Reverse the `Ordering`.",38,null],[11,"cmp","","",38,null],[11,"partial_cmp","","",38,null],[11,"fmt","glutin::api::egl::ffi::egl","",39,null],[11,"fmt","","",39,null],[11,"is","","Returns true if the boxed type is the same as `T`",39,null],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",39,null],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",39,null],[11,"is","","Forwards to the method defined on the type `Any`.",39,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",39,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",39,null],[11,"hash","core::any","",40,null],[11,"fmt","","",40,null],[11,"eq","","",40,null],[11,"ne","","",40,null],[11,"clone","","",40,null],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",40,{"inputs":[],"output":{"name":"typeid"}}],[11,"default","core::sync::atomic","",41,{"inputs":[],"output":{"name":"atomicbool"}}],[11,"default","","",42,{"inputs":[],"output":{"name":"atomicptr"}}],[11,"fmt","","",43,null],[11,"clone","","",43,null],[11,"new","","Creates a new `AtomicBool`.",41,{"inputs":[{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",41,null],[11,"store","","Stores a value into the bool.",41,null],[11,"swap","","Stores a value into the bool, returning the old value.",41,null],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",41,null],[11,"compare_exchange","","Stores a value into the `bool` if the current value is the same as the `current` value.",41,null],[11,"compare_exchange_weak","","Stores a value into the `bool` if the current value is the same as the `current` value.",41,null],[11,"fetch_and","","Logical &quot;and&quot; with a boolean value.",41,null],[11,"fetch_nand","","Logical &quot;nand&quot; with a boolean value.",41,null],[11,"fetch_or","","Logical &quot;or&quot; with a boolean value.",41,null],[11,"fetch_xor","","Logical &quot;xor&quot; with a boolean value.",41,null],[11,"new","","Creates a new `AtomicPtr`.",42,null],[11,"load","","Loads a value from the pointer.",42,null],[11,"store","","Stores a value into the pointer.",42,null],[11,"swap","","Stores a value into the pointer, returning the old value.",42,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",42,null],[11,"compare_exchange","","Stores a value into the pointer if the current value is the same as the `current` value.",42,null],[11,"compare_exchange_weak","","Stores a value into the pointer if the current value is the same as the `current` value.",42,null],[11,"default","","",44,{"inputs":[],"output":{"name":"atomici8"}}],[11,"fmt","","",44,null],[11,"new","","Creates a new atomic integer.",44,{"inputs":[{"name":"i8"}],"output":{"name":"atomici8"}}],[11,"load","","Loads a value from the atomic integer.",44,null],[11,"store","","Stores a value into the atomic integer.",44,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",44,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",44,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",44,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",44,null],[11,"fetch_add","","Add to the current value, returning the previous value.",44,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",44,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",44,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",44,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",44,null],[11,"default","","",45,{"inputs":[],"output":{"name":"atomicu8"}}],[11,"fmt","","",45,null],[11,"new","","Creates a new atomic integer.",45,{"inputs":[{"name":"u8"}],"output":{"name":"atomicu8"}}],[11,"load","","Loads a value from the atomic integer.",45,null],[11,"store","","Stores a value into the atomic integer.",45,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",45,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",45,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",45,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",45,null],[11,"fetch_add","","Add to the current value, returning the previous value.",45,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",45,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",45,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",45,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",45,null],[11,"default","","",46,{"inputs":[],"output":{"name":"atomici16"}}],[11,"fmt","","",46,null],[11,"new","","Creates a new atomic integer.",46,{"inputs":[{"name":"i16"}],"output":{"name":"atomici16"}}],[11,"load","","Loads a value from the atomic integer.",46,null],[11,"store","","Stores a value into the atomic integer.",46,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",46,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",46,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",46,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",46,null],[11,"fetch_add","","Add to the current value, returning the previous value.",46,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",46,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",46,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",46,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",46,null],[11,"default","","",47,{"inputs":[],"output":{"name":"atomicu16"}}],[11,"fmt","","",47,null],[11,"new","","Creates a new atomic integer.",47,{"inputs":[{"name":"u16"}],"output":{"name":"atomicu16"}}],[11,"load","","Loads a value from the atomic integer.",47,null],[11,"store","","Stores a value into the atomic integer.",47,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",47,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",47,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",47,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",47,null],[11,"fetch_add","","Add to the current value, returning the previous value.",47,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",47,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",47,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",47,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",47,null],[11,"default","","",48,{"inputs":[],"output":{"name":"atomici32"}}],[11,"fmt","","",48,null],[11,"new","","Creates a new atomic integer.",48,{"inputs":[{"name":"i32"}],"output":{"name":"atomici32"}}],[11,"load","","Loads a value from the atomic integer.",48,null],[11,"store","","Stores a value into the atomic integer.",48,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",48,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",48,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",48,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",48,null],[11,"fetch_add","","Add to the current value, returning the previous value.",48,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",48,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",48,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",48,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",48,null],[11,"default","","",49,{"inputs":[],"output":{"name":"atomicu32"}}],[11,"fmt","","",49,null],[11,"new","","Creates a new atomic integer.",49,{"inputs":[{"name":"u32"}],"output":{"name":"atomicu32"}}],[11,"load","","Loads a value from the atomic integer.",49,null],[11,"store","","Stores a value into the atomic integer.",49,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",49,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",49,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",49,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",49,null],[11,"fetch_add","","Add to the current value, returning the previous value.",49,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",49,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",49,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",49,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",49,null],[11,"default","","",50,{"inputs":[],"output":{"name":"atomici64"}}],[11,"fmt","","",50,null],[11,"new","","Creates a new atomic integer.",50,{"inputs":[{"name":"i64"}],"output":{"name":"atomici64"}}],[11,"load","","Loads a value from the atomic integer.",50,null],[11,"store","","Stores a value into the atomic integer.",50,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",50,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",50,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",50,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",50,null],[11,"fetch_add","","Add to the current value, returning the previous value.",50,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",50,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",50,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",50,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",50,null],[11,"default","","",51,{"inputs":[],"output":{"name":"atomicu64"}}],[11,"fmt","","",51,null],[11,"new","","Creates a new atomic integer.",51,{"inputs":[{"name":"u64"}],"output":{"name":"atomicu64"}}],[11,"load","","Loads a value from the atomic integer.",51,null],[11,"store","","Stores a value into the atomic integer.",51,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",51,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",51,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",51,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",51,null],[11,"fetch_add","","Add to the current value, returning the previous value.",51,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",51,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",51,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",51,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",51,null],[11,"default","","",52,{"inputs":[],"output":{"name":"atomicisize"}}],[11,"fmt","","",52,null],[11,"new","","Creates a new atomic integer.",52,{"inputs":[{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the atomic integer.",52,null],[11,"store","","Stores a value into the atomic integer.",52,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",52,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",52,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",52,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",52,null],[11,"fetch_add","","Add to the current value, returning the previous value.",52,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",52,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",52,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",52,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",52,null],[11,"default","","",53,{"inputs":[],"output":{"name":"atomicusize"}}],[11,"fmt","","",53,null],[11,"new","","Creates a new atomic integer.",53,{"inputs":[{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the atomic integer.",53,null],[11,"store","","Stores a value into the atomic integer.",53,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",53,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",53,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",53,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",53,null],[11,"fetch_add","","Add to the current value, returning the previous value.",53,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",53,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",53,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",53,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",53,null],[11,"fmt","","",41,null],[11,"fmt","","",42,null],[11,"new","core::cell","Creates a new `Cell` containing the given value.",54,{"inputs":[{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",54,null],[11,"set","","Sets the contained value.",54,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",54,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",54,null],[11,"clone","","",54,null],[11,"default","","",54,{"inputs":[],"output":{"name":"cell"}}],[11,"eq","","",54,null],[11,"partial_cmp","","",54,null],[11,"lt","","",54,null],[11,"le","","",54,null],[11,"gt","","",54,null],[11,"ge","","",54,null],[11,"cmp","","",54,null],[11,"fmt","","",55,null],[11,"eq","","",55,null],[11,"clone","","",55,null],[11,"new","","Creates a new `RefCell` containing `value`.",56,{"inputs":[{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",56,null],[11,"borrow_state","","Query the current state of this `RefCell`",56,null],[11,"borrow","","Immutably borrows the wrapped value.",56,null],[11,"borrow_mut","","Mutably borrows the wrapped value.",56,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",56,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",56,null],[11,"clone","","",56,null],[11,"default","","",56,{"inputs":[],"output":{"name":"refcell"}}],[11,"eq","","",56,null],[11,"partial_cmp","","",56,null],[11,"lt","","",56,null],[11,"le","","",56,null],[11,"gt","","",56,null],[11,"ge","","",56,null],[11,"cmp","","",56,null],[11,"deref","","",57,null],[11,"clone","","Copies a `Ref`.",57,{"inputs":[{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",57,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",58,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"deref","","",58,null],[11,"deref_mut","","",58,null],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",59,{"inputs":[{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",59,null],[11,"get","","Gets a mutable pointer to the wrapped value.",59,null],[11,"default","","",59,{"inputs":[],"output":{"name":"unsafecell"}}],[11,"fmt","core::char","",60,null],[11,"clone","","",60,null],[11,"next","","",60,null],[11,"size_hint","","",60,null],[11,"count","","",60,null],[11,"last","","",60,null],[11,"len","","",60,null],[11,"fmt","","",61,null],[11,"clone","","",61,null],[11,"next","","",61,null],[11,"size_hint","","",61,null],[11,"count","","",61,null],[11,"nth","","",61,null],[11,"last","","",61,null],[11,"len","","",61,null],[11,"fmt","","",62,null],[11,"as_slice","","Returns the remaining bytes of this iterator as a slice.",62,null],[11,"next","","",62,null],[11,"size_hint","","",62,null],[11,"fmt","","",63,null],[11,"as_slice","","Returns the remaining bytes of this iterator as a slice.",63,null],[11,"next","","",63,null],[11,"size_hint","","",63,null],[11,"fmt","core::iter::range","",64,null],[11,"clone","","",64,null],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",34,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",33,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",36,null],[11,"next","core::iter::range","",64,null],[11,"size_hint","","",64,null],[11,"next","","",64,null],[11,"size_hint","","",64,null],[11,"next","","",64,null],[11,"size_hint","","",64,null],[11,"next","core::ops","",33,null],[11,"size_hint","","",33,null],[11,"next_back","","",33,null],[11,"next","","",34,null],[11,"next","","",36,null],[11,"size_hint","","",36,null],[11,"next_back","","",36,null],[11,"fmt","core::iter::sources","",65,null],[11,"clone","","",65,null],[11,"next","","",65,null],[11,"size_hint","","",65,null],[11,"next_back","","",65,null],[11,"fmt","","",66,null],[11,"next","","",66,null],[11,"size_hint","","",66,null],[11,"next_back","","",66,null],[11,"len","","",66,null],[11,"clone","","",66,null],[11,"default","","",66,{"inputs":[],"output":{"name":"empty"}}],[11,"fmt","","",67,null],[11,"clone","","",67,null],[11,"next","","",67,null],[11,"size_hint","","",67,null],[11,"next_back","","",67,null],[11,"len","","",67,null],[11,"fmt","core::iter","",68,null],[11,"clone","","",68,null],[11,"next","","",68,null],[11,"size_hint","","",68,null],[11,"next_back","","",68,null],[11,"fmt","","",69,null],[11,"clone","","",69,null],[11,"next","","",69,null],[11,"size_hint","","",69,null],[11,"next_back","","",69,null],[11,"fmt","","",70,null],[11,"clone","","",70,null],[11,"next","","",70,null],[11,"size_hint","","",70,null],[11,"fmt","","",71,null],[11,"clone","","",71,null],[11,"next","","",71,null],[11,"count","","",71,null],[11,"nth","","",71,null],[11,"find","","",71,null],[11,"last","","",71,null],[11,"size_hint","","",71,null],[11,"next_back","","",71,null],[11,"fmt","","",72,null],[11,"clone","","",72,null],[11,"next","","",72,null],[11,"size_hint","","",72,null],[11,"next_back","","",72,null],[11,"clone","","",73,null],[11,"fmt","","",73,null],[11,"next","","",73,null],[11,"size_hint","","",73,null],[11,"next_back","","",73,null],[11,"clone","","",74,null],[11,"fmt","","",74,null],[11,"next","","",74,null],[11,"size_hint","","",74,null],[11,"next_back","","",74,null],[11,"clone","","",75,null],[11,"fmt","","",75,null],[11,"next","","",75,null],[11,"size_hint","","",75,null],[11,"next_back","","",75,null],[11,"fmt","","",76,null],[11,"clone","","",76,null],[11,"next","","# Overflow Behavior",76,null],[11,"size_hint","","",76,null],[11,"nth","","",76,null],[11,"count","","",76,null],[11,"next_back","","",76,null],[11,"fmt","","",77,null],[11,"clone","","",77,null],[11,"next","","",77,null],[11,"count","","",77,null],[11,"nth","","",77,null],[11,"last","","",77,null],[11,"size_hint","","",77,null],[11,"peek","","Returns a reference to the next() value without advancing the iterator.",77,null],[11,"is_empty","","Checks if the iterator has finished iterating.",77,null],[11,"clone","","",78,null],[11,"fmt","","",78,null],[11,"next","","",78,null],[11,"size_hint","","",78,null],[11,"clone","","",79,null],[11,"fmt","","",79,null],[11,"next","","",79,null],[11,"size_hint","","",79,null],[11,"fmt","","",80,null],[11,"clone","","",80,null],[11,"next","","",80,null],[11,"nth","","",80,null],[11,"count","","",80,null],[11,"last","","",80,null],[11,"size_hint","","",80,null],[11,"next_back","","",80,null],[11,"fmt","","",81,null],[11,"clone","","",81,null],[11,"next","","",81,null],[11,"nth","","",81,null],[11,"size_hint","","",81,null],[11,"clone","","",82,null],[11,"fmt","","",82,null],[11,"next","","",82,null],[11,"size_hint","","",82,null],[11,"clone","","",83,null],[11,"fmt","","",83,null],[11,"next","","",83,null],[11,"size_hint","","",83,null],[11,"next_back","","",83,null],[11,"fmt","","",84,null],[11,"clone","","",84,null],[11,"next","","",84,null],[11,"nth","","",84,null],[11,"last","","",84,null],[11,"count","","",84,null],[11,"size_hint","","",84,null],[11,"next_back","","",84,null],[11,"clone","","",85,null],[11,"fmt","","",85,null],[11,"next","","",85,null],[11,"size_hint","","",85,null],[11,"next_back","","",85,null],[11,"hash","core::option","",86,null],[11,"fmt","","",86,null],[11,"cmp","","",86,null],[11,"partial_cmp","","",86,null],[11,"lt","","",86,null],[11,"le","","",86,null],[11,"gt","","",86,null],[11,"ge","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"clone","","",86,null],[11,"is_some","","Returns `true` if the option is a `Some` value",86,null],[11,"is_none","","Returns `true` if the option is a `None` value",86,null],[11,"as_ref","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`",86,null],[11,"as_mut","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;mut T&gt;`",86,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",86,null],[11,"unwrap","","Moves the value `v` out of the `Option&lt;T&gt;` if it is `Some(v)`.",86,null],[11,"unwrap_or","","Returns the contained value or a default.",86,null],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",86,null],[11,"map","","Maps an `Option&lt;T&gt;` to `Option&lt;U&gt;` by applying a function to a contained value",86,null],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",86,null],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",86,null],[11,"ok_or","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",86,null],[11,"ok_or_else","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",86,null],[11,"iter","","Returns an iterator over the possibly contained value.",86,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",86,null],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",86,null],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",86,null],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",86,null],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",86,null],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",86,null],[11,"cloned","","Maps an `Option&lt;&amp;T&gt;` to an `Option&lt;T&gt;` by cloning the contents of the\noption.",86,null],[11,"unwrap_or_default","","Returns the contained value or a default",86,null],[11,"default","","",86,{"inputs":[],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",86,null],[11,"fmt","","",87,null],[11,"next","","",87,null],[11,"size_hint","","",87,null],[11,"next_back","","",87,null],[11,"clone","","",87,null],[11,"fmt","","",88,null],[11,"next","","",88,null],[11,"size_hint","","",88,null],[11,"next_back","","",88,null],[11,"fmt","","",89,null],[11,"clone","","",89,null],[11,"next","","",89,null],[11,"size_hint","","",89,null],[11,"next_back","","",89,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",86,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[11,"clone","core::raw","",90,null],[11,"hash","core::result","",91,null],[11,"fmt","","",91,null],[11,"cmp","","",91,null],[11,"partial_cmp","","",91,null],[11,"lt","","",91,null],[11,"le","","",91,null],[11,"gt","","",91,null],[11,"ge","","",91,null],[11,"eq","","",91,null],[11,"ne","","",91,null],[11,"clone","","",91,null],[11,"is_ok","","Returns true if the result is `Ok`",91,null],[11,"is_err","","Returns true if the result is `Err`",91,null],[11,"ok","","Converts from `Result&lt;T, E&gt;` to `Option&lt;T&gt;`",91,null],[11,"err","","Converts from `Result&lt;T, E&gt;` to `Option&lt;E&gt;`",91,null],[11,"as_ref","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;T, &amp;E&gt;`",91,null],[11,"as_mut","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;mut T, &amp;mut E&gt;`",91,null],[11,"map","","Maps a `Result&lt;T, E&gt;` to `Result&lt;U, E&gt;` by applying a function to a\ncontained `Ok` value, leaving an `Err` value untouched.",91,null],[11,"map_err","","Maps a `Result&lt;T, E&gt;` to `Result&lt;T, F&gt;` by applying a function to a\ncontained `Err` value, leaving an `Ok` value untouched.",91,null],[11,"iter","","Returns an iterator over the possibly contained value.",91,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",91,null],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",91,null],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",91,null],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",91,null],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",91,null],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",91,null],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",91,null],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",91,null],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",91,null],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",91,null],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",91,null],[11,"fmt","","",92,null],[11,"next","","",92,null],[11,"size_hint","","",92,null],[11,"next_back","","",92,null],[11,"clone","","",92,null],[11,"fmt","","",93,null],[11,"next","","",93,null],[11,"size_hint","","",93,null],[11,"next_back","","",93,null],[11,"fmt","","",94,null],[11,"next","","",94,null],[11,"size_hint","","",94,null],[11,"next_back","","",94,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",91,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","core::slice","",95,null],[11,"as_slice","","View the underlying data as a subslice of the original data.",95,null],[11,"next","","",95,null],[11,"size_hint","","",95,null],[11,"count","","",95,null],[11,"nth","","",95,null],[11,"last","","",95,null],[11,"next_back","","",95,null],[11,"clone","","",95,null],[11,"fmt","","",96,null],[11,"into_slice","","View the underlying data as a subslice of the original data.",96,null],[11,"next","","",96,null],[11,"size_hint","","",96,null],[11,"count","","",96,null],[11,"nth","","",96,null],[11,"last","","",96,null],[11,"next_back","","",96,null],[11,"fmt","","",97,null],[11,"clone","","",97,null],[11,"next","","",97,null],[11,"size_hint","","",97,null],[11,"next_back","","",97,null],[11,"fmt","","",98,null],[11,"next","","",98,null],[11,"size_hint","","",98,null],[11,"next_back","","",98,null],[11,"fmt","","",99,null],[11,"fmt","","",100,null],[11,"fmt","","",101,null],[11,"fmt","","",102,null],[11,"next","","",99,null],[11,"size_hint","","",99,null],[11,"next","","",100,null],[11,"size_hint","","",100,null],[11,"next","","",101,null],[11,"size_hint","","",101,null],[11,"next","","",102,null],[11,"size_hint","","",102,null],[11,"fmt","","",103,null],[11,"clone","","",103,null],[11,"next","","",103,null],[11,"size_hint","","",103,null],[11,"count","","",103,null],[11,"nth","","",103,null],[11,"last","","",103,null],[11,"next_back","","",103,null],[11,"fmt","","",104,null],[11,"clone","","",104,null],[11,"next","","",104,null],[11,"size_hint","","",104,null],[11,"count","","",104,null],[11,"nth","","",104,null],[11,"last","","",104,null],[11,"next_back","","",104,null],[11,"fmt","","",105,null],[11,"next","","",105,null],[11,"size_hint","","",105,null],[11,"count","","",105,null],[11,"nth","","",105,null],[11,"last","","",105,null],[11,"next_back","","",105,null],[11,"fmt","core::str::pattern","",106,null],[11,"eq","","",106,null],[11,"ne","","",106,null],[11,"clone","","",106,null],[11,"fmt","","",107,null],[11,"clone","","",107,null],[11,"haystack","","",107,null],[11,"next","","",107,null],[11,"next_match","","",107,null],[11,"next_reject","","",107,null],[11,"next_back","","",107,null],[11,"next_match_back","","",107,null],[11,"next_reject_back","","",107,null],[11,"fmt","","",108,null],[11,"clone","","",108,null],[11,"haystack","","",108,null],[11,"next","","",108,null],[11,"next_match","","",108,null],[11,"next_reject","","",108,null],[11,"next_back","","",108,null],[11,"next_match_back","","",108,null],[11,"next_reject_back","","",108,null],[11,"clone","","",109,null],[11,"fmt","","",109,null],[11,"haystack","","",109,null],[11,"next","","",109,null],[11,"next_match","","",109,null],[11,"next_reject","","",109,null],[11,"next_back","","",109,null],[11,"next_match_back","","",109,null],[11,"next_reject_back","","",109,null],[11,"fmt","","",110,null],[11,"clone","","",110,null],[11,"haystack","","",110,null],[11,"next","","",110,null],[11,"next_match","","",110,null],[11,"next_back","","",110,null],[11,"next_match_back","","",110,null],[11,"eq","core::str","",111,null],[11,"ne","","",111,null],[11,"clone","","",111,null],[11,"fmt","","",111,null],[11,"fmt","","",111,null],[11,"fmt","","",112,null],[11,"clone","","",112,null],[11,"eq","","",112,null],[11,"ne","","",112,null],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",112,null],[11,"fmt","","",112,null],[11,"fmt","","",113,null],[11,"clone","","",113,null],[11,"next","","",113,null],[11,"size_hint","","",113,null],[11,"next_back","","",113,null],[11,"as_str","","View the underlying data as a subslice of the original data.",113,null],[11,"fmt","","",114,null],[11,"clone","","",114,null],[11,"next","","",114,null],[11,"size_hint","","",114,null],[11,"next_back","","",114,null],[11,"as_str","","View the underlying data as a subslice of the original data.",114,null],[11,"fmt","","",115,null],[11,"clone","","",115,null],[11,"next","","",115,null],[11,"size_hint","","",115,null],[11,"count","","",115,null],[11,"last","","",115,null],[11,"nth","","",115,null],[11,"next_back","","",115,null],[11,"len","","",115,null],[11,"fmt","","",116,null],[11,"next","","",116,null],[11,"clone","","",116,null],[11,"fmt","","",117,null],[11,"next","","",117,null],[11,"clone","","",117,null],[11,"next_back","","",116,null],[11,"next_back","","",117,null],[11,"fmt","","",118,null],[11,"next","","",118,null],[11,"clone","","",118,null],[11,"fmt","","",119,null],[11,"next","","",119,null],[11,"clone","","",119,null],[11,"next_back","","",118,null],[11,"next_back","","",119,null],[11,"fmt","","",120,null],[11,"next","","",120,null],[11,"clone","","",120,null],[11,"fmt","","",121,null],[11,"next","","",121,null],[11,"clone","","",121,null],[11,"fmt","","",122,null],[11,"next","","",122,null],[11,"clone","","",122,null],[11,"fmt","","",123,null],[11,"next","","",123,null],[11,"clone","","",123,null],[11,"next_back","","",122,null],[11,"next_back","","",123,null],[11,"fmt","","",124,null],[11,"next","","",124,null],[11,"clone","","",124,null],[11,"fmt","","",125,null],[11,"next","","",125,null],[11,"clone","","",125,null],[11,"next_back","","",124,null],[11,"next_back","","",125,null],[11,"fmt","","",126,null],[11,"clone","","",126,null],[11,"next","","",126,null],[11,"size_hint","","",126,null],[11,"next_back","","",126,null],[11,"fmt","","",127,null],[11,"clone","","",127,null],[11,"next","","",127,null],[11,"size_hint","","",127,null],[11,"next_back","","",127,null],[11,"default","core::hash::sip","",128,{"inputs":[],"output":{"name":"siphasher13"}}],[11,"clone","","",128,null],[11,"fmt","","",128,null],[11,"default","","",129,{"inputs":[],"output":{"name":"siphasher24"}}],[11,"clone","","",129,null],[11,"fmt","","",129,null],[11,"default","","",130,{"inputs":[],"output":{"name":"siphasher"}}],[11,"clone","","",130,null],[11,"fmt","","",130,null],[11,"new","","Creates a new `SipHasher` with the two initial keys set to 0.",130,{"inputs":[],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",130,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"new","","Creates a new `SipHasher13` with the two initial keys set to 0.",128,{"inputs":[],"output":{"name":"siphasher13"}}],[11,"new_with_keys","","Creates a `SipHasher13` that is keyed off the provided keys.",128,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher13"}}],[11,"new","","Creates a new `SipHasher24` with the two initial keys set to 0.",129,{"inputs":[],"output":{"name":"siphasher24"}}],[11,"new_with_keys","","Creates a `SipHasher24` that is keyed off the provided keys.",129,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher24"}}],[11,"write","","",130,null],[11,"finish","","",130,null],[11,"write","","",128,null],[11,"finish","","",128,null],[11,"write","","",129,null],[11,"finish","","",129,null],[11,"fmt","core::hash","",131,null],[11,"build_hasher","","",131,null],[11,"clone","","",131,null],[11,"default","","",131,{"inputs":[],"output":{"name":"buildhasherdefault"}}],[11,"fmt","core::fmt","",132,null],[11,"field","core::fmt::builders","Adds a new field to the generated struct output.",133,null],[11,"finish","","Finishes output and returns any error encountered.",133,null],[11,"field","","Adds a new field to the generated tuple struct output.",134,null],[11,"finish","","Finishes output and returns any error encountered.",134,null],[11,"entry","","Adds a new entry to the set output.",135,null],[11,"entries","","Adds the contents of an iterator of entries to the set output.",135,null],[11,"finish","","Finishes output and returns any error encountered.",135,null],[11,"entry","","Adds a new entry to the list output.",136,null],[11,"entries","","Adds the contents of an iterator of entries to the list output.",136,null],[11,"finish","","Finishes output and returns any error encountered.",136,null],[11,"entry","","Adds a new entry to the map output.",137,null],[11,"entries","","Adds the contents of an iterator of entries to the map output.",137,null],[11,"finish","","Finishes output and returns any error encountered.",137,null],[11,"partial_cmp","core::fmt","",138,null],[11,"eq","","",138,null],[11,"cmp","","",138,null],[11,"hash","","",138,null],[11,"default","","",138,{"inputs":[],"output":{"name":"error"}}],[11,"fmt","","",138,null],[11,"clone","","",138,null],[11,"clone","","",139,null],[11,"fmt","","",139,null],[11,"fmt","","",139,null],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",140,null],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",140,null],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",140,null],[11,"write_fmt","","Writes some formatted information into this instance",140,null],[11,"flags","","Flags for formatting (packed version of rt::Flag)",140,null],[11,"fill","","Character used as &#39;fill&#39; whenever there is alignment",140,null],[11,"align","","Flag indicating what form of alignment was requested",140,null],[11,"width","","Optionally specified integer width that the output should be",140,null],[11,"precision","","Optionally specified precision for numeric types",140,null],[11,"sign_plus","","Determines if the `+` flag was specified.",140,null],[11,"sign_minus","","Determines if the `-` flag was specified.",140,null],[11,"alternate","","Determines if the `#` flag was specified.",140,null],[11,"sign_aware_zero_pad","","Determines if the `0` flag was specified.",140,null],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",140,null],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",140,null],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",140,null],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",140,null],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",140,null],[11,"write_str","","",140,null],[11,"write_char","","",140,null],[11,"write_fmt","","",140,null],[11,"fmt","","",138,null],[11,"fmt","core::marker","",31,null],[11,"fmt","core::cell","",54,null],[11,"fmt","","",56,null],[11,"fmt","","",57,null],[11,"fmt","","",58,null],[11,"fmt","","",59,null],[11,"from","alloc::boxed","",141,{"inputs":[{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",141,{"inputs":[{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",141,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",141,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",141,{"inputs":[{"name":"str"}],"output":{"name":"box"}}],[11,"from","","",141,{"inputs":[{"name":"str"}],"output":{"name":"box"}}],[11,"description","core::str","",111,null],[11,"description","","",112,null],[11,"description","core::num","",27,null],[11,"description","","",26,null],[11,"description","core::num::dec2flt","",24,null],[11,"description","collections::string","",142,null],[11,"description","","",143,null],[11,"description","","",144,null],[11,"description","rustc_unicode::char","",145,null],[11,"description","alloc::boxed","",141,null],[11,"cause","","",141,null],[11,"description","core::fmt","",138,null],[11,"is","glutin::api::egl::ffi::egl::__gl_imports","Returns true if the boxed type is the same as `T`",146,null],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",146,null],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",146,null],[11,"is","","Forwards to the method defined on the type `Any`.",146,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",146,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",146,null],[11,"is","","Forwards to the method defined on the type `Any`.",146,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",146,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",146,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",146,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",146,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",146,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"next","std::ascii","",147,null],[11,"size_hint","","",147,null],[11,"next_back","","",147,null],[11,"clone","std::thread::local","",148,null],[11,"eq","","",148,null],[11,"with","","Acquires a reference to the value in this TLS key.",149,null],[11,"state","","Query the current state of this key.",149,null],[11,"new","std::thread::local::elf","",150,{"inputs":[],"output":{"name":"key"}}],[11,"get","","",150,null],[11,"new","std::thread::local::os","",151,{"inputs":[],"output":{"name":"key"}}],[11,"get","","",151,null],[11,"new","std::thread","Generates the base configuration for spawning a thread, from which\nconfiguration methods can be chained.",152,{"inputs":[],"output":{"name":"builder"}}],[11,"name","","Names the thread-to-be. Currently the name is used for identification\nonly in panic messages.",152,null],[11,"stack_size","","Sets the size of the stack for the new thread.",152,null],[11,"spawn","","Spawns a new thread, and returns a join handle for it.",152,null],[11,"clone","","",153,null],[11,"unpark","","Atomically makes the handle&#39;s token available if it is not already.",153,null],[11,"name","","Gets the thread&#39;s name.",153,null],[11,"fmt","","",153,null],[11,"thread","","Extracts a handle to the underlying thread",154,null],[11,"join","","Waits for the associated thread to finish.",154,null],[11,"clone","std::collections::hash::map","",155,null],[11,"new","","Creates an empty HashMap.",155,{"inputs":[],"output":{"name":"hashmap"}}],[11,"with_capacity","","Creates an empty hash map with the given initial capacity.",155,{"inputs":[{"name":"usize"}],"output":{"name":"hashmap"}}],[11,"with_hasher","","Creates an empty hashmap which will use the given hash builder to hash\nkeys.",155,{"inputs":[{"name":"s"}],"output":{"name":"hashmap"}}],[11,"with_capacity_and_hasher","","Creates an empty HashMap with space for at least `capacity`\nelements, using `hasher` to hash the keys.",155,{"inputs":[{"name":"usize"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"hasher","","Returns a reference to the map&#39;s hasher.",155,null],[11,"capacity","","Returns the number of elements the map can hold without reallocating.",155,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashMap`. The collection may reserve more space to avoid\nfrequent reallocations.",155,null],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",155,null],[11,"keys","","An iterator visiting all keys in arbitrary order.\nIterator element type is `&amp;&#39;a K`.",155,null],[11,"values","","An iterator visiting all values in arbitrary order.\nIterator element type is `&amp;&#39;a V`.",155,null],[11,"values_mut","","An iterator visiting all values mutably in arbitrary order.\nIterator element type is `&amp;&#39;a mut V`.",155,null],[11,"iter","","An iterator visiting all key-value pairs in arbitrary order.\nIterator element type is `(&amp;&#39;a K, &amp;&#39;a V)`.",155,null],[11,"iter_mut","","An iterator visiting all key-value pairs in arbitrary order,\nwith mutable references to the values.\nIterator element type is `(&amp;&#39;a K, &amp;&#39;a mut V)`.",155,null],[11,"entry","","Gets the given key&#39;s corresponding entry in the map for in-place manipulation.",155,null],[11,"len","","Returns the number of elements in the map.",155,null],[11,"is_empty","","Returns true if the map contains no elements.",155,null],[11,"drain","","Clears the map, returning all key-value pairs as an iterator. Keeps the\nallocated memory for reuse.",155,null],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the allocated memory\nfor reuse.",155,null],[11,"get","","Returns a reference to the value corresponding to the key.",155,null],[11,"contains_key","","Returns true if the map contains a value for the specified key.",155,null],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",155,null],[11,"insert","","Inserts a key-value pair into the map.",155,null],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",155,null],[11,"eq","","",155,null],[11,"fmt","","",155,null],[11,"default","","",155,{"inputs":[],"output":{"name":"hashmap"}}],[11,"index","","",155,null],[11,"clone","","",156,null],[11,"clone","","",157,null],[11,"clone","","",158,null],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each key-value\npair out of the map in arbitrary order. The map cannot be used after\ncalling this.",155,null],[11,"next","","",156,null],[11,"size_hint","","",156,null],[11,"len","","",156,null],[11,"next","","",159,null],[11,"size_hint","","",159,null],[11,"len","","",159,null],[11,"next","","",160,null],[11,"size_hint","","",160,null],[11,"len","","",160,null],[11,"next","","",157,null],[11,"size_hint","","",157,null],[11,"len","","",157,null],[11,"next","","",158,null],[11,"size_hint","","",158,null],[11,"len","","",158,null],[11,"next","","",161,null],[11,"size_hint","","",161,null],[11,"len","","",161,null],[11,"next","","",162,null],[11,"size_hint","","",162,null],[11,"len","","",162,null],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",163,null],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",163,null],[11,"key","","Returns a reference to this entry&#39;s key.",163,null],[11,"key","","Gets a reference to the key in the entry.",164,null],[11,"remove_pair","","Take the ownership of the key and value from the map.",164,null],[11,"get","","Gets a reference to the value in the entry.",164,null],[11,"get_mut","","Gets a mutable reference to the value in the entry.",164,null],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to the value in the entry\nwith a lifetime bound to the map itself",164,null],[11,"insert","","Sets the value of the entry, and returns the entry&#39;s old value",164,null],[11,"remove","","Takes the value out of the entry, and returns it",164,null],[11,"key","","Gets a reference to the key that would be used when inserting a value\nthrough the VacantEntry.",165,null],[11,"into_key","","Take ownership of the key.",165,null],[11,"insert","","Sets the value of the entry with the VacantEntry&#39;s key,\nand returns a mutable reference to it",165,null],[11,"from_iter","","",155,{"inputs":[{"name":"t"}],"output":{"name":"hashmap"}}],[11,"extend","","",155,null],[11,"extend","","",155,null],[11,"clone","","",166,null],[11,"new","","Constructs a new `RandomState` that is initialized with random keys.",166,{"inputs":[],"output":{"name":"randomstate"}}],[11,"build_hasher","","",166,null],[11,"write","","",167,null],[11,"finish","","",167,null],[11,"default","","",166,{"inputs":[],"output":{"name":"randomstate"}}],[11,"clone","std::collections::hash::set","",168,null],[11,"new","","Creates an empty HashSet.",168,{"inputs":[],"output":{"name":"hashset"}}],[11,"with_capacity","","Creates an empty HashSet with space for at least `n` elements in\nthe hash table.",168,{"inputs":[{"name":"usize"}],"output":{"name":"hashset"}}],[11,"with_hasher","","Creates a new empty hash set which will use the given hasher to hash\nkeys.",168,{"inputs":[{"name":"s"}],"output":{"name":"hashset"}}],[11,"with_capacity_and_hasher","","Creates an empty HashSet with space for at least `capacity`\nelements in the hash table, using `hasher` to hash the keys.",168,{"inputs":[{"name":"usize"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"hasher","","Returns a reference to the set&#39;s hasher.",168,null],[11,"capacity","","Returns the number of elements the set can hold without reallocating.",168,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashSet`. The collection may reserve more space to avoid\nfrequent reallocations.",168,null],[11,"shrink_to_fit","","Shrinks the capacity of the set as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",168,null],[11,"iter","","An iterator visiting all elements in arbitrary order.\nIterator element type is &amp;&#39;a T.",168,null],[11,"difference","","Visit the values representing the difference.",168,null],[11,"symmetric_difference","","Visit the values representing the symmetric difference.",168,null],[11,"intersection","","Visit the values representing the intersection.",168,null],[11,"union","","Visit the values representing the union.",168,null],[11,"len","","Returns the number of elements in the set.",168,null],[11,"is_empty","","Returns true if the set contains no elements.",168,null],[11,"drain","","Clears the set, returning all elements in an iterator.",168,null],[11,"clear","","Clears the set, removing all values.",168,null],[11,"contains","","Returns `true` if the set contains a value.",168,null],[11,"get","","Returns a reference to the value in the set, if any, that is equal to the given value.",168,null],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",168,null],[11,"is_subset","","Returns `true` if the set is a subset of another.",168,null],[11,"is_superset","","Returns `true` if the set is a superset of another.",168,null],[11,"insert","","Adds a value to the set.",168,null],[11,"replace","","Adds a value to the set, replacing the existing value, if any, that is equal to the given\none. Returns the replaced value.",168,null],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",168,null],[11,"take","","Removes and returns the value in the set, if any, that is equal to the given one.",168,null],[11,"eq","","",168,null],[11,"fmt","","",168,null],[11,"from_iter","","",168,{"inputs":[{"name":"i"}],"output":{"name":"hashset"}}],[11,"extend","","",168,null],[11,"extend","","",168,null],[11,"default","","",168,{"inputs":[],"output":{"name":"hashset"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out\nof the set in arbitrary order. The set cannot be used after calling\nthis.",168,null],[11,"clone","","",169,null],[11,"next","","",169,null],[11,"size_hint","","",169,null],[11,"len","","",169,null],[11,"next","","",170,null],[11,"size_hint","","",170,null],[11,"len","","",170,null],[11,"next","","",171,null],[11,"size_hint","","",171,null],[11,"len","","",171,null],[11,"clone","","",172,null],[11,"next","","",172,null],[11,"size_hint","","",172,null],[11,"clone","","",173,null],[11,"next","","",173,null],[11,"size_hint","","",173,null],[11,"clone","","",174,null],[11,"next","","",174,null],[11,"size_hint","","",174,null],[11,"clone","","",175,null],[11,"next","","",175,null],[11,"size_hint","","",175,null],[11,"drop","collections::binary_heap","",176,null],[11,"deref","","",176,null],[11,"deref_mut","","",176,null],[11,"clone","","",177,null],[11,"clone_from","","",177,null],[11,"default","","",177,{"inputs":[],"output":{"name":"binaryheap"}}],[11,"fmt","","",177,null],[11,"new","","Creates an empty `BinaryHeap` as a max-heap.",177,{"inputs":[],"output":{"name":"binaryheap"}}],[11,"with_capacity","","Creates an empty `BinaryHeap` with a specific capacity.\nThis preallocates enough memory for `capacity` elements,\nso that the `BinaryHeap` does not have to be reallocated\nuntil it contains at least that many values.",177,{"inputs":[{"name":"usize"}],"output":{"name":"binaryheap"}}],[11,"iter","","Returns an iterator visiting all values in the underlying vector, in\narbitrary order.",177,null],[11,"peek","","Returns the greatest item in the binary heap, or `None` if it is empty.",177,null],[11,"peek_mut","","Returns a mutable reference to the greatest item in the binary heap, or\n`None` if it is empty.",177,null],[11,"capacity","","Returns the number of elements the binary heap can hold without reallocating.",177,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `BinaryHeap`. Does nothing if the capacity is already sufficient.",177,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the\n`BinaryHeap`. The collection may reserve more space to avoid frequent reallocations.",177,null],[11,"shrink_to_fit","","Discards as much additional capacity as possible.",177,null],[11,"pop","","Removes the greatest item from the binary heap and returns it, or `None` if it\nis empty.",177,null],[11,"push","","Pushes an item onto the binary heap.",177,null],[11,"push_pop","","Pushes an item onto the binary heap, then pops the greatest item off the queue in\nan optimized fashion.",177,null],[11,"replace","","Pops the greatest item off the binary heap, then pushes an item onto the queue in\nan optimized fashion. The push is done regardless of whether the binary heap\nwas empty.",177,null],[11,"into_vec","","Consumes the `BinaryHeap` and returns the underlying vector\nin arbitrary order.",177,null],[11,"into_sorted_vec","","Consumes the `BinaryHeap` and returns a vector in sorted\n(ascending) order.",177,null],[11,"len","","Returns the length of the binary heap.",177,null],[11,"is_empty","","Checks if the binary heap is empty.",177,null],[11,"drain","","Clears the binary heap, returning an iterator over the removed elements.",177,null],[11,"clear","","Drops all items from the binary heap.",177,null],[11,"append","","Moves all the elements of `other` into `self`, leaving `other` empty.",177,null],[11,"clone","","",178,null],[11,"next","","",178,null],[11,"size_hint","","",178,null],[11,"next_back","","",178,null],[11,"clone","","",179,null],[11,"next","","",179,null],[11,"size_hint","","",179,null],[11,"next_back","","",179,null],[11,"next","","",180,null],[11,"size_hint","","",180,null],[11,"next_back","","",180,null],[11,"from","","",177,{"inputs":[{"name":"vec"}],"output":{"name":"binaryheap"}}],[11,"from","collections::vec","",181,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"from_iter","collections::binary_heap","",177,{"inputs":[{"name":"i"}],"output":{"name":"binaryheap"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe binary heap in arbitrary order. The binary heap cannot be used\nafter calling this.",177,null],[11,"extend","","",177,null],[11,"extend","","",177,null],[11,"clone","collections::vec_deque","",182,null],[11,"drop","","",182,null],[11,"default","","",182,{"inputs":[],"output":{"name":"vecdeque"}}],[11,"new","","Creates an empty `VecDeque`.",182,{"inputs":[],"output":{"name":"vecdeque"}}],[11,"with_capacity","","Creates an empty `VecDeque` with space for at least `n` elements.",182,{"inputs":[{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"get","","Retrieves an element in the `VecDeque` by index.",182,null],[11,"get_mut","","Retrieves an element in the `VecDeque` mutably by index.",182,null],[11,"swap","","Swaps elements at indices `i` and `j`.",182,null],[11,"capacity","","Returns the number of elements the `VecDeque` can hold without\nreallocating.",182,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `VecDeque`. Does nothing if the capacity is already sufficient.",182,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the given\n`VecDeque`. The collection may reserve more space to avoid frequent reallocations.",182,null],[11,"shrink_to_fit","","Shrinks the capacity of the `VecDeque` as much as possible.",182,null],[11,"truncate","","Shortens a `VecDeque`, dropping excess elements from the back.",182,null],[11,"iter","","Returns a front-to-back iterator.",182,null],[11,"iter_mut","","Returns a front-to-back iterator that returns mutable references.",182,null],[11,"as_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",182,null],[11,"as_mut_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",182,null],[11,"len","","Returns the number of elements in the `VecDeque`.",182,null],[11,"is_empty","","Returns true if the buffer contains no elements",182,null],[11,"drain","","Create a draining iterator that removes the specified range in the\n`VecDeque` and yields the removed items.",182,null],[11,"clear","","Clears the buffer, removing all values.",182,null],[11,"contains","","Returns `true` if the `VecDeque` contains an element equal to the\ngiven value.",182,null],[11,"front","","Provides a reference to the front element, or `None` if the sequence is\nempty.",182,null],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the\nsequence is empty.",182,null],[11,"back","","Provides a reference to the back element, or `None` if the sequence is\nempty.",182,null],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the\nsequence is empty.",182,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the sequence is\nempty.",182,null],[11,"push_front","","Inserts an element first in the sequence.",182,null],[11,"push_back","","Appends an element to the back of a buffer",182,null],[11,"pop_back","","Removes the last element from a buffer and returns it, or `None` if\nit is empty.",182,null],[11,"swap_remove_back","","Removes an element from anywhere in the `VecDeque` and returns it, replacing it with the\nlast element.",182,null],[11,"swap_remove_front","","Removes an element from anywhere in the `VecDeque` and returns it,\nreplacing it with the first element.",182,null],[11,"insert","","Inserts an element at `index` within the `VecDeque`. Whichever\nend is closer to the insertion point will be moved to make room,\nand all the affected elements will be moved to new positions.",182,null],[11,"remove","","Removes and returns the element at `index` from the `VecDeque`.\nWhichever end is closer to the removal point will be moved to make\nroom, and all the affected elements will be moved to new positions.\nReturns `None` if `index` is out of bounds.",182,null],[11,"split_off","","Splits the collection into two at the given index.",182,null],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",182,null],[11,"retain","","Retains only the elements specified by the predicate.",182,null],[11,"resize","","Modifies the `VecDeque` in-place so that `len()` is equal to new_len,\neither by removing excess elements or by appending copies of a value to the back.",182,null],[11,"clone","","",183,null],[11,"next","","",183,null],[11,"size_hint","","",183,null],[11,"next_back","","",183,null],[11,"next","","",184,null],[11,"size_hint","","",184,null],[11,"next_back","","",184,null],[11,"clone","","",185,null],[11,"next","","",185,null],[11,"size_hint","","",185,null],[11,"next_back","","",185,null],[11,"drop","","",186,null],[11,"next","","",186,null],[11,"size_hint","","",186,null],[11,"next_back","","",186,null],[11,"eq","","",182,null],[11,"partial_cmp","","",182,null],[11,"cmp","","",182,null],[11,"hash","","",182,null],[11,"index","","",182,null],[11,"index_mut","","",182,null],[11,"from_iter","","",182,{"inputs":[{"name":"t"}],"output":{"name":"vecdeque"}}],[11,"into_iter","","Consumes the list into a front-to-back iterator yielding elements by\nvalue.",182,null],[11,"extend","","",182,null],[11,"extend","","",182,null],[11,"fmt","","",182,null],[11,"from","","",182,{"inputs":[{"name":"vec"}],"output":{"name":"vecdeque"}}],[11,"from","collections::vec","",181,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vec"}}],[11,"clone","collections::linked_list","",187,null],[11,"clone","","",188,null],[11,"default","","",189,{"inputs":[],"output":{"name":"linkedlist"}}],[11,"new","","Creates an empty `LinkedList`.",189,{"inputs":[],"output":{"name":"linkedlist"}}],[11,"append","","Moves all elements from `other` to the end of the list.",189,null],[11,"iter","","Provides a forward iterator.",189,null],[11,"iter_mut","","Provides a forward iterator with mutable references.",189,null],[11,"is_empty","","Returns `true` if the `LinkedList` is empty.",189,null],[11,"len","","Returns the length of the `LinkedList`.",189,null],[11,"clear","","Removes all elements from the `LinkedList`.",189,null],[11,"contains","","Returns `true` if the `LinkedList` contains an element equal to the\ngiven value.",189,null],[11,"front","","Provides a reference to the front element, or `None` if the list is\nempty.",189,null],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the list\nis empty.",189,null],[11,"back","","Provides a reference to the back element, or `None` if the list is\nempty.",189,null],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the list\nis empty.",189,null],[11,"push_front","","Adds an element first in the list.",189,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the list is\nempty.",189,null],[11,"push_back","","Appends an element to the back of a list",189,null],[11,"pop_back","","Removes the last element from a list and returns it, or `None` if\nit is empty.",189,null],[11,"split_off","","Splits the list into two at the given index. Returns everything after the given index,\nincluding the index.",189,null],[11,"front_place","","Returns a place for insertion at the front of the list.",189,null],[11,"back_place","","Returns a place for insertion at the back of the list.",189,null],[11,"drop","","",189,null],[11,"next","","",187,null],[11,"size_hint","","",187,null],[11,"next_back","","",187,null],[11,"next","","",190,null],[11,"size_hint","","",190,null],[11,"next_back","","",190,null],[11,"insert_next","","Inserts `elt` just after the element most recently returned by `.next()`.\nThe inserted element does not appear in the iteration.",190,null],[11,"peek_next","","Provides a reference to the next element, without changing the iterator.",190,null],[11,"next","","",188,null],[11,"size_hint","","",188,null],[11,"next_back","","",188,null],[11,"from_iter","","",189,{"inputs":[{"name":"t"}],"output":{"name":"linkedlist"}}],[11,"into_iter","","Consumes the list into an iterator yielding elements by value.",189,null],[11,"extend","","",189,null],[11,"extend","","",189,null],[11,"eq","","",189,null],[11,"ne","","",189,null],[11,"partial_cmp","","",189,null],[11,"cmp","","",189,null],[11,"clone","","",189,null],[11,"fmt","","",189,null],[11,"hash","","",189,null],[11,"make_place","","",191,null],[11,"pointer","","",191,null],[11,"finalize","","",191,null],[11,"make_place","","",192,null],[11,"pointer","","",192,null],[11,"finalize","","",192,null],[11,"next","std::env","",193,null],[11,"size_hint","","",193,null],[11,"next","","",194,null],[11,"size_hint","","",194,null],[11,"clone","","",195,null],[11,"eq","","",195,null],[11,"ne","","",195,null],[11,"fmt","","",195,null],[11,"fmt","","",195,null],[11,"description","","",195,null],[11,"next","","",196,null],[11,"size_hint","","",196,null],[11,"fmt","","",197,null],[11,"fmt","","",197,null],[11,"description","","",197,null],[11,"next","","",198,null],[11,"size_hint","","",198,null],[11,"len","","",198,null],[11,"next","","",199,null],[11,"size_hint","","",199,null],[11,"len","","",199,null],[11,"clone","std::ffi::c_str","",200,null],[11,"hash","","",200,null],[11,"cmp","","",200,null],[11,"partial_cmp","","",200,null],[11,"lt","","",200,null],[11,"le","","",200,null],[11,"gt","","",200,null],[11,"ge","","",200,null],[11,"eq","","",200,null],[11,"ne","","",200,null],[11,"hash","","",201,null],[11,"fmt","","",202,null],[11,"eq","","",202,null],[11,"ne","","",202,null],[11,"clone","","",202,null],[11,"fmt","","",203,null],[11,"eq","","",203,null],[11,"ne","","",203,null],[11,"clone","","",203,null],[11,"fmt","","",204,null],[11,"eq","","",204,null],[11,"ne","","",204,null],[11,"clone","","",204,null],[11,"new","","Creates a new C-compatible string from a container of bytes.",200,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[11,"from_vec_unchecked","","Creates a C-compatible string from a byte vector without checking for\ninterior 0 bytes.",200,{"inputs":[{"name":"vec"}],"output":{"name":"cstring"}}],[11,"from_raw","","Retakes ownership of a `CString` that was transferred to C.",200,null],[11,"into_raw","","Transfers ownership of the string to a C caller.",200,null],[11,"into_string","","Converts the `CString` into a `String` if it contains valid Unicode data.",200,null],[11,"into_bytes","","Returns the underlying byte buffer.",200,null],[11,"into_bytes_with_nul","","Equivalent to the `into_bytes` function except that the returned vector\nincludes the trailing nul byte.",200,null],[11,"as_bytes","","Returns the contents of this `CString` as a slice of bytes.",200,null],[11,"as_bytes_with_nul","","Equivalent to the `as_bytes` function except that the returned slice\nincludes the trailing nul byte.",200,null],[11,"from_ptr","","Casts a raw C string to a safe C string wrapper.",201,null],[11,"from_bytes_with_nul","","Creates a C string wrapper from a byte slice.",201,null],[11,"from_bytes_with_nul_unchecked","","Unsafely creates a C string wrapper from a byte slice.",201,null],[11,"as_ptr","","Returns the inner pointer to this C string.",201,null],[11,"to_bytes","","Converts this C string to a byte slice.",201,null],[11,"to_bytes_with_nul","","Converts this C string to a byte slice containing the trailing 0 byte.",201,null],[11,"to_str","","Yields a `&amp;str` slice if the `CStr` contains valid UTF-8.",201,null],[11,"to_string_lossy","","Converts a `CStr` into a `Cow&lt;str&gt;`.",201,null],[11,"deref","","",200,null],[11,"fmt","","",200,null],[11,"from","collections::vec","",181,{"inputs":[{"name":"cstring"}],"output":{"name":"vec"}}],[11,"fmt","std::ffi::c_str","",201,null],[11,"default","","",200,{"inputs":[],"output":{"name":"cstring"}}],[11,"borrow","","",200,null],[11,"nul_position","","Returns the position of the nul byte in the slice that was provided to\n`CString::new`.",202,null],[11,"into_vec","","Consumes this error, returning the underlying vector of bytes which\ngenerated the error in the first place.",202,null],[11,"description","","",202,null],[11,"fmt","","",202,null],[11,"from","std::io::error","",205,{"inputs":[{"name":"nulerror"}],"output":{"name":"error"}}],[11,"into_cstring","std::ffi::c_str","Consumes this error, returning original `CString` which generated the\nerror.",204,null],[11,"utf8_error","","Access the underlying UTF-8 error that was the cause of this error.",204,null],[11,"description","","",204,null],[11,"cause","","",204,null],[11,"fmt","","",204,null],[11,"eq","","",201,null],[11,"partial_cmp","","",201,null],[11,"cmp","","",201,null],[11,"to_owned","","",201,null],[11,"from","","",200,{"inputs":[{"name":"cstr"}],"output":{"name":"cstring"}}],[11,"index","","",200,null],[11,"as_ref","","",201,null],[11,"as_ref","","",200,null],[11,"clone","std::ffi::os_str","",206,null],[11,"new","","Constructs a new empty `OsString`.",206,{"inputs":[],"output":{"name":"osstring"}}],[11,"as_os_str","","Converts to an `OsStr` slice.",206,null],[11,"into_string","","Converts the `OsString` into a `String` if it contains valid Unicode data.",206,null],[11,"push","","Extends the string with the given `&amp;OsStr` slice.",206,null],[11,"with_capacity","","Creates a new `OsString` with the given capacity.",206,{"inputs":[{"name":"usize"}],"output":{"name":"osstring"}}],[11,"clear","","Truncates the `OsString` to zero length.",206,null],[11,"capacity","","Returns the capacity this `OsString` can hold without reallocating.",206,null],[11,"reserve","","Reserves capacity for at least `additional` more capacity to be inserted\nin the given `OsString`.",206,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more capacity to\nbe inserted in the given `OsString`. Does nothing if the capacity is\nalready sufficient.",206,null],[11,"from","","",206,{"inputs":[{"name":"string"}],"output":{"name":"osstring"}}],[11,"from","","",206,{"inputs":[{"name":"t"}],"output":{"name":"osstring"}}],[11,"index","","",206,null],[11,"new","","Coerces into an `OsStr` slice.",207,{"inputs":[{"name":"s"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&amp;str` slice if the `OsStr` is valid Unicode.",207,null],[11,"to_string_lossy","","Converts an `OsStr` to a `Cow&lt;str&gt;`.",207,null],[11,"to_os_string","","Copies the slice into an owned `OsString`.",207,null],[11,"is_empty","","Checks whether the `OsStr` is empty.",207,null],[11,"len","","Returns the length of this `OsStr`.",207,null],[11,"deref","","",206,null],[11,"default","","",206,{"inputs":[],"output":{"name":"osstring"}}],[11,"fmt","","",206,null],[11,"eq","","",206,null],[11,"eq","","",206,null],[11,"partial_cmp","","",206,null],[11,"lt","","",206,null],[11,"le","","",206,null],[11,"gt","","",206,null],[11,"ge","","",206,null],[11,"partial_cmp","","",206,null],[11,"cmp","","",206,null],[11,"hash","","",206,null],[11,"eq","","",207,null],[11,"eq","","",207,null],[11,"partial_cmp","","",207,null],[11,"lt","","",207,null],[11,"le","","",207,null],[11,"gt","","",207,null],[11,"ge","","",207,null],[11,"partial_cmp","","",207,null],[11,"cmp","","",207,null],[11,"eq","","",206,null],[11,"eq","","",207,null],[11,"partial_cmp","","",206,null],[11,"partial_cmp","","",207,null],[11,"eq","","",206,null],[11,"partial_cmp","","",206,null],[11,"eq","collections::borrow","",208,null],[11,"eq","std::ffi::os_str","",207,null],[11,"partial_cmp","collections::borrow","",208,null],[11,"partial_cmp","std::ffi::os_str","",207,null],[11,"eq","collections::borrow","",208,null],[11,"partial_cmp","","",208,null],[11,"eq","","",208,null],[11,"eq","std::ffi::os_str","",206,null],[11,"partial_cmp","collections::borrow","",208,null],[11,"partial_cmp","std::ffi::os_str","",206,null],[11,"hash","","",207,null],[11,"fmt","","",207,null],[11,"borrow","","",206,null],[11,"to_owned","","",207,null],[11,"as_ref","","",207,null],[11,"as_ref","","",206,null],[11,"as_ref","collections::string","",209,null],[11,"clone","std::fs","",210,null],[11,"clone","","",211,null],[11,"fmt","","",212,null],[11,"eq","","",212,null],[11,"ne","","",212,null],[11,"clone","","",212,null],[11,"hash","","",213,null],[11,"eq","","",213,null],[11,"ne","","",213,null],[11,"clone","","",213,null],[11,"open","","Attempts to open a file in read-only mode.",214,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"create","","Opens a file in write-only mode.",214,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"sync_all","","Attempts to sync all OS-internal metadata to disk.",214,null],[11,"sync_data","","This function is similar to `sync_all`, except that it may not\nsynchronize file metadata to the filesystem.",214,null],[11,"set_len","","Truncates or extends the underlying file, updating the size of\nthis file to become `size`.",214,null],[11,"metadata","","Queries metadata about the underlying file.",214,null],[11,"try_clone","","Creates a new independently owned handle to the underlying file.",214,null],[11,"fmt","","",214,null],[11,"read","","",214,null],[11,"read_to_end","","",214,null],[11,"write","","",214,null],[11,"flush","","",214,null],[11,"seek","","",214,null],[11,"new","","Creates a blank new set of options ready for configuration.",211,{"inputs":[],"output":{"name":"openoptions"}}],[11,"read","","Sets the option for read access.",211,null],[11,"write","","Sets the option for write access.",211,null],[11,"append","","Sets the option for the append mode.",211,null],[11,"truncate","","Sets the option for truncating a previous file.",211,null],[11,"create","","Sets the option for creating a new file.",211,null],[11,"create_new","","Sets the option to always create a new file.",211,null],[11,"open","","Opens a file at `path` with the options specified by `self`.",211,null],[11,"file_type","","Returns the file type for this metadata.",210,null],[11,"is_dir","","Returns whether this metadata is for a directory.",210,null],[11,"is_file","","Returns whether this metadata is for a regular file.",210,null],[11,"len","","Returns the size of the file, in bytes, this metadata is for.",210,null],[11,"permissions","","Returns the permissions of the file this metadata is for.",210,null],[11,"modified","","Returns the last modification time listed in this metadata.",210,null],[11,"accessed","","Returns the last access time of this metadata.",210,null],[11,"created","","Returns the creation time listed in the this metadata.",210,null],[11,"readonly","","Returns whether these permissions describe a readonly file.",212,null],[11,"set_readonly","","Modifies the readonly flag for this set of permissions.",212,null],[11,"is_dir","","Test whether this file type represents a directory.",213,null],[11,"is_file","","Test whether this file type represents a regular file.",213,null],[11,"is_symlink","","Test whether this file type represents a symbolic link.",213,null],[11,"next","","",215,null],[11,"path","","Returns the full path to the file that this entry represents.",216,null],[11,"metadata","","Return the metadata for the file that this entry points at.",216,null],[11,"file_type","","Return the file type for the file that this entry points at.",216,null],[11,"file_name","","Returns the bare file name of this directory entry without any other\nleading path component.",216,null],[11,"new","","Creates a new set of options with default mode/security settings for all\nplatforms and also non-recursive.",217,{"inputs":[],"output":{"name":"dirbuilder"}}],[11,"recursive","","Indicate that directories create should be created recursively, creating\nall parent directories if they do not exist with the same security and\npermissions settings.",217,null],[11,"create","","Create the specified directory with the options configured in this\nbuilder.",217,null],[11,"new","std::io::buffered","Creates a new `BufReader` with a default buffer capacity.",218,{"inputs":[{"name":"r"}],"output":{"name":"bufreader"}}],[11,"with_capacity","","Creates a new `BufReader` with the specified buffer capacity.",218,{"inputs":[{"name":"usize"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"get_ref","","Gets a reference to the underlying reader.",218,null],[11,"get_mut","","Gets a mutable reference to the underlying reader.",218,null],[11,"into_inner","","Unwraps this `BufReader`, returning the underlying reader.",218,null],[11,"read","","",218,null],[11,"fill_buf","","",218,null],[11,"consume","","",218,null],[11,"fmt","","",218,null],[11,"seek","","Seek to an offset, in bytes, in the underlying reader.",218,null],[11,"fmt","","",219,null],[11,"new","","Creates a new `BufWriter` with a default buffer capacity.",220,{"inputs":[{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"with_capacity","","Creates a new `BufWriter` with the specified buffer capacity.",220,{"inputs":[{"name":"usize"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",220,null],[11,"get_mut","","Gets a mutable reference to the underlying writer.",220,null],[11,"into_inner","","Unwraps this `BufWriter`, returning the underlying writer.",220,null],[11,"write","","",220,null],[11,"flush","","",220,null],[11,"fmt","","",220,null],[11,"seek","","Seek to the offset, in bytes, in the underlying writer.",220,null],[11,"drop","","",220,null],[11,"error","","Returns the error which caused the call to `into_inner()` to fail.",219,null],[11,"into_inner","","Returns the buffered writer instance which generated the error.",219,null],[11,"from","std::io::error","",205,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"description","std::io::buffered","",219,null],[11,"fmt","","",219,null],[11,"new","","Creates a new `LineWriter`.",221,{"inputs":[{"name":"w"}],"output":{"name":"linewriter"}}],[11,"with_capacity","","Creates a new `LineWriter` with a specified capacity for the internal\nbuffer.",221,{"inputs":[{"name":"usize"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",221,null],[11,"get_mut","","Gets a mutable reference to the underlying writer.",221,null],[11,"into_inner","","Unwraps this `LineWriter`, returning the underlying writer.",221,null],[11,"write","","",221,null],[11,"flush","","",221,null],[11,"fmt","","",221,null],[11,"fmt","std::io::cursor","",222,null],[11,"clone","","",222,null],[11,"new","","Creates a new cursor wrapping the provided underlying I/O object.",222,{"inputs":[{"name":"t"}],"output":{"name":"cursor"}}],[11,"into_inner","","Consumes this cursor, returning the underlying value.",222,null],[11,"get_ref","","Gets a reference to the underlying value in this cursor.",222,null],[11,"get_mut","","Gets a mutable reference to the underlying value in this cursor.",222,null],[11,"position","","Returns the current position of this cursor.",222,null],[11,"set_position","","Sets the position of this cursor.",222,null],[11,"seek","","",222,null],[11,"read","","",222,null],[11,"fill_buf","","",222,null],[11,"consume","","",222,null],[11,"write","","",222,null],[11,"flush","","",222,null],[11,"write","","",222,null],[11,"flush","","",222,null],[11,"write","","",222,null],[11,"flush","","",222,null],[11,"fmt","std::io::error","",205,null],[11,"fmt","","",223,null],[11,"clone","","",223,null],[11,"eq","","",223,null],[11,"new","","Creates a new I/O error from a known kind of error as well as an\narbitrary error payload.",205,{"inputs":[{"name":"errorkind"},{"name":"e"}],"output":{"name":"error"}}],[11,"last_os_error","","Returns an error representing the last OS error which occurred.",205,{"inputs":[],"output":{"name":"error"}}],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS error code.",205,{"inputs":[{"name":"i32"}],"output":{"name":"error"}}],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",205,null],[11,"get_ref","","Returns a reference to the inner error wrapped by this error (if any).",205,null],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by this error\n(if any).",205,null],[11,"into_inner","","Consumes the `Error`, returning its inner error (if any).",205,null],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",205,null],[11,"fmt","","",205,null],[11,"description","","",205,null],[11,"cause","","",205,null],[11,"read","alloc::boxed","",141,null],[11,"read_to_end","","",141,null],[11,"read_to_string","","",141,null],[11,"read_exact","","",141,null],[11,"write","","",141,null],[11,"flush","","",141,null],[11,"write_all","","",141,null],[11,"write_fmt","","",141,null],[11,"seek","","",141,null],[11,"fill_buf","","",141,null],[11,"consume","","",141,null],[11,"read_until","","",141,null],[11,"read_line","","",141,null],[11,"write","collections::vec","",181,null],[11,"write_all","","",181,null],[11,"flush","","",181,null],[11,"read","std::io::util","",224,null],[11,"fill_buf","","",224,null],[11,"consume","","",224,null],[11,"read","","",225,null],[11,"write","","",226,null],[11,"flush","","",226,null],[11,"lock","std::io::stdio","Locks this handle to the standard input stream, returning a readable\nguard.",227,null],[11,"read_line","","Locks this handle and reads a line of input into the specified buffer.",227,null],[11,"read","","",227,null],[11,"read_to_end","","",227,null],[11,"read_to_string","","",227,null],[11,"read_exact","","",227,null],[11,"read","","",228,null],[11,"read_to_end","","",228,null],[11,"fill_buf","","",228,null],[11,"consume","","",228,null],[11,"lock","","Locks this handle to the standard output stream, returning a writable\nguard.",229,null],[11,"write","","",229,null],[11,"flush","","",229,null],[11,"write_all","","",229,null],[11,"write_fmt","","",229,null],[11,"write","","",230,null],[11,"flush","","",230,null],[11,"lock","","Locks this handle to the standard error stream, returning a writable\nguard.",231,null],[11,"write","","",231,null],[11,"flush","","",231,null],[11,"write_all","","",231,null],[11,"write_fmt","","",231,null],[11,"write","","",232,null],[11,"flush","","",232,null],[11,"fmt","std::io","",233,null],[11,"clone","","",233,null],[11,"eq","","",233,null],[11,"ne","","",233,null],[11,"read","","",234,null],[11,"fill_buf","","",234,null],[11,"consume","","",234,null],[11,"limit","","Returns the number of bytes that can be read before this instance will\nreturn EOF.",235,null],[11,"read","","",235,null],[11,"fill_buf","","",235,null],[11,"consume","","",235,null],[11,"next","","",236,null],[11,"fmt","","",237,null],[11,"next","","",238,null],[11,"description","","",237,null],[11,"cause","","",237,null],[11,"fmt","","",237,null],[11,"next","","",239,null],[11,"next","","",240,null],[11,"cmp","std::net::ip","",241,null],[11,"partial_cmp","","",241,null],[11,"lt","","",241,null],[11,"le","","",241,null],[11,"gt","","",241,null],[11,"ge","","",241,null],[11,"hash","","",241,null],[11,"fmt","","",241,null],[11,"eq","","",241,null],[11,"ne","","",241,null],[11,"clone","","",241,null],[11,"fmt","","",242,null],[11,"hash","","",242,null],[11,"clone","","",242,null],[11,"eq","","",242,null],[11,"new","","Creates a new IPv4 address from four eight-bit octets.",243,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"ipv4addr"}}],[11,"octets","","Returns the four eight-bit integers that make up this address.",243,null],[11,"is_unspecified","","Returns true for the special &#39;unspecified&#39; address (0.0.0.0).",243,null],[11,"is_loopback","","Returns true if this is a loopback address (127.0.0.0/8).",243,null],[11,"is_private","","Returns true if this is a private address.",243,null],[11,"is_link_local","","Returns true if the address is link-local (169.254.0.0/16).",243,null],[11,"is_global","","Returns true if the address appears to be globally routable.\nSee [iana-ipv4-special-registry][ipv4-sr].\n[ipv4-sr]: http://goo.gl/RaZ7lg",243,null],[11,"is_multicast","","Returns true if this is a multicast address (224.0.0.0/4).",243,null],[11,"is_broadcast","","Returns true if this is a broadcast address (255.255.255.255).",243,null],[11,"is_documentation","","Returns true if this address is in a range designated for documentation.",243,null],[11,"to_ipv6_compatible","","Converts this address to an IPv4-compatible IPv6 address.",243,null],[11,"to_ipv6_mapped","","Converts this address to an IPv4-mapped IPv6 address.",243,null],[11,"fmt","","",241,null],[11,"fmt","","",243,null],[11,"fmt","","",243,null],[11,"clone","","",243,null],[11,"eq","","",243,null],[11,"hash","","",243,null],[11,"partial_cmp","","",243,null],[11,"cmp","","",243,null],[11,"from","","",243,{"inputs":[{"name":"u32"}],"output":{"name":"ipv4addr"}}],[11,"from","","",243,null],[11,"new","","Creates a new IPv6 address from eight 16-bit segments.",244,{"inputs":[{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ipv6addr"}}],[11,"segments","","Returns the eight 16-bit segments that make up this address.",244,null],[11,"is_unspecified","","Returns true for the special &#39;unspecified&#39; address (::).",244,null],[11,"is_loopback","","Returns true if this is a loopback address (::1).",244,null],[11,"is_global","","Returns true if the address appears to be globally routable.",244,null],[11,"is_unique_local","","Returns true if this is a unique local address (fc00::/7).",244,null],[11,"is_unicast_link_local","","Returns true if the address is unicast and link-local (fe80::/10).",244,null],[11,"is_unicast_site_local","","Returns true if this is a deprecated unicast site-local address\n(fec0::/10).",244,null],[11,"is_documentation","","Returns true if this is an address reserved for documentation\n(2001:db8::/32).",244,null],[11,"is_unicast_global","","Returns true if the address is a globally routable unicast address.",244,null],[11,"multicast_scope","","Returns the address&#39;s multicast scope if the address is multicast.",244,null],[11,"is_multicast","","Returns true if this is a multicast address (ff00::/8).",244,null],[11,"to_ipv4","","Converts this address to an IPv4 address. Returns None if this address is\nneither IPv4-compatible or IPv4-mapped.",244,null],[11,"octets","","Returns the sixteen eight-bit integers the IPv6 address consists of.",244,null],[11,"fmt","","",244,null],[11,"fmt","","",244,null],[11,"clone","","",244,null],[11,"eq","","",244,null],[11,"hash","","",244,null],[11,"partial_cmp","","",244,null],[11,"cmp","","",244,null],[11,"from","","",244,null],[11,"fmt","std::net::addr","",245,null],[11,"hash","","",245,null],[11,"eq","","",245,null],[11,"ne","","",245,null],[11,"clone","","",245,null],[11,"new","","Creates a new socket address from the (ip, port) pair.",245,{"inputs":[{"name":"ipaddr"},{"name":"u16"}],"output":{"name":"socketaddr"}}],[11,"ip","","Returns the IP address associated with this socket address.",245,null],[11,"set_ip","","Change the IP address associated with this socket address.",245,null],[11,"port","","Returns the port number associated with this socket address.",245,null],[11,"set_port","","Change the port number associated with this socket address.",245,null],[11,"new","","Creates a new socket address from the (ip, port) pair.",246,{"inputs":[{"name":"ipv4addr"},{"name":"u16"}],"output":{"name":"socketaddrv4"}}],[11,"ip","","Returns the IP address associated with this socket address.",246,null],[11,"set_ip","","Change the IP address associated with this socket address.",246,null],[11,"port","","Returns the port number associated with this socket address.",246,null],[11,"set_port","","Change the port number associated with this socket address.",246,null],[11,"new","","Creates a new socket address from the ip/port/flowinfo/scope_id\ncomponents.",247,{"inputs":[{"name":"ipv6addr"},{"name":"u16"},{"name":"u32"},{"name":"u32"}],"output":{"name":"socketaddrv6"}}],[11,"ip","","Returns the IP address associated with this socket address.",247,null],[11,"set_ip","","Change the IP address associated with this socket address.",247,null],[11,"port","","Returns the port number associated with this socket address.",247,null],[11,"set_port","","Change the port number associated with this socket address.",247,null],[11,"flowinfo","","Returns the flow information associated with this address,\ncorresponding to the `sin6_flowinfo` field in C.",247,null],[11,"set_flowinfo","","Change the flow information associated with this socket address.",247,null],[11,"scope_id","","Returns the scope ID associated with this address,\ncorresponding to the `sin6_scope_id` field in C.",247,null],[11,"set_scope_id","","Change the scope ID associated with this socket address.",247,null],[11,"fmt","","",245,null],[11,"fmt","","",246,null],[11,"fmt","","",246,null],[11,"fmt","","",247,null],[11,"fmt","","",247,null],[11,"clone","","",246,null],[11,"clone","","",247,null],[11,"eq","","",246,null],[11,"eq","","",247,null],[11,"hash","","",246,null],[11,"hash","","",247,null],[11,"to_socket_addrs","","",245,null],[11,"to_socket_addrs","","",246,null],[11,"to_socket_addrs","","",247,null],[11,"connect","std::net::tcp","Opens a TCP connection to a remote host.",248,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP connection.",248,null],[11,"local_addr","","Returns the socket address of the local half of this TCP connection.",248,null],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",248,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",248,null],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",248,null],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",248,null],[11,"read_timeout","","Returns the read timeout of this socket.",248,null],[11,"write_timeout","","Returns the write timeout of this socket.",248,null],[11,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",248,null],[11,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",248,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",248,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",248,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",248,null],[11,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",248,null],[11,"read","","",248,null],[11,"read_to_end","","",248,null],[11,"write","","",248,null],[11,"flush","","",248,null],[11,"fmt","","",248,null],[11,"bind","","Creates a new `TcpListener` which will be bound to the specified\naddress.",249,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the local socket address of this listener.",249,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",249,null],[11,"accept","","Accept a new incoming connection from this listener.",249,null],[11,"incoming","","Returns an iterator over the connections being received on this\nlistener.",249,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",249,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",249,null],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",249,null],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",249,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",249,null],[11,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",249,null],[11,"next","","",250,null],[11,"fmt","","",249,null],[11,"bind","std::net::udp","Creates a UDP socket from the given address.",251,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"recv_from","","Receives data from the socket. On success, returns the number of bytes\nread and the address from whence the data came.",251,null],[11,"send_to","","Sends data on the socket to the given address. On success, returns the\nnumber of bytes written.",251,null],[11,"local_addr","","Returns the socket address that this socket was created from.",251,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",251,null],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",251,null],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",251,null],[11,"read_timeout","","Returns the read timeout of this socket.",251,null],[11,"write_timeout","","Returns the write timeout of this socket.",251,null],[11,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",251,null],[11,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",251,null],[11,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this socket.",251,null],[11,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this socket.",251,null],[11,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this socket.",251,null],[11,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this socket.",251,null],[11,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",251,null],[11,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",251,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",251,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",251,null],[11,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",251,null],[11,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",251,null],[11,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",251,null],[11,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",251,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",251,null],[11,"connect","","Connects this UDP socket to a remote address, allowing the `send` and\n`recv` syscalls to be used to send data and also applies filters to only\nreceive data from the specified address.",251,null],[11,"send","","Sends data on the socket to the remote address to which it is connected.",251,null],[11,"recv","","Receives data on the socket from the remote address to which it is\nconnected.",251,null],[11,"set_nonblocking","","Moves this UDP socket into or out of nonblocking mode.",251,null],[11,"fmt","","",251,null],[11,"from_str","std::net::ip","",241,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",243,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",244,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","std::net::addr","",246,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",247,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",245,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","std::net::parser","",252,null],[11,"ne","","",252,null],[11,"clone","","",252,null],[11,"fmt","","",252,null],[11,"fmt","","",252,null],[11,"description","","",252,null],[11,"fmt","std::net","",253,null],[11,"eq","","",253,null],[11,"clone","","",253,null],[11,"next","","",254,null],[11,"clone","std::os::linux::raw::arch","",255,null],[11,"as_raw_stat","std::fs","",210,null],[11,"st_dev","","",210,null],[11,"st_ino","","",210,null],[11,"st_mode","","",210,null],[11,"st_nlink","","",210,null],[11,"st_uid","","",210,null],[11,"st_gid","","",210,null],[11,"st_rdev","","",210,null],[11,"st_size","","",210,null],[11,"st_atime","","",210,null],[11,"st_atime_nsec","","",210,null],[11,"st_mtime","","",210,null],[11,"st_mtime_nsec","","",210,null],[11,"st_ctime","","",210,null],[11,"st_ctime_nsec","","",210,null],[11,"st_blksize","","",210,null],[11,"st_blocks","","",210,null],[11,"as_raw_fd","","",214,null],[11,"from_raw_fd","","",214,{"inputs":[{"name":"i32"}],"output":{"name":"file"}}],[11,"into_raw_fd","","",214,null],[11,"as_raw_fd","std::net::tcp","",248,null],[11,"as_raw_fd","","",249,null],[11,"as_raw_fd","std::net::udp","",251,null],[11,"from_raw_fd","std::net::tcp","",248,{"inputs":[{"name":"i32"}],"output":{"name":"tcpstream"}}],[11,"from_raw_fd","","",249,{"inputs":[{"name":"i32"}],"output":{"name":"tcplistener"}}],[11,"from_raw_fd","std::net::udp","",251,{"inputs":[{"name":"i32"}],"output":{"name":"udpsocket"}}],[11,"into_raw_fd","std::net::tcp","",248,null],[11,"into_raw_fd","","",249,null],[11,"into_raw_fd","std::net::udp","",251,null],[11,"from_vec","std::ffi::os_str","",206,{"inputs":[{"name":"vec"}],"output":{"name":"osstring"}}],[11,"into_vec","","",206,null],[11,"from_bytes","","",207,null],[11,"as_bytes","","",207,null],[11,"mode","std::fs","",212,null],[11,"set_mode","","",212,null],[11,"from_mode","","",212,{"inputs":[{"name":"u32"}],"output":{"name":"permissions"}}],[11,"mode","","",211,null],[11,"custom_flags","","",211,null],[11,"dev","","",210,null],[11,"ino","","",210,null],[11,"mode","","",210,null],[11,"nlink","","",210,null],[11,"uid","","",210,null],[11,"gid","","",210,null],[11,"rdev","","",210,null],[11,"size","","",210,null],[11,"atime","","",210,null],[11,"atime_nsec","","",210,null],[11,"mtime","","",210,null],[11,"mtime_nsec","","",210,null],[11,"ctime","","",210,null],[11,"ctime_nsec","","",210,null],[11,"blksize","","",210,null],[11,"blocks","","",210,null],[11,"is_block_device","","",213,null],[11,"is_char_device","","",213,null],[11,"is_fifo","","",213,null],[11,"is_socket","","",213,null],[11,"ino","","",216,null],[11,"mode","","",217,null],[11,"uid","std::process","",256,null],[11,"gid","","",256,null],[11,"before_exec","","",256,null],[11,"exec","","",256,null],[11,"from_raw","","",257,{"inputs":[{"name":"i32"}],"output":{"name":"exitstatus"}}],[11,"signal","","",257,null],[11,"from_raw_fd","","",258,{"inputs":[{"name":"i32"}],"output":{"name":"stdio"}}],[11,"as_raw_fd","","",259,null],[11,"as_raw_fd","","",260,null],[11,"as_raw_fd","","",261,null],[11,"into_raw_fd","","",259,null],[11,"into_raw_fd","","",260,null],[11,"into_raw_fd","","",261,null],[11,"as_pthread_t","std::thread","",154,null],[11,"into_pthread_t","","",154,null],[11,"clone","std::sys::ext::net","",262,null],[11,"is_unnamed","","Returns true iff the address is unnamed.",262,null],[11,"as_pathname","","Returns the contents of this address if it is a `pathname` address.",262,null],[11,"fmt","","",262,null],[11,"fmt","","",263,null],[11,"connect","","Connects to the socket named by `path`.",263,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"pair","","Creates an unnamed pair of connected sockets.",263,{"inputs":[],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",263,null],[11,"local_addr","","Returns the socket address of the local half of this connection.",263,null],[11,"peer_addr","","Returns the socket address of the remote half of this connection.",263,null],[11,"set_read_timeout","","Sets the read timeout for the socket.",263,null],[11,"set_write_timeout","","Sets the write timeout for the socket.",263,null],[11,"read_timeout","","Returns the read timeout of this socket.",263,null],[11,"write_timeout","","Returns the write timeout of this socket.",263,null],[11,"set_nonblocking","","Moves the socket into or out of nonblocking mode.",263,null],[11,"take_error","","Returns the value of the `SO_ERROR` option.",263,null],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",263,null],[11,"read","","",263,null],[11,"read_to_end","","",263,null],[11,"write","","",263,null],[11,"flush","","",263,null],[11,"as_raw_fd","","",263,null],[11,"from_raw_fd","","",263,{"inputs":[{"name":"i32"}],"output":{"name":"unixstream"}}],[11,"into_raw_fd","","",263,null],[11,"fmt","","",264,null],[11,"bind","","Creates a new `UnixListener` bound to the specified socket.",264,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"accept","","Accepts a new incoming connection to this listener.",264,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",264,null],[11,"local_addr","","Returns the local socket address of this listener.",264,null],[11,"set_nonblocking","","Moves the socket into or out of nonblocking mode.",264,null],[11,"take_error","","Returns the value of the `SO_ERROR` option.",264,null],[11,"incoming","","Returns an iterator over incoming connections.",264,null],[11,"as_raw_fd","","",264,null],[11,"from_raw_fd","","",264,{"inputs":[{"name":"i32"}],"output":{"name":"unixlistener"}}],[11,"into_raw_fd","","",264,null],[11,"fmt","","",265,null],[11,"next","","",265,null],[11,"size_hint","","",265,null],[11,"fmt","","",266,null],[11,"bind","","Creates a Unix datagram socket bound to the given path.",266,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"unbound","","Creates a Unix Datagram socket which is not bound to any address.",266,{"inputs":[],"output":{"name":"result"}}],[11,"pair","","Create an unnamed pair of connected sockets.",266,{"inputs":[],"output":{"name":"result"}}],[11,"connect","","Connects the socket to the specified address.",266,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",266,null],[11,"local_addr","","Returns the address of this socket.",266,null],[11,"peer_addr","","Returns the address of this socket&#39;s peer.",266,null],[11,"recv_from","","Receives data from the socket.",266,null],[11,"recv","","Receives data from the socket.",266,null],[11,"send_to","","Sends data on the socket to the specified address.",266,null],[11,"send","","Sends data on the socket to the socket&#39;s peer.",266,null],[11,"set_read_timeout","","Sets the read timeout for the socket.",266,null],[11,"set_write_timeout","","Sets the write timeout for the socket.",266,null],[11,"read_timeout","","Returns the read timeout of this socket.",266,null],[11,"write_timeout","","Returns the write timeout of this socket.",266,null],[11,"set_nonblocking","","Moves the socket into or out of nonblocking mode.",266,null],[11,"take_error","","Returns the value of the `SO_ERROR` option.",266,null],[11,"shutdown","","Shut down the read, write, or both halves of this connection.",266,null],[11,"as_raw_fd","","",266,null],[11,"from_raw_fd","","",266,{"inputs":[{"name":"i32"}],"output":{"name":"unixdatagram"}}],[11,"into_raw_fd","","",266,null],[11,"deref","std::panic","",267,null],[11,"deref_mut","","",267,null],[11,"call_once","","",267,null],[11,"eq","std::path","",268,null],[11,"ne","","",268,null],[11,"cmp","","",268,null],[11,"partial_cmp","","",268,null],[11,"lt","","",268,null],[11,"le","","",268,null],[11,"gt","","",268,null],[11,"ge","","",268,null],[11,"hash","","",268,null],[11,"fmt","","",268,null],[11,"clone","","",268,null],[11,"is_verbatim","","Determines if the prefix is verbatim, i.e. begins with `\\\\?\\`.",268,null],[11,"fmt","","",269,null],[11,"clone","","",269,null],[11,"kind","","The parsed prefix data.",269,null],[11,"as_os_str","","The raw `OsStr` slice for this prefix.",269,null],[11,"eq","","",269,null],[11,"partial_cmp","","",269,null],[11,"cmp","","",269,null],[11,"hash","","",269,null],[11,"fmt","","",270,null],[11,"hash","","",270,null],[11,"cmp","","",270,null],[11,"partial_cmp","","",270,null],[11,"lt","","",270,null],[11,"le","","",270,null],[11,"gt","","",270,null],[11,"ge","","",270,null],[11,"eq","","",270,null],[11,"ne","","",270,null],[11,"clone","","",270,null],[11,"as_os_str","","Extracts the underlying `OsStr` slice",270,null],[11,"as_ref","","",270,null],[11,"clone","","",271,null],[11,"clone","","",272,null],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",271,null],[11,"as_ref","","",271,null],[11,"as_ref","","",271,null],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",272,null],[11,"as_ref","","",272,null],[11,"as_ref","","",272,null],[11,"next","","",272,null],[11,"next_back","","",272,null],[11,"next","","",271,null],[11,"next_back","","",271,null],[11,"eq","","",271,null],[11,"partial_cmp","","",271,null],[11,"cmp","","",271,null],[11,"clone","","",273,null],[11,"new","","Allocates an empty `PathBuf`.",273,{"inputs":[],"output":{"name":"pathbuf"}}],[11,"as_path","","Coerces to a `Path` slice.",273,null],[11,"push","","Extends `self` with `path`.",273,null],[11,"pop","","Truncate `self` to `self.parent()`.",273,null],[11,"set_file_name","","Updates `self.file_name()` to `file_name`.",273,null],[11,"set_extension","","Updates `self.extension()` to `extension`.",273,null],[11,"into_os_string","","Consumes the `PathBuf`, yielding its internal `OsString` storage.",273,null],[11,"from","","",273,{"inputs":[{"name":"t"}],"output":{"name":"pathbuf"}}],[11,"from","","",273,{"inputs":[{"name":"osstring"}],"output":{"name":"pathbuf"}}],[11,"from","","",273,{"inputs":[{"name":"string"}],"output":{"name":"pathbuf"}}],[11,"from_iter","","",273,{"inputs":[{"name":"i"}],"output":{"name":"pathbuf"}}],[11,"extend","","",273,null],[11,"fmt","","",273,null],[11,"new","","Directly wrap a string slice as a `Path` slice.",274,{"inputs":[{"name":"s"}],"output":{"name":"path"}}],[11,"as_os_str","","Yields the underlying `OsStr` slice.",274,null],[11,"to_str","","Yields a `&amp;str` slice if the `Path` is valid unicode.",274,null],[11,"to_string_lossy","","Converts a `Path` to a `Cow&lt;str&gt;`.",274,null],[11,"to_path_buf","","Converts a `Path` to an owned `PathBuf`.",274,null],[11,"is_absolute","","A path is *absolute* if it is independent of the current directory.",274,null],[11,"is_relative","","A path is *relative* if it is not absolute.",274,null],[11,"has_root","","A path has a root if the body of the path begins with the directory separator.",274,null],[11,"parent","","The path without its final component, if any.",274,null],[11,"file_name","","The final component of the path, if it is a normal file.",274,null],[11,"strip_prefix","","Returns a path that, when joined onto `base`, yields `self`.",274,null],[11,"starts_with","","Determines whether `base` is a prefix of `self`.",274,null],[11,"ends_with","","Determines whether `child` is a suffix of `self`.",274,null],[11,"file_stem","","Extracts the stem (non-extension) portion of `self.file_name()`.",274,null],[11,"extension","","Extracts the extension of `self.file_name()`, if possible.",274,null],[11,"join","","Creates an owned `PathBuf` with `path` adjoined to `self`.",274,null],[11,"with_file_name","","Creates an owned `PathBuf` like `self` but with the given file name.",274,null],[11,"with_extension","","Creates an owned `PathBuf` like `self` but with the given extension.",274,null],[11,"components","","Produce an iterator over the components of the path.",274,null],[11,"iter","","Produce an iterator over the path&#39;s components viewed as `OsStr` slices.",274,null],[11,"display","","Returns an object that implements `Display` for safely printing paths\nthat may contain non-Unicode data.",274,null],[11,"metadata","","Query the file system to get information about a file, directory, etc.",274,null],[11,"symlink_metadata","","Query the metadata about a file without following symlinks.",274,null],[11,"canonicalize","","Returns the canonical form of the path with all intermediate components\nnormalized and symbolic links resolved.",274,null],[11,"read_link","","Reads a symbolic link, returning the file that the link points to.",274,null],[11,"read_dir","","Returns an iterator over the entries within a directory.",274,null],[11,"exists","","Returns whether the path points at an existing entity.",274,null],[11,"is_file","","Returns whether the path is pointing at a regular file.",274,null],[11,"is_dir","","Returns whether the path is pointing at a directory.",274,null],[11,"deref","","",273,null],[11,"borrow","","",273,null],[11,"from","collections::borrow","",208,{"inputs":[{"name":"path"}],"output":{"name":"cow"}}],[11,"from","","",208,{"inputs":[{"name":"pathbuf"}],"output":{"name":"cow"}}],[11,"to_owned","std::path","",274,null],[11,"eq","","",273,null],[11,"hash","","",273,null],[11,"partial_cmp","","",273,null],[11,"cmp","","",273,null],[11,"as_ref","","",273,null],[11,"into","","",273,null],[11,"eq","","",275,null],[11,"ne","","",275,null],[11,"clone","","",275,null],[11,"fmt","","",275,null],[11,"as_ref","","",274,null],[11,"fmt","","",274,null],[11,"fmt","","",276,null],[11,"fmt","","",276,null],[11,"eq","","",274,null],[11,"hash","","",274,null],[11,"partial_cmp","","",274,null],[11,"cmp","","",274,null],[11,"as_ref","","",274,null],[11,"as_ref","std::ffi::os_str","",207,null],[11,"as_ref","collections::borrow","",208,null],[11,"as_ref","std::ffi::os_str","",206,null],[11,"as_ref","collections::string","",209,null],[11,"as_ref","std::path","",273,null],[11,"eq","","",273,null],[11,"eq","","",274,null],[11,"partial_cmp","","",273,null],[11,"partial_cmp","","",274,null],[11,"eq","","",273,null],[11,"partial_cmp","","",273,null],[11,"eq","collections::borrow","",208,null],[11,"eq","std::path","",274,null],[11,"partial_cmp","collections::borrow","",208,null],[11,"partial_cmp","std::path","",274,null],[11,"eq","collections::borrow","",208,null],[11,"partial_cmp","","",208,null],[11,"eq","","",208,null],[11,"eq","std::path","",273,null],[11,"partial_cmp","collections::borrow","",208,null],[11,"partial_cmp","std::path","",273,null],[11,"eq","","",273,null],[11,"eq","std::ffi::os_str","",207,null],[11,"partial_cmp","std::path","",273,null],[11,"partial_cmp","std::ffi::os_str","",207,null],[11,"eq","std::path","",273,null],[11,"partial_cmp","","",273,null],[11,"eq","","",273,null],[11,"eq","collections::borrow","",208,null],[11,"partial_cmp","std::path","",273,null],[11,"partial_cmp","collections::borrow","",208,null],[11,"eq","std::path","",273,null],[11,"eq","std::ffi::os_str","",206,null],[11,"partial_cmp","std::path","",273,null],[11,"partial_cmp","std::ffi::os_str","",206,null],[11,"eq","std::path","",274,null],[11,"eq","std::ffi::os_str","",207,null],[11,"partial_cmp","std::path","",274,null],[11,"partial_cmp","std::ffi::os_str","",207,null],[11,"eq","std::path","",274,null],[11,"partial_cmp","","",274,null],[11,"eq","","",274,null],[11,"eq","collections::borrow","",208,null],[11,"partial_cmp","std::path","",274,null],[11,"partial_cmp","collections::borrow","",208,null],[11,"eq","std::path","",274,null],[11,"eq","std::ffi::os_str","",206,null],[11,"partial_cmp","std::path","",274,null],[11,"partial_cmp","std::ffi::os_str","",206,null],[11,"eq","","",207,null],[11,"partial_cmp","","",207,null],[11,"eq","collections::borrow","",208,null],[11,"partial_cmp","","",208,null],[11,"eq","std::ffi::os_str","",206,null],[11,"partial_cmp","","",206,null],[11,"eq","collections::borrow","",208,null],[11,"eq","std::ffi::os_str","",207,null],[11,"partial_cmp","collections::borrow","",208,null],[11,"partial_cmp","std::ffi::os_str","",207,null],[11,"eq","collections::borrow","",208,null],[11,"partial_cmp","","",208,null],[11,"eq","","",208,null],[11,"eq","std::ffi::os_str","",206,null],[11,"partial_cmp","collections::borrow","",208,null],[11,"partial_cmp","std::ffi::os_str","",206,null],[11,"fmt","std::path","",275,null],[11,"description","","",275,null],[11,"write","std::process","",259,null],[11,"flush","","",259,null],[11,"read","","",260,null],[11,"read_to_end","","",260,null],[11,"read","","",261,null],[11,"read_to_end","","",261,null],[11,"new","","Constructs a new `Command` for launching the program at\npath `program`, with the following default configuration:",256,{"inputs":[{"name":"s"}],"output":{"name":"command"}}],[11,"arg","","Add an argument to pass to the program.",256,null],[11,"args","","Add multiple arguments to pass to the program.",256,null],[11,"env","","Inserts or updates an environment variable mapping.",256,null],[11,"env_remove","","Removes an environment variable mapping.",256,null],[11,"env_clear","","Clears the entire environment map for the child process.",256,null],[11,"current_dir","","Sets the working directory for the child process.",256,null],[11,"stdin","","Configuration for the child process&#39;s stdin handle (file descriptor 0).",256,null],[11,"stdout","","Configuration for the child process&#39;s stdout handle (file descriptor 1).",256,null],[11,"stderr","","Configuration for the child process&#39;s stderr handle (file descriptor 2).",256,null],[11,"spawn","","Executes the command as a child process, returning a handle to it.",256,null],[11,"output","","Executes the command as a child process, waiting for it to finish and\ncollecting all of its output.",256,null],[11,"status","","Executes a command as a child process, waiting for it to finish and\ncollecting its exit status.",256,null],[11,"fmt","","Format the program and arguments of a Command for display. Any\nnon-utf8 data is lossily converted using the utf8 replacement\ncharacter.",256,null],[11,"clone","","",277,null],[11,"eq","","",277,null],[11,"ne","","",277,null],[11,"fmt","","",277,null],[11,"piped","","A new pipe should be arranged to connect the parent and child processes.",258,{"inputs":[],"output":{"name":"stdio"}}],[11,"inherit","","The child inherits from the corresponding parent descriptor.",258,{"inputs":[],"output":{"name":"stdio"}}],[11,"null","","This stream will be ignored. This is the equivalent of attaching the\nstream to `/dev/null`",258,{"inputs":[],"output":{"name":"stdio"}}],[11,"fmt","","",257,null],[11,"clone","","",257,null],[11,"eq","","",257,null],[11,"ne","","",257,null],[11,"success","","Was termination successful? Signal termination not considered a success,\nand success is defined as a zero exit status.",257,null],[11,"code","","Returns the exit code of the process, if any.",257,null],[11,"fmt","","",257,null],[11,"kill","","Forces the child to exit. This is equivalent to sending a\nSIGKILL on unix platforms.",278,null],[11,"id","","Returns the OS-assigned process identifier associated with this child.",278,null],[11,"wait","","Waits for the child to exit completely, returning the status that it\nexited with. This function will continue to have the same return value\nafter it has been called at least once.",278,null],[11,"wait_with_output","","Simultaneously waits for the child to exit and collect all remaining\noutput on the stdout/stderr handles, returning an `Output`\ninstance.",278,null],[11,"new","std::sync::mpsc::select","Creates a new selection structure. This set is initially empty.",279,{"inputs":[],"output":{"name":"select"}}],[11,"handle","","Creates a new handle into this receiver set for a new receiver. Note\nthat this does *not* add the receiver to the receiver set, for that you\nmust call the `add` method on the handle itself.",279,null],[11,"wait","","Waits for an event on this receiver set. The returned value is *not* an\nindex, but rather an id. This id can be queried against any active\n`Handle` structures (each one has an `id` method). The handle with\nthe matching `id` will have some sort of event available on it. The\nevent could either be that data is available or the corresponding\nchannel has been closed.",279,null],[11,"id","","Retrieves the id of this handle.",280,null],[11,"recv","","Blocks to receive a value on the underlying receiver, returning `Some` on\nsuccess or `None` if the channel disconnects. This function has the same\nsemantics as `Receiver.recv`",280,null],[11,"add","","Adds this handle to the receiver set that the handle was created from. This\nmethod can be called multiple times, but it has no effect if `add` was\ncalled previously.",280,null],[11,"remove","","Removes this handle from the `Select` set. This method is unsafe because\nit has no guarantee that the `Handle` was not moved since `add` was\ncalled.",280,null],[11,"drop","","",279,null],[11,"drop","","",280,null],[11,"fmt","","",279,null],[11,"fmt","","",280,null],[11,"clone","std::sync::mpsc","",281,null],[11,"eq","","",281,null],[11,"ne","","",281,null],[11,"fmt","","",282,null],[11,"clone","","",282,null],[11,"eq","","",282,null],[11,"fmt","","",283,null],[11,"clone","","",283,null],[11,"eq","","",283,null],[11,"fmt","","",284,null],[11,"clone","","",284,null],[11,"eq","","",284,null],[11,"clone","","",285,null],[11,"eq","","",285,null],[11,"ne","","",285,null],[11,"send","","Attempts to send a value on this channel, returning it back if it could\nnot be sent.",286,null],[11,"clone","","",286,null],[11,"drop","","",286,null],[11,"fmt","","",286,null],[11,"send","","Sends a value on this synchronous channel.",287,null],[11,"try_send","","Attempts to send a value on this channel without blocking.",287,null],[11,"clone","","",287,null],[11,"drop","","",287,null],[11,"fmt","","",287,null],[11,"try_recv","","Attempts to return a pending value on this receiver without blocking",288,null],[11,"recv","","Attempts to wait for a value on this receiver, returning an error if the\ncorresponding channel has hung up.",288,null],[11,"recv_timeout","","Attempts to wait for a value on this receiver, returning an error if the\ncorresponding channel has hung up, or if it waits more than `timeout`.",288,null],[11,"iter","","Returns an iterator that will block waiting for messages, but never\n`panic!`. It will return `None` when the channel has hung up.",288,null],[11,"next","","",289,null],[11,"next","","",290,null],[11,"into_iter","","",288,null],[11,"drop","","",288,null],[11,"fmt","","",288,null],[11,"fmt","","",281,null],[11,"fmt","","",281,null],[11,"description","","",281,null],[11,"cause","","",281,null],[11,"fmt","","",285,null],[11,"fmt","","",285,null],[11,"description","","",285,null],[11,"cause","","",285,null],[11,"fmt","","",282,null],[11,"description","","",282,null],[11,"cause","","",282,null],[11,"fmt","","",283,null],[11,"description","","",283,null],[11,"cause","","",283,null],[11,"new","std::sync::barrier","Creates a new barrier that can block a given number of threads.",291,{"inputs":[{"name":"usize"}],"output":{"name":"barrier"}}],[11,"wait","","Blocks the current thread until all threads have rendezvoused here.",291,null],[11,"is_leader","","Returns whether this thread from `wait` is the &quot;leader thread&quot;.",292,null],[11,"clone","std::sync::condvar","",293,null],[11,"eq","","",293,null],[11,"ne","","",293,null],[11,"fmt","","",293,null],[11,"timed_out","","Returns whether the wait was known to have timed out.",293,null],[11,"new","","Creates a new condition variable which is ready to be waited on and\nnotified.",294,{"inputs":[],"output":{"name":"condvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",294,null],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",294,null],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",294,null],[11,"notify_one","","Wakes up one blocked thread on this condvar.",294,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",294,null],[11,"default","","",294,{"inputs":[],"output":{"name":"condvar"}}],[11,"drop","","",294,null],[11,"new","","Creates a new condition variable",295,{"inputs":[],"output":{"name":"staticcondvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",295,null],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",295,null],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",295,null],[11,"notify_one","","Wakes up one blocked thread on this condvar.",295,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",295,null],[11,"destroy","","Deallocates all resources associated with this static condvar.",295,null],[11,"new","std::sync::mutex","Creates a new mutex in an unlocked state ready for use.",296,{"inputs":[{"name":"t"}],"output":{"name":"mutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",296,null],[11,"try_lock","","Attempts to acquire this lock.",296,null],[11,"is_poisoned","","Determines whether the lock is poisoned.",296,null],[11,"into_inner","","Consumes this mutex, returning the underlying data.",296,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",296,null],[11,"drop","","",296,null],[11,"default","","",296,{"inputs":[],"output":{"name":"mutex"}}],[11,"fmt","","",296,null],[11,"new","","Creates a new mutex in an unlocked state ready for use.",297,{"inputs":[],"output":{"name":"staticmutex"}}],[11,"lock","","Acquires this lock, see `Mutex::lock`",297,null],[11,"try_lock","","Attempts to grab this lock, see `Mutex::try_lock`",297,null],[11,"destroy","","Deallocates resources associated with this static mutex.",297,null],[11,"deref","","",298,null],[11,"deref_mut","","",298,null],[11,"drop","","",298,null],[11,"new","std::sync::once","Creates a new `Once` value.",299,{"inputs":[],"output":{"name":"once"}}],[11,"call_once","","Performs an initialization routine once and only once. The given closure\nwill be executed if this is the first time `call_once` has been called,\nand otherwise the routine will *not* be invoked.",299,null],[11,"call_once_force","","Performs the same function as `call_once` except ignores poisoning.",299,null],[11,"poisoned","","Returns whether the associated `Once` has been poisoned.",300,null],[11,"new","std::sync::rwlock","Creates a new instance of an `RwLock&lt;T&gt;` which is unlocked.",301,{"inputs":[{"name":"t"}],"output":{"name":"rwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",301,null],[11,"try_read","","Attempts to acquire this rwlock with shared read access.",301,null],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",301,null],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",301,null],[11,"is_poisoned","","Determines whether the lock is poisoned.",301,null],[11,"into_inner","","Consumes this `RwLock`, returning the underlying data.",301,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",301,null],[11,"drop","","",301,null],[11,"fmt","","",301,null],[11,"default","","",301,{"inputs":[],"output":{"name":"rwlock"}}],[11,"new","","Creates a new rwlock.",302,{"inputs":[],"output":{"name":"staticrwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",302,null],[11,"try_read","","Attempts to acquire this lock with shared read access.",302,null],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",302,null],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",302,null],[11,"destroy","","Deallocates all resources associated with this static lock.",302,null],[11,"deref","","",303,null],[11,"deref","","",304,null],[11,"deref_mut","","",304,null],[11,"drop","","",303,null],[11,"drop","","",304,null],[11,"hash","std::time::duration","",305,null],[11,"fmt","","",305,null],[11,"cmp","","",305,null],[11,"partial_cmp","","",305,null],[11,"lt","","",305,null],[11,"le","","",305,null],[11,"gt","","",305,null],[11,"ge","","",305,null],[11,"eq","","",305,null],[11,"ne","","",305,null],[11,"clone","","",305,null],[11,"new","","Creates a new `Duration` from the specified number of seconds and\nadditional nanosecond precision.",305,{"inputs":[{"name":"u64"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"from_secs","","Creates a new `Duration` from the specified number of seconds.",305,{"inputs":[{"name":"u64"}],"output":{"name":"duration"}}],[11,"from_millis","","Creates a new `Duration` from the specified number of milliseconds.",305,{"inputs":[{"name":"u64"}],"output":{"name":"duration"}}],[11,"as_secs","","Returns the number of whole seconds represented by this duration.",305,null],[11,"subsec_nanos","","Returns the nanosecond precision represented by this duration.",305,null],[11,"add","","",305,null],[11,"add_assign","","",305,null],[11,"sub","","",305,null],[11,"sub_assign","","",305,null],[11,"mul","","",305,null],[11,"mul_assign","","",305,null],[11,"div","","",305,null],[11,"div_assign","","",305,null],[11,"cmp","std::time","",306,null],[11,"partial_cmp","","",306,null],[11,"lt","","",306,null],[11,"le","","",306,null],[11,"gt","","",306,null],[11,"ge","","",306,null],[11,"eq","","",306,null],[11,"ne","","",306,null],[11,"clone","","",306,null],[11,"cmp","","",307,null],[11,"partial_cmp","","",307,null],[11,"lt","","",307,null],[11,"le","","",307,null],[11,"gt","","",307,null],[11,"ge","","",307,null],[11,"eq","","",307,null],[11,"ne","","",307,null],[11,"clone","","",307,null],[11,"fmt","","",308,null],[11,"clone","","",308,null],[11,"now","","Returns an instant corresponding to &quot;now&quot;.",306,{"inputs":[],"output":{"name":"instant"}}],[11,"duration_since","","Returns the amount of time elapsed from another instant to this one.",306,null],[11,"elapsed","","Returns the amount of time elapsed since this instant was created.",306,null],[11,"add","","",306,null],[11,"add_assign","","",306,null],[11,"sub","","",306,null],[11,"sub_assign","","",306,null],[11,"sub","","",306,null],[11,"fmt","","",306,null],[11,"now","","Returns the system time corresponding to &quot;now&quot;.",307,{"inputs":[],"output":{"name":"systemtime"}}],[11,"duration_since","","Returns the amount of time elapsed from an earlier point in time.",307,null],[11,"elapsed","","Returns the amount of time elapsed since this system time was created.",307,null],[11,"add","","",307,null],[11,"add_assign","","",307,null],[11,"sub","","",307,null],[11,"sub_assign","","",307,null],[11,"fmt","","",307,null],[11,"duration","","Returns the positive duration which represents how far forward the\nsecond system time was from the first.",308,null],[11,"description","","",308,null],[11,"fmt","","",308,null],[11,"fmt","std::sys_common::poison","",309,null],[11,"fmt","","",309,null],[11,"description","","",309,null],[11,"new","","Creates a `PoisonError`.",309,{"inputs":[{"name":"t"}],"output":{"name":"poisonerror"}}],[11,"into_inner","","Consumes this error indicating that a lock is poisoned, returning the\nunderlying guard to allow access regardless.",309,null],[11,"get_ref","","Reaches into this error indicating that a lock is poisoned, returning a\nreference to the underlying guard to allow access regardless.",309,null],[11,"get_mut","","Reaches into this error indicating that a lock is poisoned, returning a\nmutable reference to the underlying guard to allow access regardless.",309,null],[11,"from","","",310,{"inputs":[{"name":"poisonerror"}],"output":{"name":"trylockerror"}}],[11,"fmt","","",310,null],[11,"fmt","","",310,null],[11,"description","","",310,null],[11,"cause","","",310,null],[11,"clone","libc::unix","",311,null],[11,"clone","","",312,null],[11,"clone","","",313,null],[11,"clone","","",314,null],[11,"clone","","",315,null],[11,"clone","","",316,null],[11,"clone","","",317,null],[11,"clone","","",318,null],[11,"clone","","",319,null],[11,"clone","","",320,null],[11,"clone","","",321,null],[11,"clone","","",322,null],[11,"clone","","",323,null],[11,"clone","libc::unix::notbsd","",324,null],[11,"clone","","",325,null],[11,"clone","","",326,null],[11,"clone","","",327,null],[11,"clone","","",328,null],[11,"clone","","",329,null],[11,"clone","","",330,null],[11,"clone","","",331,null],[11,"clone","","",332,null],[11,"clone","","",333,null],[11,"clone","","",334,null],[11,"clone","","",335,null],[11,"clone","","",336,null],[11,"clone","","",337,null],[11,"clone","","",338,null],[11,"clone","libc::unix::notbsd::linux","",339,null],[11,"clone","","",340,null],[11,"clone","","",341,null],[11,"clone","","",342,null],[11,"clone","","",343,null],[11,"clone","","",344,null],[11,"clone","","",345,null],[11,"clone","","",346,null],[11,"clone","","",347,null],[11,"clone","","",348,null],[11,"clone","","",349,null],[11,"clone","","",350,null],[11,"clone","","",351,null],[11,"clone","","",352,null],[11,"clone","","",353,null],[11,"clone","","",354,null],[11,"clone","libc::unix::notbsd::linux::other","",355,null],[11,"clone","","",356,null],[11,"clone","","",357,null],[11,"clone","","",358,null],[11,"clone","","",359,null],[11,"clone","","",360,null],[11,"clone","","",361,null],[11,"clone","","",362,null],[11,"clone","","",363,null],[11,"clone","","",364,null],[11,"clone","","",365,null],[11,"clone","libc::unix::notbsd::linux::other::b64","",366,null],[11,"clone","","",367,null],[11,"clone","libc::unix::notbsd::linux::other::b64::x86_64","",368,null],[11,"clone","","",369,null],[11,"clone","","",370,null],[11,"clone","","",371,null],[11,"clone","","",372,null],[11,"clone","","",373,null],[11,"clone","","",374,null],[11,"clone","","",375,null],[11,"payload","std::panicking","Returns the payload associated with the panic.",376,null],[11,"location","","Returns information about the location from which the panic originated,\nif available.",376,null],[11,"file","","Returns the name of the source file from which the panic originated.",377,null],[11,"line","","Returns the line number from which the panic originated.",377,null],[11,"next","rustc_unicode::char","",378,null],[11,"next","","",379,null],[11,"clone","","",380,null],[11,"eq","","",145,null],[11,"ne","","",145,null],[11,"clone","","",145,null],[11,"fmt","","",145,null],[11,"next","","",380,null],[11,"size_hint","","",380,null],[11,"unpaired_surrogate","","Returns the unpaired surrogate which caused this error.",145,null],[11,"fmt","","",145,null],[11,"borrow","collections::borrow","",208,null],[11,"clone","","",208,null],[11,"to_mut","","Acquires a mutable reference to the owned form of the data.",208,null],[11,"into_owned","","Extracts the owned data.",208,null],[11,"deref","","",208,null],[11,"cmp","","",208,null],[11,"eq","","",208,null],[11,"partial_cmp","","",208,null],[11,"fmt","","",208,null],[11,"fmt","","",208,null],[11,"default","","",208,{"inputs":[],"output":{"name":"cow"}}],[11,"hash","","",208,null],[11,"as_ref","","",208,null],[11,"new","alloc::rc","Constructs a new `Rc&lt;T&gt;`.",381,{"inputs":[{"name":"t"}],"output":{"name":"rc"}}],[11,"try_unwrap","","Unwraps the contained value if the `Rc&lt;T&gt;` has exactly one strong reference.",381,{"inputs":[{"name":"rc"}],"output":{"name":"result"}}],[11,"would_unwrap","","Checks if `Rc::try_unwrap` would return `Ok`.",381,{"inputs":[{"name":"rc"}],"output":{"name":"bool"}}],[11,"downgrade","","Creates a new `Weak&lt;T&gt;` reference from this value.",381,{"inputs":[{"name":"rc"}],"output":{"name":"weak"}}],[11,"weak_count","","Get the number of weak references to this value.",381,{"inputs":[{"name":"rc"}],"output":{"name":"usize"}}],[11,"strong_count","","Get the number of strong references to this value.",381,{"inputs":[{"name":"rc"}],"output":{"name":"usize"}}],[11,"is_unique","","Returns true if there are no other `Rc` or `Weak&lt;T&gt;` values that share\nthe same inner value.",381,{"inputs":[{"name":"rc"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the contained value if the `Rc&lt;T&gt;` has\none strong reference and no weak references.",381,{"inputs":[{"name":"rc"}],"output":{"name":"option"}}],[11,"make_mut","","Make a mutable reference into the given `Rc&lt;T&gt;` by cloning the inner\ndata if the `Rc&lt;T&gt;` doesn&#39;t have one strong reference and no weak\nreferences.",381,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"deref","","",381,null],[11,"drop","","Drops the `Rc&lt;T&gt;`.",381,null],[11,"clone","","Makes a clone of the `Rc&lt;T&gt;`.",381,null],[11,"default","","Creates a new `Rc&lt;T&gt;`, with the `Default` value for `T`.",381,{"inputs":[],"output":{"name":"rc"}}],[11,"eq","","Equality for two `Rc&lt;T&gt;`s.",381,null],[11,"ne","","Inequality for two `Rc&lt;T&gt;`s.",381,null],[11,"partial_cmp","","Partial comparison for two `Rc&lt;T&gt;`s.",381,null],[11,"lt","","Less-than comparison for two `Rc&lt;T&gt;`s.",381,null],[11,"le","","&#39;Less-than or equal to&#39; comparison for two `Rc&lt;T&gt;`s.",381,null],[11,"gt","","Greater-than comparison for two `Rc&lt;T&gt;`s.",381,null],[11,"ge","","&#39;Greater-than or equal to&#39; comparison for two `Rc&lt;T&gt;`s.",381,null],[11,"cmp","","Comparison for two `Rc&lt;T&gt;`s.",381,null],[11,"hash","","",381,null],[11,"fmt","","",381,null],[11,"fmt","","",381,null],[11,"fmt","","",381,null],[11,"from","","",381,{"inputs":[{"name":"t"}],"output":{"name":"rc"}}],[11,"new","","Constructs a new `Weak&lt;T&gt;` without an accompanying instance of T.",382,{"inputs":[],"output":{"name":"weak"}}],[11,"upgrade","","Upgrades a weak reference to a strong reference.",382,null],[11,"drop","","Drops the `Weak&lt;T&gt;`.",382,null],[11,"clone","","Makes a clone of the `Weak&lt;T&gt;`.",382,null],[11,"fmt","","",382,null],[11,"default","","",382,{"inputs":[],"output":{"name":"weak"}}],[11,"borrow","","",381,null],[11,"as_ref","","",381,null],[11,"clone","alloc::boxed","",383,null],[11,"pointer","","",384,null],[11,"make_place","","",384,{"inputs":[],"output":{"name":"intermediatebox"}}],[11,"finalize","","",384,null],[11,"finalize","","",141,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"make_place","","",383,null],[11,"drop","","",384,null],[11,"new","","Allocates memory on the heap and then places `x` into it.",141,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"from_raw","","Constructs a box from a raw pointer.",141,null],[11,"into_raw","","Consumes the `Box`, returning the wrapped raw pointer.",141,null],[11,"default","","",141,{"inputs":[],"output":{"name":"box"}}],[11,"default","","",141,{"inputs":[],"output":{"name":"box"}}],[11,"clone","","Returns a new box with a `clone()` of this box&#39;s contents.",141,null],[11,"clone_from","","Copies `source`&#39;s contents into `self` without creating a new allocation.",141,null],[11,"clone","","",141,null],[11,"eq","","",141,null],[11,"ne","","",141,null],[11,"partial_cmp","","",141,null],[11,"lt","","",141,null],[11,"le","","",141,null],[11,"ge","","",141,null],[11,"gt","","",141,null],[11,"cmp","","",141,null],[11,"hash","","",141,null],[11,"from","","",141,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",141,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",141,null],[11,"fmt","","",141,null],[11,"fmt","","",141,null],[11,"fmt","","",141,null],[11,"deref","","",141,null],[11,"deref_mut","","",141,null],[11,"next","","",141,null],[11,"size_hint","","",141,null],[11,"next_back","","",141,null],[11,"call_once","","",141,null],[11,"call_once","","",141,null],[11,"clone","","",141,null],[11,"borrow","","",141,null],[11,"borrow_mut","","",141,null],[11,"as_ref","","",141,null],[11,"as_mut","","",141,null],[11,"clone","collections::str","",385,null],[11,"next","","",385,null],[11,"size_hint","","",385,null],[11,"borrow","collections::string","",209,null],[11,"borrow","collections::vec","",181,null],[11,"borrow_mut","","",181,null],[11,"cmp","collections::string","",209,null],[11,"partial_cmp","","",209,null],[11,"lt","","",209,null],[11,"le","","",209,null],[11,"gt","","",209,null],[11,"ge","","",209,null],[11,"fmt","","",142,null],[11,"fmt","","",143,null],[11,"new","","Creates a new empty `String`.",209,{"inputs":[],"output":{"name":"string"}}],[11,"with_capacity","","Creates a new empty `String` with a particular capacity.",209,{"inputs":[{"name":"usize"}],"output":{"name":"string"}}],[11,"from_utf8","","Converts a vector of bytes to a `String`.",209,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[11,"from_utf8_lossy","","Converts a slice of bytes to a string, including invalid characters.",209,null],[11,"from_utf16","","Decode a UTF-16 encoded vector `v` into a `String`, returning `Err`\nif `v` contains any invalid data.",209,null],[11,"from_utf16_lossy","","Decode a UTF-16 encoded vector `v` into a string, replacing\ninvalid data with the replacement character (U+FFFD).",209,null],[11,"from_raw_parts","","Creates a new `String` from a length, capacity, and pointer.",209,null],[11,"from_utf8_unchecked","","Converts a vector of bytes to a `String` without checking that the\nstring contains valid UTF-8.",209,{"inputs":[{"name":"vec"}],"output":{"name":"string"}}],[11,"into_bytes","","Converts a `String` into a byte vector.",209,null],[11,"as_str","","Extracts a string slice containing the entire string.",209,null],[11,"as_mut_str","","Extracts a string slice containing the entire string.",209,null],[11,"push_str","","Appends a given string slice onto the end of this `String`.",209,null],[11,"capacity","","Returns this `String`&#39;s capacity, in bytes.",209,null],[11,"reserve","","Ensures that this `String`&#39;s capacity is at least `additional` bytes\nlarger than its length.",209,null],[11,"reserve_exact","","Ensures that this `String`&#39;s capacity is `additional` bytes\nlarger than its length.",209,null],[11,"shrink_to_fit","","Shrinks the capacity of this `String` to match its length.",209,null],[11,"push","","Appends the given `char` to the end of this `String`.",209,null],[11,"as_bytes","","Returns a byte slice of this `String`&#39;s contents.",209,null],[11,"truncate","","Shortens this `String` to the specified length.",209,null],[11,"pop","","Removes the last character from the string buffer and returns it.",209,null],[11,"remove","","Removes a `char` from this `String` at a byte position and returns it.",209,null],[11,"insert","","Inserts a character into this `String` at a byte position.",209,null],[11,"as_mut_vec","","Returns a mutable reference to the contents of this `String`.",209,null],[11,"len","","Returns the length of this `String`, in bytes.",209,null],[11,"is_empty","","Returns `true` if this `String` has a length of zero.",209,null],[11,"clear","","Truncates this `String`, removing all contents.",209,null],[11,"drain","","Create a draining iterator that removes the specified range in the string\nand yields the removed chars.",209,null],[11,"into_boxed_str","","Converts this `String` into a `Box&lt;str&gt;`.",209,null],[11,"into_bytes","","Returns the bytes that were attempted to convert to a `String`.",142,null],[11,"utf8_error","","Fetch a `Utf8Error` to get more details about the conversion failure.",142,null],[11,"fmt","","",142,null],[11,"fmt","","",143,null],[11,"clone","","",209,null],[11,"clone_from","","",209,null],[11,"from_iter","","",209,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",209,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",209,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"extend","","",209,null],[11,"extend","","",209,null],[11,"extend","","",209,null],[11,"extend","","",209,null],[11,"eq","","",209,null],[11,"ne","","",209,null],[11,"eq","","",209,null],[11,"ne","","",209,null],[11,"eq","","",209,null],[11,"ne","","",209,null],[11,"eq","collections::borrow","",208,null],[11,"ne","","",208,null],[11,"eq","","",208,null],[11,"ne","","",208,null],[11,"eq","","",208,null],[11,"ne","","",208,null],[11,"eq","collections::string","",209,null],[11,"ne","","",209,null],[11,"default","","",209,{"inputs":[],"output":{"name":"string"}}],[11,"fmt","","",209,null],[11,"fmt","","",209,null],[11,"hash","","",209,null],[11,"add","","",209,null],[11,"index","","",209,null],[11,"index","","",209,null],[11,"index","","",209,null],[11,"index","","",209,null],[11,"index","","",209,null],[11,"index","","",209,null],[11,"index_mut","","",209,null],[11,"index_mut","","",209,null],[11,"index_mut","","",209,null],[11,"index_mut","","",209,null],[11,"index_mut","","",209,null],[11,"index_mut","","",209,null],[11,"deref","","",209,null],[11,"deref_mut","","",209,null],[11,"from_str","","",209,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",144,null],[11,"fmt","","",144,null],[11,"fmt","","",144,null],[11,"eq","","",144,null],[11,"as_ref","","",209,null],[11,"as_ref","","",209,null],[11,"from","","",209,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[11,"from","collections::borrow","",208,{"inputs":[{"name":"str"}],"output":{"name":"cow"}}],[11,"from","","",208,{"inputs":[{"name":"string"}],"output":{"name":"cow"}}],[11,"into","collections::string","",209,null],[11,"write_str","","",209,null],[11,"write_char","","",209,null],[11,"drop","","",386,null],[11,"next","","",386,null],[11,"size_hint","","",386,null],[11,"next_back","","",386,null],[11,"new","collections::vec","Constructs a new, empty `Vec&lt;T&gt;`.",181,{"inputs":[],"output":{"name":"vec"}}],[11,"with_capacity","","Constructs a new, empty `Vec&lt;T&gt;` with the specified capacity.",181,{"inputs":[{"name":"usize"}],"output":{"name":"vec"}}],[11,"from_raw_parts","","Creates a `Vec&lt;T&gt;` directly from the raw components of another vector.",181,null],[11,"capacity","","Returns the number of elements the vector can hold without\nreallocating.",181,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the given `Vec&lt;T&gt;`. The collection may reserve more space to avoid\nfrequent reallocations.",181,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to\nbe inserted in the given `Vec&lt;T&gt;`. Does nothing if the capacity is already\nsufficient.",181,null],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",181,null],[11,"into_boxed_slice","","Converts the vector into Box&lt;[T]&gt;.",181,null],[11,"truncate","","Shorten a vector to be `len` elements long, dropping excess elements.",181,null],[11,"as_slice","","Extracts a slice containing the entire vector.",181,null],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",181,null],[11,"set_len","","Sets the length of a vector.",181,null],[11,"swap_remove","","Removes an element from anywhere in the vector and return it, replacing\nit with the last element.",181,null],[11,"insert","","Inserts an element at position `index` within the vector, shifting all\nelements after it to the right.",181,null],[11,"remove","","Removes and returns the element at position `index` within the vector,\nshifting all elements after it to the left.",181,null],[11,"retain","","Retains only the elements specified by the predicate.",181,null],[11,"push","","Appends an element to the back of a collection.",181,null],[11,"pop","","Removes the last element from a vector and returns it, or `None` if it\nis empty.",181,null],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",181,null],[11,"drain","","Create a draining iterator that removes the specified range in the vector\nand yields the removed items.",181,null],[11,"clear","","Clears the vector, removing all values.",181,null],[11,"len","","Returns the number of elements in the vector.",181,null],[11,"is_empty","","Returns `true` if the vector contains no elements.",181,null],[11,"split_off","","Splits the collection into two at the given index.",181,null],[11,"resize","","Resizes the `Vec` in-place so that `len()` is equal to `new_len`.",181,null],[11,"extend_from_slice","","Clones and appends all elements in a slice to the `Vec`.",181,null],[11,"dedup","","Removes consecutive repeated elements in the vector.",181,null],[11,"clone","","",181,null],[11,"clone_from","","",181,null],[11,"hash","","",181,null],[11,"index","","",181,null],[11,"index_mut","","",181,null],[11,"index","","",181,null],[11,"index","","",181,null],[11,"index","","",181,null],[11,"index","","",181,null],[11,"index","","",181,null],[11,"index","","",181,null],[11,"index_mut","","",181,null],[11,"index_mut","","",181,null],[11,"index_mut","","",181,null],[11,"index_mut","","",181,null],[11,"index_mut","","",181,null],[11,"index_mut","","",181,null],[11,"deref","","",181,null],[11,"deref_mut","","",181,null],[11,"from_iter","","",181,{"inputs":[{"name":"i"}],"output":{"name":"vec"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe vector (from start to end). The vector cannot be used after calling\nthis.",181,null],[11,"extend","","",181,null],[11,"extend","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","collections::borrow","",208,null],[11,"ne","","",208,null],[11,"eq","","",208,null],[11,"ne","","",208,null],[11,"eq","","",208,null],[11,"ne","","",208,null],[11,"eq","collections::vec","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"partial_cmp","","",181,null],[11,"cmp","","",181,null],[11,"drop","","",181,null],[11,"default","","",181,{"inputs":[],"output":{"name":"vec"}}],[11,"fmt","","",181,null],[11,"as_ref","","",181,null],[11,"as_mut","","",181,null],[11,"as_ref","","",181,null],[11,"as_mut","","",181,null],[11,"from","","",181,null],[11,"from","","",181,{"inputs":[{"name":"str"}],"output":{"name":"vec"}}],[11,"from","collections::borrow","",208,null],[11,"from","","",208,{"inputs":[{"name":"vec"}],"output":{"name":"cow"}}],[11,"from_iter","","",208,{"inputs":[{"name":"i"}],"output":{"name":"cow"}}],[11,"next","collections::vec","",387,null],[11,"size_hint","","",387,null],[11,"count","","",387,null],[11,"next_back","","",387,null],[11,"clone","","",387,null],[11,"drop","","",387,null],[11,"next","","",388,null],[11,"size_hint","","",388,null],[11,"next_back","","",388,null],[11,"drop","","",388,null],[11,"detail","x11_dl::error","",389,null],[11,"kind","","",389,null],[11,"new","","",389,{"inputs":[{"name":"openerrorkind"},{"name":"string"}],"output":{"name":"openerror"}}],[11,"fmt","","",389,null],[11,"clone","","",389,null],[11,"fmt","","",389,null],[11,"description","","",389,null],[11,"eq","","",390,null],[11,"hash","","",390,null],[11,"fmt","","",390,null],[11,"clone","","",390,null],[11,"as_str","","",390,null],[11,"open","x11_dl::glx","",391,{"inputs":[],"output":{"name":"result"}}],[11,"open","x11_dl::xcursor","",392,{"inputs":[],"output":{"name":"result"}}],[11,"clone","","",393,null],[11,"clone","","",394,null],[11,"clone","","",395,null],[11,"clone","","",396,null],[11,"clone","","",397,null],[11,"clone","","",398,null],[11,"clone","","",399,null],[11,"clone","","",400,null],[11,"clone","","",401,null],[11,"clone","","",402,null],[11,"open","x11_dl::xf86vmode","",403,{"inputs":[],"output":{"name":"result"}}],[11,"clone","","",404,null],[11,"eq","","",405,null],[11,"ne","","",405,null],[11,"clone","","",405,null],[11,"clone","","",406,null],[11,"clone","","",407,null],[11,"clone","","",408,null],[11,"clone","","",409,null],[11,"open","x11_dl::xinerama","",410,{"inputs":[],"output":{"name":"result"}}],[11,"eq","","",411,null],[11,"ne","","",411,null],[11,"clone","","",411,null],[11,"eq","","",412,null],[11,"ne","","",412,null],[11,"clone","","",412,null],[11,"open","x11_dl::xinput","",413,{"inputs":[],"output":{"name":"result"}}],[11,"eq","","",414,null],[11,"ne","","",414,null],[11,"clone","","",414,null],[11,"eq","","",415,null],[11,"ne","","",415,null],[11,"clone","","",415,null],[11,"eq","","",416,null],[11,"ne","","",416,null],[11,"clone","","",416,null],[11,"eq","","",417,null],[11,"ne","","",417,null],[11,"clone","","",417,null],[11,"eq","","",418,null],[11,"ne","","",418,null],[11,"clone","","",418,null],[11,"eq","","",419,null],[11,"ne","","",419,null],[11,"clone","","",419,null],[11,"eq","","",420,null],[11,"ne","","",420,null],[11,"clone","","",420,null],[11,"eq","","",421,null],[11,"ne","","",421,null],[11,"clone","","",421,null],[11,"eq","","",422,null],[11,"ne","","",422,null],[11,"clone","","",422,null],[11,"eq","","",423,null],[11,"ne","","",423,null],[11,"clone","","",423,null],[11,"open","x11_dl::xinput2","",424,{"inputs":[],"output":{"name":"result"}}],[11,"clone","","",425,null],[11,"default","","",425,{"inputs":[],"output":{"name":"struct_unnamed1"}}],[11,"clone","","",426,null],[11,"default","","",426,{"inputs":[],"output":{"name":"struct_unnamed2"}}],[11,"clone","","",427,null],[11,"default","","",427,{"inputs":[],"output":{"name":"struct_unnamed3"}}],[11,"clone","","",428,null],[11,"default","","",428,{"inputs":[],"output":{"name":"struct_unnamed4"}}],[11,"_type","","",429,null],[11,"add","","",429,null],[11,"remove","","",429,null],[11,"attach","","",429,null],[11,"detach","","",429,null],[11,"clone","","",429,null],[11,"default","","",429,{"inputs":[],"output":{"name":"union_unnamed5"}}],[11,"clone","","",430,null],[11,"default","","",430,{"inputs":[],"output":{"name":"struct_unnamed6"}}],[11,"clone","","",431,null],[11,"default","","",431,{"inputs":[],"output":{"name":"struct_unnamed7"}}],[11,"clone","","",432,null],[11,"default","","",432,{"inputs":[],"output":{"name":"struct_unnamed8"}}],[11,"clone","","",433,null],[11,"default","","",433,{"inputs":[],"output":{"name":"struct_unnamed9"}}],[11,"clone","","",434,null],[11,"default","","",434,{"inputs":[],"output":{"name":"struct_unnamed10"}}],[11,"clone","","",435,null],[11,"default","","",435,{"inputs":[],"output":{"name":"struct_unnamed11"}}],[11,"clone","","",436,null],[11,"default","","",436,{"inputs":[],"output":{"name":"struct_unnamed12"}}],[11,"clone","","",437,null],[11,"default","","",437,{"inputs":[],"output":{"name":"struct_unnamed13"}}],[11,"clone","","",438,null],[11,"default","","",438,{"inputs":[],"output":{"name":"struct_unnamed14"}}],[11,"clone","","",439,null],[11,"default","","",439,{"inputs":[],"output":{"name":"struct_unnamed15"}}],[11,"clone","","",440,null],[11,"default","","",440,{"inputs":[],"output":{"name":"struct_unnamed16"}}],[11,"clone","","",441,null],[11,"default","","",441,{"inputs":[],"output":{"name":"struct_unnamed17"}}],[11,"clone","","",442,null],[11,"default","","",442,{"inputs":[],"output":{"name":"struct_unnamed18"}}],[11,"clone","","",443,null],[11,"default","","",443,{"inputs":[],"output":{"name":"struct_unnamed19"}}],[11,"clone","","",444,null],[11,"default","","",444,{"inputs":[],"output":{"name":"struct_unnamed20"}}],[11,"clone","","",445,null],[11,"default","","",445,{"inputs":[],"output":{"name":"struct_unnamed21"}}],[11,"clone","","",446,null],[11,"default","","",446,{"inputs":[],"output":{"name":"struct_unnamed22"}}],[11,"clone","","",447,null],[11,"default","","",447,{"inputs":[],"output":{"name":"struct_unnamed23"}}],[11,"clone","","",448,null],[11,"default","","",448,{"inputs":[],"output":{"name":"struct_unnamed24"}}],[11,"clone","","",449,null],[11,"default","","",449,{"inputs":[],"output":{"name":"struct_unnamed25"}}],[11,"clone","","",450,null],[11,"default","","",450,{"inputs":[],"output":{"name":"struct_unnamed26"}}],[11,"clone","","",451,null],[11,"default","","",451,{"inputs":[],"output":{"name":"struct_unnamed27"}}],[11,"clone","","",452,null],[11,"default","","",452,{"inputs":[],"output":{"name":"struct_unnamed28"}}],[11,"open","x11_dl::xlib","",453,{"inputs":[],"output":{"name":"result"}}],[11,"eq","","",454,null],[11,"ne","","",454,null],[11,"clone","","",454,null],[11,"get_type","","",454,null],[11,"as_mut","","",454,null],[11,"as_ref","","",454,null],[11,"from","","",454,{"inputs":[{"name":"xanyevent"}],"output":{"name":"xevent"}}],[11,"from","","",454,{"inputs":[{"name":"xanyevent"}],"output":{"name":"xevent"}}],[11,"from","","",455,{"inputs":[{"name":"xevent"}],"output":{"name":"xanyevent"}}],[11,"from","","",455,{"inputs":[{"name":"xevent"}],"output":{"name":"xanyevent"}}],[11,"as_mut","","",454,null],[11,"as_ref","","",454,null],[11,"from","","",454,{"inputs":[{"name":"xbuttonevent"}],"output":{"name":"xevent"}}],[11,"from","","",454,{"inputs":[{"name":"xbuttonevent"}],"output":{"name":"xevent"}}],[11,"from","","",456,{"inputs":[{"name":"xevent"}],"output":{"name":"xbuttonevent"}}],[11,"from","","",456,{"inputs":[{"name":"xevent"}],"output":{"name":"xbuttonevent"}}],[11,"as_mut","","",454,null],[11,"as_ref","","",454,null],[11,"from","","",454,{"inputs":[{"name":"xcirculateevent"}],"output":{"name":"xevent"}}],[11,"from","","",454,{"inputs":[{"name":"xcirculateevent"}],"output":{"name":"xevent"}}],[11,"from","","",457,{"inputs":[{"name":"xevent"}],"output":{"name":"xcirculateevent"}}],[11,"from","","",457,{"inputs":[{"name":"xevent"}],"output":{"name":"xcirculateevent"}}],[11,"as_mut","","",454,null],[11,"as_ref","","",454,null],[11,"from","","",454,{"inputs":[{"name":"xcirculaterequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",454,{"inputs":[{"name":"xcirculaterequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",458,{"inputs":[{"name":"xevent"}],"output":{"name":"xcirculaterequestevent"}}],[11,"from","","",458,{"inputs":[{"name":"xevent"}],"output":{"name":"xcirculaterequestevent"}}],[11,"as_mut","","",454,null],[11,"as_ref","","",454,null],[11,"from","","",454,{"inputs":[{"name":"xclientmessageevent"}],"output":{"name":"xevent"}}],[11,"from","","",454,{"inputs":[{"name":"xclientmessageevent"}],"output":{"name":"xevent"}}],[11,"from","","",459,{"inputs":[{"name":"xevent"}],"output":{"name":"xclientmessageevent"}}],[11,"from","","",459,{"inputs":[{"name":"xevent"}],"output":{"name":"xclientmessageevent"}}],[11,"as_mut","","",454,null],[11,"as_ref","","",454,null],[11,"from","","",454,{"inputs":[{"name":"xcolormapevent"}],"output":{"name":"xevent"}}],[11,"from","","",454,{"inputs":[{"name":"xcolormapevent"}],"output":{"name":"xevent"}}],[11,"from","","",460,{"inputs":[{"name":"xevent"}],"output":{"name":"xcolormapevent"}}],[11,"from","","",460,{"inputs":[{"name":"xevent"}],"output":{"name":"xcolormapevent"}}],[11,"as_mut","","",454,null],[11,"as_ref","","",454,null],[11,"from","","",454,{"inputs":[{"name":"xconfigureevent"}],"output":{"name":"xevent"}}],[11,"from","","",454,{"inputs":[{"name":"xconfigureevent"}],"output":{"name":"xevent"}}],[11,"from","","",461,{"inputs":[{"name":"xevent"}],"output":{"name":"xconfigureevent"}}],[11,"from","","",461,{"inputs":[{"name":"xevent"}],"output":{"name":"xconfigureevent"}}],[11,"as_mut","","",454,null],[11,"as_ref","","",454,null],[11,"from","","",454,{"inputs":[{"name":"xconfigurerequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",454,{"inputs":[{"name":"xconfigurerequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",462,{"inputs":[{"name":"xevent"}],"output":{"name":"xconfigurerequestevent"}}],[11,"from","","",462,{"inputs":[{"name":"xevent"}],"output":{"name":"xconfigurerequestevent"}}],[11,"as_mut","","",454,null],[11,"as_ref","","",454,null],[11,"from","","",454,{"inputs":[{"name":"xcreatewindowevent"}],"output":{"name":"xevent"}}],[11,"from","","",454,{"inputs":[{"name":"xcreatewindowevent"}],"output":{"name":"xevent"}}],[11,"from","","",463,{"inputs":[{"name":"xevent"}],"output":{"name":"xcreatewindowevent"}}],[11,"from","","",463,{"inputs":[{"name":"xevent"}],"output":{"name":"xcreatewindowevent"}}],[11,"as_mut","","",454,null],[11,"as_ref","","",454,null],[11,"from","","",454,{"inputs":[{"name":"xcrossingevent"}],"output":{"name":"xevent"}}],[11,"from","","",454,{"inputs":[{"name":"xcrossingevent"}],"output":{"name":"xevent"}}],[11,"from","","",464,{"inputs":[{"name":"xevent"}],"output":{"name":"xcrossingevent"}}],[11,"from","","",464,{"inputs":[{"name":"xevent"}],"output":{"name":"xcrossingevent"}}],[11,"as_mut","","",454,null],[11,"as_ref","","",454,null],[11,"from","","",454,{"inputs":[{"name":"xdestroywindowevent"}],"output":{"name":"xevent"}}],[11,"from","","",454,{"inputs":[{"name":"xdestroywindowevent"}],"output":{"name":"xevent"}}],[11,"from","","",465,{"inputs":[{"name":"xevent"}],"output":{"name":"xdestroywindowevent"}}],[11,"from","","",465,{"inputs":[{"name":"xevent"}],"output":{"name":"xdestroywindowevent"}}],[11,"as_mut","","",454,null],[11,"as_ref","","",454,null],[11,"from","","",454,{"inputs":[{"name":"xerrorevent"}],"output":{"name":"xevent"}}],[11,"from","","",454,{"inputs":[{"name":"xerrorevent"}],"output":{"name":"xevent"}}],[11,"from","","",466,{"inputs":[{"name":"xevent"}],"output":{"name":"xerrorevent"}}],[11,"from","","",466,{"inputs":[{"name":"xevent"}],"output":{"name":"xerrorevent"}}],[11,"as_mut","","",454,null],[11,"as_ref","","",454,null],[11,"from","","",454,{"inputs":[{"name":"xexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",454,{"inputs":[{"name":"xexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",467,{"inputs":[{"name":"xevent"}],"output":{"name":"xexposeevent"}}],[11,"from","","",467,{"inputs":[{"name":"xevent"}],"output":{"name":"xexposeevent"}}],[11,"as_mut","","",454,null],[11,"as_ref","","",454,null],[11,"from","","",454,{"inputs":[{"name":"xfocuschangeevent"}],"output":{"name":"xevent"}}],[11,"from","","",454,{"inputs":[{"name":"xfocuschangeevent"}],"output":{"name":"xevent"}}],[11,"from","","",468,{"inputs":[{"name":"xevent"}],"output":{"name":"xfocuschangeevent"}}],[11,"from","","",468,{"inputs":[{"name":"xevent"}],"output":{"name":"xfocuschangeevent"}}],[11,"as_mut","","",454,null],[11,"as_ref","","",454,null],[11,"from","","",454,{"inputs":[{"name":"xgenericeventcookie"}],"output":{"name":"xevent"}}],[11,"from","","",454,{"inputs":[{"name":"xgenericeventcookie"}],"output":{"name":"xevent"}}],[11,"from","","",469,{"inputs":[{"name":"xevent"}],"output":{"name":"xgenericeventcookie"}}],[11,"from","","",469,{"inputs":[{"name":"xevent"}],"output":{"name":"xgenericeventcookie"}}],[11,"as_mut","","",454,null],[11,"as_ref","","",454,null],[11,"from","","",454,{"inputs":[{"name":"xgraphicsexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",454,{"inputs":[{"name":"xgraphicsexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",470,{"inputs":[{"name":"xevent"}],"output":{"name":"xgraphicsexposeevent"}}],[11,"from","","",470,{"inputs":[{"name":"xevent"}],"output":{"name":"xgraphicsexposeevent"}}],[11,"as_mut","","",454,null],[11,"as_ref","","",454,null],[11,"from","","",454,{"inputs":[{"name":"xgravityevent"}],"output":{"name":"xevent"}}],[11,"from","","",454,{"inputs":[{"name":"xgravityevent"}],"output":{"name":"xevent"}}],[11,"from","","",471,{"inputs":[{"name":"xevent"}],"output":{"name":"xgravityevent"}}],[11,"from","","",471,{"inputs":[{"name":"xevent"}],"output":{"name":"xgravityevent"}}],[11,"as_mut","","",454,null],[11,"as_ref","","",454,null],[11,"from","","",454,{"inputs":[{"name":"xkeyevent"}],"output":{"name":"xevent"}}],[11,"from","","",454,{"inputs":[{"name":"xkeyevent"}],"output":{"name":"xevent"}}],[11,"from","","",472,{"inputs":[{"name":"xevent"}],"output":{"name":"xkeyevent"}}],[11,"from","","",472,{"inputs":[{"name":"xevent"}],"output":{"name":"xkeyevent"}}],[11,"as_mut","","",454,null],[11,"as_ref","","",454,null],[11,"from","","",454,{"inputs":[{"name":"xkeymapevent"}],"output":{"name":"xevent"}}],[11,"from","","",454,{"inputs":[{"name":"xkeymapevent"}],"output":{"name":"xevent"}}],[11,"from","","",473,{"inputs":[{"name":"xevent"}],"output":{"name":"xkeymapevent"}}],[11,"from","","",473,{"inputs":[{"name":"xevent"}],"output":{"name":"xkeymapevent"}}],[11,"as_mut","","",454,null],[11,"as_ref","","",454,null],[11,"from","","",454,{"inputs":[{"name":"xmapevent"}],"output":{"name":"xevent"}}],[11,"from","","",454,{"inputs":[{"name":"xmapevent"}],"output":{"name":"xevent"}}],[11,"from","","",474,{"inputs":[{"name":"xevent"}],"output":{"name":"xmapevent"}}],[11,"from","","",474,{"inputs":[{"name":"xevent"}],"output":{"name":"xmapevent"}}],[11,"as_mut","","",454,null],[11,"as_ref","","",454,null],[11,"from","","",454,{"inputs":[{"name":"xmappingevent"}],"output":{"name":"xevent"}}],[11,"from","","",454,{"inputs":[{"name":"xmappingevent"}],"output":{"name":"xevent"}}],[11,"from","","",475,{"inputs":[{"name":"xevent"}],"output":{"name":"xmappingevent"}}],[11,"from","","",475,{"inputs":[{"name":"xevent"}],"output":{"name":"xmappingevent"}}],[11,"as_mut","","",454,null],[11,"as_ref","","",454,null],[11,"from","","",454,{"inputs":[{"name":"xmaprequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",454,{"inputs":[{"name":"xmaprequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",476,{"inputs":[{"name":"xevent"}],"output":{"name":"xmaprequestevent"}}],[11,"from","","",476,{"inputs":[{"name":"xevent"}],"output":{"name":"xmaprequestevent"}}],[11,"as_mut","","",454,null],[11,"as_ref","","",454,null],[11,"from","","",454,{"inputs":[{"name":"xmotionevent"}],"output":{"name":"xevent"}}],[11,"from","","",454,{"inputs":[{"name":"xmotionevent"}],"output":{"name":"xevent"}}],[11,"from","","",477,{"inputs":[{"name":"xevent"}],"output":{"name":"xmotionevent"}}],[11,"from","","",477,{"inputs":[{"name":"xevent"}],"output":{"name":"xmotionevent"}}],[11,"as_mut","","",454,null],[11,"as_ref","","",454,null],[11,"from","","",454,{"inputs":[{"name":"xnoexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",454,{"inputs":[{"name":"xnoexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",478,{"inputs":[{"name":"xevent"}],"output":{"name":"xnoexposeevent"}}],[11,"from","","",478,{"inputs":[{"name":"xevent"}],"output":{"name":"xnoexposeevent"}}],[11,"as_mut","","",454,null],[11,"as_ref","","",454,null],[11,"from","","",454,{"inputs":[{"name":"xpropertyevent"}],"output":{"name":"xevent"}}],[11,"from","","",454,{"inputs":[{"name":"xpropertyevent"}],"output":{"name":"xevent"}}],[11,"from","","",479,{"inputs":[{"name":"xevent"}],"output":{"name":"xpropertyevent"}}],[11,"from","","",479,{"inputs":[{"name":"xevent"}],"output":{"name":"xpropertyevent"}}],[11,"as_mut","","",454,null],[11,"as_ref","","",454,null],[11,"from","","",454,{"inputs":[{"name":"xreparentevent"}],"output":{"name":"xevent"}}],[11,"from","","",454,{"inputs":[{"name":"xreparentevent"}],"output":{"name":"xevent"}}],[11,"from","","",480,{"inputs":[{"name":"xevent"}],"output":{"name":"xreparentevent"}}],[11,"from","","",480,{"inputs":[{"name":"xevent"}],"output":{"name":"xreparentevent"}}],[11,"as_mut","","",454,null],[11,"as_ref","","",454,null],[11,"from","","",454,{"inputs":[{"name":"xresizerequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",454,{"inputs":[{"name":"xresizerequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",481,{"inputs":[{"name":"xevent"}],"output":{"name":"xresizerequestevent"}}],[11,"from","","",481,{"inputs":[{"name":"xevent"}],"output":{"name":"xresizerequestevent"}}],[11,"as_mut","","",454,null],[11,"as_ref","","",454,null],[11,"from","","",454,{"inputs":[{"name":"xselectionclearevent"}],"output":{"name":"xevent"}}],[11,"from","","",454,{"inputs":[{"name":"xselectionclearevent"}],"output":{"name":"xevent"}}],[11,"from","","",482,{"inputs":[{"name":"xevent"}],"output":{"name":"xselectionclearevent"}}],[11,"from","","",482,{"inputs":[{"name":"xevent"}],"output":{"name":"xselectionclearevent"}}],[11,"as_mut","","",454,null],[11,"as_ref","","",454,null],[11,"from","","",454,{"inputs":[{"name":"xselectionevent"}],"output":{"name":"xevent"}}],[11,"from","","",454,{"inputs":[{"name":"xselectionevent"}],"output":{"name":"xevent"}}],[11,"from","","",483,{"inputs":[{"name":"xevent"}],"output":{"name":"xselectionevent"}}],[11,"from","","",483,{"inputs":[{"name":"xevent"}],"output":{"name":"xselectionevent"}}],[11,"as_mut","","",454,null],[11,"as_ref","","",454,null],[11,"from","","",454,{"inputs":[{"name":"xselectionrequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",454,{"inputs":[{"name":"xselectionrequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",484,{"inputs":[{"name":"xevent"}],"output":{"name":"xselectionrequestevent"}}],[11,"from","","",484,{"inputs":[{"name":"xevent"}],"output":{"name":"xselectionrequestevent"}}],[11,"as_mut","","",454,null],[11,"as_ref","","",454,null],[11,"from","","",454,{"inputs":[{"name":"xunmapevent"}],"output":{"name":"xevent"}}],[11,"from","","",454,{"inputs":[{"name":"xunmapevent"}],"output":{"name":"xevent"}}],[11,"from","","",485,{"inputs":[{"name":"xevent"}],"output":{"name":"xunmapevent"}}],[11,"from","","",485,{"inputs":[{"name":"xevent"}],"output":{"name":"xunmapevent"}}],[11,"as_mut","","",454,null],[11,"as_ref","","",454,null],[11,"from","","",454,{"inputs":[{"name":"xvisibilityevent"}],"output":{"name":"xevent"}}],[11,"from","","",454,{"inputs":[{"name":"xvisibilityevent"}],"output":{"name":"xevent"}}],[11,"from","","",486,{"inputs":[{"name":"xevent"}],"output":{"name":"xvisibilityevent"}}],[11,"from","","",486,{"inputs":[{"name":"xevent"}],"output":{"name":"xvisibilityevent"}}],[11,"eq","","",455,null],[11,"ne","","",455,null],[11,"clone","","",455,null],[11,"eq","","",456,null],[11,"ne","","",456,null],[11,"clone","","",456,null],[11,"eq","","",457,null],[11,"ne","","",457,null],[11,"clone","","",457,null],[11,"eq","","",458,null],[11,"ne","","",458,null],[11,"clone","","",458,null],[11,"eq","","",459,null],[11,"ne","","",459,null],[11,"clone","","",459,null],[11,"eq","","",460,null],[11,"ne","","",460,null],[11,"clone","","",460,null],[11,"eq","","",461,null],[11,"ne","","",461,null],[11,"clone","","",461,null],[11,"eq","","",462,null],[11,"ne","","",462,null],[11,"clone","","",462,null],[11,"eq","","",463,null],[11,"ne","","",463,null],[11,"clone","","",463,null],[11,"eq","","",464,null],[11,"ne","","",464,null],[11,"clone","","",464,null],[11,"eq","","",465,null],[11,"ne","","",465,null],[11,"clone","","",465,null],[11,"eq","","",466,null],[11,"ne","","",466,null],[11,"clone","","",466,null],[11,"eq","","",467,null],[11,"ne","","",467,null],[11,"clone","","",467,null],[11,"eq","","",468,null],[11,"ne","","",468,null],[11,"clone","","",468,null],[11,"eq","","",470,null],[11,"ne","","",470,null],[11,"clone","","",470,null],[11,"eq","","",471,null],[11,"ne","","",471,null],[11,"clone","","",471,null],[11,"eq","","",472,null],[11,"ne","","",472,null],[11,"clone","","",472,null],[11,"eq","","",473,null],[11,"ne","","",473,null],[11,"clone","","",473,null],[11,"eq","","",474,null],[11,"ne","","",474,null],[11,"clone","","",474,null],[11,"eq","","",475,null],[11,"ne","","",475,null],[11,"clone","","",475,null],[11,"eq","","",476,null],[11,"ne","","",476,null],[11,"clone","","",476,null],[11,"eq","","",477,null],[11,"ne","","",477,null],[11,"clone","","",477,null],[11,"eq","","",478,null],[11,"ne","","",478,null],[11,"clone","","",478,null],[11,"eq","","",479,null],[11,"ne","","",479,null],[11,"clone","","",479,null],[11,"eq","","",480,null],[11,"ne","","",480,null],[11,"clone","","",480,null],[11,"eq","","",481,null],[11,"ne","","",481,null],[11,"clone","","",481,null],[11,"eq","","",482,null],[11,"ne","","",482,null],[11,"clone","","",482,null],[11,"eq","","",483,null],[11,"ne","","",483,null],[11,"clone","","",483,null],[11,"eq","","",484,null],[11,"ne","","",484,null],[11,"clone","","",484,null],[11,"eq","","",485,null],[11,"ne","","",485,null],[11,"clone","","",485,null],[11,"eq","","",486,null],[11,"ne","","",486,null],[11,"clone","","",486,null],[11,"eq","","",487,null],[11,"ne","","",487,null],[11,"clone","","",487,null],[11,"eq","","",488,null],[11,"ne","","",488,null],[11,"clone","","",488,null],[11,"eq","","",489,null],[11,"ne","","",489,null],[11,"clone","","",489,null],[11,"eq","","",490,null],[11,"ne","","",490,null],[11,"clone","","",490,null],[11,"eq","","",491,null],[11,"ne","","",491,null],[11,"clone","","",491,null],[11,"eq","","",492,null],[11,"ne","","",492,null],[11,"clone","","",492,null],[11,"eq","","",493,null],[11,"ne","","",493,null],[11,"clone","","",493,null],[11,"eq","","",494,null],[11,"ne","","",494,null],[11,"clone","","",494,null],[11,"eq","","",495,null],[11,"ne","","",495,null],[11,"clone","","",495,null],[11,"eq","","",496,null],[11,"ne","","",496,null],[11,"clone","","",496,null],[11,"eq","","",497,null],[11,"ne","","",497,null],[11,"clone","","",497,null],[11,"eq","","",498,null],[11,"ne","","",498,null],[11,"clone","","",498,null],[11,"eq","","",499,null],[11,"ne","","",499,null],[11,"clone","","",499,null],[11,"eq","","",500,null],[11,"ne","","",500,null],[11,"clone","","",500,null],[11,"eq","","",501,null],[11,"ne","","",501,null],[11,"clone","","",501,null],[11,"eq","","",502,null],[11,"ne","","",502,null],[11,"clone","","",502,null],[11,"eq","","",503,null],[11,"ne","","",503,null],[11,"clone","","",503,null],[11,"eq","","",504,null],[11,"ne","","",504,null],[11,"clone","","",504,null],[11,"eq","","",505,null],[11,"ne","","",505,null],[11,"clone","","",505,null],[11,"eq","","",469,null],[11,"ne","","",469,null],[11,"clone","","",469,null],[11,"eq","","",506,null],[11,"ne","","",506,null],[11,"clone","","",506,null],[11,"eq","","",507,null],[11,"ne","","",507,null],[11,"clone","","",507,null],[11,"eq","","",508,null],[11,"ne","","",508,null],[11,"clone","","",508,null],[11,"eq","","",509,null],[11,"ne","","",509,null],[11,"clone","","",509,null],[11,"eq","","",510,null],[11,"ne","","",510,null],[11,"clone","","",510,null],[11,"eq","","",511,null],[11,"ne","","",511,null],[11,"clone","","",511,null],[11,"eq","","",512,null],[11,"ne","","",512,null],[11,"clone","","",512,null],[11,"eq","","",513,null],[11,"ne","","",513,null],[11,"clone","","",513,null],[11,"eq","","",514,null],[11,"ne","","",514,null],[11,"clone","","",514,null],[11,"eq","","",515,null],[11,"ne","","",515,null],[11,"clone","","",515,null],[11,"eq","","",516,null],[11,"ne","","",516,null],[11,"clone","","",516,null],[11,"eq","","",517,null],[11,"ne","","",517,null],[11,"clone","","",517,null],[11,"eq","","",518,null],[11,"ne","","",518,null],[11,"clone","","",518,null],[11,"eq","","",519,null],[11,"ne","","",519,null],[11,"clone","","",519,null],[11,"eq","","",520,null],[11,"ne","","",520,null],[11,"clone","","",520,null],[11,"eq","","",521,null],[11,"ne","","",521,null],[11,"clone","","",521,null],[11,"eq","","",522,null],[11,"ne","","",522,null],[11,"clone","","",522,null],[11,"eq","","",523,null],[11,"ne","","",523,null],[11,"clone","","",523,null],[11,"eq","","",524,null],[11,"ne","","",524,null],[11,"clone","","",524,null],[11,"eq","","",525,null],[11,"ne","","",525,null],[11,"clone","","",525,null],[11,"eq","","",526,null],[11,"ne","","",526,null],[11,"clone","","",526,null],[11,"eq","","",527,null],[11,"ne","","",527,null],[11,"clone","","",527,null],[11,"eq","","",528,null],[11,"ne","","",528,null],[11,"clone","","",528,null],[11,"eq","","",529,null],[11,"ne","","",529,null],[11,"clone","","",529,null],[11,"eq","","",530,null],[11,"ne","","",530,null],[11,"clone","","",530,null],[11,"eq","","",531,null],[11,"ne","","",531,null],[11,"clone","","",531,null],[11,"eq","","",532,null],[11,"ne","","",532,null],[11,"clone","","",532,null],[11,"eq","","",533,null],[11,"ne","","",533,null],[11,"default","","",533,{"inputs":[],"output":{"name":"clientmessagedata"}}],[11,"clone","","",533,null],[11,"as_bytes","","",533,null],[11,"as_bytes_mut","","",533,null],[11,"as_longs","","",533,null],[11,"as_longs_mut","","",533,null],[11,"as_shorts","","",533,null],[11,"as_shorts_mut","","",533,null],[11,"get_byte","","",533,null],[11,"get_long","","",533,null],[11,"get_short","","",533,null],[11,"new","","",533,{"inputs":[],"output":{"name":"clientmessagedata"}}],[11,"set_byte","","",533,null],[11,"set_long","","",533,null],[11,"set_short","","",533,null],[11,"as_mut","","",533,null],[11,"as_ref","","",533,null],[11,"from","","",533,null],[11,"as_mut","","",533,null],[11,"as_ref","","",533,null],[11,"from","","",533,null],[11,"as_mut","","",533,null],[11,"as_ref","","",533,null],[11,"from","","",533,null],[11,"as_mut","","",533,null],[11,"as_ref","","",533,null],[11,"from","","",533,null],[11,"as_mut","","",533,null],[11,"as_ref","","",533,null],[11,"from","","",533,null],[11,"as_mut","","",533,null],[11,"as_ref","","",533,null],[11,"from","","",533,null],[11,"clone","","",534,null],[11,"eq","","",534,null],[11,"open","x11_dl::xmu","",535,{"inputs":[],"output":{"name":"result"}}],[11,"open","x11_dl::xrecord","",536,{"inputs":[],"output":{"name":"result"}}],[11,"eq","","",537,null],[11,"ne","","",537,null],[11,"clone","","",537,null],[11,"eq","","",538,null],[11,"ne","","",538,null],[11,"clone","","",538,null],[11,"eq","","",539,null],[11,"ne","","",539,null],[11,"clone","","",539,null],[11,"eq","","",540,null],[11,"ne","","",540,null],[11,"clone","","",540,null],[11,"eq","","",541,null],[11,"ne","","",541,null],[11,"clone","","",541,null],[11,"eq","","",542,null],[11,"ne","","",542,null],[11,"clone","","",542,null],[11,"eq","","",543,null],[11,"ne","","",543,null],[11,"clone","","",543,null],[11,"open","x11_dl::xrender","",544,{"inputs":[],"output":{"name":"result"}}],[11,"eq","","",545,null],[11,"ne","","",545,null],[11,"clone","","",545,null],[11,"eq","","",546,null],[11,"ne","","",546,null],[11,"clone","","",546,null],[11,"eq","","",547,null],[11,"ne","","",547,null],[11,"clone","","",547,null],[11,"eq","","",548,null],[11,"ne","","",548,null],[11,"clone","","",548,null],[11,"eq","","",549,null],[11,"ne","","",549,null],[11,"clone","","",549,null],[11,"eq","","",550,null],[11,"ne","","",550,null],[11,"clone","","",550,null],[11,"eq","","",551,null],[11,"ne","","",551,null],[11,"clone","","",551,null],[11,"eq","","",552,null],[11,"ne","","",552,null],[11,"clone","","",552,null],[11,"eq","","",553,null],[11,"ne","","",553,null],[11,"clone","","",553,null],[11,"eq","","",554,null],[11,"ne","","",554,null],[11,"clone","","",554,null],[11,"eq","","",555,null],[11,"ne","","",555,null],[11,"clone","","",555,null],[11,"eq","","",556,null],[11,"ne","","",556,null],[11,"clone","","",556,null],[11,"eq","","",557,null],[11,"ne","","",557,null],[11,"clone","","",557,null],[11,"eq","","",558,null],[11,"ne","","",558,null],[11,"clone","","",558,null],[11,"eq","","",559,null],[11,"ne","","",559,null],[11,"clone","","",559,null],[11,"eq","","",560,null],[11,"ne","","",560,null],[11,"clone","","",560,null],[11,"eq","","",561,null],[11,"ne","","",561,null],[11,"clone","","",561,null],[11,"eq","","",562,null],[11,"ne","","",562,null],[11,"clone","","",562,null],[11,"eq","","",563,null],[11,"ne","","",563,null],[11,"clone","","",563,null],[11,"eq","","",564,null],[11,"ne","","",564,null],[11,"clone","","",564,null],[11,"eq","","",565,null],[11,"ne","","",565,null],[11,"clone","","",565,null],[11,"eq","","",566,null],[11,"ne","","",566,null],[11,"clone","","",566,null],[11,"eq","","",567,null],[11,"ne","","",567,null],[11,"clone","","",567,null],[11,"open","x11_dl::xt","",568,{"inputs":[],"output":{"name":"result"}}],[11,"open","x11_dl::xtest","",569,{"inputs":[],"output":{"name":"result"}}],[11,"open","x11_dl::xrandr","",570,{"inputs":[],"output":{"name":"result"}}],[11,"eq","","",571,null],[11,"ne","","",571,null],[11,"clone","","",571,null],[11,"eq","","",572,null],[11,"ne","","",572,null],[11,"clone","","",572,null],[11,"eq","","",573,null],[11,"ne","","",573,null],[11,"clone","","",573,null],[11,"eq","","",574,null],[11,"ne","","",574,null],[11,"clone","","",574,null],[11,"eq","","",575,null],[11,"ne","","",575,null],[11,"clone","","",575,null],[11,"eq","","",576,null],[11,"ne","","",576,null],[11,"clone","","",576,null],[11,"eq","","",577,null],[11,"ne","","",577,null],[11,"clone","","",577,null],[11,"eq","","",578,null],[11,"ne","","",578,null],[11,"clone","","",578,null],[11,"eq","","",579,null],[11,"ne","","",579,null],[11,"clone","","",579,null],[11,"eq","","",580,null],[11,"ne","","",580,null],[11,"clone","","",580,null],[11,"eq","","",581,null],[11,"ne","","",581,null],[11,"clone","","",581,null],[11,"eq","","",582,null],[11,"ne","","",582,null],[11,"clone","","",582,null],[11,"eq","","",583,null],[11,"ne","","",583,null],[11,"clone","","",583,null],[11,"eq","","",584,null],[11,"ne","","",584,null],[11,"clone","","",584,null],[11,"eq","","",585,null],[11,"ne","","",585,null],[11,"clone","","",585,null],[11,"eq","","",586,null],[11,"ne","","",586,null],[11,"clone","","",586,null],[11,"eq","","",587,null],[11,"ne","","",587,null],[11,"clone","","",587,null],[11,"eq","","",588,null],[11,"ne","","",588,null],[11,"clone","","",588,null],[11,"eq","","",589,null],[11,"ne","","",589,null],[11,"clone","","",589,null],[11,"eq","","",590,null],[11,"ne","","",590,null],[11,"clone","","",590,null],[11,"open","","",591,{"inputs":[],"output":{"name":"result"}}],[11,"fmt","glutin","",7,null],[11,"clone","","",7,null],[11,"clone","","",8,null],[11,"eq","","",8,null],[11,"hash","","",8,null],[11,"fmt","","",8,null],[11,"clone","","",0,null],[11,"fmt","","",0,null],[11,"clone","","",9,null],[11,"eq","","",9,null],[11,"hash","","",9,null],[11,"fmt","","",9,null],[11,"clone","","",10,null],[11,"eq","","",10,null],[11,"ne","","",10,null],[11,"hash","","",10,null],[11,"fmt","","",10,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"clone","","",11,null],[11,"fmt","","",11,null],[11,"clone","","",12,null],[11,"eq","","",12,null],[11,"hash","","",12,null],[11,"fmt","","",12,null],[11,"new","","Initializes a new `HeadlessRendererBuilder` with default values.",1,{"inputs":[{"name":"u32"},{"name":"u32"}],"output":{"name":"headlessrendererbuilder"}}],[11,"with_gl","","Sets how the backend should choose the OpenGL API and version.",1,null],[11,"with_gl_debug_flag","","Sets the *debug* flag for the OpenGL context.",1,null],[11,"with_gl_robustness","","Sets the robustness of the OpenGL context. See the docs of `Robustness`.",1,null],[11,"build","","Builds the headless context.",1,null],[11,"build_strict","","Builds the headless context.",1,null],[11,"make_current","","Creates a new OpenGL context\nSets the context as the current context.",592,null],[11,"is_current","","Returns true if this context is the current one in this thread.",592,null],[11,"get_proc_address","","Returns the address of an OpenGL function.",592,null],[11,"get_api","","Returns the API that is currently provided by this window.",592,null],[11,"set_window_resize_callback","","",592,null],[11,"make_current","","",592,null],[11,"is_current","","",592,null],[11,"get_proc_address","","",592,null],[11,"swap_buffers","","",592,null],[11,"get_api","","",592,null],[11,"get_pixel_format","","",592,null],[11,"new","","Initializes a new `WindowBuilder` with default values.",2,{"inputs":[],"output":{"name":"windowbuilder"}}],[11,"with_dimensions","","Requests the window to be of specific dimensions.",2,null],[11,"with_min_dimensions","","Sets a minimum dimension size for the window",2,null],[11,"with_max_dimensions","","Sets a maximum dimension size for the window",2,null],[11,"with_title","","Requests a specific title for the window.",2,null],[11,"with_fullscreen","","Requests fullscreen mode.",2,null],[11,"with_shared_lists","","The created window will share all its OpenGL objects with the window in the parameter.",2,null],[11,"with_gl","","Sets how the backend should choose the OpenGL API and version.",2,null],[11,"with_gl_profile","","Sets the desired OpenGL context profile.",2,null],[11,"with_gl_debug_flag","","Sets the *debug* flag for the OpenGL context.",2,null],[11,"with_gl_robustness","","Sets the robustness of the OpenGL context. See the docs of `Robustness`.",2,null],[11,"with_vsync","","Requests that the window has vsync enabled.",2,null],[11,"with_visibility","","Sets whether the window will be initially hidden or visible.",2,null],[11,"with_multisampling","","Sets the multisampling level to request.",2,null],[11,"with_depth_buffer","","Sets the number of bits in the depth buffer.",2,null],[11,"with_stencil_buffer","","Sets the number of bits in the stencil buffer.",2,null],[11,"with_pixel_format","","Sets the number of bits in the color buffer.",2,null],[11,"with_stereoscopy","","Request the backend to be stereoscopic.",2,null],[11,"with_srgb","","Sets whether sRGB should be enabled on the window. `None` means &quot;I don&#39;t care&quot;.",2,null],[11,"with_transparency","","Sets whether the background of the window should be transparent.",2,null],[11,"with_decorations","","Sets whether the window should have a border, a title bar, etc.",2,null],[11,"with_multitouch","","Enables multitouch",2,null],[11,"build","","Builds the window.",2,null],[11,"build_strict","","Builds the window.",2,null],[11,"default","","",593,{"inputs":[],"output":{"name":"window"}}],[11,"new","","Creates a new OpenGL context, and a Window for platforms where this is appropriate.",593,{"inputs":[],"output":{"name":"result"}}],[11,"set_title","","Modifies the title of the window.",593,null],[11,"show","","Shows the window if it was hidden.",593,null],[11,"hide","","Hides the window if it was visible.",593,null],[11,"get_position","","Returns the position of the top-left hand corner of the window relative to the\n top-left hand corner of the desktop.",593,null],[11,"set_position","","Modifies the position of the window.",593,null],[11,"get_inner_size","","Returns the size in points of the client area of the window.",593,null],[11,"get_inner_size_points","","Returns the size in points of the client area of the window.",593,null],[11,"get_inner_size_pixels","","Returns the size in pixels of the client area of the window.",593,null],[11,"get_outer_size","","Returns the size in pixels of the window.",593,null],[11,"set_inner_size","","Modifies the inner size of the window.",593,null],[11,"poll_events","","Returns an iterator that poll for the next event in the window&#39;s events queue.\nReturns `None` if there is no event in the queue.",593,null],[11,"wait_events","","Returns an iterator that returns events one by one, blocking if necessary until one is\navailable.",593,null],[11,"make_current","","Sets the context as the current context.",593,null],[11,"is_current","","Returns true if this context is the current one in this thread.",593,null],[11,"get_proc_address","","Returns the address of an OpenGL function.",593,null],[11,"swap_buffers","","Swaps the buffers in case of double or triple buffering.",593,null],[11,"platform_display","","DEPRECATED. Gets the native platform specific display for this window.\nThis is typically only required when integrating with\nother libraries that need this information.",593,null],[11,"platform_window","","DEPRECATED. Gets the native platform specific window handle. This is\ntypically only required when integrating with other libraries\nthat need this information.",593,null],[11,"get_api","","Returns the API that is currently provided by this window.",593,null],[11,"get_pixel_format","","Returns the pixel format of this window.",593,null],[11,"create_window_proxy","","Create a window proxy for this window, that can be freely\npassed to different threads.",593,null],[11,"set_window_resize_callback","","Sets a resize callback that is called by Mac (and potentially other\noperating systems) during resize operations. This can be used to repaint\nduring window resizing.",593,null],[11,"set_cursor","","Modifies the mouse cursor of the window.\nHas no effect on Android.",593,null],[11,"hidpi_factor","","Returns the ratio between the backing framebuffer resolution and the\nwindow size in screen pixels. This is typically one for a normal display\nand two for a retina display.",593,null],[11,"set_cursor_position","","Changes the position of the cursor in window coordinates.",593,null],[11,"set_cursor_state","","Sets how glutin handles the cursor. See the documentation of `CursorState` for details.",593,null],[11,"make_current","","",593,null],[11,"is_current","","",593,null],[11,"get_proc_address","","",593,null],[11,"swap_buffers","","",593,null],[11,"get_api","","",593,null],[11,"get_pixel_format","","",593,null],[11,"clone","","",594,null],[11,"wakeup_event_loop","","Triggers a blocked event loop to wake up. This is\ntypically called when another thread wants to wake\nup the blocked rendering thread to cause a refresh.",594,null],[11,"next","","",595,null],[11,"size_hint","","",595,null],[11,"next","","",596,null],[11,"size_hint","","",596,null],[11,"next","","",597,null],[11,"size_hint","","",597,null],[11,"get_name","","Returns a human-readable name of the monitor.",598,null],[11,"get_native_identifier","","Returns the native platform identifier for this monitor.",598,null],[11,"get_dimensions","","Returns the number of pixels currently displayed on the monitor.",598,null],[0,"os","","Contains traits with platform-specific methods in them.",null,null],[0,"unix","glutin::os","",null,null],[8,"WindowExt","glutin::os::unix","Additional methods on `Window` that are specific to Unix.",null,null],[10,"get_xlib_window","","Returns a pointer to the `Window` object of xlib that is used by this window.",599,null],[10,"get_xlib_display","","Returns a pointer to the `Display` object of xlib that is used by this window.",599,null],[8,"WindowBuilderExt","","Additional methods on `WindowBuilder` that are specific to Unix.",null,null],[11,"get_xlib_window","glutin","",593,null],[11,"get_xlib_display","","",593,null],[11,"eq","","",13,null],[11,"ne","","",13,null],[11,"clone","","",13,null],[6,"ScanCode","","",null,null],[7,"GL_CORE","","The minimum core profile GL context. Useful for getting the minimum\nrequired GL version while still running on OSX, which often forbids\nthe compatibility profile features.",null,null],[8,"GlContext","","Trait that describes objects that have access to an OpenGL context.",null,null],[10,"make_current","","Sets the context as the current context.",600,null],[10,"is_current","","Returns true if this context is the current one in this thread.",600,null],[10,"get_proc_address","","Returns the address of an OpenGL function.",600,null],[10,"swap_buffers","","Swaps the buffers in case of double or triple buffering.",600,null],[10,"get_api","","Returns the OpenGL API being used.",600,null],[10,"get_pixel_format","","Returns the pixel format of the main framebuffer of the context.",600,null],[11,"fmt","","",14,null],[11,"fmt","","",14,null],[11,"description","","",14,null],[11,"cause","","",14,null],[11,"fmt","","",15,null],[11,"fmt","","",15,null],[11,"description","","",15,null],[11,"eq","","",16,null],[11,"clone","","",16,null],[11,"fmt","","",16,null],[11,"eq","","",17,null],[11,"clone","","",17,null],[11,"fmt","","",17,null],[11,"clone","","",18,null],[11,"fmt","","",18,null],[11,"to_gl_version","","Extract the desktop GL version, if any.",18,null],[11,"eq","","",19,null],[11,"clone","","",19,null],[11,"fmt","","",19,null],[11,"eq","","",20,null],[11,"clone","","",20,null],[11,"fmt","","",20,null],[11,"clone","","",21,null],[11,"fmt","","",21,null],[11,"clone","","",22,null],[11,"fmt","","",22,null],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"fmt","","",4,null],[11,"clone","","",4,null],[11,"default","","",4,{"inputs":[],"output":{"name":"pixelformatrequirements"}}],[11,"clone","","",5,null],[11,"default","","",5,{"inputs":[],"output":{"name":"windowattributes"}}],[11,"clone","","",6,null],[11,"map_sharing","","Turns the `sharing` parameter into another type by calling a closure.",6,null],[11,"default","","",6,{"inputs":[],"output":{"name":"glattributes"}}]],"paths":[[3,"Touch"],[3,"HeadlessRendererBuilder"],[3,"WindowBuilder"],[3,"PixelFormat"],[3,"PixelFormatRequirements"],[3,"WindowAttributes"],[3,"GlAttributes"],[4,"Event"],[4,"TouchPhase"],[4,"ElementState"],[4,"MouseButton"],[4,"MouseScrollDelta"],[4,"VirtualKeyCode"],[4,"NativeMonitorId"],[4,"CreationError"],[4,"ContextError"],[4,"Api"],[4,"GlProfile"],[4,"GlRequest"],[4,"Robustness"],[4,"ReleaseBehavior"],[4,"MouseCursor"],[4,"CursorState"],[3,"Wrapping"],[3,"ParseFloatError"],[4,"FpCategory"],[3,"TryFromIntError"],[3,"ParseIntError"],[3,"NonZero"],[3,"Unique"],[3,"Shared"],[3,"PhantomData"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"RangeInclusive"],[3,"RangeToInclusive"],[4,"Ordering"],[8,"Any"],[3,"TypeId"],[3,"AtomicBool"],[3,"AtomicPtr"],[4,"Ordering"],[3,"AtomicI8"],[3,"AtomicU8"],[3,"AtomicI16"],[3,"AtomicU16"],[3,"AtomicI32"],[3,"AtomicU32"],[3,"AtomicI64"],[3,"AtomicU64"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"Ref"],[3,"RefMut"],[3,"UnsafeCell"],[3,"EscapeUnicode"],[3,"EscapeDefault"],[3,"EncodeUtf8"],[3,"EncodeUtf16"],[3,"StepBy"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[4,"Option"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[4,"SearchStep"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"SipHasher13"],[3,"SipHasher24"],[3,"SipHasher"],[3,"BuildHasherDefault"],[4,"Alignment"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Error"],[3,"Arguments"],[3,"Formatter"],[3,"Box"],[3,"FromUtf8Error"],[3,"FromUtf16Error"],[4,"ParseError"],[3,"DecodeUtf16Error"],[8,"Error"],[3,"EscapeDefault"],[4,"LocalKeyState"],[3,"LocalKey"],[3,"Key"],[3,"Key"],[3,"Builder"],[3,"Thread"],[3,"JoinHandle"],[3,"HashMap"],[3,"Iter"],[3,"Keys"],[3,"Values"],[3,"IterMut"],[3,"IntoIter"],[3,"ValuesMut"],[3,"Drain"],[4,"Entry"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"RandomState"],[3,"DefaultHasher"],[3,"HashSet"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"],[3,"PeekMut"],[3,"BinaryHeap"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Vec"],[3,"VecDeque"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"Iter"],[3,"IntoIter"],[3,"LinkedList"],[3,"IterMut"],[3,"FrontPlace"],[3,"BackPlace"],[3,"Vars"],[3,"VarsOs"],[4,"VarError"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"ArgsOs"],[3,"CString"],[3,"CStr"],[3,"NulError"],[3,"FromBytesWithNulError"],[3,"IntoStringError"],[3,"Error"],[3,"OsString"],[3,"OsStr"],[4,"Cow"],[3,"String"],[3,"Metadata"],[3,"OpenOptions"],[3,"Permissions"],[3,"FileType"],[3,"File"],[3,"ReadDir"],[3,"DirEntry"],[3,"DirBuilder"],[3,"BufReader"],[3,"IntoInnerError"],[3,"BufWriter"],[3,"LineWriter"],[3,"Cursor"],[4,"ErrorKind"],[3,"Empty"],[3,"Repeat"],[3,"Sink"],[3,"Stdin"],[3,"StdinLock"],[3,"Stdout"],[3,"StdoutLock"],[3,"Stderr"],[3,"StderrLock"],[4,"SeekFrom"],[3,"Chain"],[3,"Take"],[3,"Bytes"],[4,"CharsError"],[3,"Chars"],[3,"Split"],[3,"Lines"],[4,"IpAddr"],[4,"Ipv6MulticastScope"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[4,"SocketAddr"],[3,"SocketAddrV4"],[3,"SocketAddrV6"],[3,"TcpStream"],[3,"TcpListener"],[3,"Incoming"],[3,"UdpSocket"],[3,"AddrParseError"],[4,"Shutdown"],[3,"LookupHost"],[3,"stat"],[3,"Command"],[3,"ExitStatus"],[3,"Stdio"],[3,"ChildStdin"],[3,"ChildStdout"],[3,"ChildStderr"],[3,"SocketAddr"],[3,"UnixStream"],[3,"UnixListener"],[3,"Incoming"],[3,"UnixDatagram"],[3,"AssertUnwindSafe"],[4,"Prefix"],[3,"PrefixComponent"],[4,"Component"],[3,"Components"],[3,"Iter"],[3,"PathBuf"],[3,"Path"],[3,"StripPrefixError"],[3,"Display"],[3,"Output"],[3,"Child"],[3,"Select"],[3,"Handle"],[3,"SendError"],[3,"RecvError"],[4,"TryRecvError"],[4,"RecvTimeoutError"],[4,"TrySendError"],[3,"Sender"],[3,"SyncSender"],[3,"Receiver"],[3,"Iter"],[3,"IntoIter"],[3,"Barrier"],[3,"BarrierWaitResult"],[3,"WaitTimeoutResult"],[3,"Condvar"],[3,"StaticCondvar"],[3,"Mutex"],[3,"StaticMutex"],[3,"MutexGuard"],[3,"Once"],[3,"OnceState"],[3,"RwLock"],[3,"StaticRwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"Duration"],[3,"Instant"],[3,"SystemTime"],[3,"SystemTimeError"],[3,"PoisonError"],[4,"TryLockError"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"fd_set"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"passwd"],[3,"statvfs"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"fsid_t"],[3,"mq_attr"],[3,"cpu_set_t"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"termios"],[3,"flock"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"sigset_t"],[3,"sysinfo"],[3,"stat"],[3,"stat64"],[3,"pthread_attr_t"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"PanicInfo"],[3,"Location"],[3,"ToLowercase"],[3,"ToUppercase"],[3,"DecodeUtf16"],[3,"Rc"],[3,"Weak"],[3,"ExchangeHeapSingleton"],[3,"IntermediateBox"],[3,"EncodeUtf16"],[3,"Drain"],[3,"IntoIter"],[3,"Drain"],[3,"OpenError"],[4,"OpenErrorKind"],[3,"Glx"],[3,"Xcursor"],[3,"_XcursorAnimate"],[3,"_XcursorChunkHeader"],[3,"_XcursorComment"],[3,"_XcursorComments"],[3,"_XcursorCursors"],[3,"_XcursorFile"],[3,"_XcursorFileHeader"],[3,"_XcursorFileToc"],[3,"_XcursorImage"],[3,"_XcursorImages"],[3,"Xf86vmode"],[3,"XF86VidModeGamma"],[3,"XF86VidModeModeInfo"],[3,"XF86VidModeModeLine"],[3,"XF86VidModeMonitor"],[3,"XF86VidModeNotifyEvent"],[3,"XF86VidModeSyncRange"],[3,"Xlib"],[3,"XineramaScreenInfo"],[3,"XPanoramiXInfo"],[3,"XInput"],[3,"XDevice"],[3,"XDeviceControl"],[3,"XDeviceInfo"],[3,"XDeviceState"],[3,"XDeviceTimeCoord"],[3,"XExtensionVersion"],[3,"XFeedbackControl"],[3,"XFeedbackState"],[3,"XInputClass"],[3,"XInputClassInfo"],[3,"XInput2"],[3,"Struct_Unnamed1"],[3,"Struct_Unnamed2"],[3,"Struct_Unnamed3"],[3,"Struct_Unnamed4"],[3,"Union_Unnamed5"],[3,"Struct_Unnamed6"],[3,"Struct_Unnamed7"],[3,"Struct_Unnamed8"],[3,"Struct_Unnamed9"],[3,"Struct_Unnamed10"],[3,"Struct_Unnamed11"],[3,"Struct_Unnamed12"],[3,"Struct_Unnamed13"],[3,"Struct_Unnamed14"],[3,"Struct_Unnamed15"],[3,"Struct_Unnamed16"],[3,"Struct_Unnamed17"],[3,"Struct_Unnamed18"],[3,"Struct_Unnamed19"],[3,"Struct_Unnamed20"],[3,"Struct_Unnamed21"],[3,"Struct_Unnamed22"],[3,"Struct_Unnamed23"],[3,"Struct_Unnamed24"],[3,"Struct_Unnamed25"],[3,"Struct_Unnamed26"],[3,"Struct_Unnamed27"],[3,"Struct_Unnamed28"],[3,"Xlib"],[3,"XEvent"],[3,"XAnyEvent"],[3,"XButtonEvent"],[3,"XCirculateEvent"],[3,"XCirculateRequestEvent"],[3,"XClientMessageEvent"],[3,"XColormapEvent"],[3,"XConfigureEvent"],[3,"XConfigureRequestEvent"],[3,"XCreateWindowEvent"],[3,"XCrossingEvent"],[3,"XDestroyWindowEvent"],[3,"XErrorEvent"],[3,"XExposeEvent"],[3,"XFocusChangeEvent"],[3,"XGenericEventCookie"],[3,"XGraphicsExposeEvent"],[3,"XGravityEvent"],[3,"XKeyEvent"],[3,"XKeymapEvent"],[3,"XMapEvent"],[3,"XMappingEvent"],[3,"XMapRequestEvent"],[3,"XMotionEvent"],[3,"XNoExposeEvent"],[3,"XPropertyEvent"],[3,"XReparentEvent"],[3,"XResizeRequestEvent"],[3,"XSelectionClearEvent"],[3,"XSelectionEvent"],[3,"XSelectionRequestEvent"],[3,"XUnmapEvent"],[3,"XVisibilityEvent"],[3,"_XkbDesc"],[3,"_XkbKeyAliasRec"],[3,"_XkbKeyNameRec"],[3,"_XkbNamesRec"],[3,"Depth"],[3,"Screen"],[3,"ScreenFormat"],[3,"Visual"],[3,"XArc"],[3,"XChar2b"],[3,"XCharStruct"],[3,"XClassHint"],[3,"XColor"],[3,"XComposeStatus"],[3,"XExtCodes"],[3,"XFontProp"],[3,"XFontSetExtents"],[3,"XFontStruct"],[3,"XGCValues"],[3,"XHostAddress"],[3,"XIconSize"],[3,"XImage"],[3,"XKeyboardControl"],[3,"XKeyboardState"],[3,"XmbTextItem"],[3,"XModifierKeymap"],[3,"XOMCharSetList"],[3,"XPixmapFormatValues"],[3,"XPoint"],[3,"XRectangle"],[3,"XrmOptionDescRec"],[3,"XrmValue"],[3,"XSegment"],[3,"XSetWindowAttributes"],[3,"XSizeHints"],[3,"XStandardColormap"],[3,"XTextItem"],[3,"XTextItem16"],[3,"XTextProperty"],[3,"XTimeCoord"],[3,"XVisualInfo"],[3,"XwcTextItem"],[3,"XWindowAttributes"],[3,"XWindowChanges"],[3,"XWMHints"],[3,"AspectRatio"],[3,"ClientMessageData"],[3,"ImageFns"],[3,"Xmu"],[3,"Xf86vmode"],[3,"XRecordClientInfo"],[3,"XRecordExtRange"],[3,"XRecordInterceptData"],[3,"XRecordRange"],[3,"XRecordRange8"],[3,"XRecordRange16"],[3,"XRecordState"],[3,"Xrender"],[3,"_XAnimCursor"],[3,"_XCircle"],[3,"_XConicalGradient"],[3,"_XFilters"],[3,"_XGlyphElt8"],[3,"_XGlyphElt16"],[3,"_XGlyphElt32"],[3,"_XGlyphInfo"],[3,"_XIndexValue"],[3,"_XLinearGradient"],[3,"_XLineFixed"],[3,"_XPointDouble"],[3,"_XPointFixed"],[3,"_XRadialGradient"],[3,"XRenderColor"],[3,"XRenderDirectFormat"],[3,"XRenderPictFormat"],[3,"_XRenderPictureAttributes"],[3,"_XSpanFix"],[3,"_XTrap"],[3,"_XTrapezoid"],[3,"_XTriangle"],[3,"_XTransform"],[3,"Xt"],[3,"Xf86vmode"],[3,"Xrandr"],[3,"XRRScreenSize"],[3,"XRRScreenChangeNotifyEvent"],[3,"XRRNotifyEvent"],[3,"XRROutputChangeNotifyEvent"],[3,"XRRCrtcChangeNotifyEvent"],[3,"XRROutputPropertyNotifyEvent"],[3,"XRRProviderChangeNotifyEvent"],[3,"XRRProviderPropertyNotifyEvent"],[3,"XRRResourceChangeNotifyEvent"],[3,"XRRModeInfo"],[3,"XRRScreenResources"],[3,"XRROutputInfo"],[3,"XRRPropertyInfo"],[3,"XRRCrtcInfo"],[3,"XRRCrtcGamma"],[3,"XRRCrtcTransformAttributes"],[3,"XRRPanning"],[3,"XRRProviderResources"],[3,"XRRProviderInfo"],[3,"XRRMonitorInfo"],[3,"Xrandr_2_2_0"],[3,"HeadlessContext"],[3,"Window"],[3,"WindowProxy"],[3,"PollEventsIterator"],[3,"WaitEventsIterator"],[3,"AvailableMonitorsIter"],[3,"MonitorId"],[8,"WindowExt"],[8,"GlContext"]]};
searchIndex["rusttype"] = {"doc":"RustType is a pure Rust alternative to libraries like FreeType.","items":[[3,"Rect","rusttype","A rectangle, with top-left corner at `min`, and bottom-right corner at `max`.",null,null],[12,"min","","",0,null],[12,"max","","",0,null],[3,"Point","","A point in 2-dimensional space, with each dimension of type `N`.",null,null],[12,"x","","",1,null],[12,"y","","",1,null],[3,"Vector","","A vector in 2-dimensional space, with each dimension of type `N`.",null,null],[12,"x","","",2,null],[12,"y","","",2,null],[3,"Line","","A straight line between two points, `p[0]` and `p[1]`",null,null],[12,"p","","",3,null],[3,"Curve","","A quadratic Bezier curve, starting at `p[0]`, ending at `p[2]`, with control point `p[1]`.",null,null],[12,"p","","",4,null],[3,"FontCollection","","A collection of fonts read straight from a font file&#39;s data. The data in the collection is not validated.\nThis structure may or may not own the font data.",null,null],[3,"Font","","A single font. This may or may not own the font data.",null,null],[3,"Codepoint","","Represents a Unicode code point.",null,null],[12,"0","","",5,null],[3,"GlyphId","","Represents a glyph identifier for a particular font. This identifier will not necessarily correspond to\nthe correct glyph in a font other than the one that it was obtained from.",null,null],[12,"0","","",6,null],[3,"Glyph","","A single glyph of a font. this may either be a thin wrapper referring to the font and the glyph id, or\nit may be a standalone glyph that owns the data needed by it.",null,null],[3,"HMetrics","","The &quot;horizontal metrics&quot; of a glyph. This is useful for calculating the horizontal offset of a glyph\nfrom the previous one in a string when laying a string out horizontally.",null,null],[12,"advance_width","","The horizontal offset that the origin of the next glyph should be from the origin of this glyph.",7,null],[12,"left_side_bearing","","The horizontal offset between the origin of this glyph and the leftmost edge/point of the glyph.",7,null],[3,"VMetrics","","The &quot;vertical metrics&quot; of a font at a particular scale. This is useful for calculating the amount of\nvertical space to give a line of text, and for computing the vertical offset between successive lines.",null,null],[12,"ascent","","The highest point that any glyph in the font extends to above the baseline. Typically positive.",8,null],[12,"descent","","The lowest point that any glyph in the font extends to below the baseline. Typically negative.",8,null],[12,"line_gap","","The gap to leave between the descent of one line and the ascent of the next. This is of\ncourse only a guideline given by the font&#39;s designers.",8,null],[3,"ScaledGlyph","","A glyph augmented with scaling information. You can query such a glyph for information that depends\non the scale of the glyph.",null,null],[3,"PositionedGlyph","","A glyph augmented with positioning and scaling information. You can query such a glyph for information\nthat depends on the scale and position of the glyph.",null,null],[3,"Scale","","Defines the size of a rendered face of a font, in pixels, horizontally and vertically. A vertical\nscale of `y` pixels means that the distance betwen the ascent and descent lines (see `VMetrics`) of the\nface will be `y` pixels. If `x` and `y` are equal the scaling is uniform. Non-uniform scaling by a factor\n*f* in the horizontal direction is achieved by setting `x` equal to *f* times `y`.",null,null],[12,"x","","Horizontal scale, in pixels.",9,null],[12,"y","","Vertical scale, in pixels.",9,null],[3,"GlyphIter","","",null,null],[3,"LayoutIter","","",null,null],[3,"Contour","","A closed loop consisting of a sequence of `Segment`s.",null,null],[12,"segments","","",10,null],[4,"SharedBytes","","`SharedBytes` handles the lifetime of font data used in RustType. The data is either a shared\nreference to externally owned data, or managed by reference counting. `SharedBytes` can be\nconveniently used with `From` and `Into`, and dereferences to the contained bytes.",null,null],[13,"ByRef","","",11,null],[13,"ByArc","","",11,null],[4,"CodepointOrGlyphId","","Represents either a Unicode code point, or a glyph identifier for a font.",null,null],[13,"Codepoint","","",12,null],[13,"GlyphId","","",12,null],[4,"Segment","","Part of a `Contour`, either a `Line` or a `Curve`.",null,null],[13,"Line","","",13,null],[13,"Curve","","",13,null],[5,"point","","A convenience function for generating `Point`s.",null,{"inputs":[{"name":"n"},{"name":"n"}],"output":{"name":"point"}}],[5,"vector","","A convenience function for generating `Vector`s.",null,{"inputs":[{"name":"n"},{"name":"n"}],"output":{"name":"vector"}}],[11,"hash","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"cmp","","",1,null],[11,"partial_cmp","","",1,null],[11,"lt","","",1,null],[11,"le","","",1,null],[11,"gt","","",1,null],[11,"ge","","",1,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"hash","","",2,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"cmp","","",2,null],[11,"partial_cmp","","",2,null],[11,"lt","","",2,null],[11,"le","","",2,null],[11,"gt","","",2,null],[11,"ge","","",2,null],[11,"fmt","","",2,null],[11,"clone","","",2,null],[11,"sub","","",1,null],[11,"add","","",2,null],[11,"sub","","",2,null],[11,"mul","","",2,null],[11,"mul","","",2,null],[11,"div","","",2,null],[11,"div","","",2,null],[11,"add","","",1,null],[11,"sub","","",1,null],[11,"add","","",2,null],[11,"partial_cmp","","",3,null],[11,"lt","","",3,null],[11,"le","","",3,null],[11,"gt","","",3,null],[11,"ge","","",3,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"fmt","","",3,null],[11,"clone","","",3,null],[11,"partial_cmp","","",4,null],[11,"lt","","",4,null],[11,"le","","",4,null],[11,"gt","","",4,null],[11,"ge","","",4,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"fmt","","",4,null],[11,"clone","","",4,null],[11,"cmp","","",0,null],[11,"partial_cmp","","",0,null],[11,"lt","","",0,null],[11,"le","","",0,null],[11,"gt","","",0,null],[11,"ge","","",0,null],[11,"hash","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"width","","",0,null],[11,"height","","",0,null],[0,"gpu_cache","","This module provides capabilities for managing a cache of rendered glyphs in GPU memory, with the goal of\nminimisng the size and frequency of glyph uploads to GPU memory from the CPU.",null,null],[3,"Cache","rusttype::gpu_cache","An implementation of a dynamic GPU glyph cache. See the module documentation for more information.",null,null],[4,"CacheReadErr","","Returned from `Cache::rect_for`.",null,null],[13,"GlyphNotCached","","Indicates that the requested glyph is not present in the cache",14,null],[4,"CacheWriteErr","","Returned from `Cache::cache_queued`.",null,null],[13,"GlyphTooLarge","","At least one of the queued glyphs is too big to fit into the cache, even if all other glyphs are removed.",15,null],[13,"NoRoomForWholeQueue","","Not all of the requested glyphs can fit into the cache, even if the cache is completely cleared before\nthe attempt.",15,null],[11,"cmp","","",14,null],[11,"partial_cmp","","",14,null],[11,"eq","","",14,null],[11,"fmt","","",14,null],[11,"clone","","",14,null],[11,"cmp","","",15,null],[11,"partial_cmp","","",15,null],[11,"eq","","",15,null],[11,"fmt","","",15,null],[11,"clone","","",15,null],[11,"new","","Constructs a new cache. Note that this is just the CPU side of the cache. The GPU texture is managed\nby the user.",16,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"cache"}}],[11,"set_scale_tolerance","","Sets the scale tolerance for the cache. See the documentation for `Cache::new` for more information.",16,null],[11,"scale_tolerance","","Returns the current scale tolerance for the cache.",16,null],[11,"set_position_tolerance","","Sets the subpixel position tolerance for the cache. See the documentation for `Cache::new` for more\ninformation.",16,null],[11,"position_tolerance","","Returns the current subpixel position tolerance for the cache.",16,null],[11,"dimensions","","Returns the cache texture dimensions assumed by the cache. For proper operation this should\nmatch the dimensions of the used GPU texture.",16,null],[11,"queue_glyph","","Queue a glyph for caching by the next call to `cache_queued`. `font_id` is used to\ndisambiguate glyphs from different fonts. The user should ensure that `font_id` is unique to the\nfont the glyph is from.",16,null],[11,"clear","","Clears the cache. Does not affect the glyph queue.",16,null],[11,"clear_queue","","Clears the glyph queue.",16,null],[11,"cache_queued","","Caches the queued glyphs. If this is unsuccessful, the queue is untouched.\nAny glyphs cached by previous calls to this function may be removed from the cache to make\nroom for the newly queued glyphs. Thus if you want to ensure that a glyph is in the cache,\nthe most recently cached queue must have contained that glyph.",16,null],[11,"rect_for","","Retrieves the (floating point) texture coordinates of the quad for a glyph in the cache,\nas well as the pixel-space (integer) coordinates that this region should be drawn at.\nIn the majority of cases these pixel-space coordinates should be identical to the bounding box of the\ninput glyph. They only differ if the cache has returned a substitute glyph that is deemed close enough\nto the requested glyph as specified by the cache tolerance parameters.",16,null],[11,"clone","rusttype","",17,null],[11,"clone","","",18,null],[11,"clone","","",11,null],[11,"deref","","",11,null],[11,"from","","",11,null],[11,"from","","",11,{"inputs":[{"name":"arc"}],"output":{"name":"sharedbytes"}}],[11,"from","","",11,{"inputs":[{"name":"box"}],"output":{"name":"sharedbytes"}}],[11,"from","","",11,{"inputs":[{"name":"vec"}],"output":{"name":"sharedbytes"}}],[11,"cmp","","",5,null],[11,"partial_cmp","","",5,null],[11,"lt","","",5,null],[11,"le","","",5,null],[11,"gt","","",5,null],[11,"ge","","",5,null],[11,"hash","","",5,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"fmt","","",5,null],[11,"clone","","",5,null],[11,"cmp","","",12,null],[11,"partial_cmp","","",12,null],[11,"lt","","",12,null],[11,"le","","",12,null],[11,"gt","","",12,null],[11,"ge","","",12,null],[11,"hash","","",12,null],[11,"eq","","",12,null],[11,"ne","","",12,null],[11,"fmt","","",12,null],[11,"clone","","",12,null],[11,"cmp","","",6,null],[11,"partial_cmp","","",6,null],[11,"lt","","",6,null],[11,"le","","",6,null],[11,"gt","","",6,null],[11,"ge","","",6,null],[11,"hash","","",6,null],[11,"eq","","",6,null],[11,"ne","","",6,null],[11,"fmt","","",6,null],[11,"clone","","",6,null],[11,"clone","","",19,null],[11,"partial_cmp","","",7,null],[11,"lt","","",7,null],[11,"le","","",7,null],[11,"gt","","",7,null],[11,"ge","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"fmt","","",7,null],[11,"clone","","",7,null],[11,"partial_cmp","","",8,null],[11,"lt","","",8,null],[11,"le","","",8,null],[11,"gt","","",8,null],[11,"ge","","",8,null],[11,"eq","","",8,null],[11,"ne","","",8,null],[11,"fmt","","",8,null],[11,"clone","","",8,null],[11,"clone","","",20,null],[11,"clone","","",21,null],[11,"fmt","","",9,null],[11,"partial_cmp","","",9,null],[11,"lt","","",9,null],[11,"le","","",9,null],[11,"gt","","",9,null],[11,"ge","","",9,null],[11,"eq","","",9,null],[11,"ne","","",9,null],[11,"clone","","",9,null],[11,"uniform","","Uniform scaling, equivalent to `Scale { x: s, y: s }`.",9,{"inputs":[{"name":"f32"}],"output":{"name":"scale"}}],[11,"from","","",5,{"inputs":[{"name":"char"}],"output":{"name":"codepoint"}}],[11,"from","","",12,{"inputs":[{"name":"codepoint"}],"output":{"name":"codepointorglyphid"}}],[11,"from","","",12,{"inputs":[{"name":"glyphid"}],"output":{"name":"codepointorglyphid"}}],[11,"from","","",12,{"inputs":[{"name":"char"}],"output":{"name":"codepointorglyphid"}}],[11,"from_bytes","","Constructs a font collection from an array of bytes, typically loaded from a font file.\nThis array may be owned (e.g. `Vec&lt;u8&gt;`), or borrowed (`&amp;[u8]`).\nAs long as `From&lt;T&gt;` is implemented for `Bytes` for some type `T`, `T` can be used as input.",17,{"inputs":[{"name":"b"}],"output":{"name":"fontcollection"}}],[11,"into_font","","In the common case that a font collection consists of only one font, this function\nconsumes this font collection and turns it into a font. If this is not the case,\nor the font is not valid (read: not supported by this library), `None` is returned.",17,null],[11,"font_at","","Gets the font at index `i` in the font collection, if it exists and is valid.\nThe produced font borrows the font data that is either borrowed or owned by this font collection.",17,null],[11,"v_metrics","","The &quot;vertical metrics&quot; for this font at a given scale. These metrics are shared by all of the glyphs\nin the font.\nSee `VMetrics` for more detail.",18,null],[11,"glyph_count","","The number of glyphs present in this font. Glyph identifiers for this font will always be in the range\n`0..self.glyph_count()`",18,null],[11,"glyph","","Returns the corresponding glyph for a Unicode code point or a glyph id for this font.\nIf id corresponds to a glyph identifier, the identifier must be valid (smaller than `self.glyph_count()`),\notherwise `None` is returned.",18,null],[11,"glyphs_for","","A convenience function.",18,null],[11,"layout","","A convenience function for laying out glyphs for a string horizontally. It does not take control\ncharacters like line breaks into account, as treatment of these is likely to depend on the application.",18,null],[11,"pair_kerning","","Returns additional kerning to apply as well as that given by HMetrics for a particular pair of glyphs.",18,null],[11,"next","","",22,null],[11,"next","","",23,null],[11,"font","","The font to which this glyph belongs. If the glyph is a standalone glyph that owns its resources,\nit no longer has a reference to the font which it was created from (using `standalone()`). In which\ncase, `None` is returned.",19,null],[11,"id","","The glyph identifier for this glyph.",19,null],[11,"scaled","","Augments this glyph with scaling information, making methods that depend on the scale of the glyph\navailable.",19,null],[11,"standalone","","Turns a `Glyph&lt;&#39;a&gt;` into a `Glyph&lt;&#39;static&gt;`. This produces a glyph that owns its resources,\nextracted from the font. This glyph can outlive the font that it comes from.",19,null],[11,"fmt","","",13,null],[11,"clone","","",13,null],[11,"fmt","","",10,null],[11,"clone","","",10,null],[11,"id","","The glyph identifier for this glyph.",20,null],[11,"font","","The font to which this glyph belongs. If the glyph is a standalone glyph that owns its resources,\nit no longer has a reference to the font which it was created from (using `standalone()`). In which\ncase, `None` is returned.",20,null],[11,"into_unscaled","","A reference to this glyph without the scaling",20,null],[11,"unscaled","","Removes the scaling from this glyph",20,null],[11,"positioned","","Augments this glyph with positioning information, making methods that depend on the position of the\nglyph available.",20,null],[11,"scale","","",20,null],[11,"h_metrics","","Retrieves the &quot;horizontal metrics&quot; of this glyph. See `HMetrics` for more detail.",20,null],[11,"shape","","Produces a list of the contours that make up the shape of this glyph. Each contour consists of\na sequence of segments. Each segment is either a straight `Line` or a `Curve`.",20,null],[11,"exact_bounding_box","","The bounding box of the shape of this glyph, not to be confused with `pixel_bounding_box`, the\nconservative pixel-boundary bounding box. The coordinates are relative to the glyph&#39;s origin.",20,null],[11,"standalone","","Constructs a glyph that owns its data from this glyph. This is similar to `Glyph::standalone`. See\nthat function for more details.",20,null],[11,"id","","The glyph identifier for this glyph.",21,null],[11,"font","","The font to which this glyph belongs. If the glyph is a standalone glyph that owns its resources,\nit no longer has a reference to the font which it was created from (using `standalone()`). In which\ncase, `None` is returned.",21,null],[11,"unpositioned","","A reference to this glyph without positioning",21,null],[11,"into_unpositioned","","Removes the positioning from this glyph",21,null],[11,"pixel_bounding_box","","The conservative pixel-boundary bounding box for this glyph. This is the smallest rectangle\naligned to pixel boundaries that encloses the shape of this glyph at this position.",21,null],[11,"shape","","Similar to `ScaledGlyph::shape()`, but with the position of the glyph taken into account.",21,null],[11,"scale","","",21,null],[11,"position","","",21,null],[11,"draw","","Rasterises this glyph. For each pixel in the rect given by `pixel_bounding_box()`, `o` is called:",21,null],[11,"standalone","","Constructs a glyph that owns its data from this glyph. This is similar to `Glyph::standalone`. See\nthat function for more details.",21,null]],"paths":[[3,"Rect"],[3,"Point"],[3,"Vector"],[3,"Line"],[3,"Curve"],[3,"Codepoint"],[3,"GlyphId"],[3,"HMetrics"],[3,"VMetrics"],[3,"Scale"],[3,"Contour"],[4,"SharedBytes"],[4,"CodepointOrGlyphId"],[4,"Segment"],[4,"CacheReadErr"],[4,"CacheWriteErr"],[3,"Cache"],[3,"FontCollection"],[3,"Font"],[3,"Glyph"],[3,"ScaledGlyph"],[3,"PositionedGlyph"],[3,"GlyphIter"],[3,"LayoutIter"]]};
searchIndex["x11_dl"] = {"doc":"","items":[[0,"error","x11_dl","",null,null],[3,"OpenError","x11_dl::error","",null,null],[4,"OpenErrorKind","","",null,null],[13,"Library","","",0,null],[13,"Symbol","","",0,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"detail","","",1,null],[11,"kind","","",1,null],[11,"new","","",1,{"inputs":[{"name":"openerrorkind"},{"name":"string"}],"output":{"name":"openerror"}}],[11,"fmt","","",1,null],[11,"description","","",1,null],[11,"eq","","",0,null],[11,"hash","","",0,null],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"as_str","","",0,null],[0,"glx","x11_dl","",null,null],[3,"Glx","x11_dl::glx","",null,null],[12,"glXChooseFBConfig","","",2,null],[12,"glXChooseVisual","","",2,null],[12,"glXCopyContext","","",2,null],[12,"glXCreateContext","","",2,null],[12,"glXCreateGLXPixmap","","",2,null],[12,"glXCreateNewContext","","",2,null],[12,"glXCreatePbuffer","","",2,null],[12,"glXCreatePixmap","","",2,null],[12,"glXCreateWindow","","",2,null],[12,"glXDestroyContext","","",2,null],[12,"glXDestroyGLXPixmap","","",2,null],[12,"glXDestroyPbuffer","","",2,null],[12,"glXDestroyPixmap","","",2,null],[12,"glXDestroyWindow","","",2,null],[12,"glXGetClientString","","",2,null],[12,"glXGetConfig","","",2,null],[12,"glXGetCurrentContext","","",2,null],[12,"glXGetCurrentDisplay","","",2,null],[12,"glXGetCurrentDrawable","","",2,null],[12,"glXGetCurrentReadDrawable","","",2,null],[12,"glXGetFBConfigAttrib","","",2,null],[12,"glXGetFBConfigs","","",2,null],[12,"glXGetProcAddress","","",2,null],[12,"glXGetSelectedEvent","","",2,null],[12,"glXGetVisualFromFBConfig","","",2,null],[12,"glXIsDirect","","",2,null],[12,"glXMakeContextCurrent","","",2,null],[12,"glXMakeCurrent","","",2,null],[12,"glXQueryContext","","",2,null],[12,"glXQueryDrawable","","",2,null],[12,"glXQueryExtension","","",2,null],[12,"glXQueryExtensionsString","","",2,null],[12,"glXQueryServerString","","",2,null],[12,"glXQueryVersion","","",2,null],[12,"glXSelectEvent","","",2,null],[12,"glXSwapBuffers","","",2,null],[12,"glXUseXFont","","",2,null],[12,"glXWaitGL","","",2,null],[12,"glXWaitX","","",2,null],[3,"__GLXcontextRec","","",null,null],[3,"__GLXFBConfigRec","","",null,null],[0,"arb","","",null,null],[17,"GLX_CONTEXT_MAJOR_VERSION_ARB","x11_dl::glx::arb","",null,null],[17,"GLX_CONTEXT_MINOR_VERSION_ARB","","",null,null],[17,"GLX_CONTEXT_FLAGS_ARB","","",null,null],[17,"GLX_CONTEXT_PROFILE_MASK_ARB","","",null,null],[17,"GLX_CONTEXT_DEBUG_BIT_ARB","","",null,null],[17,"GLX_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB","","",null,null],[17,"GLX_CONTEXT_CORE_PROFILE_BIT_ARB","","",null,null],[17,"GLX_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB","","",null,null],[0,"ext","x11_dl::glx","",null,null],[17,"GLX_SWAP_INTERVAL_EXT","x11_dl::glx::ext","",null,null],[17,"GLX_MAX_SWAP_INTERVAL_EXT","","",null,null],[6,"GLXContext","x11_dl::glx","",null,null],[6,"GLXContextID","","",null,null],[6,"GLXDrawable","","",null,null],[6,"GLXFBConfig","","",null,null],[6,"GLXFBConfigID","","",null,null],[6,"GLXPbuffer","","",null,null],[6,"GLXPixmap","","",null,null],[6,"GLXWindow","","",null,null],[17,"GLX_SLOW_CONFIG","","",null,null],[17,"GLX_NON_CONFORMANT_CONFIG","","",null,null],[17,"GLX_WINDOW_BIT","","",null,null],[17,"GLX_PIXMAP_BIT","","",null,null],[17,"GLX_PBUFFER_BIT","","",null,null],[17,"GLX_USE_GL","","",null,null],[17,"GLX_BUFFER_SIZE","","",null,null],[17,"GLX_LEVEL","","",null,null],[17,"GLX_RGBA","","",null,null],[17,"GLX_DOUBLEBUFFER","","",null,null],[17,"GLX_STEREO","","",null,null],[17,"GLX_AUX_BUFFERS","","",null,null],[17,"GLX_RED_SIZE","","",null,null],[17,"GLX_GREEN_SIZE","","",null,null],[17,"GLX_BLUE_SIZE","","",null,null],[17,"GLX_ALPHA_SIZE","","",null,null],[17,"GLX_DEPTH_SIZE","","",null,null],[17,"GLX_STENCIL_SIZE","","",null,null],[17,"GLX_ACCUM_RED_SIZE","","",null,null],[17,"GLX_ACCUM_GREEN_SIZE","","",null,null],[17,"GLX_ACCUM_BLUE_SIZE","","",null,null],[17,"GLX_ACCUM_ALPHA_SIZE","","",null,null],[17,"GLX_CONFIG_CAVEAT","","",null,null],[17,"GLX_X_VISUAL_TYPE","","",null,null],[17,"GLX_TRANSPARENT_TYPE","","",null,null],[17,"GLX_TRANSPARENT_INDEX_VALUE","","",null,null],[17,"GLX_TRANSPARENT_RED_VALUE","","",null,null],[17,"GLX_TRANSPARENT_GREEN_VALUE","","",null,null],[17,"GLX_TRANSPARENT_BLUE_VALUE","","",null,null],[17,"GLX_TRANSPARENT_ALPHA_VALUE","","",null,null],[17,"GLX_DRAWABLE_TYPE","","",null,null],[17,"GLX_RENDER_TYPE","","",null,null],[17,"GLX_X_RENDERABLE","","",null,null],[17,"GLX_FBCONFIG_ID","","",null,null],[17,"GLX_DONT_CARE","","",null,null],[17,"GLX_NONE","","",null,null],[17,"GLX_RGBA_BIT","","",null,null],[17,"GLX_COLOR_INDEX_BIT","","",null,null],[17,"GLX_TRANSPARENT_RGB","","",null,null],[17,"GLX_TRANSPARENT_INDEX","","",null,null],[17,"GLX_TRUE_COLOR","","",null,null],[17,"GLX_DIRECT_COLOR","","",null,null],[17,"GLX_PSEUDO_COLOR","","",null,null],[17,"GLX_STATIC_COLOR","","",null,null],[17,"GLX_GRAY_SCALE","","",null,null],[17,"GLX_STATIC_GRAY","","",null,null],[11,"open","","",2,{"inputs":[],"output":{"name":"result"}}],[0,"keysym","x11_dl","",null,null],[17,"XK_BackSpace","x11_dl::keysym","",null,null],[17,"XK_Tab","","",null,null],[17,"XK_Linefeed","","",null,null],[17,"XK_Clear","","",null,null],[17,"XK_Return","","",null,null],[17,"XK_Pause","","",null,null],[17,"XK_Scroll_Lock","","",null,null],[17,"XK_Sys_Req","","",null,null],[17,"XK_Escape","","",null,null],[17,"XK_Delete","","",null,null],[17,"XK_Multi_key","","",null,null],[17,"XK_Kanji","","",null,null],[17,"XK_Muhenkan","","",null,null],[17,"XK_Henkan_Mode","","",null,null],[17,"XK_Henkan","","",null,null],[17,"XK_Romaji","","",null,null],[17,"XK_Hiragana","","",null,null],[17,"XK_Katakana","","",null,null],[17,"XK_Hiragana_Katakana","","",null,null],[17,"XK_Zenkaku","","",null,null],[17,"XK_Hankaku","","",null,null],[17,"XK_Zenkaku_Hankaku","","",null,null],[17,"XK_Touroku","","",null,null],[17,"XK_Massyo","","",null,null],[17,"XK_Kana_Lock","","",null,null],[17,"XK_Kana_Shift","","",null,null],[17,"XK_Eisu_Shift","","",null,null],[17,"XK_Eisu_toggle","","",null,null],[17,"XK_Home","","",null,null],[17,"XK_Left","","",null,null],[17,"XK_Up","","",null,null],[17,"XK_Right","","",null,null],[17,"XK_Down","","",null,null],[17,"XK_Prior","","",null,null],[17,"XK_Page_Up","","",null,null],[17,"XK_Next","","",null,null],[17,"XK_Page_Down","","",null,null],[17,"XK_End","","",null,null],[17,"XK_Begin","","",null,null],[17,"XK_Win_L","","",null,null],[17,"XK_Win_R","","",null,null],[17,"XK_App","","",null,null],[17,"XK_Select","","",null,null],[17,"XK_Print","","",null,null],[17,"XK_Execute","","",null,null],[17,"XK_Insert","","",null,null],[17,"XK_Undo","","",null,null],[17,"XK_Redo","","",null,null],[17,"XK_Menu","","",null,null],[17,"XK_Find","","",null,null],[17,"XK_Cancel","","",null,null],[17,"XK_Help","","",null,null],[17,"XK_Break","","",null,null],[17,"XK_Mode_switch","","",null,null],[17,"XK_script_switch","","",null,null],[17,"XK_Num_Lock","","",null,null],[17,"XK_KP_Space","","",null,null],[17,"XK_KP_Tab","","",null,null],[17,"XK_KP_Enter","","",null,null],[17,"XK_KP_F1","","",null,null],[17,"XK_KP_F2","","",null,null],[17,"XK_KP_F3","","",null,null],[17,"XK_KP_F4","","",null,null],[17,"XK_KP_Home","","",null,null],[17,"XK_KP_Left","","",null,null],[17,"XK_KP_Up","","",null,null],[17,"XK_KP_Right","","",null,null],[17,"XK_KP_Down","","",null,null],[17,"XK_KP_Prior","","",null,null],[17,"XK_KP_Page_Up","","",null,null],[17,"XK_KP_Next","","",null,null],[17,"XK_KP_Page_Down","","",null,null],[17,"XK_KP_End","","",null,null],[17,"XK_KP_Begin","","",null,null],[17,"XK_KP_Insert","","",null,null],[17,"XK_KP_Delete","","",null,null],[17,"XK_KP_Equal","","",null,null],[17,"XK_KP_Multiply","","",null,null],[17,"XK_KP_Add","","",null,null],[17,"XK_KP_Separator","","",null,null],[17,"XK_KP_Subtract","","",null,null],[17,"XK_KP_Decimal","","",null,null],[17,"XK_KP_Divide","","",null,null],[17,"XK_KP_0","","",null,null],[17,"XK_KP_1","","",null,null],[17,"XK_KP_2","","",null,null],[17,"XK_KP_3","","",null,null],[17,"XK_KP_4","","",null,null],[17,"XK_KP_5","","",null,null],[17,"XK_KP_6","","",null,null],[17,"XK_KP_7","","",null,null],[17,"XK_KP_8","","",null,null],[17,"XK_KP_9","","",null,null],[17,"XK_F1","","",null,null],[17,"XK_F2","","",null,null],[17,"XK_F3","","",null,null],[17,"XK_F4","","",null,null],[17,"XK_F5","","",null,null],[17,"XK_F6","","",null,null],[17,"XK_F7","","",null,null],[17,"XK_F8","","",null,null],[17,"XK_F9","","",null,null],[17,"XK_F10","","",null,null],[17,"XK_F11","","",null,null],[17,"XK_L1","","",null,null],[17,"XK_F12","","",null,null],[17,"XK_L2","","",null,null],[17,"XK_F13","","",null,null],[17,"XK_L3","","",null,null],[17,"XK_F14","","",null,null],[17,"XK_L4","","",null,null],[17,"XK_F15","","",null,null],[17,"XK_L5","","",null,null],[17,"XK_F16","","",null,null],[17,"XK_L6","","",null,null],[17,"XK_F17","","",null,null],[17,"XK_L7","","",null,null],[17,"XK_F18","","",null,null],[17,"XK_L8","","",null,null],[17,"XK_F19","","",null,null],[17,"XK_L9","","",null,null],[17,"XK_F20","","",null,null],[17,"XK_L10","","",null,null],[17,"XK_F21","","",null,null],[17,"XK_R1","","",null,null],[17,"XK_F22","","",null,null],[17,"XK_R2","","",null,null],[17,"XK_F23","","",null,null],[17,"XK_R3","","",null,null],[17,"XK_F24","","",null,null],[17,"XK_R4","","",null,null],[17,"XK_F25","","",null,null],[17,"XK_R5","","",null,null],[17,"XK_F26","","",null,null],[17,"XK_R6","","",null,null],[17,"XK_F27","","",null,null],[17,"XK_R7","","",null,null],[17,"XK_F28","","",null,null],[17,"XK_R8","","",null,null],[17,"XK_F29","","",null,null],[17,"XK_R9","","",null,null],[17,"XK_F30","","",null,null],[17,"XK_R10","","",null,null],[17,"XK_F31","","",null,null],[17,"XK_R11","","",null,null],[17,"XK_F32","","",null,null],[17,"XK_R12","","",null,null],[17,"XK_F33","","",null,null],[17,"XK_R13","","",null,null],[17,"XK_F34","","",null,null],[17,"XK_R14","","",null,null],[17,"XK_F35","","",null,null],[17,"XK_R15","","",null,null],[17,"XK_Shift_L","","",null,null],[17,"XK_Shift_R","","",null,null],[17,"XK_Control_L","","",null,null],[17,"XK_Control_R","","",null,null],[17,"XK_Caps_Lock","","",null,null],[17,"XK_Shift_Lock","","",null,null],[17,"XK_Meta_L","","",null,null],[17,"XK_Meta_R","","",null,null],[17,"XK_Alt_L","","",null,null],[17,"XK_Alt_R","","",null,null],[17,"XK_Super_L","","",null,null],[17,"XK_Super_R","","",null,null],[17,"XK_Hyper_L","","",null,null],[17,"XK_Hyper_R","","",null,null],[17,"XK_space","","",null,null],[17,"XK_exclam","","",null,null],[17,"XK_quotedbl","","",null,null],[17,"XK_numbersign","","",null,null],[17,"XK_dollar","","",null,null],[17,"XK_percent","","",null,null],[17,"XK_ampersand","","",null,null],[17,"XK_apostrophe","","",null,null],[17,"XK_quoteright","","",null,null],[17,"XK_parenleft","","",null,null],[17,"XK_parenright","","",null,null],[17,"XK_asterisk","","",null,null],[17,"XK_plus","","",null,null],[17,"XK_comma","","",null,null],[17,"XK_minus","","",null,null],[17,"XK_period","","",null,null],[17,"XK_slash","","",null,null],[17,"XK_0","","",null,null],[17,"XK_1","","",null,null],[17,"XK_2","","",null,null],[17,"XK_3","","",null,null],[17,"XK_4","","",null,null],[17,"XK_5","","",null,null],[17,"XK_6","","",null,null],[17,"XK_7","","",null,null],[17,"XK_8","","",null,null],[17,"XK_9","","",null,null],[17,"XK_colon","","",null,null],[17,"XK_semicolon","","",null,null],[17,"XK_less","","",null,null],[17,"XK_equal","","",null,null],[17,"XK_greater","","",null,null],[17,"XK_question","","",null,null],[17,"XK_at","","",null,null],[17,"XK_A","","",null,null],[17,"XK_B","","",null,null],[17,"XK_C","","",null,null],[17,"XK_D","","",null,null],[17,"XK_E","","",null,null],[17,"XK_F","","",null,null],[17,"XK_G","","",null,null],[17,"XK_H","","",null,null],[17,"XK_I","","",null,null],[17,"XK_J","","",null,null],[17,"XK_K","","",null,null],[17,"XK_L","","",null,null],[17,"XK_M","","",null,null],[17,"XK_N","","",null,null],[17,"XK_O","","",null,null],[17,"XK_P","","",null,null],[17,"XK_Q","","",null,null],[17,"XK_R","","",null,null],[17,"XK_S","","",null,null],[17,"XK_T","","",null,null],[17,"XK_U","","",null,null],[17,"XK_V","","",null,null],[17,"XK_W","","",null,null],[17,"XK_X","","",null,null],[17,"XK_Y","","",null,null],[17,"XK_Z","","",null,null],[17,"XK_bracketleft","","",null,null],[17,"XK_backslash","","",null,null],[17,"XK_bracketright","","",null,null],[17,"XK_asciicircum","","",null,null],[17,"XK_underscore","","",null,null],[17,"XK_grave","","",null,null],[17,"XK_quoteleft","","",null,null],[17,"XK_a","","",null,null],[17,"XK_b","","",null,null],[17,"XK_c","","",null,null],[17,"XK_d","","",null,null],[17,"XK_e","","",null,null],[17,"XK_f","","",null,null],[17,"XK_g","","",null,null],[17,"XK_h","","",null,null],[17,"XK_i","","",null,null],[17,"XK_j","","",null,null],[17,"XK_k","","",null,null],[17,"XK_l","","",null,null],[17,"XK_m","","",null,null],[17,"XK_n","","",null,null],[17,"XK_o","","",null,null],[17,"XK_p","","",null,null],[17,"XK_q","","",null,null],[17,"XK_r","","",null,null],[17,"XK_s","","",null,null],[17,"XK_t","","",null,null],[17,"XK_u","","",null,null],[17,"XK_v","","",null,null],[17,"XK_w","","",null,null],[17,"XK_x","","",null,null],[17,"XK_y","","",null,null],[17,"XK_z","","",null,null],[17,"XK_braceleft","","",null,null],[17,"XK_bar","","",null,null],[17,"XK_braceright","","",null,null],[17,"XK_asciitilde","","",null,null],[17,"XK_nobreakspace","","",null,null],[17,"XK_exclamdown","","",null,null],[17,"XK_cent","","",null,null],[17,"XK_sterling","","",null,null],[17,"XK_currency","","",null,null],[17,"XK_yen","","",null,null],[17,"XK_brokenbar","","",null,null],[17,"XK_section","","",null,null],[17,"XK_diaeresis","","",null,null],[17,"XK_copyright","","",null,null],[17,"XK_ordfeminine","","",null,null],[17,"XK_guillemotleft","","",null,null],[17,"XK_notsign","","",null,null],[17,"XK_hyphen","","",null,null],[17,"XK_registered","","",null,null],[17,"XK_macron","","",null,null],[17,"XK_degree","","",null,null],[17,"XK_plusminus","","",null,null],[17,"XK_twosuperior","","",null,null],[17,"XK_threesuperior","","",null,null],[17,"XK_acute","","",null,null],[17,"XK_mu","","",null,null],[17,"XK_paragraph","","",null,null],[17,"XK_periodcentered","","",null,null],[17,"XK_cedilla","","",null,null],[17,"XK_onesuperior","","",null,null],[17,"XK_masculine","","",null,null],[17,"XK_guillemotright","","",null,null],[17,"XK_onequarter","","",null,null],[17,"XK_onehalf","","",null,null],[17,"XK_threequarters","","",null,null],[17,"XK_questiondown","","",null,null],[17,"XK_Agrave","","",null,null],[17,"XK_Aacute","","",null,null],[17,"XK_Acircumflex","","",null,null],[17,"XK_Atilde","","",null,null],[17,"XK_Adiaeresis","","",null,null],[17,"XK_Aring","","",null,null],[17,"XK_AE","","",null,null],[17,"XK_Ccedilla","","",null,null],[17,"XK_Egrave","","",null,null],[17,"XK_Eacute","","",null,null],[17,"XK_Ecircumflex","","",null,null],[17,"XK_Ediaeresis","","",null,null],[17,"XK_Igrave","","",null,null],[17,"XK_Iacute","","",null,null],[17,"XK_Icircumflex","","",null,null],[17,"XK_Idiaeresis","","",null,null],[17,"XK_ETH","","",null,null],[17,"XK_Eth","","",null,null],[17,"XK_Ntilde","","",null,null],[17,"XK_Ograve","","",null,null],[17,"XK_Oacute","","",null,null],[17,"XK_Ocircumflex","","",null,null],[17,"XK_Otilde","","",null,null],[17,"XK_Odiaeresis","","",null,null],[17,"XK_multiply","","",null,null],[17,"XK_Ooblique","","",null,null],[17,"XK_Ugrave","","",null,null],[17,"XK_Uacute","","",null,null],[17,"XK_Ucircumflex","","",null,null],[17,"XK_Udiaeresis","","",null,null],[17,"XK_Yacute","","",null,null],[17,"XK_THORN","","",null,null],[17,"XK_Thorn","","",null,null],[17,"XK_ssharp","","",null,null],[17,"XK_agrave","","",null,null],[17,"XK_aacute","","",null,null],[17,"XK_acircumflex","","",null,null],[17,"XK_atilde","","",null,null],[17,"XK_adiaeresis","","",null,null],[17,"XK_aring","","",null,null],[17,"XK_ae","","",null,null],[17,"XK_ccedilla","","",null,null],[17,"XK_egrave","","",null,null],[17,"XK_eacute","","",null,null],[17,"XK_ecircumflex","","",null,null],[17,"XK_ediaeresis","","",null,null],[17,"XK_igrave","","",null,null],[17,"XK_iacute","","",null,null],[17,"XK_icircumflex","","",null,null],[17,"XK_idiaeresis","","",null,null],[17,"XK_eth","","",null,null],[17,"XK_ntilde","","",null,null],[17,"XK_ograve","","",null,null],[17,"XK_oacute","","",null,null],[17,"XK_ocircumflex","","",null,null],[17,"XK_otilde","","",null,null],[17,"XK_odiaeresis","","",null,null],[17,"XK_division","","",null,null],[17,"XK_oslash","","",null,null],[17,"XK_ugrave","","",null,null],[17,"XK_uacute","","",null,null],[17,"XK_ucircumflex","","",null,null],[17,"XK_udiaeresis","","",null,null],[17,"XK_yacute","","",null,null],[17,"XK_thorn","","",null,null],[17,"XK_ydiaeresis","","",null,null],[17,"XK_Aogonek","","",null,null],[17,"XK_breve","","",null,null],[17,"XK_Lstroke","","",null,null],[17,"XK_Lcaron","","",null,null],[17,"XK_Sacute","","",null,null],[17,"XK_Scaron","","",null,null],[17,"XK_Scedilla","","",null,null],[17,"XK_Tcaron","","",null,null],[17,"XK_Zacute","","",null,null],[17,"XK_Zcaron","","",null,null],[17,"XK_Zabovedot","","",null,null],[17,"XK_aogonek","","",null,null],[17,"XK_ogonek","","",null,null],[17,"XK_lstroke","","",null,null],[17,"XK_lcaron","","",null,null],[17,"XK_sacute","","",null,null],[17,"XK_caron","","",null,null],[17,"XK_scaron","","",null,null],[17,"XK_scedilla","","",null,null],[17,"XK_tcaron","","",null,null],[17,"XK_zacute","","",null,null],[17,"XK_doubleacute","","",null,null],[17,"XK_zcaron","","",null,null],[17,"XK_zabovedot","","",null,null],[17,"XK_Racute","","",null,null],[17,"XK_Abreve","","",null,null],[17,"XK_Lacute","","",null,null],[17,"XK_Cacute","","",null,null],[17,"XK_Ccaron","","",null,null],[17,"XK_Eogonek","","",null,null],[17,"XK_Ecaron","","",null,null],[17,"XK_Dcaron","","",null,null],[17,"XK_Dstroke","","",null,null],[17,"XK_Nacute","","",null,null],[17,"XK_Ncaron","","",null,null],[17,"XK_Odoubleacute","","",null,null],[17,"XK_Rcaron","","",null,null],[17,"XK_Uring","","",null,null],[17,"XK_Udoubleacute","","",null,null],[17,"XK_Tcedilla","","",null,null],[17,"XK_racute","","",null,null],[17,"XK_abreve","","",null,null],[17,"XK_lacute","","",null,null],[17,"XK_cacute","","",null,null],[17,"XK_ccaron","","",null,null],[17,"XK_eogonek","","",null,null],[17,"XK_ecaron","","",null,null],[17,"XK_dcaron","","",null,null],[17,"XK_dstroke","","",null,null],[17,"XK_nacute","","",null,null],[17,"XK_ncaron","","",null,null],[17,"XK_odoubleacute","","",null,null],[17,"XK_udoubleacute","","",null,null],[17,"XK_rcaron","","",null,null],[17,"XK_uring","","",null,null],[17,"XK_tcedilla","","",null,null],[17,"XK_abovedot","","",null,null],[17,"XK_Hstroke","","",null,null],[17,"XK_Hcircumflex","","",null,null],[17,"XK_Iabovedot","","",null,null],[17,"XK_Gbreve","","",null,null],[17,"XK_Jcircumflex","","",null,null],[17,"XK_hstroke","","",null,null],[17,"XK_hcircumflex","","",null,null],[17,"XK_idotless","","",null,null],[17,"XK_gbreve","","",null,null],[17,"XK_jcircumflex","","",null,null],[17,"XK_Cabovedot","","",null,null],[17,"XK_Ccircumflex","","",null,null],[17,"XK_Gabovedot","","",null,null],[17,"XK_Gcircumflex","","",null,null],[17,"XK_Ubreve","","",null,null],[17,"XK_Scircumflex","","",null,null],[17,"XK_cabovedot","","",null,null],[17,"XK_ccircumflex","","",null,null],[17,"XK_gabovedot","","",null,null],[17,"XK_gcircumflex","","",null,null],[17,"XK_ubreve","","",null,null],[17,"XK_scircumflex","","",null,null],[17,"XK_kra","","",null,null],[17,"XK_kappa","","",null,null],[17,"XK_Rcedilla","","",null,null],[17,"XK_Itilde","","",null,null],[17,"XK_Lcedilla","","",null,null],[17,"XK_Emacron","","",null,null],[17,"XK_Gcedilla","","",null,null],[17,"XK_Tslash","","",null,null],[17,"XK_rcedilla","","",null,null],[17,"XK_itilde","","",null,null],[17,"XK_lcedilla","","",null,null],[17,"XK_emacron","","",null,null],[17,"XK_gcedilla","","",null,null],[17,"XK_tslash","","",null,null],[17,"XK_ENG","","",null,null],[17,"XK_eng","","",null,null],[17,"XK_Amacron","","",null,null],[17,"XK_Iogonek","","",null,null],[17,"XK_Eabovedot","","",null,null],[17,"XK_Imacron","","",null,null],[17,"XK_Ncedilla","","",null,null],[17,"XK_Omacron","","",null,null],[17,"XK_Kcedilla","","",null,null],[17,"XK_Uogonek","","",null,null],[17,"XK_Utilde","","",null,null],[17,"XK_Umacron","","",null,null],[17,"XK_amacron","","",null,null],[17,"XK_iogonek","","",null,null],[17,"XK_eabovedot","","",null,null],[17,"XK_imacron","","",null,null],[17,"XK_ncedilla","","",null,null],[17,"XK_omacron","","",null,null],[17,"XK_kcedilla","","",null,null],[17,"XK_uogonek","","",null,null],[17,"XK_utilde","","",null,null],[17,"XK_umacron","","",null,null],[17,"XK_overline","","",null,null],[17,"XK_kana_fullstop","","",null,null],[17,"XK_kana_openingbracket","","",null,null],[17,"XK_kana_closingbracket","","",null,null],[17,"XK_kana_comma","","",null,null],[17,"XK_kana_conjunctive","","",null,null],[17,"XK_kana_middledot","","",null,null],[17,"XK_kana_WO","","",null,null],[17,"XK_kana_a","","",null,null],[17,"XK_kana_i","","",null,null],[17,"XK_kana_u","","",null,null],[17,"XK_kana_e","","",null,null],[17,"XK_kana_o","","",null,null],[17,"XK_kana_ya","","",null,null],[17,"XK_kana_yu","","",null,null],[17,"XK_kana_yo","","",null,null],[17,"XK_kana_tsu","","",null,null],[17,"XK_kana_tu","","",null,null],[17,"XK_prolongedsound","","",null,null],[17,"XK_kana_A","","",null,null],[17,"XK_kana_I","","",null,null],[17,"XK_kana_U","","",null,null],[17,"XK_kana_E","","",null,null],[17,"XK_kana_O","","",null,null],[17,"XK_kana_KA","","",null,null],[17,"XK_kana_KI","","",null,null],[17,"XK_kana_KU","","",null,null],[17,"XK_kana_KE","","",null,null],[17,"XK_kana_KO","","",null,null],[17,"XK_kana_SA","","",null,null],[17,"XK_kana_SHI","","",null,null],[17,"XK_kana_SU","","",null,null],[17,"XK_kana_SE","","",null,null],[17,"XK_kana_SO","","",null,null],[17,"XK_kana_TA","","",null,null],[17,"XK_kana_CHI","","",null,null],[17,"XK_kana_TI","","",null,null],[17,"XK_kana_TSU","","",null,null],[17,"XK_kana_TU","","",null,null],[17,"XK_kana_TE","","",null,null],[17,"XK_kana_TO","","",null,null],[17,"XK_kana_NA","","",null,null],[17,"XK_kana_NI","","",null,null],[17,"XK_kana_NU","","",null,null],[17,"XK_kana_NE","","",null,null],[17,"XK_kana_NO","","",null,null],[17,"XK_kana_HA","","",null,null],[17,"XK_kana_HI","","",null,null],[17,"XK_kana_FU","","",null,null],[17,"XK_kana_HU","","",null,null],[17,"XK_kana_HE","","",null,null],[17,"XK_kana_HO","","",null,null],[17,"XK_kana_MA","","",null,null],[17,"XK_kana_MI","","",null,null],[17,"XK_kana_MU","","",null,null],[17,"XK_kana_ME","","",null,null],[17,"XK_kana_MO","","",null,null],[17,"XK_kana_YA","","",null,null],[17,"XK_kana_YU","","",null,null],[17,"XK_kana_YO","","",null,null],[17,"XK_kana_RA","","",null,null],[17,"XK_kana_RI","","",null,null],[17,"XK_kana_RU","","",null,null],[17,"XK_kana_RE","","",null,null],[17,"XK_kana_RO","","",null,null],[17,"XK_kana_WA","","",null,null],[17,"XK_kana_N","","",null,null],[17,"XK_voicedsound","","",null,null],[17,"XK_semivoicedsound","","",null,null],[17,"XK_kana_switch","","",null,null],[17,"XK_Arabic_comma","","",null,null],[17,"XK_Arabic_semicolon","","",null,null],[17,"XK_Arabic_question_mark","","",null,null],[17,"XK_Arabic_hamza","","",null,null],[17,"XK_Arabic_maddaonalef","","",null,null],[17,"XK_Arabic_hamzaonalef","","",null,null],[17,"XK_Arabic_hamzaonwaw","","",null,null],[17,"XK_Arabic_hamzaunderalef","","",null,null],[17,"XK_Arabic_hamzaonyeh","","",null,null],[17,"XK_Arabic_alef","","",null,null],[17,"XK_Arabic_beh","","",null,null],[17,"XK_Arabic_tehmarbuta","","",null,null],[17,"XK_Arabic_teh","","",null,null],[17,"XK_Arabic_theh","","",null,null],[17,"XK_Arabic_jeem","","",null,null],[17,"XK_Arabic_hah","","",null,null],[17,"XK_Arabic_khah","","",null,null],[17,"XK_Arabic_dal","","",null,null],[17,"XK_Arabic_thal","","",null,null],[17,"XK_Arabic_ra","","",null,null],[17,"XK_Arabic_zain","","",null,null],[17,"XK_Arabic_seen","","",null,null],[17,"XK_Arabic_sheen","","",null,null],[17,"XK_Arabic_sad","","",null,null],[17,"XK_Arabic_dad","","",null,null],[17,"XK_Arabic_tah","","",null,null],[17,"XK_Arabic_zah","","",null,null],[17,"XK_Arabic_ain","","",null,null],[17,"XK_Arabic_ghain","","",null,null],[17,"XK_Arabic_tatweel","","",null,null],[17,"XK_Arabic_feh","","",null,null],[17,"XK_Arabic_qaf","","",null,null],[17,"XK_Arabic_kaf","","",null,null],[17,"XK_Arabic_lam","","",null,null],[17,"XK_Arabic_meem","","",null,null],[17,"XK_Arabic_noon","","",null,null],[17,"XK_Arabic_ha","","",null,null],[17,"XK_Arabic_heh","","",null,null],[17,"XK_Arabic_waw","","",null,null],[17,"XK_Arabic_alefmaksura","","",null,null],[17,"XK_Arabic_yeh","","",null,null],[17,"XK_Arabic_fathatan","","",null,null],[17,"XK_Arabic_dammatan","","",null,null],[17,"XK_Arabic_kasratan","","",null,null],[17,"XK_Arabic_fatha","","",null,null],[17,"XK_Arabic_damma","","",null,null],[17,"XK_Arabic_kasra","","",null,null],[17,"XK_Arabic_shadda","","",null,null],[17,"XK_Arabic_sukun","","",null,null],[17,"XK_Arabic_switch","","",null,null],[17,"XK_Serbian_dje","","",null,null],[17,"XK_Macedonia_gje","","",null,null],[17,"XK_Cyrillic_io","","",null,null],[17,"XK_Ukrainian_ie","","",null,null],[17,"XK_Ukranian_je","","",null,null],[17,"XK_Macedonia_dse","","",null,null],[17,"XK_Ukrainian_i","","",null,null],[17,"XK_Ukranian_i","","",null,null],[17,"XK_Ukrainian_yi","","",null,null],[17,"XK_Ukranian_yi","","",null,null],[17,"XK_Cyrillic_je","","",null,null],[17,"XK_Serbian_je","","",null,null],[17,"XK_Cyrillic_lje","","",null,null],[17,"XK_Serbian_lje","","",null,null],[17,"XK_Cyrillic_nje","","",null,null],[17,"XK_Serbian_nje","","",null,null],[17,"XK_Serbian_tshe","","",null,null],[17,"XK_Macedonia_kje","","",null,null],[17,"XK_Byelorussian_shortu","","",null,null],[17,"XK_Cyrillic_dzhe","","",null,null],[17,"XK_Serbian_dze","","",null,null],[17,"XK_numerosign","","",null,null],[17,"XK_Serbian_DJE","","",null,null],[17,"XK_Macedonia_GJE","","",null,null],[17,"XK_Cyrillic_IO","","",null,null],[17,"XK_Ukrainian_IE","","",null,null],[17,"XK_Ukranian_JE","","",null,null],[17,"XK_Macedonia_DSE","","",null,null],[17,"XK_Ukrainian_I","","",null,null],[17,"XK_Ukranian_I","","",null,null],[17,"XK_Ukrainian_YI","","",null,null],[17,"XK_Ukranian_YI","","",null,null],[17,"XK_Cyrillic_JE","","",null,null],[17,"XK_Serbian_JE","","",null,null],[17,"XK_Cyrillic_LJE","","",null,null],[17,"XK_Serbian_LJE","","",null,null],[17,"XK_Cyrillic_NJE","","",null,null],[17,"XK_Serbian_NJE","","",null,null],[17,"XK_Serbian_TSHE","","",null,null],[17,"XK_Macedonia_KJE","","",null,null],[17,"XK_Byelorussian_SHORTU","","",null,null],[17,"XK_Cyrillic_DZHE","","",null,null],[17,"XK_Serbian_DZE","","",null,null],[17,"XK_Cyrillic_yu","","",null,null],[17,"XK_Cyrillic_a","","",null,null],[17,"XK_Cyrillic_be","","",null,null],[17,"XK_Cyrillic_tse","","",null,null],[17,"XK_Cyrillic_de","","",null,null],[17,"XK_Cyrillic_ie","","",null,null],[17,"XK_Cyrillic_ef","","",null,null],[17,"XK_Cyrillic_ghe","","",null,null],[17,"XK_Cyrillic_ha","","",null,null],[17,"XK_Cyrillic_i","","",null,null],[17,"XK_Cyrillic_shorti","","",null,null],[17,"XK_Cyrillic_ka","","",null,null],[17,"XK_Cyrillic_el","","",null,null],[17,"XK_Cyrillic_em","","",null,null],[17,"XK_Cyrillic_en","","",null,null],[17,"XK_Cyrillic_o","","",null,null],[17,"XK_Cyrillic_pe","","",null,null],[17,"XK_Cyrillic_ya","","",null,null],[17,"XK_Cyrillic_er","","",null,null],[17,"XK_Cyrillic_es","","",null,null],[17,"XK_Cyrillic_te","","",null,null],[17,"XK_Cyrillic_u","","",null,null],[17,"XK_Cyrillic_zhe","","",null,null],[17,"XK_Cyrillic_ve","","",null,null],[17,"XK_Cyrillic_softsign","","",null,null],[17,"XK_Cyrillic_yeru","","",null,null],[17,"XK_Cyrillic_ze","","",null,null],[17,"XK_Cyrillic_sha","","",null,null],[17,"XK_Cyrillic_e","","",null,null],[17,"XK_Cyrillic_shcha","","",null,null],[17,"XK_Cyrillic_che","","",null,null],[17,"XK_Cyrillic_hardsign","","",null,null],[17,"XK_Cyrillic_YU","","",null,null],[17,"XK_Cyrillic_A","","",null,null],[17,"XK_Cyrillic_BE","","",null,null],[17,"XK_Cyrillic_TSE","","",null,null],[17,"XK_Cyrillic_DE","","",null,null],[17,"XK_Cyrillic_IE","","",null,null],[17,"XK_Cyrillic_EF","","",null,null],[17,"XK_Cyrillic_GHE","","",null,null],[17,"XK_Cyrillic_HA","","",null,null],[17,"XK_Cyrillic_I","","",null,null],[17,"XK_Cyrillic_SHORTI","","",null,null],[17,"XK_Cyrillic_KA","","",null,null],[17,"XK_Cyrillic_EL","","",null,null],[17,"XK_Cyrillic_EM","","",null,null],[17,"XK_Cyrillic_EN","","",null,null],[17,"XK_Cyrillic_O","","",null,null],[17,"XK_Cyrillic_PE","","",null,null],[17,"XK_Cyrillic_YA","","",null,null],[17,"XK_Cyrillic_ER","","",null,null],[17,"XK_Cyrillic_ES","","",null,null],[17,"XK_Cyrillic_TE","","",null,null],[17,"XK_Cyrillic_U","","",null,null],[17,"XK_Cyrillic_ZHE","","",null,null],[17,"XK_Cyrillic_VE","","",null,null],[17,"XK_Cyrillic_SOFTSIGN","","",null,null],[17,"XK_Cyrillic_YERU","","",null,null],[17,"XK_Cyrillic_ZE","","",null,null],[17,"XK_Cyrillic_SHA","","",null,null],[17,"XK_Cyrillic_E","","",null,null],[17,"XK_Cyrillic_SHCHA","","",null,null],[17,"XK_Cyrillic_CHE","","",null,null],[17,"XK_Cyrillic_HARDSIGN","","",null,null],[17,"XK_Greek_ALPHAaccent","","",null,null],[17,"XK_Greek_EPSILONaccent","","",null,null],[17,"XK_Greek_ETAaccent","","",null,null],[17,"XK_Greek_IOTAaccent","","",null,null],[17,"XK_Greek_IOTAdiaeresis","","",null,null],[17,"XK_Greek_OMICRONaccent","","",null,null],[17,"XK_Greek_UPSILONaccent","","",null,null],[17,"XK_Greek_UPSILONdieresis","","",null,null],[17,"XK_Greek_OMEGAaccent","","",null,null],[17,"XK_Greek_accentdieresis","","",null,null],[17,"XK_Greek_horizbar","","",null,null],[17,"XK_Greek_alphaaccent","","",null,null],[17,"XK_Greek_epsilonaccent","","",null,null],[17,"XK_Greek_etaaccent","","",null,null],[17,"XK_Greek_iotaaccent","","",null,null],[17,"XK_Greek_iotadieresis","","",null,null],[17,"XK_Greek_iotaaccentdieresis","","",null,null],[17,"XK_Greek_omicronaccent","","",null,null],[17,"XK_Greek_upsilonaccent","","",null,null],[17,"XK_Greek_upsilondieresis","","",null,null],[17,"XK_Greek_upsilonaccentdieresis","","",null,null],[17,"XK_Greek_omegaaccent","","",null,null],[17,"XK_Greek_ALPHA","","",null,null],[17,"XK_Greek_BETA","","",null,null],[17,"XK_Greek_GAMMA","","",null,null],[17,"XK_Greek_DELTA","","",null,null],[17,"XK_Greek_EPSILON","","",null,null],[17,"XK_Greek_ZETA","","",null,null],[17,"XK_Greek_ETA","","",null,null],[17,"XK_Greek_THETA","","",null,null],[17,"XK_Greek_IOTA","","",null,null],[17,"XK_Greek_KAPPA","","",null,null],[17,"XK_Greek_LAMDA","","",null,null],[17,"XK_Greek_LAMBDA","","",null,null],[17,"XK_Greek_MU","","",null,null],[17,"XK_Greek_NU","","",null,null],[17,"XK_Greek_XI","","",null,null],[17,"XK_Greek_OMICRON","","",null,null],[17,"XK_Greek_PI","","",null,null],[17,"XK_Greek_RHO","","",null,null],[17,"XK_Greek_SIGMA","","",null,null],[17,"XK_Greek_TAU","","",null,null],[17,"XK_Greek_UPSILON","","",null,null],[17,"XK_Greek_PHI","","",null,null],[17,"XK_Greek_CHI","","",null,null],[17,"XK_Greek_PSI","","",null,null],[17,"XK_Greek_OMEGA","","",null,null],[17,"XK_Greek_alpha","","",null,null],[17,"XK_Greek_beta","","",null,null],[17,"XK_Greek_gamma","","",null,null],[17,"XK_Greek_delta","","",null,null],[17,"XK_Greek_epsilon","","",null,null],[17,"XK_Greek_zeta","","",null,null],[17,"XK_Greek_eta","","",null,null],[17,"XK_Greek_theta","","",null,null],[17,"XK_Greek_iota","","",null,null],[17,"XK_Greek_kappa","","",null,null],[17,"XK_Greek_lamda","","",null,null],[17,"XK_Greek_lambda","","",null,null],[17,"XK_Greek_mu","","",null,null],[17,"XK_Greek_nu","","",null,null],[17,"XK_Greek_xi","","",null,null],[17,"XK_Greek_omicron","","",null,null],[17,"XK_Greek_pi","","",null,null],[17,"XK_Greek_rho","","",null,null],[17,"XK_Greek_sigma","","",null,null],[17,"XK_Greek_finalsmallsigma","","",null,null],[17,"XK_Greek_tau","","",null,null],[17,"XK_Greek_upsilon","","",null,null],[17,"XK_Greek_phi","","",null,null],[17,"XK_Greek_chi","","",null,null],[17,"XK_Greek_psi","","",null,null],[17,"XK_Greek_omega","","",null,null],[17,"XK_Greek_switch","","",null,null],[17,"XK_leftradical","","",null,null],[17,"XK_topleftradical","","",null,null],[17,"XK_horizconnector","","",null,null],[17,"XK_topintegral","","",null,null],[17,"XK_botintegral","","",null,null],[17,"XK_vertconnector","","",null,null],[17,"XK_topleftsqbracket","","",null,null],[17,"XK_botleftsqbracket","","",null,null],[17,"XK_toprightsqbracket","","",null,null],[17,"XK_botrightsqbracket","","",null,null],[17,"XK_topleftparens","","",null,null],[17,"XK_botleftparens","","",null,null],[17,"XK_toprightparens","","",null,null],[17,"XK_botrightparens","","",null,null],[17,"XK_leftmiddlecurlybrace","","",null,null],[17,"XK_rightmiddlecurlybrace","","",null,null],[17,"XK_topleftsummation","","",null,null],[17,"XK_botleftsummation","","",null,null],[17,"XK_topvertsummationconnector","","",null,null],[17,"XK_botvertsummationconnector","","",null,null],[17,"XK_toprightsummation","","",null,null],[17,"XK_botrightsummation","","",null,null],[17,"XK_rightmiddlesummation","","",null,null],[17,"XK_lessthanequal","","",null,null],[17,"XK_notequal","","",null,null],[17,"XK_greaterthanequal","","",null,null],[17,"XK_integral","","",null,null],[17,"XK_therefore","","",null,null],[17,"XK_variation","","",null,null],[17,"XK_infinity","","",null,null],[17,"XK_nabla","","",null,null],[17,"XK_approximate","","",null,null],[17,"XK_similarequal","","",null,null],[17,"XK_ifonlyif","","",null,null],[17,"XK_implies","","",null,null],[17,"XK_identical","","",null,null],[17,"XK_radical","","",null,null],[17,"XK_includedin","","",null,null],[17,"XK_includes","","",null,null],[17,"XK_intersection","","",null,null],[17,"XK_union","","",null,null],[17,"XK_logicaland","","",null,null],[17,"XK_logicalor","","",null,null],[17,"XK_partialderivative","","",null,null],[17,"XK_function","","",null,null],[17,"XK_leftarrow","","",null,null],[17,"XK_uparrow","","",null,null],[17,"XK_rightarrow","","",null,null],[17,"XK_downarrow","","",null,null],[17,"XK_blank","","",null,null],[17,"XK_soliddiamond","","",null,null],[17,"XK_checkerboard","","",null,null],[17,"XK_ht","","",null,null],[17,"XK_ff","","",null,null],[17,"XK_cr","","",null,null],[17,"XK_lf","","",null,null],[17,"XK_nl","","",null,null],[17,"XK_vt","","",null,null],[17,"XK_lowrightcorner","","",null,null],[17,"XK_uprightcorner","","",null,null],[17,"XK_upleftcorner","","",null,null],[17,"XK_lowleftcorner","","",null,null],[17,"XK_crossinglines","","",null,null],[17,"XK_horizlinescan1","","",null,null],[17,"XK_horizlinescan3","","",null,null],[17,"XK_horizlinescan5","","",null,null],[17,"XK_horizlinescan7","","",null,null],[17,"XK_horizlinescan9","","",null,null],[17,"XK_leftt","","",null,null],[17,"XK_rightt","","",null,null],[17,"XK_bott","","",null,null],[17,"XK_topt","","",null,null],[17,"XK_vertbar","","",null,null],[17,"XK_emspace","","",null,null],[17,"XK_enspace","","",null,null],[17,"XK_em3space","","",null,null],[17,"XK_em4space","","",null,null],[17,"XK_digitspace","","",null,null],[17,"XK_punctspace","","",null,null],[17,"XK_thinspace","","",null,null],[17,"XK_hairspace","","",null,null],[17,"XK_emdash","","",null,null],[17,"XK_endash","","",null,null],[17,"XK_signifblank","","",null,null],[17,"XK_ellipsis","","",null,null],[17,"XK_doubbaselinedot","","",null,null],[17,"XK_onethird","","",null,null],[17,"XK_twothirds","","",null,null],[17,"XK_onefifth","","",null,null],[17,"XK_twofifths","","",null,null],[17,"XK_threefifths","","",null,null],[17,"XK_fourfifths","","",null,null],[17,"XK_onesixth","","",null,null],[17,"XK_fivesixths","","",null,null],[17,"XK_careof","","",null,null],[17,"XK_figdash","","",null,null],[17,"XK_leftanglebracket","","",null,null],[17,"XK_decimalpoint","","",null,null],[17,"XK_rightanglebracket","","",null,null],[17,"XK_marker","","",null,null],[17,"XK_oneeighth","","",null,null],[17,"XK_threeeighths","","",null,null],[17,"XK_fiveeighths","","",null,null],[17,"XK_seveneighths","","",null,null],[17,"XK_trademark","","",null,null],[17,"XK_signaturemark","","",null,null],[17,"XK_trademarkincircle","","",null,null],[17,"XK_leftopentriangle","","",null,null],[17,"XK_rightopentriangle","","",null,null],[17,"XK_emopencircle","","",null,null],[17,"XK_emopenrectangle","","",null,null],[17,"XK_leftsinglequotemark","","",null,null],[17,"XK_rightsinglequotemark","","",null,null],[17,"XK_leftdoublequotemark","","",null,null],[17,"XK_rightdoublequotemark","","",null,null],[17,"XK_prescription","","",null,null],[17,"XK_minutes","","",null,null],[17,"XK_seconds","","",null,null],[17,"XK_latincross","","",null,null],[17,"XK_hexagram","","",null,null],[17,"XK_filledrectbullet","","",null,null],[17,"XK_filledlefttribullet","","",null,null],[17,"XK_filledrighttribullet","","",null,null],[17,"XK_emfilledcircle","","",null,null],[17,"XK_emfilledrect","","",null,null],[17,"XK_enopencircbullet","","",null,null],[17,"XK_enopensquarebullet","","",null,null],[17,"XK_openrectbullet","","",null,null],[17,"XK_opentribulletup","","",null,null],[17,"XK_opentribulletdown","","",null,null],[17,"XK_openstar","","",null,null],[17,"XK_enfilledcircbullet","","",null,null],[17,"XK_enfilledsqbullet","","",null,null],[17,"XK_filledtribulletup","","",null,null],[17,"XK_filledtribulletdown","","",null,null],[17,"XK_leftpointer","","",null,null],[17,"XK_rightpointer","","",null,null],[17,"XK_club","","",null,null],[17,"XK_diamond","","",null,null],[17,"XK_heart","","",null,null],[17,"XK_maltesecross","","",null,null],[17,"XK_dagger","","",null,null],[17,"XK_doubledagger","","",null,null],[17,"XK_checkmark","","",null,null],[17,"XK_ballotcross","","",null,null],[17,"XK_musicalsharp","","",null,null],[17,"XK_musicalflat","","",null,null],[17,"XK_malesymbol","","",null,null],[17,"XK_femalesymbol","","",null,null],[17,"XK_telephone","","",null,null],[17,"XK_telephonerecorder","","",null,null],[17,"XK_phonographcopyright","","",null,null],[17,"XK_caret","","",null,null],[17,"XK_singlelowquotemark","","",null,null],[17,"XK_doublelowquotemark","","",null,null],[17,"XK_cursor","","",null,null],[17,"XK_leftcaret","","",null,null],[17,"XK_rightcaret","","",null,null],[17,"XK_downcaret","","",null,null],[17,"XK_upcaret","","",null,null],[17,"XK_overbar","","",null,null],[17,"XK_downtack","","",null,null],[17,"XK_upshoe","","",null,null],[17,"XK_downstile","","",null,null],[17,"XK_underbar","","",null,null],[17,"XK_jot","","",null,null],[17,"XK_quad","","",null,null],[17,"XK_uptack","","",null,null],[17,"XK_circle","","",null,null],[17,"XK_upstile","","",null,null],[17,"XK_downshoe","","",null,null],[17,"XK_rightshoe","","",null,null],[17,"XK_leftshoe","","",null,null],[17,"XK_lefttack","","",null,null],[17,"XK_righttack","","",null,null],[17,"XK_hebrew_doublelowline","","",null,null],[17,"XK_hebrew_aleph","","",null,null],[17,"XK_hebrew_bet","","",null,null],[17,"XK_hebrew_beth","","",null,null],[17,"XK_hebrew_gimel","","",null,null],[17,"XK_hebrew_gimmel","","",null,null],[17,"XK_hebrew_dalet","","",null,null],[17,"XK_hebrew_daleth","","",null,null],[17,"XK_hebrew_he","","",null,null],[17,"XK_hebrew_waw","","",null,null],[17,"XK_hebrew_zain","","",null,null],[17,"XK_hebrew_zayin","","",null,null],[17,"XK_hebrew_chet","","",null,null],[17,"XK_hebrew_het","","",null,null],[17,"XK_hebrew_tet","","",null,null],[17,"XK_hebrew_teth","","",null,null],[17,"XK_hebrew_yod","","",null,null],[17,"XK_hebrew_finalkaph","","",null,null],[17,"XK_hebrew_kaph","","",null,null],[17,"XK_hebrew_lamed","","",null,null],[17,"XK_hebrew_finalmem","","",null,null],[17,"XK_hebrew_mem","","",null,null],[17,"XK_hebrew_finalnun","","",null,null],[17,"XK_hebrew_nun","","",null,null],[17,"XK_hebrew_samech","","",null,null],[17,"XK_hebrew_samekh","","",null,null],[17,"XK_hebrew_ayin","","",null,null],[17,"XK_hebrew_finalpe","","",null,null],[17,"XK_hebrew_pe","","",null,null],[17,"XK_hebrew_finalzade","","",null,null],[17,"XK_hebrew_finalzadi","","",null,null],[17,"XK_hebrew_zade","","",null,null],[17,"XK_hebrew_zadi","","",null,null],[17,"XK_hebrew_qoph","","",null,null],[17,"XK_hebrew_kuf","","",null,null],[17,"XK_hebrew_resh","","",null,null],[17,"XK_hebrew_shin","","",null,null],[17,"XK_hebrew_taw","","",null,null],[17,"XK_hebrew_taf","","",null,null],[17,"XK_Hebrew_switch","","",null,null],[17,"XF86XK_ModeLock","","",null,null],[17,"XF86XK_MonBrightnessUp","","",null,null],[17,"XF86XK_MonBrightnessDown","","",null,null],[17,"XF86XK_KbdLightOnOff","","",null,null],[17,"XF86XK_KbdBrightnessUp","","",null,null],[17,"XF86XK_KbdBrightnessDown","","",null,null],[17,"XF86XK_Standby","","",null,null],[17,"XF86XK_AudioLowerVolume","","",null,null],[17,"XF86XK_AudioMute","","",null,null],[17,"XF86XK_AudioRaiseVolume","","",null,null],[17,"XF86XK_AudioPlay","","",null,null],[17,"XF86XK_AudioStop","","",null,null],[17,"XF86XK_AudioPrev","","",null,null],[17,"XF86XK_AudioNext","","",null,null],[17,"XF86XK_HomePage","","",null,null],[17,"XF86XK_Mail","","",null,null],[17,"XF86XK_Start","","",null,null],[17,"XF86XK_Search","","",null,null],[17,"XF86XK_AudioRecord","","",null,null],[17,"XF86XK_Calculator","","",null,null],[17,"XF86XK_Memo","","",null,null],[17,"XF86XK_ToDoList","","",null,null],[17,"XF86XK_Calendar","","",null,null],[17,"XF86XK_PowerDown","","",null,null],[17,"XF86XK_ContrastAdjust","","",null,null],[17,"XF86XK_RockerUp","","",null,null],[17,"XF86XK_RockerDown","","",null,null],[17,"XF86XK_RockerEnter","","",null,null],[17,"XF86XK_Back","","",null,null],[17,"XF86XK_Forward","","",null,null],[17,"XF86XK_Stop","","",null,null],[17,"XF86XK_Refresh","","",null,null],[17,"XF86XK_PowerOff","","",null,null],[17,"XF86XK_WakeUp","","",null,null],[17,"XF86XK_Eject","","",null,null],[17,"XF86XK_ScreenSaver","","",null,null],[17,"XF86XK_WWW","","",null,null],[17,"XF86XK_Sleep","","",null,null],[17,"XF86XK_Favorites","","",null,null],[17,"XF86XK_AudioPause","","",null,null],[17,"XF86XK_AudioMedia","","",null,null],[17,"XF86XK_MyComputer","","",null,null],[17,"XF86XK_VendorHome","","",null,null],[17,"XF86XK_LightBulb","","",null,null],[17,"XF86XK_Shop","","",null,null],[17,"XF86XK_History","","",null,null],[17,"XF86XK_OpenURL","","",null,null],[17,"XF86XK_AddFavorite","","",null,null],[17,"XF86XK_HotLinks","","",null,null],[17,"XF86XK_BrightnessAdjust","","",null,null],[17,"XF86XK_Finance","","",null,null],[17,"XF86XK_Community","","",null,null],[17,"XF86XK_AudioRewind","","",null,null],[17,"XF86XK_BackForward","","",null,null],[17,"XF86XK_Launch0","","",null,null],[17,"XF86XK_Launch1","","",null,null],[17,"XF86XK_Launch2","","",null,null],[17,"XF86XK_Launch3","","",null,null],[17,"XF86XK_Launch4","","",null,null],[17,"XF86XK_Launch5","","",null,null],[17,"XF86XK_Launch6","","",null,null],[17,"XF86XK_Launch7","","",null,null],[17,"XF86XK_Launch8","","",null,null],[17,"XF86XK_Launch9","","",null,null],[17,"XF86XK_LaunchA","","",null,null],[17,"XF86XK_LaunchB","","",null,null],[17,"XF86XK_LaunchC","","",null,null],[17,"XF86XK_LaunchD","","",null,null],[17,"XF86XK_LaunchE","","",null,null],[17,"XF86XK_LaunchF","","",null,null],[17,"XF86XK_ApplicationLeft","","",null,null],[17,"XF86XK_ApplicationRight","","",null,null],[17,"XF86XK_Book","","",null,null],[17,"XF86XK_CD","","",null,null],[17,"XF86XK_Calculater","","",null,null],[17,"XF86XK_Clear","","",null,null],[17,"XF86XK_Close","","",null,null],[17,"XF86XK_Copy","","",null,null],[17,"XF86XK_Cut","","",null,null],[17,"XF86XK_Display","","",null,null],[17,"XF86XK_DOS","","",null,null],[17,"XF86XK_Documents","","",null,null],[17,"XF86XK_Excel","","",null,null],[17,"XF86XK_Explorer","","",null,null],[17,"XF86XK_Game","","",null,null],[17,"XF86XK_Go","","",null,null],[17,"XF86XK_iTouch","","",null,null],[17,"XF86XK_LogOff","","",null,null],[17,"XF86XK_Market","","",null,null],[17,"XF86XK_Meeting","","",null,null],[17,"XF86XK_MenuKB","","",null,null],[17,"XF86XK_MenuPB","","",null,null],[17,"XF86XK_MySites","","",null,null],[17,"XF86XK_New","","",null,null],[17,"XF86XK_News","","",null,null],[17,"XF86XK_OfficeHome","","",null,null],[17,"XF86XK_Open","","",null,null],[17,"XF86XK_Option","","",null,null],[17,"XF86XK_Paste","","",null,null],[17,"XF86XK_Phone","","",null,null],[17,"XF86XK_Q","","",null,null],[17,"XF86XK_Reply","","",null,null],[17,"XF86XK_Reload","","",null,null],[17,"XF86XK_RotateWindows","","",null,null],[17,"XF86XK_RotationPB","","",null,null],[17,"XF86XK_RotationKB","","",null,null],[17,"XF86XK_Save","","",null,null],[17,"XF86XK_ScrollUp","","",null,null],[17,"XF86XK_ScrollDown","","",null,null],[17,"XF86XK_ScrollClick","","",null,null],[17,"XF86XK_Send","","",null,null],[17,"XF86XK_Spell","","",null,null],[17,"XF86XK_SplitScreen","","",null,null],[17,"XF86XK_Support","","",null,null],[17,"XF86XK_TaskPane","","",null,null],[17,"XF86XK_Terminal","","",null,null],[17,"XF86XK_Tools","","",null,null],[17,"XF86XK_Travel","","",null,null],[17,"XF86XK_UserPB","","",null,null],[17,"XF86XK_User1KB","","",null,null],[17,"XF86XK_User2KB","","",null,null],[17,"XF86XK_Video","","",null,null],[17,"XF86XK_WheelButton","","",null,null],[17,"XF86XK_Word","","",null,null],[17,"XF86XK_Xfer","","",null,null],[17,"XF86XK_ZoomIn","","",null,null],[17,"XF86XK_ZoomOut","","",null,null],[17,"XF86XK_Away","","",null,null],[17,"XF86XK_Messenger","","",null,null],[17,"XF86XK_WebCam","","",null,null],[17,"XF86XK_MailForward","","",null,null],[17,"XF86XK_Pictures","","",null,null],[17,"XF86XK_Music","","",null,null],[17,"XF86XK_Battery","","",null,null],[17,"XF86XK_Bluetooth","","",null,null],[17,"XF86XK_WLAN","","",null,null],[17,"XF86XK_UWB","","",null,null],[17,"XF86XK_AudioForward","","",null,null],[17,"XF86XK_AudioRepeat","","",null,null],[17,"XF86XK_AudioRandomPlay","","",null,null],[17,"XF86XK_Subtitle","","",null,null],[17,"XF86XK_AudioCycleTrack","","",null,null],[17,"XF86XK_CycleAngle","","",null,null],[17,"XF86XK_FrameBack","","",null,null],[17,"XF86XK_FrameForward","","",null,null],[17,"XF86XK_Time","","",null,null],[17,"XF86XK_Select","","",null,null],[17,"XF86XK_View","","",null,null],[17,"XF86XK_TopMenu","","",null,null],[17,"XF86XK_Red","","",null,null],[17,"XF86XK_Green","","",null,null],[17,"XF86XK_Yellow","","",null,null],[17,"XF86XK_Blue","","",null,null],[17,"XF86XK_Suspend","","",null,null],[17,"XF86XK_Hibernate","","",null,null],[17,"XF86XK_TouchpadToggle","","",null,null],[17,"XF86XK_TouchpadOn","","",null,null],[17,"XF86XK_TouchpadOff","","",null,null],[17,"XF86XK_AudioMicMute","","",null,null],[17,"XF86XK_Switch_VT_1","","",null,null],[17,"XF86XK_Switch_VT_2","","",null,null],[17,"XF86XK_Switch_VT_3","","",null,null],[17,"XF86XK_Switch_VT_4","","",null,null],[17,"XF86XK_Switch_VT_5","","",null,null],[17,"XF86XK_Switch_VT_6","","",null,null],[17,"XF86XK_Switch_VT_7","","",null,null],[17,"XF86XK_Switch_VT_8","","",null,null],[17,"XF86XK_Switch_VT_9","","",null,null],[17,"XF86XK_Switch_VT_10","","",null,null],[17,"XF86XK_Switch_VT_11","","",null,null],[17,"XF86XK_Switch_VT_12","","",null,null],[17,"XF86XK_Ungrab","","",null,null],[17,"XF86XK_ClearGrab","","",null,null],[17,"XF86XK_Next_VMode","","",null,null],[17,"XF86XK_Prev_VMode","","",null,null],[17,"XF86XK_LogWindowTree","","",null,null],[17,"XF86XK_LogGrabInfo","","",null,null],[0,"xcursor","x11_dl","",null,null],[3,"Xcursor","x11_dl::xcursor","",null,null],[12,"XcursorAnimateCreate","","",3,null],[12,"XcursorAnimateDestroy","","",3,null],[12,"XcursorAnimateNext","","",3,null],[12,"XcursorCommentCreate","","",3,null],[12,"XcursorCommentDestroy","","",3,null],[12,"XcursorCommentsCreate","","",3,null],[12,"XcursorCommentsDestroy","","",3,null],[12,"XcursorCursorsCreate","","",3,null],[12,"XcursorCursorsDestroy","","",3,null],[12,"XcursorFileLoad","","",3,null],[12,"XcursorFileLoadAllImages","","",3,null],[12,"XcursorFileLoadImage","","",3,null],[12,"XcursorFileLoadImages","","",3,null],[12,"XcursorFilenameLoad","","",3,null],[12,"XcursorFilenameLoadAllImages","","",3,null],[12,"XcursorFilenameLoadCursor","","",3,null],[12,"XcursorFilenameLoadCursors","","",3,null],[12,"XcursorFilenameLoadImage","","",3,null],[12,"XcursorFilenameLoadImages","","",3,null],[12,"XcursorFilenameSave","","",3,null],[12,"XcursorFilenameSaveImages","","",3,null],[12,"XcursorFileSave","","",3,null],[12,"XcursorFileSaveImages","","",3,null],[12,"XcursorGetDefaultSize","","",3,null],[12,"XcursorGetTheme","","",3,null],[12,"XcursorGetThemeCore","","",3,null],[12,"XcursorImageCreate","","",3,null],[12,"XcursorImageDestroy","","",3,null],[12,"XcursorImageHash","","",3,null],[12,"XcursorImageLoadCursor","","",3,null],[12,"XcursorImagesCreate","","",3,null],[12,"XcursorImagesDestroy","","",3,null],[12,"XcursorImagesLoadCursor","","",3,null],[12,"XcursorImagesLoadCursors","","",3,null],[12,"XcursorImagesSetName","","",3,null],[12,"XcursorLibraryLoadCursor","","",3,null],[12,"XcursorLibraryLoadCursors","","",3,null],[12,"XcursorLibraryLoadImage","","",3,null],[12,"XcursorLibraryLoadImages","","",3,null],[12,"XcursorLibraryPath","","",3,null],[12,"XcursorLibraryShape","","",3,null],[12,"XcursorNoticeCreateBitmap","","",3,null],[12,"XcursorNoticePutBitmap","","",3,null],[12,"XcursorSetDefaultSize","","",3,null],[12,"XcursorSetTheme","","",3,null],[12,"XcursorSetThemeCore","","",3,null],[12,"XcursorShapeLoadCursor","","",3,null],[12,"XcursorShapeLoadCursors","","",3,null],[12,"XcursorShapeLoadImage","","",3,null],[12,"XcursorShapeLoadImages","","",3,null],[12,"XcursorSupportsAnim","","",3,null],[12,"XcursorSupportsARGB","","",3,null],[12,"XcursorTryShapeBitmapCursor","","",3,null],[12,"XcursorTryShapeCursor","","",3,null],[12,"XcursorXcFileLoad","","",3,null],[12,"XcursorXcFileLoadAllImages","","",3,null],[12,"XcursorXcFileLoadImage","","",3,null],[12,"XcursorXcFileLoadImages","","",3,null],[12,"XcursorXcFileSave","","",3,null],[3,"_XcursorAnimate","","",null,null],[12,"cursors","","",4,null],[12,"sequence","","",4,null],[3,"_XcursorChunkHeader","","",null,null],[12,"header","","",5,null],[12,"type_","","",5,null],[12,"subtype","","",5,null],[12,"version","","",5,null],[3,"_XcursorComment","","",null,null],[12,"version","","",6,null],[12,"comment_type","","",6,null],[12,"comment","","",6,null],[3,"_XcursorComments","","",null,null],[12,"ncomment","","",7,null],[12,"comments","","",7,null],[3,"_XcursorCursors","","",null,null],[12,"dpy","","",8,null],[12,"ref_","","",8,null],[12,"ncursor","","",8,null],[12,"cursors","","",8,null],[3,"_XcursorFile","","",null,null],[12,"closure","","",9,null],[12,"read","","",9,null],[12,"write","","",9,null],[12,"seek","","",9,null],[3,"_XcursorFileHeader","","",null,null],[12,"magic","","",10,null],[12,"header","","",10,null],[12,"version","","",10,null],[12,"ntoc","","",10,null],[12,"tocs","","",10,null],[3,"_XcursorFileToc","","",null,null],[12,"type_","","",11,null],[12,"subtype","","",11,null],[12,"position","","",11,null],[3,"_XcursorImage","","",null,null],[12,"version","","",12,null],[12,"size","","",12,null],[12,"width","","",12,null],[12,"height","","",12,null],[12,"xhot","","",12,null],[12,"yhot","","",12,null],[12,"delay","","",12,null],[12,"pixels","","",12,null],[3,"_XcursorImages","","",null,null],[12,"nimage","","",13,null],[12,"images","","",13,null],[12,"name","","",13,null],[6,"XcursorBool","","",null,null],[6,"XcursorDim","","",null,null],[6,"XcursorPixel","","",null,null],[6,"XcursorUInt","","",null,null],[6,"XcursorAnimate","","",null,null],[6,"XcursorChunkHeader","","",null,null],[6,"XcursorComment","","",null,null],[6,"XcursorComments","","",null,null],[6,"XcursorCursors","","",null,null],[6,"XcursorFile","","",null,null],[6,"XcursorFileHeader","","",null,null],[6,"XcursorFileToc","","",null,null],[6,"XcursorImage","","",null,null],[6,"XcursorImages","","",null,null],[11,"open","","",3,{"inputs":[],"output":{"name":"result"}}],[11,"clone","","",4,null],[11,"clone","","",5,null],[11,"clone","","",6,null],[11,"clone","","",7,null],[11,"clone","","",8,null],[11,"clone","","",9,null],[11,"clone","","",10,null],[11,"clone","","",11,null],[11,"clone","","",12,null],[11,"clone","","",13,null],[0,"xf86vmode","x11_dl","",null,null],[3,"Xf86vmode","x11_dl::xf86vmode","",null,null],[12,"XF86VidModeAddModeLine","","",14,null],[12,"XF86VidModeDeleteModeLine","","",14,null],[12,"XF86VidModeGetAllModeLines","","",14,null],[12,"XF86VidModeGetDotClocks","","",14,null],[12,"XF86VidModeGetGamma","","",14,null],[12,"XF86VidModeGetGammaRamp","","",14,null],[12,"XF86VidModeGetGammaRampSize","","",14,null],[12,"XF86VidModeGetModeLine","","",14,null],[12,"XF86VidModeGetMonitor","","",14,null],[12,"XF86VidModeGetPermissions","","",14,null],[12,"XF86VidModeGetViewPort","","",14,null],[12,"XF86VidModeLockModeSwitch","","",14,null],[12,"XF86VidModeModModeLine","","",14,null],[12,"XF86VidModeQueryExtension","","",14,null],[12,"XF86VidModeQueryVersion","","",14,null],[12,"XF86VidModeSetClientVersion","","",14,null],[12,"XF86VidModeSetGamma","","",14,null],[12,"XF86VidModeSetGammaRamp","","",14,null],[12,"XF86VidModeSetViewPort","","",14,null],[12,"XF86VidModeSwitchMode","","",14,null],[12,"XF86VidModeSwitchToMode","","",14,null],[12,"XF86VidModeValidateModeLine","","",14,null],[3,"XF86VidModeGamma","","",null,null],[12,"red","","",15,null],[12,"green","","",15,null],[12,"blue","","",15,null],[3,"XF86VidModeModeInfo","","",null,null],[12,"dotclock","","",16,null],[12,"hdisplay","","",16,null],[12,"hsyncstart","","",16,null],[12,"hsyncend","","",16,null],[12,"htotal","","",16,null],[12,"hskew","","",16,null],[12,"vdisplay","","",16,null],[12,"vsyncstart","","",16,null],[12,"vsyncend","","",16,null],[12,"vtotal","","",16,null],[12,"flags","","",16,null],[12,"privsize","","",16,null],[12,"private","","",16,null],[3,"XF86VidModeModeLine","","",null,null],[12,"hdisplay","","",17,null],[12,"hsyncstart","","",17,null],[12,"hsyncend","","",17,null],[12,"htotal","","",17,null],[12,"hskew","","",17,null],[12,"vdisplay","","",17,null],[12,"vsyncstart","","",17,null],[12,"vsyncend","","",17,null],[12,"vtotal","","",17,null],[12,"flags","","",17,null],[12,"privsize","","",17,null],[12,"private","","",17,null],[3,"XF86VidModeMonitor","","",null,null],[12,"vendor","","",18,null],[12,"model","","",18,null],[12,"EMPTY","","",18,null],[12,"nhsync","","",18,null],[12,"hsync","","",18,null],[12,"nvsync","","",18,null],[12,"vsync","","",18,null],[3,"XF86VidModeNotifyEvent","","",null,null],[12,"type_","","",19,null],[12,"serial","","",19,null],[12,"send_event","","",19,null],[12,"display","","",19,null],[12,"root","","",19,null],[12,"state","","",19,null],[12,"kind","","",19,null],[12,"forced","","",19,null],[12,"time","","",19,null],[3,"XF86VidModeSyncRange","","",null,null],[12,"hi","","",20,null],[12,"lo","","",20,null],[11,"open","","",14,{"inputs":[],"output":{"name":"result"}}],[11,"clone","","",15,null],[11,"eq","","",16,null],[11,"ne","","",16,null],[11,"clone","","",16,null],[11,"clone","","",17,null],[11,"clone","","",18,null],[11,"clone","","",19,null],[11,"clone","","",20,null],[0,"xfixes","x11_dl","",null,null],[6,"PointerBarrier","x11_dl::xfixes","",null,null],[0,"xinerama","x11_dl","",null,null],[3,"Xlib","x11_dl::xinerama","",null,null],[12,"XineramaIsActive","","",21,null],[12,"XineramaQueryExtension","","",21,null],[12,"XineramaQueryScreens","","",21,null],[12,"XineramaQueryVersion","","",21,null],[12,"XPanoramiXAllocInfo","","",21,null],[12,"XPanoramiXGetScreenCount","","",21,null],[12,"XPanoramiXGetScreenSize","","",21,null],[12,"XPanoramiXGetState","","",21,null],[12,"XPanoramiXQueryExtension","","",21,null],[12,"XPanoramiXQueryVersion","","",21,null],[3,"XineramaScreenInfo","","",null,null],[12,"screen_number","","",22,null],[12,"x_org","","",22,null],[12,"y_org","","",22,null],[12,"width","","",22,null],[12,"height","","",22,null],[3,"XPanoramiXInfo","","",null,null],[12,"window","","",23,null],[12,"screen","","",23,null],[12,"State","","",23,null],[12,"width","","",23,null],[12,"height","","",23,null],[12,"ScreenCount","","",23,null],[12,"eventMask","","",23,null],[11,"open","","",21,{"inputs":[],"output":{"name":"result"}}],[11,"eq","","",22,null],[11,"ne","","",22,null],[11,"clone","","",22,null],[11,"eq","","",23,null],[11,"ne","","",23,null],[11,"clone","","",23,null],[0,"xinput","x11_dl","",null,null],[3,"XInput","x11_dl::xinput","",null,null],[12,"XAllowDeviceEvents","","",24,null],[12,"XChangeDeviceControl","","",24,null],[12,"XChangeDeviceDontPropagateList","","",24,null],[12,"XChangeDeviceKeyMapping","","",24,null],[12,"XChangeDeviceProperty","","",24,null],[12,"XChangeFeedbackControl","","",24,null],[12,"XChangeKeyboardDevice","","",24,null],[12,"XChangePointerDevice","","",24,null],[12,"XCloseDevice","","",24,null],[12,"XDeleteDeviceProperty","","",24,null],[12,"XDeviceBell","","",24,null],[12,"XFreeDeviceControl","","",24,null],[12,"XFreeDeviceList","","",24,null],[12,"XFreeDeviceMotionEvents","","",24,null],[12,"XFreeDeviceState","","",24,null],[12,"XFreeFeedbackList","","",24,null],[12,"XGetDeviceButtonMapping","","",24,null],[12,"XGetDeviceControl","","",24,null],[12,"XGetDeviceDontPropagateList","","",24,null],[12,"XGetDeviceFocus","","",24,null],[12,"XGetDeviceKeyMapping","","",24,null],[12,"XGetDeviceModifierMapping","","",24,null],[12,"XGetDeviceMotionEvents","","",24,null],[12,"XGetDeviceProperty","","",24,null],[12,"XGetExtensionVersion","","",24,null],[12,"XGetFeedbackControl","","",24,null],[12,"XGetSelectedExtensionEvents","","",24,null],[12,"XGrabDevice","","",24,null],[12,"XGrabDeviceButton","","",24,null],[12,"XGrabDeviceKey","","",24,null],[12,"XListDeviceProperties","","",24,null],[12,"XListInputDevices","","",24,null],[12,"XOpenDevice","","",24,null],[12,"XQueryDeviceState","","",24,null],[12,"XSelectExtensionEvent","","",24,null],[12,"XSendExtensionEvent","","",24,null],[12,"XSetDeviceButtonMapping","","",24,null],[12,"XSetDeviceFocus","","",24,null],[12,"XSetDeviceMode","","",24,null],[12,"XSetDeviceModifierMapping","","",24,null],[12,"XSetDeviceValuators","","",24,null],[12,"XUngrabDevice","","",24,null],[12,"XUngrabDeviceButton","","",24,null],[12,"XUngrabDeviceKey","","",24,null],[3,"XDevice","","",null,null],[12,"device_id","","",25,null],[12,"num_classes","","",25,null],[12,"classes","","",25,null],[3,"XDeviceControl","","",null,null],[12,"control","","",26,null],[12,"length","","",26,null],[3,"XDeviceInfo","","",null,null],[12,"id","","",27,null],[12,"type_","","",27,null],[12,"name","","",27,null],[12,"num_classes","","",27,null],[12,"use_","","",27,null],[12,"inputclassinfo","","",27,null],[3,"XDeviceState","","",null,null],[12,"device_id","","",28,null],[12,"num_classes","","",28,null],[12,"data","","",28,null],[3,"XDeviceTimeCoord","","",null,null],[12,"time","","",29,null],[12,"data","","",29,null],[3,"XExtensionVersion","","",null,null],[12,"present","","",30,null],[12,"major_version","","",30,null],[12,"minor_version","","",30,null],[3,"XFeedbackControl","","",null,null],[12,"class","","",31,null],[12,"length","","",31,null],[12,"id","","",31,null],[3,"XFeedbackState","","",null,null],[12,"class","","",32,null],[12,"length","","",32,null],[12,"id","","",32,null],[3,"XInputClass","","",null,null],[12,"class","","",33,null],[12,"length","","",33,null],[3,"XInputClassInfo","","",null,null],[12,"input_class","","",34,null],[12,"event_type_base","","",34,null],[4,"_XAnyClassinfo","","",null,null],[6,"XAnyClassPtr","","",null,null],[11,"open","","",24,{"inputs":[],"output":{"name":"result"}}],[11,"eq","","",25,null],[11,"ne","","",25,null],[11,"clone","","",25,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"clone","","",26,null],[11,"eq","","",27,null],[11,"ne","","",27,null],[11,"clone","","",27,null],[11,"eq","","",28,null],[11,"ne","","",28,null],[11,"clone","","",28,null],[11,"eq","","",29,null],[11,"ne","","",29,null],[11,"clone","","",29,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"clone","","",30,null],[11,"eq","","",31,null],[11,"ne","","",31,null],[11,"clone","","",31,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"clone","","",32,null],[11,"eq","","",33,null],[11,"ne","","",33,null],[11,"clone","","",33,null],[11,"eq","","",34,null],[11,"ne","","",34,null],[11,"clone","","",34,null],[0,"xinput2","x11_dl","",null,null],[3,"XInput2","x11_dl::xinput2","",null,null],[12,"XIAllowEvents","","",35,null],[12,"XIAllowTouchEvents","","",35,null],[12,"XIBarrierReleasePointer","","",35,null],[12,"XIBarrierReleasePointers","","",35,null],[12,"XIChangeHierarchy","","",35,null],[12,"XIChangeProperty","","",35,null],[12,"XIDefineCursor","","",35,null],[12,"XIDeleteProperty","","",35,null],[12,"XIFreeDeviceInfo","","",35,null],[12,"XIGetClientPointer","","",35,null],[12,"XIGetFocus","","",35,null],[12,"XIGetProperty","","",35,null],[12,"XIGetSelectedEvents","","",35,null],[12,"XIGrabButton","","",35,null],[12,"XIGrabDevice","","",35,null],[12,"XIGrabEnter","","",35,null],[12,"XIGrabFocusIn","","",35,null],[12,"XIGrabKeycode","","",35,null],[12,"XIGrabTouchBegin","","",35,null],[12,"XIListProperties","","",35,null],[12,"XIQueryDevice","","",35,null],[12,"XIQueryPointer","","",35,null],[12,"XIQueryVersion","","",35,null],[12,"XISelectEvents","","",35,null],[12,"XISetClientPointer","","",35,null],[12,"XISetFocus","","",35,null],[12,"XIUndefineCursor","","",35,null],[12,"XIUngrabButton","","",35,null],[12,"XIUngrabDevice","","",35,null],[12,"XIUngrabEnter","","",35,null],[12,"XIUngrabFocusIn","","",35,null],[12,"XIUngrabKeycode","","",35,null],[12,"XIUngrabTouchBegin","","",35,null],[12,"XIWarpPointer","","",35,null],[3,"Struct_Unnamed1","","",null,null],[12,"_type","","",36,null],[12,"name","","",36,null],[12,"send_core","","",36,null],[12,"enable","","",36,null],[3,"Struct_Unnamed2","","",null,null],[12,"_type","","",37,null],[12,"deviceid","","",37,null],[12,"return_mode","","",37,null],[12,"return_pointer","","",37,null],[12,"return_keyboard","","",37,null],[3,"Struct_Unnamed3","","",null,null],[12,"_type","","",38,null],[12,"deviceid","","",38,null],[12,"new_master","","",38,null],[3,"Struct_Unnamed4","","",null,null],[12,"_type","","",39,null],[12,"deviceid","","",39,null],[3,"Union_Unnamed5","","",null,null],[12,"_bindgen_data_","","",40,null],[3,"Struct_Unnamed6","","",null,null],[12,"base","","",41,null],[12,"latched","","",41,null],[12,"locked","","",41,null],[12,"effective","","",41,null],[3,"Struct_Unnamed7","","",null,null],[12,"mask_len","","",42,null],[12,"mask","","",42,null],[3,"Struct_Unnamed8","","",null,null],[12,"mask_len","","",43,null],[12,"mask","","",43,null],[12,"values","","",43,null],[3,"Struct_Unnamed9","","",null,null],[12,"deviceid","","",44,null],[12,"mask_len","","",44,null],[12,"mask","","",44,null],[3,"Struct_Unnamed10","","",null,null],[12,"_type","","",45,null],[12,"sourceid","","",45,null],[3,"Struct_Unnamed11","","",null,null],[12,"_type","","",46,null],[12,"sourceid","","",46,null],[12,"num_buttons","","",46,null],[12,"labels","","",46,null],[12,"state","","",46,null],[3,"Struct_Unnamed12","","",null,null],[12,"_type","","",47,null],[12,"sourceid","","",47,null],[12,"num_keycodes","","",47,null],[12,"keycodes","","",47,null],[3,"Struct_Unnamed13","","",null,null],[12,"_type","","",48,null],[12,"sourceid","","",48,null],[12,"number","","",48,null],[12,"label","","",48,null],[12,"min","","",48,null],[12,"max","","",48,null],[12,"value","","",48,null],[12,"resolution","","",48,null],[12,"mode","","",48,null],[3,"Struct_Unnamed14","","",null,null],[12,"_type","","",49,null],[12,"sourceid","","",49,null],[12,"number","","",49,null],[12,"scroll_type","","",49,null],[12,"increment","","",49,null],[12,"flags","","",49,null],[3,"Struct_Unnamed15","","",null,null],[12,"_type","","",50,null],[12,"sourceid","","",50,null],[12,"mode","","",50,null],[12,"num_touches","","",50,null],[3,"Struct_Unnamed16","","",null,null],[12,"deviceid","","",51,null],[12,"name","","",51,null],[12,"_use","","",51,null],[12,"attachment","","",51,null],[12,"enabled","","",51,null],[12,"num_classes","","",51,null],[12,"classes","","",51,null],[3,"Struct_Unnamed17","","",null,null],[12,"modifiers","","",52,null],[12,"status","","",52,null],[3,"Struct_Unnamed18","","",null,null],[12,"deviceid","","",53,null],[12,"barrier","","",53,null],[12,"eventid","","",53,null],[3,"Struct_Unnamed19","","",null,null],[12,"_type","","",54,null],[12,"serial","","",54,null],[12,"send_event","","",54,null],[12,"display","","",54,null],[12,"extension","","",54,null],[12,"evtype","","",54,null],[12,"time","","",54,null],[3,"Struct_Unnamed20","","",null,null],[12,"deviceid","","",55,null],[12,"attachment","","",55,null],[12,"_use","","",55,null],[12,"enabled","","",55,null],[12,"flags","","",55,null],[3,"Struct_Unnamed21","","",null,null],[12,"_type","","",56,null],[12,"serial","","",56,null],[12,"send_event","","",56,null],[12,"display","","",56,null],[12,"extension","","",56,null],[12,"evtype","","",56,null],[12,"time","","",56,null],[12,"flags","","",56,null],[12,"num_info","","",56,null],[12,"info","","",56,null],[3,"Struct_Unnamed22","","",null,null],[12,"_type","","",57,null],[12,"serial","","",57,null],[12,"send_event","","",57,null],[12,"display","","",57,null],[12,"extension","","",57,null],[12,"evtype","","",57,null],[12,"time","","",57,null],[12,"deviceid","","",57,null],[12,"sourceid","","",57,null],[12,"reason","","",57,null],[12,"num_classes","","",57,null],[12,"classes","","",57,null],[3,"Struct_Unnamed23","","",null,null],[12,"_type","","",58,null],[12,"serial","","",58,null],[12,"send_event","","",58,null],[12,"display","","",58,null],[12,"extension","","",58,null],[12,"evtype","","",58,null],[12,"time","","",58,null],[12,"deviceid","","",58,null],[12,"sourceid","","",58,null],[12,"detail","","",58,null],[12,"root","","",58,null],[12,"event","","",58,null],[12,"child","","",58,null],[12,"root_x","","",58,null],[12,"root_y","","",58,null],[12,"event_x","","",58,null],[12,"event_y","","",58,null],[12,"flags","","",58,null],[12,"buttons","","",58,null],[12,"valuators","","",58,null],[12,"mods","","",58,null],[12,"group","","",58,null],[3,"Struct_Unnamed24","","",null,null],[12,"_type","","",59,null],[12,"serial","","",59,null],[12,"send_event","","",59,null],[12,"display","","",59,null],[12,"extension","","",59,null],[12,"evtype","","",59,null],[12,"time","","",59,null],[12,"deviceid","","",59,null],[12,"sourceid","","",59,null],[12,"detail","","",59,null],[12,"flags","","",59,null],[12,"valuators","","",59,null],[12,"raw_values","","",59,null],[3,"Struct_Unnamed25","","",null,null],[12,"_type","","",60,null],[12,"serial","","",60,null],[12,"send_event","","",60,null],[12,"display","","",60,null],[12,"extension","","",60,null],[12,"evtype","","",60,null],[12,"time","","",60,null],[12,"deviceid","","",60,null],[12,"sourceid","","",60,null],[12,"detail","","",60,null],[12,"root","","",60,null],[12,"event","","",60,null],[12,"child","","",60,null],[12,"root_x","","",60,null],[12,"root_y","","",60,null],[12,"event_x","","",60,null],[12,"event_y","","",60,null],[12,"mode","","",60,null],[12,"focus","","",60,null],[12,"same_screen","","",60,null],[12,"buttons","","",60,null],[12,"mods","","",60,null],[12,"group","","",60,null],[3,"Struct_Unnamed26","","",null,null],[12,"_type","","",61,null],[12,"serial","","",61,null],[12,"send_event","","",61,null],[12,"display","","",61,null],[12,"extension","","",61,null],[12,"evtype","","",61,null],[12,"time","","",61,null],[12,"deviceid","","",61,null],[12,"property","","",61,null],[12,"what","","",61,null],[3,"Struct_Unnamed27","","",null,null],[12,"_type","","",62,null],[12,"serial","","",62,null],[12,"send_event","","",62,null],[12,"display","","",62,null],[12,"extension","","",62,null],[12,"evtype","","",62,null],[12,"time","","",62,null],[12,"deviceid","","",62,null],[12,"sourceid","","",62,null],[12,"touchid","","",62,null],[12,"root","","",62,null],[12,"event","","",62,null],[12,"child","","",62,null],[12,"flags","","",62,null],[3,"Struct_Unnamed28","","",null,null],[12,"_type","","",63,null],[12,"serial","","",63,null],[12,"send_event","","",63,null],[12,"display","","",63,null],[12,"extension","","",63,null],[12,"evtype","","",63,null],[12,"time","","",63,null],[12,"deviceid","","",63,null],[12,"sourceid","","",63,null],[12,"event","","",63,null],[12,"root","","",63,null],[12,"root_x","","",63,null],[12,"root_y","","",63,null],[12,"dx","","",63,null],[12,"dy","","",63,null],[12,"dtime","","",63,null],[12,"flags","","",63,null],[12,"barrier","","",63,null],[12,"eventid","","",63,null],[5,"XISetMask","","",null,null],[5,"XIClearMask","","",null,null],[5,"XIMaskIsSet","","",null,null],[6,"XIAddMasterInfo","","",null,null],[6,"XIRemoveMasterInfo","","",null,null],[6,"XIAttachSlaveInfo","","",null,null],[6,"XIDetachSlaveInfo","","",null,null],[6,"XIAnyHierarchyChangeInfo","","",null,null],[6,"XIModifierState","","",null,null],[6,"XIGroupState","","",null,null],[6,"XIButtonState","","",null,null],[6,"XIValuatorState","","",null,null],[6,"XIEventMask","","",null,null],[6,"XIAnyClassInfo","","",null,null],[6,"XIButtonClassInfo","","",null,null],[6,"XIKeyClassInfo","","",null,null],[6,"XIValuatorClassInfo","","",null,null],[6,"XIScrollClassInfo","","",null,null],[6,"XITouchClassInfo","","",null,null],[6,"XIDeviceInfo","","",null,null],[6,"XIGrabModifiers","","",null,null],[6,"BarrierEventID","","",null,null],[6,"XIBarrierReleasePointerInfo","","",null,null],[6,"XIEvent","","",null,null],[6,"XIHierarchyInfo","","",null,null],[6,"XIHierarchyEvent","","",null,null],[6,"XIDeviceChangedEvent","","",null,null],[6,"XIDeviceEvent","","",null,null],[6,"XIRawEvent","","",null,null],[6,"XIEnterEvent","","",null,null],[6,"XILeaveEvent","","",null,null],[6,"XIFocusInEvent","","",null,null],[6,"XIFocusOutEvent","","",null,null],[6,"XIPropertyEvent","","",null,null],[6,"XITouchOwnershipEvent","","",null,null],[6,"XIBarrierEvent","","",null,null],[17,"XInput_2_0","","",null,null],[17,"XI_2_Major","","",null,null],[17,"XI_2_Minor","","",null,null],[17,"XIPropertyDeleted","","",null,null],[17,"XIPropertyCreated","","",null,null],[17,"XIPropertyModified","","",null,null],[17,"XIPropModeReplace","","",null,null],[17,"XIPropModePrepend","","",null,null],[17,"XIPropModeAppend","","",null,null],[17,"XINotifyNormal","","",null,null],[17,"XINotifyGrab","","",null,null],[17,"XINotifyUngrab","","",null,null],[17,"XINotifyWhileGrabbed","","",null,null],[17,"XINotifyPassiveGrab","","",null,null],[17,"XINotifyPassiveUngrab","","",null,null],[17,"XINotifyAncestor","","",null,null],[17,"XINotifyVirtual","","",null,null],[17,"XINotifyInferior","","",null,null],[17,"XINotifyNonlinear","","",null,null],[17,"XINotifyNonlinearVirtual","","",null,null],[17,"XINotifyPointer","","",null,null],[17,"XINotifyPointerRoot","","",null,null],[17,"XINotifyDetailNone","","",null,null],[17,"XIGrabModeSync","","",null,null],[17,"XIGrabModeAsync","","",null,null],[17,"XIGrabModeTouch","","",null,null],[17,"XIGrabSuccess","","",null,null],[17,"XIAlreadyGrabbed","","",null,null],[17,"XIGrabInvalidTime","","",null,null],[17,"XIGrabNotViewable","","",null,null],[17,"XIGrabFrozen","","",null,null],[17,"XIGrabtypeButton","","",null,null],[17,"XIGrabtypeKeycode","","",null,null],[17,"XIGrabtypeEnter","","",null,null],[17,"XIGrabtypeFocusIn","","",null,null],[17,"XIGrabtypeTouchBegin","","",null,null],[17,"XIAnyButton","","",null,null],[17,"XIAnyKeycode","","",null,null],[17,"XIAsyncDevice","","",null,null],[17,"XISyncDevice","","",null,null],[17,"XIReplayDevice","","",null,null],[17,"XIAsyncPairedDevice","","",null,null],[17,"XIAsyncPair","","",null,null],[17,"XISyncPair","","",null,null],[17,"XIAcceptTouch","","",null,null],[17,"XIRejectTouch","","",null,null],[17,"XISlaveSwitch","","",null,null],[17,"XIDeviceChange","","",null,null],[17,"XIMasterAdded","","",null,null],[17,"XIMasterRemoved","","",null,null],[17,"XISlaveAdded","","",null,null],[17,"XISlaveRemoved","","",null,null],[17,"XISlaveAttached","","",null,null],[17,"XISlaveDetached","","",null,null],[17,"XIDeviceEnabled","","",null,null],[17,"XIDeviceDisabled","","",null,null],[17,"XIAddMaster","","",null,null],[17,"XIRemoveMaster","","",null,null],[17,"XIAttachSlave","","",null,null],[17,"XIDetachSlave","","",null,null],[17,"XIAttachToMaster","","",null,null],[17,"XIFloating","","",null,null],[17,"XIModeRelative","","",null,null],[17,"XIModeAbsolute","","",null,null],[17,"XIMasterPointer","","",null,null],[17,"XIMasterKeyboard","","",null,null],[17,"XISlavePointer","","",null,null],[17,"XISlaveKeyboard","","",null,null],[17,"XIFloatingSlave","","",null,null],[17,"XIKeyClass","","",null,null],[17,"XIButtonClass","","",null,null],[17,"XIValuatorClass","","",null,null],[17,"XIScrollClass","","",null,null],[17,"XITouchClass","","",null,null],[17,"XIScrollTypeVertical","","",null,null],[17,"XIScrollTypeHorizontal","","",null,null],[17,"XIScrollFlagNoEmulation","","",null,null],[17,"XIScrollFlagPreferred","","",null,null],[17,"XIKeyRepeat","","",null,null],[17,"XIPointerEmulated","","",null,null],[17,"XITouchPendingEnd","","",null,null],[17,"XITouchEmulatingPointer","","",null,null],[17,"XIBarrierPointerReleased","","",null,null],[17,"XIBarrierDeviceIsGrabbed","","",null,null],[17,"XIDirectTouch","","",null,null],[17,"XIDependentTouch","","",null,null],[17,"XIAllDevices","","",null,null],[17,"XIAllMasterDevices","","",null,null],[17,"XI_DeviceChanged","","",null,null],[17,"XI_KeyPress","","",null,null],[17,"XI_KeyRelease","","",null,null],[17,"XI_ButtonPress","","",null,null],[17,"XI_ButtonRelease","","",null,null],[17,"XI_Motion","","",null,null],[17,"XI_Enter","","",null,null],[17,"XI_Leave","","",null,null],[17,"XI_FocusIn","","",null,null],[17,"XI_FocusOut","","",null,null],[17,"XI_HierarchyChanged","","",null,null],[17,"XI_PropertyEvent","","",null,null],[17,"XI_RawKeyPress","","",null,null],[17,"XI_RawKeyRelease","","",null,null],[17,"XI_RawButtonPress","","",null,null],[17,"XI_RawButtonRelease","","",null,null],[17,"XI_RawMotion","","",null,null],[17,"XI_TouchBegin","","",null,null],[17,"XI_TouchUpdate","","",null,null],[17,"XI_TouchEnd","","",null,null],[17,"XI_TouchOwnership","","",null,null],[17,"XI_RawTouchBegin","","",null,null],[17,"XI_RawTouchUpdate","","",null,null],[17,"XI_RawTouchEnd","","",null,null],[17,"XI_BarrierHit","","",null,null],[17,"XI_BarrierLeave","","",null,null],[17,"XI_LASTEVENT","","",null,null],[17,"XI_DeviceChangedMask","","",null,null],[17,"XI_KeyPressMask","","",null,null],[17,"XI_KeyReleaseMask","","",null,null],[17,"XI_ButtonPressMask","","",null,null],[17,"XI_ButtonReleaseMask","","",null,null],[17,"XI_MotionMask","","",null,null],[17,"XI_EnterMask","","",null,null],[17,"XI_LeaveMask","","",null,null],[17,"XI_FocusInMask","","",null,null],[17,"XI_FocusOutMask","","",null,null],[17,"XI_HierarchyChangedMask","","",null,null],[17,"XI_PropertyEventMask","","",null,null],[17,"XI_RawKeyPressMask","","",null,null],[17,"XI_RawKeyReleaseMask","","",null,null],[17,"XI_RawButtonPressMask","","",null,null],[17,"XI_RawButtonReleaseMask","","",null,null],[17,"XI_RawMotionMask","","",null,null],[17,"XI_TouchBeginMask","","",null,null],[17,"XI_TouchEndMask","","",null,null],[17,"XI_TouchOwnershipChangedMask","","",null,null],[17,"XI_TouchUpdateMask","","",null,null],[17,"XI_RawTouchBeginMask","","",null,null],[17,"XI_RawTouchEndMask","","",null,null],[17,"XI_RawTouchUpdateMask","","",null,null],[17,"XI_BarrierHitMask","","",null,null],[17,"XI_BarrierLeaveMask","","",null,null],[11,"open","","",35,{"inputs":[],"output":{"name":"result"}}],[11,"clone","","",36,null],[11,"default","","",36,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",37,null],[11,"default","","",37,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",38,null],[11,"default","","",38,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",39,null],[11,"default","","",39,{"inputs":[],"output":{"name":"self"}}],[11,"_type","","",40,null],[11,"add","","",40,null],[11,"remove","","",40,null],[11,"attach","","",40,null],[11,"detach","","",40,null],[11,"clone","","",40,null],[11,"default","","",40,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",41,null],[11,"default","","",41,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",42,null],[11,"default","","",42,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",43,null],[11,"default","","",43,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",44,null],[11,"default","","",44,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",45,null],[11,"default","","",45,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",46,null],[11,"default","","",46,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",47,null],[11,"default","","",47,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",48,null],[11,"default","","",48,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",49,null],[11,"default","","",49,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",50,null],[11,"default","","",50,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",51,null],[11,"default","","",51,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",52,null],[11,"default","","",52,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",53,null],[11,"default","","",53,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",54,null],[11,"default","","",54,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",55,null],[11,"default","","",55,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",56,null],[11,"default","","",56,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",57,null],[11,"default","","",57,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",58,null],[11,"default","","",58,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",59,null],[11,"default","","",59,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",60,null],[11,"default","","",60,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",61,null],[11,"default","","",61,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",62,null],[11,"default","","",62,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",63,null],[11,"default","","",63,{"inputs":[],"output":{"name":"self"}}],[0,"xlib","x11_dl","",null,null],[3,"Xlib","x11_dl::xlib","",null,null],[12,"XActivateScreenSaver","","",64,null],[12,"XAddConnectionWatch","","",64,null],[12,"XAddExtension","","",64,null],[12,"XAddHost","","",64,null],[12,"XAddHosts","","",64,null],[12,"XAddPixel","","",64,null],[12,"XAddToExtensionList","","",64,null],[12,"XAddToSaveSet","","",64,null],[12,"XAllocClassHint","","",64,null],[12,"XAllocColor","","",64,null],[12,"XAllocColorCells","","",64,null],[12,"XAllocColorPlanes","","",64,null],[12,"XAllocIconSize","","",64,null],[12,"XAllocNamedColor","","",64,null],[12,"XAllocSizeHints","","",64,null],[12,"XAllocStandardColormap","","",64,null],[12,"XAllocWMHints","","",64,null],[12,"XAllowEvents","","",64,null],[12,"XAllPlanes","","",64,null],[12,"XAutoRepeatOff","","",64,null],[12,"XAutoRepeatOn","","",64,null],[12,"XBaseFontNameListOfFontSet","","",64,null],[12,"XBell","","",64,null],[12,"XBitmapBitOrder","","",64,null],[12,"XBitmapPad","","",64,null],[12,"XBitmapUnit","","",64,null],[12,"XBlackPixel","","",64,null],[12,"XBlackPixelOfScreen","","",64,null],[12,"XCellsOfScreen","","",64,null],[12,"XChangeActivePointerGrab","","",64,null],[12,"XChangeGC","","",64,null],[12,"XChangeKeyboardControl","","",64,null],[12,"XChangeKeyboardMapping","","",64,null],[12,"XChangePointerControl","","",64,null],[12,"XChangeProperty","","",64,null],[12,"XChangeSaveSet","","",64,null],[12,"XChangeWindowAttributes","","",64,null],[12,"XCheckIfEvent","","",64,null],[12,"XCheckMaskEvent","","",64,null],[12,"XCheckTypedEvent","","",64,null],[12,"XCheckTypedWindowEvent","","",64,null],[12,"XCheckWindowEvent","","",64,null],[12,"XCirculateSubwindows","","",64,null],[12,"XCirculateSubwindowsDown","","",64,null],[12,"XCirculateSubwindowsUp","","",64,null],[12,"XClearArea","","",64,null],[12,"XClearWindow","","",64,null],[12,"XClipBox","","",64,null],[12,"XCloseDisplay","","",64,null],[12,"XCloseIM","","",64,null],[12,"XCloseOM","","",64,null],[12,"XcmsAddColorSpace","","",64,null],[12,"XcmsAddFunctionSet","","",64,null],[12,"XcmsAllocColor","","",64,null],[12,"XcmsAllocNamedColor","","",64,null],[12,"XcmsCCCOfColormap","","",64,null],[12,"XcmsCIELabClipab","","",64,null],[12,"XcmsCIELabClipL","","",64,null],[12,"XcmsCIELabClipLab","","",64,null],[12,"XcmsCIELabQueryMaxC","","",64,null],[12,"XcmsCIELabQueryMaxL","","",64,null],[12,"XcmsCIELabQueryMaxLC","","",64,null],[12,"XcmsCIELabQueryMinL","","",64,null],[12,"XcmsCIELabToCIEXYZ","","",64,null],[12,"XcmsCIELabWhiteShiftColors","","",64,null],[12,"XcmsCIELuvClipL","","",64,null],[12,"XcmsCIELuvClipLuv","","",64,null],[12,"XcmsCIELuvClipuv","","",64,null],[12,"XcmsCIELuvQueryMaxC","","",64,null],[12,"XcmsCIELuvQueryMaxL","","",64,null],[12,"XcmsCIELuvQueryMaxLC","","",64,null],[12,"XcmsCIELuvQueryMinL","","",64,null],[12,"XcmsCIELuvToCIEuvY","","",64,null],[12,"XcmsCIELuvWhiteShiftColors","","",64,null],[12,"XcmsCIEuvYToCIELuv","","",64,null],[12,"XcmsCIEuvYToCIEXYZ","","",64,null],[12,"XcmsCIEuvYToTekHVC","","",64,null],[12,"XcmsCIExyYToCIEXYZ","","",64,null],[12,"XcmsCIEXYZToCIELab","","",64,null],[12,"XcmsCIEXYZToCIEuvY","","",64,null],[12,"XcmsCIEXYZToCIExyY","","",64,null],[12,"XcmsCIEXYZToRGBi","","",64,null],[12,"XcmsClientWhitePointOfCCC","","",64,null],[12,"XcmsConvertColors","","",64,null],[12,"XcmsCreateCCC","","",64,null],[12,"XcmsDefaultCCC","","",64,null],[12,"XcmsDisplayOfCCC","","",64,null],[12,"XcmsFormatOfPrefix","","",64,null],[12,"XcmsFreeCCC","","",64,null],[12,"XcmsLookupColor","","",64,null],[12,"XcmsPrefixOfFormat","","",64,null],[12,"XcmsQueryBlack","","",64,null],[12,"XcmsQueryBlue","","",64,null],[12,"XcmsQueryColor","","",64,null],[12,"XcmsQueryColors","","",64,null],[12,"XcmsQueryGreen","","",64,null],[12,"XcmsQueryRed","","",64,null],[12,"XcmsQueryWhite","","",64,null],[12,"XcmsRGBiToCIEXYZ","","",64,null],[12,"XcmsRGBiToRGB","","",64,null],[12,"XcmsRGBToRGBi","","",64,null],[12,"XcmsScreenNumberOfCCC","","",64,null],[12,"XcmsScreenWhitePointOfCCC","","",64,null],[12,"XcmsSetCCCOfColormap","","",64,null],[12,"XcmsSetCompressionProc","","",64,null],[12,"XcmsSetWhiteAdjustProc","","",64,null],[12,"XcmsSetWhitePoint","","",64,null],[12,"XcmsStoreColor","","",64,null],[12,"XcmsStoreColors","","",64,null],[12,"XcmsTekHVCClipC","","",64,null],[12,"XcmsTekHVCClipV","","",64,null],[12,"XcmsTekHVCClipVC","","",64,null],[12,"XcmsTekHVCQueryMaxC","","",64,null],[12,"XcmsTekHVCQueryMaxV","","",64,null],[12,"XcmsTekHVCQueryMaxVC","","",64,null],[12,"XcmsTekHVCQueryMaxVSamples","","",64,null],[12,"XcmsTekHVCQueryMinV","","",64,null],[12,"XcmsTekHVCToCIEuvY","","",64,null],[12,"XcmsTekHVCWhiteShiftColors","","",64,null],[12,"XcmsVisualOfCCC","","",64,null],[12,"XConfigureWindow","","",64,null],[12,"XConnectionNumber","","",64,null],[12,"XContextDependentDrawing","","",64,null],[12,"XContextualDrawing","","",64,null],[12,"XConvertCase","","",64,null],[12,"XConvertSelection","","",64,null],[12,"XCopyArea","","",64,null],[12,"XCopyColormapAndFree","","",64,null],[12,"XCopyGC","","",64,null],[12,"XCopyPlane","","",64,null],[12,"XCreateBitmapFromData","","",64,null],[12,"XCreateColormap","","",64,null],[12,"XCreateFontCursor","","",64,null],[12,"XCreateFontSet","","",64,null],[12,"XCreateGC","","",64,null],[12,"XCreateGlyphCursor","","",64,null],[12,"XCreateImage","","",64,null],[12,"XCreatePixmap","","",64,null],[12,"XCreatePixmapCursor","","",64,null],[12,"XCreatePixmapFromBitmapData","","",64,null],[12,"XCreateRegion","","",64,null],[12,"XCreateSimpleWindow","","",64,null],[12,"XCreateWindow","","",64,null],[12,"XDefaultColormap","","",64,null],[12,"XDefaultColormapOfScreen","","",64,null],[12,"XDefaultDepth","","",64,null],[12,"XDefaultDepthOfScreen","","",64,null],[12,"XDefaultGC","","",64,null],[12,"XDefaultGCOfScreen","","",64,null],[12,"XDefaultRootWindow","","",64,null],[12,"XDefaultScreen","","",64,null],[12,"XDefaultScreenOfDisplay","","",64,null],[12,"XDefaultString","","",64,null],[12,"XDefaultVisual","","",64,null],[12,"XDefaultVisualOfScreen","","",64,null],[12,"XDefineCursor","","",64,null],[12,"XDeleteContext","","",64,null],[12,"XDeleteModifiermapEntry","","",64,null],[12,"XDeleteProperty","","",64,null],[12,"XDestroyIC","","",64,null],[12,"XDestroyImage","","",64,null],[12,"XDestroyOC","","",64,null],[12,"XDestroyRegion","","",64,null],[12,"XDestroySubwindows","","",64,null],[12,"XDestroyWindow","","",64,null],[12,"XDirectionalDependentDrawing","","",64,null],[12,"XDisableAccessControl","","",64,null],[12,"XDisplayCells","","",64,null],[12,"XDisplayHeight","","",64,null],[12,"XDisplayHeightMM","","",64,null],[12,"XDisplayKeycodes","","",64,null],[12,"XDisplayMotionBufferSize","","",64,null],[12,"XDisplayName","","",64,null],[12,"XDisplayOfIM","","",64,null],[12,"XDisplayOfOM","","",64,null],[12,"XDisplayOfScreen","","",64,null],[12,"XDisplayPlanes","","",64,null],[12,"XDisplayString","","",64,null],[12,"XDisplayWidth","","",64,null],[12,"XDisplayWidthMM","","",64,null],[12,"XDoesBackingStore","","",64,null],[12,"XDoesSaveUnders","","",64,null],[12,"XDrawArc","","",64,null],[12,"XDrawArcs","","",64,null],[12,"XDrawImageString","","",64,null],[12,"XDrawImageString16","","",64,null],[12,"XDrawLine","","",64,null],[12,"XDrawLines","","",64,null],[12,"XDrawPoint","","",64,null],[12,"XDrawPoints","","",64,null],[12,"XDrawRectangle","","",64,null],[12,"XDrawRectangles","","",64,null],[12,"XDrawSegments","","",64,null],[12,"XDrawString","","",64,null],[12,"XDrawString16","","",64,null],[12,"XDrawText","","",64,null],[12,"XDrawText16","","",64,null],[12,"XEHeadOfExtensionList","","",64,null],[12,"XEmptyRegion","","",64,null],[12,"XEnableAccessControl","","",64,null],[12,"XEqualRegion","","",64,null],[12,"XESetBeforeFlush","","",64,null],[12,"XESetCloseDisplay","","",64,null],[12,"XESetCopyEventCookie","","",64,null],[12,"XESetCopyGC","","",64,null],[12,"XESetCreateFont","","",64,null],[12,"XESetCreateGC","","",64,null],[12,"XESetError","","",64,null],[12,"XESetErrorString","","",64,null],[12,"XESetEventToWire","","",64,null],[12,"XESetFlushGC","","",64,null],[12,"XESetFreeFont","","",64,null],[12,"XESetFreeGC","","",64,null],[12,"XESetPrintErrorValues","","",64,null],[12,"XESetWireToError","","",64,null],[12,"XESetWireToEvent","","",64,null],[12,"XESetWireToEventCookie","","",64,null],[12,"XEventMaskOfScreen","","",64,null],[12,"XEventsQueued","","",64,null],[12,"XExtendedMaxRequestSize","","",64,null],[12,"XExtentsOfFontSet","","",64,null],[12,"XFetchBuffer","","",64,null],[12,"XFetchBytes","","",64,null],[12,"XFetchName","","",64,null],[12,"XFillArc","","",64,null],[12,"XFillArcs","","",64,null],[12,"XFillPolygon","","",64,null],[12,"XFillRectangle","","",64,null],[12,"XFillRectangles","","",64,null],[12,"XFilterEvent","","",64,null],[12,"XFindContext","","",64,null],[12,"XFindOnExtensionList","","",64,null],[12,"XFlush","","",64,null],[12,"XFlushGC","","",64,null],[12,"XFontsOfFontSet","","",64,null],[12,"XForceScreenSaver","","",64,null],[12,"XFree","","",64,null],[12,"XFreeColormap","","",64,null],[12,"XFreeColors","","",64,null],[12,"XFreeCursor","","",64,null],[12,"XFreeEventData","","",64,null],[12,"XFreeExtensionList","","",64,null],[12,"XFreeFont","","",64,null],[12,"XFreeFontInfo","","",64,null],[12,"XFreeFontNames","","",64,null],[12,"XFreeFontPath","","",64,null],[12,"XFreeFontSet","","",64,null],[12,"XFreeGC","","",64,null],[12,"XFreeModifiermap","","",64,null],[12,"XFreePixmap","","",64,null],[12,"XFreeStringList","","",64,null],[12,"XGContextFromGC","","",64,null],[12,"XGeometry","","",64,null],[12,"XGetAtomName","","",64,null],[12,"XGetAtomNames","","",64,null],[12,"XGetClassHint","","",64,null],[12,"XGetCommand","","",64,null],[12,"XGetDefault","","",64,null],[12,"XGetErrorDatabaseText","","",64,null],[12,"XGetErrorText","","",64,null],[12,"XGetEventData","","",64,null],[12,"XGetFontPath","","",64,null],[12,"XGetFontProperty","","",64,null],[12,"XGetGCValues","","",64,null],[12,"XGetGeometry","","",64,null],[12,"XGetIconName","","",64,null],[12,"XGetIconSizes","","",64,null],[12,"XGetImage","","",64,null],[12,"XGetInputFocus","","",64,null],[12,"XGetKeyboardControl","","",64,null],[12,"XGetKeyboardMapping","","",64,null],[12,"XGetModifierMapping","","",64,null],[12,"XGetMotionEvents","","",64,null],[12,"XGetNormalHints","","",64,null],[12,"XGetPixel","","",64,null],[12,"XGetPointerControl","","",64,null],[12,"XGetPointerMapping","","",64,null],[12,"XGetRGBColormaps","","",64,null],[12,"XGetScreenSaver","","",64,null],[12,"XGetSelectionOwner","","",64,null],[12,"XGetSizeHints","","",64,null],[12,"XGetStandardColormap","","",64,null],[12,"XGetSubImage","","",64,null],[12,"XGetTextProperty","","",64,null],[12,"XGetTransientForHint","","",64,null],[12,"XGetVisualInfo","","",64,null],[12,"XGetWindowAttributes","","",64,null],[12,"XGetWindowProperty","","",64,null],[12,"XGetWMClientMachine","","",64,null],[12,"XGetWMColormapWindows","","",64,null],[12,"XGetWMHints","","",64,null],[12,"XGetWMIconName","","",64,null],[12,"XGetWMName","","",64,null],[12,"XGetWMNormalHints","","",64,null],[12,"XGetWMProtocols","","",64,null],[12,"XGetWMSizeHints","","",64,null],[12,"XGetZoomHints","","",64,null],[12,"XGrabButton","","",64,null],[12,"XGrabKey","","",64,null],[12,"XGrabKeyboard","","",64,null],[12,"XGrabPointer","","",64,null],[12,"XGrabServer","","",64,null],[12,"XHeightMMOfScreen","","",64,null],[12,"XHeightOfScreen","","",64,null],[12,"XIconifyWindow","","",64,null],[12,"XIfEvent","","",64,null],[12,"XImageByteOrder","","",64,null],[12,"XIMOfIC","","",64,null],[12,"XInitExtension","","",64,null],[12,"XInitImage","","",64,null],[12,"XInitThreads","","",64,null],[12,"XInsertModifiermapEntry","","",64,null],[12,"XInstallColormap","","",64,null],[12,"XInternalConnectionNumbers","","",64,null],[12,"XInternAtom","","",64,null],[12,"XInternAtoms","","",64,null],[12,"XIntersectRegion","","",64,null],[12,"XkbAddDeviceLedInfo","","",64,null],[12,"XkbAddGeomColor","","",64,null],[12,"XkbAddGeomDoodad","","",64,null],[12,"XkbAddGeomKey","","",64,null],[12,"XkbAddGeomKeyAlias","","",64,null],[12,"XkbAddGeomOutline","","",64,null],[12,"XkbAddGeomOverlay","","",64,null],[12,"XkbAddGeomOverlayKey","","",64,null],[12,"XkbAddGeomOverlayRow","","",64,null],[12,"XkbAddGeomProperty","","",64,null],[12,"XkbAddGeomRow","","",64,null],[12,"XkbAddGeomSection","","",64,null],[12,"XkbAddGeomShape","","",64,null],[12,"XkbAddKeyType","","",64,null],[12,"XkbAllocClientMap","","",64,null],[12,"XkbAllocCompatMap","","",64,null],[12,"XkbAllocControls","","",64,null],[12,"XkbAllocDeviceInfo","","",64,null],[12,"XkbAllocGeomColors","","",64,null],[12,"XkbAllocGeomDoodads","","",64,null],[12,"XkbAllocGeometry","","",64,null],[12,"XkbAllocGeomKeyAliases","","",64,null],[12,"XkbAllocGeomKeys","","",64,null],[12,"XkbAllocGeomOutlines","","",64,null],[12,"XkbAllocGeomOverlayKeys","","",64,null],[12,"XkbAllocGeomOverlayRows","","",64,null],[12,"XkbAllocGeomOverlays","","",64,null],[12,"XkbAllocGeomPoints","","",64,null],[12,"XkbAllocGeomProps","","",64,null],[12,"XkbAllocGeomRows","","",64,null],[12,"XkbAllocGeomSectionDoodads","","",64,null],[12,"XkbAllocGeomSections","","",64,null],[12,"XkbAllocGeomShapes","","",64,null],[12,"XkbAllocIndicatorMaps","","",64,null],[12,"XkbAllocKeyboard","","",64,null],[12,"XkbAllocNames","","",64,null],[12,"XkbAllocServerMap","","",64,null],[12,"XkbApplyCompatMapToKey","","",64,null],[12,"XkbApplyVirtualModChanges","","",64,null],[12,"XkbBell","","",64,null],[12,"XkbBellEvent","","",64,null],[12,"XkbChangeDeviceInfo","","",64,null],[12,"XkbChangeEnabledControls","","",64,null],[12,"XkbChangeKeycodeRange","","",64,null],[12,"XkbChangeMap","","",64,null],[12,"XkbChangeNames","","",64,null],[12,"XkbChangeTypesOfKey","","",64,null],[12,"XkbComputeEffectiveMap","","",64,null],[12,"XkbComputeRowBounds","","",64,null],[12,"XkbComputeSectionBounds","","",64,null],[12,"XkbComputeShapeBounds","","",64,null],[12,"XkbComputeShapeTop","","",64,null],[12,"XkbCopyKeyType","","",64,null],[12,"XkbCopyKeyTypes","","",64,null],[12,"XkbDeviceBell","","",64,null],[12,"XkbDeviceBellEvent","","",64,null],[12,"XkbFindOverlayForKey","","",64,null],[12,"XkbForceBell","","",64,null],[12,"XkbForceDeviceBell","","",64,null],[12,"XkbFreeClientMap","","",64,null],[12,"XkbFreeCompatMap","","",64,null],[12,"XkbFreeComponentList","","",64,null],[12,"XkbFreeControls","","",64,null],[12,"XkbFreeDeviceInfo","","",64,null],[12,"XkbFreeGeomColors","","",64,null],[12,"XkbFreeGeomDoodads","","",64,null],[12,"XkbFreeGeometry","","",64,null],[12,"XkbFreeGeomKeyAliases","","",64,null],[12,"XkbFreeGeomKeys","","",64,null],[12,"XkbFreeGeomOutlines","","",64,null],[12,"XkbFreeGeomOverlayKeys","","",64,null],[12,"XkbFreeGeomOverlayRows","","",64,null],[12,"XkbFreeGeomOverlays","","",64,null],[12,"XkbFreeGeomPoints","","",64,null],[12,"XkbFreeGeomProperties","","",64,null],[12,"XkbFreeGeomRows","","",64,null],[12,"XkbFreeGeomSections","","",64,null],[12,"XkbFreeGeomShapes","","",64,null],[12,"XkbFreeIndicatorMaps","","",64,null],[12,"XkbFreeKeyboard","","",64,null],[12,"XkbFreeNames","","",64,null],[12,"XkbFreeServerMap","","",64,null],[12,"XkbGetAutoRepeatRate","","",64,null],[12,"XkbGetAutoResetControls","","",64,null],[12,"XkbGetCompatMap","","",64,null],[12,"XkbGetControls","","",64,null],[12,"XkbGetDetectableAutoRepeat","","",64,null],[12,"XkbGetDeviceButtonActions","","",64,null],[12,"XkbGetDeviceInfo","","",64,null],[12,"XkbGetDeviceInfoChanges","","",64,null],[12,"XkbGetDeviceLedInfo","","",64,null],[12,"XkbGetGeometry","","",64,null],[12,"XkbGetIndicatorMap","","",64,null],[12,"XkbGetIndicatorState","","",64,null],[12,"XkbGetKeyActions","","",64,null],[12,"XkbGetKeyBehaviors","","",64,null],[12,"XkbGetKeyboard","","",64,null],[12,"XkbGetKeyboardByName","","",64,null],[12,"XkbGetKeyExplicitComponents","","",64,null],[12,"XkbGetKeyModifierMap","","",64,null],[12,"XkbGetKeySyms","","",64,null],[12,"XkbGetKeyTypes","","",64,null],[12,"XkbGetKeyVirtualModMap","","",64,null],[12,"XkbGetMap","","",64,null],[12,"XkbGetMapChanges","","",64,null],[12,"XkbGetNamedDeviceIndicator","","",64,null],[12,"XkbGetNamedGeometry","","",64,null],[12,"XkbGetNamedIndicator","","",64,null],[12,"XkbGetNames","","",64,null],[12,"XkbGetPerClientControls","","",64,null],[12,"XkbGetState","","",64,null],[12,"XkbGetUpdatedMap","","",64,null],[12,"XkbGetVirtualMods","","",64,null],[12,"XkbGetXlibControls","","",64,null],[12,"XkbIgnoreExtension","","",64,null],[12,"XkbInitCanonicalKeyTypes","","",64,null],[12,"XkbKeycodeToKeysym","","",64,null],[12,"XkbKeysymToModifiers","","",64,null],[12,"XkbKeyTypesForCoreSymbols","","",64,null],[12,"XkbLatchGroup","","",64,null],[12,"XkbLatchModifiers","","",64,null],[12,"XkbLibraryVersion","","",64,null],[12,"XkbListComponents","","",64,null],[12,"XkbLockGroup","","",64,null],[12,"XkbLockModifiers","","",64,null],[12,"XkbLookupKeyBinding","","",64,null],[12,"XkbLookupKeySym","","",64,null],[12,"XkbNoteControlsChanges","","",64,null],[12,"XkbNoteDeviceChanges","","",64,null],[12,"XkbNoteMapChanges","","",64,null],[12,"XkbNoteNameChanges","","",64,null],[12,"XkbOpenDisplay","","",64,null],[12,"XkbQueryExtension","","",64,null],[12,"XkbRefreshKeyboardMapping","","",64,null],[12,"XkbResizeDeviceButtonActions","","",64,null],[12,"XkbResizeKeyActions","","",64,null],[12,"XkbResizeKeySyms","","",64,null],[12,"XkbResizeKeyType","","",64,null],[12,"XkbSelectEventDetails","","",64,null],[12,"XkbSelectEvents","","",64,null],[12,"XkbSetAtomFuncs","","",64,null],[12,"XkbSetAutoRepeatRate","","",64,null],[12,"XkbSetAutoResetControls","","",64,null],[12,"XkbSetCompatMap","","",64,null],[12,"XkbSetControls","","",64,null],[12,"XkbSetDebuggingFlags","","",64,null],[12,"XkbSetDetectableAutoRepeat","","",64,null],[12,"XkbSetDeviceButtonActions","","",64,null],[12,"XkbSetDeviceInfo","","",64,null],[12,"XkbSetDeviceLedInfo","","",64,null],[12,"XkbSetGeometry","","",64,null],[12,"XkbSetIgnoreLockMods","","",64,null],[12,"XkbSetIndicatorMap","","",64,null],[12,"XkbSetMap","","",64,null],[12,"XkbSetNamedDeviceIndicator","","",64,null],[12,"XkbSetNamedIndicator","","",64,null],[12,"XkbSetNames","","",64,null],[12,"XkbSetPerClientControls","","",64,null],[12,"XkbSetServerInternalMods","","",64,null],[12,"XkbSetXlibControls","","",64,null],[12,"XkbToControl","","",64,null],[12,"XkbTranslateKeyCode","","",64,null],[12,"XkbTranslateKeySym","","",64,null],[12,"XkbUpdateActionVirtualMods","","",64,null],[12,"XkbUpdateKeyTypeVirtualMods","","",64,null],[12,"XkbUpdateMapFromCore","","",64,null],[12,"XkbUseExtension","","",64,null],[12,"XkbVirtualModsToReal","","",64,null],[12,"XkbXlibControlsImplemented","","",64,null],[12,"XKeycodeToKeysym","","",64,null],[12,"XKeysymToKeycode","","",64,null],[12,"XKeysymToString","","",64,null],[12,"XKillClient","","",64,null],[12,"XLastKnownRequestProcessed","","",64,null],[12,"XListDepths","","",64,null],[12,"XListExtensions","","",64,null],[12,"XListFonts","","",64,null],[12,"XListFontsWithInfo","","",64,null],[12,"XListHosts","","",64,null],[12,"XListInstalledColormaps","","",64,null],[12,"XListPixmapFormats","","",64,null],[12,"XListProperties","","",64,null],[12,"XLoadFont","","",64,null],[12,"XLoadQueryFont","","",64,null],[12,"XLocaleOfFontSet","","",64,null],[12,"XLocaleOfIM","","",64,null],[12,"XLocaleOfOM","","",64,null],[12,"XLockDisplay","","",64,null],[12,"XLookupColor","","",64,null],[12,"XLookupKeysym","","",64,null],[12,"XLookupString","","",64,null],[12,"XLowerWindow","","",64,null],[12,"XMapRaised","","",64,null],[12,"XMapSubwindows","","",64,null],[12,"XMapWindow","","",64,null],[12,"XMaskEvent","","",64,null],[12,"XMatchVisualInfo","","",64,null],[12,"XMaxCmapsOfScreen","","",64,null],[12,"XMaxRequestSize","","",64,null],[12,"XmbDrawImageString","","",64,null],[12,"XmbDrawString","","",64,null],[12,"XmbDrawText","","",64,null],[12,"XmbLookupString","","",64,null],[12,"XmbResetIC","","",64,null],[12,"XmbSetWMProperties","","",64,null],[12,"XmbTextEscapement","","",64,null],[12,"XmbTextExtents","","",64,null],[12,"XmbTextListToTextProperty","","",64,null],[12,"XmbTextPerCharExtents","","",64,null],[12,"XmbTextPropertyToTextList","","",64,null],[12,"XMinCmapsOfScreen","","",64,null],[12,"XMoveResizeWindow","","",64,null],[12,"XMoveWindow","","",64,null],[12,"XNewModifiermap","","",64,null],[12,"XNextEvent","","",64,null],[12,"XNextRequest","","",64,null],[12,"XNoOp","","",64,null],[12,"XOffsetRegion","","",64,null],[12,"XOMOfOC","","",64,null],[12,"XOpenDisplay","","",64,null],[12,"XOpenIM","","",64,null],[12,"XOpenOM","","",64,null],[12,"XParseColor","","",64,null],[12,"XParseGeometry","","",64,null],[12,"XPeekEvent","","",64,null],[12,"XPeekIfEvent","","",64,null],[12,"XPending","","",64,null],[12,"Xpermalloc","","",64,null],[12,"XPlanesOfScreen","","",64,null],[12,"XPointInRegion","","",64,null],[12,"XPolygonRegion","","",64,null],[12,"XProcessInternalConnection","","",64,null],[12,"XProtocolRevision","","",64,null],[12,"XProtocolVersion","","",64,null],[12,"XPutBackEvent","","",64,null],[12,"XPutImage","","",64,null],[12,"XPutPixel","","",64,null],[12,"XQLength","","",64,null],[12,"XQueryBestCursor","","",64,null],[12,"XQueryBestSize","","",64,null],[12,"XQueryBestStipple","","",64,null],[12,"XQueryBestTile","","",64,null],[12,"XQueryColor","","",64,null],[12,"XQueryColors","","",64,null],[12,"XQueryExtension","","",64,null],[12,"XQueryFont","","",64,null],[12,"XQueryKeymap","","",64,null],[12,"XQueryPointer","","",64,null],[12,"XQueryTextExtents","","",64,null],[12,"XQueryTextExtents16","","",64,null],[12,"XQueryTree","","",64,null],[12,"XRaiseWindow","","",64,null],[12,"XReadBitmapFile","","",64,null],[12,"XReadBitmapFileData","","",64,null],[12,"XRebindKeysym","","",64,null],[12,"XRecolorCursor","","",64,null],[12,"XReconfigureWMWindow","","",64,null],[12,"XRectInRegion","","",64,null],[12,"XRefreshKeyboardMapping","","",64,null],[12,"XRegisterIMInstantiateCallback","","",64,null],[12,"XRemoveConnectionWatch","","",64,null],[12,"XRemoveFromSaveSet","","",64,null],[12,"XRemoveHost","","",64,null],[12,"XRemoveHosts","","",64,null],[12,"XReparentWindow","","",64,null],[12,"XResetScreenSaver","","",64,null],[12,"XResizeWindow","","",64,null],[12,"XResourceManagerString","","",64,null],[12,"XRestackWindows","","",64,null],[12,"XrmCombineDatabase","","",64,null],[12,"XrmCombineFileDatabase","","",64,null],[12,"XrmDestroyDatabase","","",64,null],[12,"XrmEnumerateDatabase","","",64,null],[12,"XrmGetDatabase","","",64,null],[12,"XrmGetFileDatabase","","",64,null],[12,"XrmGetResource","","",64,null],[12,"XrmGetStringDatabase","","",64,null],[12,"XrmInitialize","","",64,null],[12,"XrmLocaleOfDatabase","","",64,null],[12,"XrmMergeDatabases","","",64,null],[12,"XrmParseCommand","","",64,null],[12,"XrmPermStringToQuark","","",64,null],[12,"XrmPutFileDatabase","","",64,null],[12,"XrmPutLineResource","","",64,null],[12,"XrmPutResource","","",64,null],[12,"XrmPutStringResource","","",64,null],[12,"XrmQGetResource","","",64,null],[12,"XrmQGetSearchList","","",64,null],[12,"XrmQGetSearchResource","","",64,null],[12,"XrmQPutResource","","",64,null],[12,"XrmQPutStringResource","","",64,null],[12,"XrmQuarkToString","","",64,null],[12,"XrmSetDatabase","","",64,null],[12,"XrmStringToBindingQuarkList","","",64,null],[12,"XrmStringToQuark","","",64,null],[12,"XrmStringToQuarkList","","",64,null],[12,"XrmUniqueQuark","","",64,null],[12,"XRootWindow","","",64,null],[12,"XRootWindowOfScreen","","",64,null],[12,"XRotateBuffers","","",64,null],[12,"XRotateWindowProperties","","",64,null],[12,"XSaveContext","","",64,null],[12,"XScreenCount","","",64,null],[12,"XScreenNumberOfScreen","","",64,null],[12,"XScreenOfDisplay","","",64,null],[12,"XScreenResourceString","","",64,null],[12,"XSelectInput","","",64,null],[12,"XSendEvent","","",64,null],[12,"XServerVendor","","",64,null],[12,"XSetAccessControl","","",64,null],[12,"XSetAfterFunction","","",64,null],[12,"XSetArcMode","","",64,null],[12,"XSetAuthorization","","",64,null],[12,"XSetBackground","","",64,null],[12,"XSetClassHint","","",64,null],[12,"XSetClipMask","","",64,null],[12,"XSetClipOrigin","","",64,null],[12,"XSetClipRectangles","","",64,null],[12,"XSetCloseDownMode","","",64,null],[12,"XSetCommand","","",64,null],[12,"XSetDashes","","",64,null],[12,"XSetErrorHandler","","",64,null],[12,"XSetFillRule","","",64,null],[12,"XSetFillStyle","","",64,null],[12,"XSetFont","","",64,null],[12,"XSetFontPath","","",64,null],[12,"XSetForeground","","",64,null],[12,"XSetFunction","","",64,null],[12,"XSetGraphicsExposures","","",64,null],[12,"XSetICFocus","","",64,null],[12,"XSetIconName","","",64,null],[12,"XSetIconSizes","","",64,null],[12,"XSetInputFocus","","",64,null],[12,"XSetIOErrorHandler","","",64,null],[12,"XSetLineAttributes","","",64,null],[12,"XSetLocaleModifiers","","",64,null],[12,"XSetModifierMapping","","",64,null],[12,"XSetNormalHints","","",64,null],[12,"XSetPlaneMask","","",64,null],[12,"XSetPointerMapping","","",64,null],[12,"XSetRegion","","",64,null],[12,"XSetRGBColormaps","","",64,null],[12,"XSetScreenSaver","","",64,null],[12,"XSetSelectionOwner","","",64,null],[12,"XSetSizeHints","","",64,null],[12,"XSetStandardColormap","","",64,null],[12,"XSetStandardProperties","","",64,null],[12,"XSetState","","",64,null],[12,"XSetStipple","","",64,null],[12,"XSetSubwindowMode","","",64,null],[12,"XSetTextProperty","","",64,null],[12,"XSetTile","","",64,null],[12,"XSetTransientForHint","","",64,null],[12,"XSetTSOrigin","","",64,null],[12,"XSetWindowBackground","","",64,null],[12,"XSetWindowBackgroundPixmap","","",64,null],[12,"XSetWindowBorder","","",64,null],[12,"XSetWindowBorderPixmap","","",64,null],[12,"XSetWindowBorderWidth","","",64,null],[12,"XSetWindowColormap","","",64,null],[12,"XSetWMClientMachine","","",64,null],[12,"XSetWMColormapWindows","","",64,null],[12,"XSetWMHints","","",64,null],[12,"XSetWMIconName","","",64,null],[12,"XSetWMName","","",64,null],[12,"XSetWMNormalHints","","",64,null],[12,"XSetWMProperties","","",64,null],[12,"XSetWMProtocols","","",64,null],[12,"XSetWMSizeHints","","",64,null],[12,"XSetZoomHints","","",64,null],[12,"XShrinkRegion","","",64,null],[12,"XStoreBuffer","","",64,null],[12,"XStoreBytes","","",64,null],[12,"XStoreColor","","",64,null],[12,"XStoreColors","","",64,null],[12,"XStoreName","","",64,null],[12,"XStoreNamedColor","","",64,null],[12,"XStringListToTextProperty","","",64,null],[12,"XStringToKeysym","","",64,null],[12,"XSubImage","","",64,null],[12,"XSubtractRegion","","",64,null],[12,"XSupportsLocale","","",64,null],[12,"XSync","","",64,null],[12,"XSynchronize","","",64,null],[12,"XTextExtents","","",64,null],[12,"XTextExtents16","","",64,null],[12,"XTextPropertyToStringList","","",64,null],[12,"XTextWidth","","",64,null],[12,"XTextWidth16","","",64,null],[12,"XTranslateCoordinates","","",64,null],[12,"XUndefineCursor","","",64,null],[12,"XUngrabButton","","",64,null],[12,"XUngrabKey","","",64,null],[12,"XUngrabKeyboard","","",64,null],[12,"XUngrabPointer","","",64,null],[12,"XUngrabServer","","",64,null],[12,"XUninstallColormap","","",64,null],[12,"XUnionRectWithRegion","","",64,null],[12,"XUnionRegion","","",64,null],[12,"XUnloadFont","","",64,null],[12,"XUnlockDisplay","","",64,null],[12,"XUnmapSubwindows","","",64,null],[12,"XUnmapWindow","","",64,null],[12,"XUnregisterIMInstantiateCallback","","",64,null],[12,"XUnsetICFocus","","",64,null],[12,"Xutf8DrawImageString","","",64,null],[12,"Xutf8DrawString","","",64,null],[12,"Xutf8DrawText","","",64,null],[12,"Xutf8LookupString","","",64,null],[12,"Xutf8ResetIC","","",64,null],[12,"Xutf8SetWMProperties","","",64,null],[12,"Xutf8TextEscapement","","",64,null],[12,"Xutf8TextExtents","","",64,null],[12,"Xutf8TextListToTextProperty","","",64,null],[12,"Xutf8TextPerCharExtents","","",64,null],[12,"Xutf8TextPropertyToTextList","","",64,null],[12,"XVendorRelease","","",64,null],[12,"XVisualIDFromVisual","","",64,null],[12,"XWarpPointer","","",64,null],[12,"XwcDrawImageString","","",64,null],[12,"XwcDrawString","","",64,null],[12,"XwcDrawText","","",64,null],[12,"XwcFreeStringList","","",64,null],[12,"XwcLookupString","","",64,null],[12,"XwcResetIC","","",64,null],[12,"XwcTextEscapement","","",64,null],[12,"XwcTextExtents","","",64,null],[12,"XwcTextListToTextProperty","","",64,null],[12,"XwcTextPerCharExtents","","",64,null],[12,"XwcTextPropertyToTextList","","",64,null],[12,"XWhitePixel","","",64,null],[12,"XWhitePixelOfScreen","","",64,null],[12,"XWidthMMOfScreen","","",64,null],[12,"XWidthOfScreen","","",64,null],[12,"XWindowEvent","","",64,null],[12,"XWithdrawWindow","","",64,null],[12,"XWMGeometry","","",64,null],[12,"XWriteBitmapFile","","",64,null],[12,"XXorRegion","","",64,null],[12,"XCreateIC","","",64,null],[12,"XCreateOC","","",64,null],[12,"XGetICValues","","",64,null],[12,"XGetIMValues","","",64,null],[12,"XGetOCValues","","",64,null],[12,"XGetOMValues","","",64,null],[12,"XSetICValues","","",64,null],[12,"XSetIMValues","","",64,null],[12,"XSetOCValues","","",64,null],[12,"XSetOMValues","","",64,null],[12,"XVaCreateNestedList","","",64,null],[3,"_XcmsCCC","","",null,null],[3,"XcmsColor","","",null,null],[3,"_XcmsColorSpace","","",null,null],[3,"_XcmsFunctionSet","","",null,null],[3,"_XkbAction","","",null,null],[3,"_XkbBounds","","",null,null],[3,"_XkbChanges","","",null,null],[3,"_XkbClientMapRec","","",null,null],[3,"_XkbColor","","",null,null],[3,"_XkbComponentList","","",null,null],[3,"_XkbComponentNames","","",null,null],[3,"_XkbControls","","",null,null],[3,"_XkbControlsChanges","","",null,null],[3,"_XkbControlsNotify","","",null,null],[3,"_XkbDeviceChanges","","",null,null],[3,"_XkbDeviceInfo","","",null,null],[3,"_XkbDeviceLedInfo","","",null,null],[3,"_XkbDoodad","","",null,null],[3,"_XkbExtensionDeviceNotify","","",null,null],[3,"_XkbGeometry","","",null,null],[3,"_XkbGeometrySizes","","",null,null],[3,"_XkbIndicatorMapRec","","",null,null],[3,"_XkbKey","","",null,null],[3,"_XkbKeyType","","",null,null],[3,"_XkbMapChanges","","",null,null],[3,"_XkbMapNotifyEvent","","",null,null],[3,"_XkbMods","","",null,null],[3,"_XkbNameChanges","","",null,null],[3,"_XkbNamesNotify","","",null,null],[3,"_XkbOutline","","",null,null],[3,"_XkbOverlay","","",null,null],[3,"_XkbOverlayKey","","",null,null],[3,"_XkbOverlayRow","","",null,null],[3,"_XkbProperty","","",null,null],[3,"_XkbRow","","",null,null],[3,"_XkbSection","","",null,null],[3,"_XkbServerMapRec","","",null,null],[3,"_XkbShape","","",null,null],[3,"_XkbStateRec","","",null,null],[3,"_XkbSymInterpretRec","","",null,null],[3,"XEvent","","",null,null],[12,"pad","","",65,null],[3,"XAnyEvent","","",null,null],[12,"type_","","",66,null],[12,"serial","","",66,null],[12,"send_event","","",66,null],[12,"display","","",66,null],[12,"window","","",66,null],[3,"XButtonEvent","","",null,null],[12,"type_","","",67,null],[12,"serial","","",67,null],[12,"send_event","","",67,null],[12,"display","","",67,null],[12,"window","","",67,null],[12,"root","","",67,null],[12,"subwindow","","",67,null],[12,"time","","",67,null],[12,"x","","",67,null],[12,"y","","",67,null],[12,"x_root","","",67,null],[12,"y_root","","",67,null],[12,"state","","",67,null],[12,"button","","",67,null],[12,"same_screen","","",67,null],[3,"XCirculateEvent","","",null,null],[12,"type_","","",68,null],[12,"serial","","",68,null],[12,"send_event","","",68,null],[12,"display","","",68,null],[12,"event","","",68,null],[12,"window","","",68,null],[12,"place","","",68,null],[3,"XCirculateRequestEvent","","",null,null],[12,"type_","","",69,null],[12,"serial","","",69,null],[12,"send_event","","",69,null],[12,"display","","",69,null],[12,"parent","","",69,null],[12,"window","","",69,null],[12,"place","","",69,null],[3,"XClientMessageEvent","","",null,null],[12,"type_","","",70,null],[12,"serial","","",70,null],[12,"send_event","","",70,null],[12,"display","","",70,null],[12,"window","","",70,null],[12,"message_type","","",70,null],[12,"format","","",70,null],[12,"data","","",70,null],[3,"XColormapEvent","","",null,null],[12,"type_","","",71,null],[12,"serial","","",71,null],[12,"send_event","","",71,null],[12,"display","","",71,null],[12,"window","","",71,null],[12,"colormap","","",71,null],[12,"new","","",71,null],[12,"state","","",71,null],[3,"XConfigureEvent","","",null,null],[12,"type_","","",72,null],[12,"serial","","",72,null],[12,"send_event","","",72,null],[12,"display","","",72,null],[12,"event","","",72,null],[12,"window","","",72,null],[12,"x","","",72,null],[12,"y","","",72,null],[12,"width","","",72,null],[12,"height","","",72,null],[12,"border_width","","",72,null],[12,"above","","",72,null],[12,"override_redirect","","",72,null],[3,"XConfigureRequestEvent","","",null,null],[12,"type_","","",73,null],[12,"serial","","",73,null],[12,"send_event","","",73,null],[12,"display","","",73,null],[12,"parent","","",73,null],[12,"window","","",73,null],[12,"x","","",73,null],[12,"y","","",73,null],[12,"width","","",73,null],[12,"height","","",73,null],[12,"border_width","","",73,null],[12,"above","","",73,null],[12,"detail","","",73,null],[12,"value_mask","","",73,null],[3,"XCreateWindowEvent","","",null,null],[12,"type_","","",74,null],[12,"serial","","",74,null],[12,"send_event","","",74,null],[12,"display","","",74,null],[12,"parent","","",74,null],[12,"window","","",74,null],[12,"x","","",74,null],[12,"y","","",74,null],[12,"width","","",74,null],[12,"height","","",74,null],[12,"border_width","","",74,null],[12,"override_redirect","","",74,null],[3,"XCrossingEvent","","",null,null],[12,"type_","","",75,null],[12,"serial","","",75,null],[12,"send_event","","",75,null],[12,"display","","",75,null],[12,"window","","",75,null],[12,"root","","",75,null],[12,"subwindow","","",75,null],[12,"time","","",75,null],[12,"x","","",75,null],[12,"y","","",75,null],[12,"x_root","","",75,null],[12,"y_root","","",75,null],[12,"mode","","",75,null],[12,"detail","","",75,null],[12,"same_screen","","",75,null],[12,"focus","","",75,null],[12,"state","","",75,null],[3,"XDestroyWindowEvent","","",null,null],[12,"type_","","",76,null],[12,"serial","","",76,null],[12,"send_event","","",76,null],[12,"display","","",76,null],[12,"event","","",76,null],[12,"window","","",76,null],[3,"XErrorEvent","","",null,null],[12,"type_","","",77,null],[12,"display","","",77,null],[12,"resourceid","","",77,null],[12,"serial","","",77,null],[12,"error_code","","",77,null],[12,"request_code","","",77,null],[12,"minor_code","","",77,null],[3,"XExposeEvent","","",null,null],[12,"type_","","",78,null],[12,"serial","","",78,null],[12,"send_event","","",78,null],[12,"display","","",78,null],[12,"window","","",78,null],[12,"x","","",78,null],[12,"y","","",78,null],[12,"width","","",78,null],[12,"height","","",78,null],[12,"count","","",78,null],[3,"XFocusChangeEvent","","",null,null],[12,"type_","","",79,null],[12,"serial","","",79,null],[12,"send_event","","",79,null],[12,"display","","",79,null],[12,"window","","",79,null],[12,"mode","","",79,null],[12,"detail","","",79,null],[3,"XGraphicsExposeEvent","","",null,null],[12,"type_","","",80,null],[12,"serial","","",80,null],[12,"send_event","","",80,null],[12,"display","","",80,null],[12,"drawable","","",80,null],[12,"x","","",80,null],[12,"y","","",80,null],[12,"width","","",80,null],[12,"height","","",80,null],[12,"count","","",80,null],[12,"major_code","","",80,null],[12,"minor_code","","",80,null],[3,"XGravityEvent","","",null,null],[12,"type_","","",81,null],[12,"serial","","",81,null],[12,"send_event","","",81,null],[12,"display","","",81,null],[12,"event","","",81,null],[12,"window","","",81,null],[12,"x","","",81,null],[12,"y","","",81,null],[3,"XKeyEvent","","",null,null],[12,"type_","","",82,null],[12,"serial","","",82,null],[12,"send_event","","",82,null],[12,"display","","",82,null],[12,"window","","",82,null],[12,"root","","",82,null],[12,"subwindow","","",82,null],[12,"time","","",82,null],[12,"x","","",82,null],[12,"y","","",82,null],[12,"x_root","","",82,null],[12,"y_root","","",82,null],[12,"state","","",82,null],[12,"keycode","","",82,null],[12,"same_screen","","",82,null],[3,"XKeymapEvent","","",null,null],[12,"type_","","",83,null],[12,"serial","","",83,null],[12,"send_event","","",83,null],[12,"display","","",83,null],[12,"window","","",83,null],[12,"key_vector","","",83,null],[3,"XMapEvent","","",null,null],[12,"type_","","",84,null],[12,"serial","","",84,null],[12,"send_event","","",84,null],[12,"display","","",84,null],[12,"event","","",84,null],[12,"window","","",84,null],[12,"override_redirect","","",84,null],[3,"XMappingEvent","","",null,null],[12,"type_","","",85,null],[12,"serial","","",85,null],[12,"send_event","","",85,null],[12,"display","","",85,null],[12,"event","","",85,null],[12,"request","","",85,null],[12,"first_keycode","","",85,null],[12,"count","","",85,null],[3,"XMapRequestEvent","","",null,null],[12,"type_","","",86,null],[12,"serial","","",86,null],[12,"send_event","","",86,null],[12,"display","","",86,null],[12,"parent","","",86,null],[12,"window","","",86,null],[3,"XMotionEvent","","",null,null],[12,"type_","","",87,null],[12,"serial","","",87,null],[12,"send_event","","",87,null],[12,"display","","",87,null],[12,"window","","",87,null],[12,"root","","",87,null],[12,"subwindow","","",87,null],[12,"time","","",87,null],[12,"x","","",87,null],[12,"y","","",87,null],[12,"x_root","","",87,null],[12,"y_root","","",87,null],[12,"state","","",87,null],[12,"is_hint","","",87,null],[12,"same_screen","","",87,null],[3,"XNoExposeEvent","","",null,null],[12,"type_","","",88,null],[12,"serial","","",88,null],[12,"send_event","","",88,null],[12,"display","","",88,null],[12,"drawable","","",88,null],[12,"major_code","","",88,null],[12,"minor_code","","",88,null],[3,"XPropertyEvent","","",null,null],[12,"type_","","",89,null],[12,"serial","","",89,null],[12,"send_event","","",89,null],[12,"display","","",89,null],[12,"window","","",89,null],[12,"atom","","",89,null],[12,"time","","",89,null],[12,"state","","",89,null],[3,"XReparentEvent","","",null,null],[12,"type_","","",90,null],[12,"serial","","",90,null],[12,"send_event","","",90,null],[12,"display","","",90,null],[12,"event","","",90,null],[12,"window","","",90,null],[12,"parent","","",90,null],[12,"x","","",90,null],[12,"y","","",90,null],[12,"override_redirect","","",90,null],[3,"XResizeRequestEvent","","",null,null],[12,"type_","","",91,null],[12,"serial","","",91,null],[12,"send_event","","",91,null],[12,"display","","",91,null],[12,"window","","",91,null],[12,"width","","",91,null],[12,"height","","",91,null],[3,"XSelectionClearEvent","","",null,null],[12,"type_","","",92,null],[12,"serial","","",92,null],[12,"send_event","","",92,null],[12,"display","","",92,null],[12,"window","","",92,null],[12,"selection","","",92,null],[12,"time","","",92,null],[3,"XSelectionEvent","","",null,null],[12,"type_","","",93,null],[12,"serial","","",93,null],[12,"send_event","","",93,null],[12,"display","","",93,null],[12,"requestor","","",93,null],[12,"selection","","",93,null],[12,"target","","",93,null],[12,"property","","",93,null],[12,"time","","",93,null],[3,"XSelectionRequestEvent","","",null,null],[12,"type_","","",94,null],[12,"serial","","",94,null],[12,"send_event","","",94,null],[12,"display","","",94,null],[12,"owner","","",94,null],[12,"requestor","","",94,null],[12,"selection","","",94,null],[12,"target","","",94,null],[12,"property","","",94,null],[12,"time","","",94,null],[3,"XUnmapEvent","","",null,null],[12,"type_","","",95,null],[12,"serial","","",95,null],[12,"send_event","","",95,null],[12,"display","","",95,null],[12,"event","","",95,null],[12,"window","","",95,null],[12,"from_configure","","",95,null],[3,"XVisibilityEvent","","",null,null],[12,"type_","","",96,null],[12,"serial","","",96,null],[12,"send_event","","",96,null],[12,"display","","",96,null],[12,"window","","",96,null],[12,"state","","",96,null],[3,"_XkbCompatMapRec","","",null,null],[12,"sym_interpret","","",97,null],[12,"groups","","",97,null],[12,"num_si","","",97,null],[12,"size_si","","",97,null],[3,"_XkbDesc","","",null,null],[12,"dpy","","",98,null],[12,"flags","","",98,null],[12,"device_spec","","",98,null],[12,"min_key_code","","",98,null],[12,"max_key_code","","",98,null],[12,"ctrls","","",98,null],[12,"server","","",98,null],[12,"map","","",98,null],[12,"indicators","","",98,null],[12,"names","","",98,null],[12,"compat","","",98,null],[12,"geom","","",98,null],[3,"_XkbIndicatorRec","","",null,null],[12,"phys_indicators","","",99,null],[12,"maps","","",99,null],[3,"_XkbKeyAliasRec","","",null,null],[12,"real","","",100,null],[12,"alias","","",100,null],[3,"_XkbKeyNameRec","","",null,null],[12,"name","","",101,null],[3,"_XkbNamesRec","","",null,null],[12,"keycodes","","",102,null],[12,"geometry","","",102,null],[12,"symbols","","",102,null],[12,"types","","",102,null],[12,"compat","","",102,null],[12,"vmods","","",102,null],[12,"indicators","","",102,null],[12,"groups","","",102,null],[12,"keys","","",102,null],[12,"key_aliases","","",102,null],[12,"radio_groups","","",102,null],[12,"phys_symbols","","",102,null],[12,"num_keys","","",102,null],[12,"num_key_aliases","","",102,null],[12,"num_rg","","",102,null],[3,"Depth","","",null,null],[12,"depth","","",103,null],[12,"nvisuals","","",103,null],[12,"visuals","","",103,null],[3,"Screen","","",null,null],[12,"ext_data","","",104,null],[12,"display","","",104,null],[12,"root","","",104,null],[12,"width","","",104,null],[12,"height","","",104,null],[12,"mwidth","","",104,null],[12,"mheight","","",104,null],[12,"ndepths","","",104,null],[12,"depths","","",104,null],[12,"root_depth","","",104,null],[12,"root_visual","","",104,null],[12,"default_gc","","",104,null],[12,"cmap","","",104,null],[12,"white_pixel","","",104,null],[12,"black_pixel","","",104,null],[12,"max_maps","","",104,null],[12,"min_maps","","",104,null],[12,"backing_store","","",104,null],[12,"save_unders","","",104,null],[12,"root_input_mask","","",104,null],[3,"ScreenFormat","","",null,null],[12,"ext_data","","",105,null],[12,"depth","","",105,null],[12,"bits_per_pixel","","",105,null],[12,"scanline_pad","","",105,null],[3,"Visual","","",null,null],[12,"ext_data","","",106,null],[12,"visualid","","",106,null],[12,"class","","",106,null],[12,"red_mask","","",106,null],[12,"green_mask","","",106,null],[12,"blue_mask","","",106,null],[12,"bits_per_rgb","","",106,null],[12,"map_entries","","",106,null],[3,"XArc","","",null,null],[12,"x","","",107,null],[12,"y","","",107,null],[12,"width","","",107,null],[12,"height","","",107,null],[12,"angle1","","",107,null],[12,"angle2","","",107,null],[3,"XChar2b","","",null,null],[12,"byte1","","",108,null],[12,"byte2","","",108,null],[3,"XCharStruct","","",null,null],[12,"lbearing","","",109,null],[12,"rbearing","","",109,null],[12,"width","","",109,null],[12,"ascent","","",109,null],[12,"descent","","",109,null],[12,"attributes","","",109,null],[3,"XClassHint","","",null,null],[12,"res_name","","",110,null],[12,"res_class","","",110,null],[3,"XColor","","",null,null],[12,"pixel","","",111,null],[12,"red","","",111,null],[12,"green","","",111,null],[12,"blue","","",111,null],[12,"flags","","",111,null],[12,"pad","","",111,null],[3,"XComposeStatus","","",null,null],[12,"compose_ptr","","",112,null],[12,"chars_matched","","",112,null],[3,"XExtCodes","","",null,null],[12,"extension","","",113,null],[12,"major_opcode","","",113,null],[12,"first_event","","",113,null],[12,"first_error","","",113,null],[3,"XExtData","","",null,null],[12,"number","","",114,null],[12,"next","","",114,null],[12,"free_private","","",114,null],[12,"private_data","","",114,null],[3,"XFontProp","","",null,null],[12,"name","","",115,null],[12,"card32","","",115,null],[3,"XFontSetExtents","","",null,null],[12,"max_ink_extent","","",116,null],[12,"max_logical_extent","","",116,null],[3,"XFontStruct","","",null,null],[12,"ext_data","","",117,null],[12,"fid","","",117,null],[12,"direction","","",117,null],[12,"min_char_or_byte2","","",117,null],[12,"max_char_or_byte2","","",117,null],[12,"min_byte1","","",117,null],[12,"max_byte1","","",117,null],[12,"all_chars_exist","","",117,null],[12,"default_char","","",117,null],[12,"n_properties","","",117,null],[12,"properties","","",117,null],[12,"min_bounds","","",117,null],[12,"max_bounds","","",117,null],[12,"per_char","","",117,null],[12,"ascent","","",117,null],[12,"descent","","",117,null],[3,"XGCValues","","",null,null],[12,"function","","",118,null],[12,"plane_mask","","",118,null],[12,"foreground","","",118,null],[12,"background","","",118,null],[12,"line_width","","",118,null],[12,"line_style","","",118,null],[12,"cap_style","","",118,null],[12,"join_style","","",118,null],[12,"fill_style","","",118,null],[12,"fill_rule","","",118,null],[12,"arc_mode","","",118,null],[12,"tile","","",118,null],[12,"stipple","","",118,null],[12,"ts_x_origin","","",118,null],[12,"ts_y_origin","","",118,null],[12,"font","","",118,null],[12,"subwindow_mode","","",118,null],[12,"graphics_exposures","","",118,null],[12,"clip_x_origin","","",118,null],[12,"clip_y_origin","","",118,null],[12,"clip_mask","","",118,null],[12,"dash_offset","","",118,null],[12,"dashes","","",118,null],[3,"XGenericEventCookie","","",null,null],[12,"type_","","",119,null],[12,"serial","","",119,null],[12,"send_event","","",119,null],[12,"display","","",119,null],[12,"extension","","",119,null],[12,"evtype","","",119,null],[12,"cookie","","",119,null],[12,"data","","",119,null],[3,"XHostAddress","","",null,null],[12,"family","","",120,null],[12,"length","","",120,null],[12,"address","","",120,null],[3,"XIconSize","","",null,null],[12,"min_width","","",121,null],[12,"min_height","","",121,null],[12,"max_width","","",121,null],[12,"max_height","","",121,null],[12,"width_inc","","",121,null],[12,"height_inc","","",121,null],[3,"XImage","","",null,null],[12,"width","","",122,null],[12,"height","","",122,null],[12,"xoffset","","",122,null],[12,"format","","",122,null],[12,"data","","",122,null],[12,"byte_order","","",122,null],[12,"bitmap_unit","","",122,null],[12,"bitmap_bit_order","","",122,null],[12,"bitmap_pad","","",122,null],[12,"depth","","",122,null],[12,"bytes_per_line","","",122,null],[12,"bits_per_pixel","","",122,null],[12,"red_mask","","",122,null],[12,"green_mask","","",122,null],[12,"blue_mask","","",122,null],[12,"obdata","","",122,null],[12,"funcs","","",122,null],[3,"XKeyboardControl","","",null,null],[12,"key_click_percent","","",123,null],[12,"bell_percent","","",123,null],[12,"bell_pitch","","",123,null],[12,"bell_duration","","",123,null],[12,"led","","",123,null],[12,"led_mode","","",123,null],[12,"key","","",123,null],[12,"auto_repeat_mode","","",123,null],[3,"XKeyboardState","","",null,null],[12,"key_click_percent","","",124,null],[12,"bell_percent","","",124,null],[12,"bell_pitch","","",124,null],[12,"bell_duration","","",124,null],[12,"led_mask","","",124,null],[12,"global_auto_repeat","","",124,null],[12,"auto_repeats","","",124,null],[3,"XmbTextItem","","",null,null],[12,"chars","","",125,null],[12,"nchars","","",125,null],[12,"delta","","",125,null],[12,"font_set","","",125,null],[3,"XModifierKeymap","","",null,null],[12,"max_keypermod","","",126,null],[12,"modifiermap","","",126,null],[3,"XOMCharSetList","","",null,null],[12,"charset_count","","",127,null],[12,"charset_list","","",127,null],[3,"XPixmapFormatValues","","",null,null],[12,"depth","","",128,null],[12,"bits_per_pixel","","",128,null],[12,"scanline_pad","","",128,null],[3,"XPoint","","",null,null],[12,"x","","",129,null],[12,"y","","",129,null],[3,"XRectangle","","",null,null],[12,"x","","",130,null],[12,"y","","",130,null],[12,"width","","",130,null],[12,"height","","",130,null],[3,"XrmOptionDescRec","","",null,null],[12,"option","","",131,null],[12,"specifier","","",131,null],[12,"argKind","","",131,null],[12,"value","","",131,null],[3,"XrmValue","","",null,null],[12,"size","","",132,null],[12,"addr","","",132,null],[3,"XSegment","","",null,null],[12,"x1","","",133,null],[12,"y1","","",133,null],[12,"x2","","",133,null],[12,"y2","","",133,null],[3,"XSetWindowAttributes","","",null,null],[12,"background_pixmap","","",134,null],[12,"background_pixel","","",134,null],[12,"border_pixmap","","",134,null],[12,"border_pixel","","",134,null],[12,"bit_gravity","","",134,null],[12,"win_gravity","","",134,null],[12,"backing_store","","",134,null],[12,"backing_planes","","",134,null],[12,"backing_pixel","","",134,null],[12,"save_under","","",134,null],[12,"event_mask","","",134,null],[12,"do_not_propagate_mask","","",134,null],[12,"override_redirect","","",134,null],[12,"colormap","","",134,null],[12,"cursor","","",134,null],[3,"XSizeHints","","",null,null],[12,"flags","","",135,null],[12,"x","","",135,null],[12,"y","","",135,null],[12,"width","","",135,null],[12,"height","","",135,null],[12,"min_width","","",135,null],[12,"min_height","","",135,null],[12,"max_width","","",135,null],[12,"max_height","","",135,null],[12,"width_inc","","",135,null],[12,"height_inc","","",135,null],[12,"min_aspect","","",135,null],[12,"max_aspect","","",135,null],[12,"base_width","","",135,null],[12,"base_height","","",135,null],[12,"win_gravity","","",135,null],[3,"XStandardColormap","","",null,null],[12,"colormap","","",136,null],[12,"red_max","","",136,null],[12,"red_mult","","",136,null],[12,"green_max","","",136,null],[12,"green_mult","","",136,null],[12,"blue_max","","",136,null],[12,"blue_mult","","",136,null],[12,"base_pixel","","",136,null],[12,"visualid","","",136,null],[12,"killid","","",136,null],[3,"XTextItem","","",null,null],[12,"chars","","",137,null],[12,"nchars","","",137,null],[12,"delta","","",137,null],[12,"font","","",137,null],[3,"XTextItem16","","",null,null],[12,"chars","","",138,null],[12,"nchars","","",138,null],[12,"delta","","",138,null],[12,"font","","",138,null],[3,"XTextProperty","","",null,null],[12,"value","","",139,null],[12,"encoding","","",139,null],[12,"format","","",139,null],[12,"nitems","","",139,null],[3,"XTimeCoord","","",null,null],[12,"time","","",140,null],[12,"x","","",140,null],[12,"y","","",140,null],[3,"XVisualInfo","","",null,null],[12,"visual","","",141,null],[12,"visualid","","",141,null],[12,"screen","","",141,null],[12,"depth","","",141,null],[12,"class","","",141,null],[12,"red_mask","","",141,null],[12,"green_mask","","",141,null],[12,"blue_mask","","",141,null],[12,"colormap_size","","",141,null],[12,"bits_per_rgb","","",141,null],[3,"XwcTextItem","","",null,null],[12,"chars","","",142,null],[12,"nchars","","",142,null],[12,"delta","","",142,null],[12,"font_set","","",142,null],[3,"XWindowAttributes","","",null,null],[12,"x","","",143,null],[12,"y","","",143,null],[12,"width","","",143,null],[12,"height","","",143,null],[12,"border_width","","",143,null],[12,"depth","","",143,null],[12,"visual","","",143,null],[12,"root","","",143,null],[12,"class","","",143,null],[12,"bit_gravity","","",143,null],[12,"win_gravity","","",143,null],[12,"backing_store","","",143,null],[12,"backing_planes","","",143,null],[12,"backing_pixel","","",143,null],[12,"save_under","","",143,null],[12,"colormap","","",143,null],[12,"map_installed","","",143,null],[12,"map_state","","",143,null],[12,"all_event_masks","","",143,null],[12,"your_event_mask","","",143,null],[12,"do_not_propagate_mask","","",143,null],[12,"override_redirect","","",143,null],[12,"screen","","",143,null],[3,"XWindowChanges","","",null,null],[12,"x","","",144,null],[12,"y","","",144,null],[12,"width","","",144,null],[12,"height","","",144,null],[12,"border_width","","",144,null],[12,"sibling","","",144,null],[12,"stack_mode","","",144,null],[3,"XWMHints","","",null,null],[12,"flags","","",145,null],[12,"input","","",145,null],[12,"initial_state","","",145,null],[12,"icon_pixmap","","",145,null],[12,"icon_window","","",145,null],[12,"icon_x","","",145,null],[12,"icon_y","","",145,null],[12,"icon_mask","","",145,null],[12,"window_group","","",145,null],[3,"AspectRatio","","",null,null],[12,"x","","",146,null],[12,"y","","",146,null],[3,"ClientMessageData","","",null,null],[3,"ImageFns","","",null,null],[12,"create_image","","",147,null],[12,"destroy_image","","",147,null],[12,"get_pixel","","",147,null],[12,"put_pixel","","",147,null],[12,"sub_image","","",147,null],[12,"add_pixel","","",147,null],[4,"_XDisplay","","",null,null],[4,"xError","","",null,null],[4,"xEvent","","",null,null],[4,"_XGC","","",null,null],[4,"_XIC","","",null,null],[4,"_XIM","","",null,null],[4,"_XRegion","","",null,null],[4,"_XOC","","",null,null],[4,"_XOM","","",null,null],[4,"_XrmHashBucketRec","","",null,null],[6,"Atom","","",null,null],[6,"Bool","","",null,null],[6,"Colormap","","",null,null],[6,"Cursor","","",null,null],[6,"Drawable","","",null,null],[6,"Font","","",null,null],[6,"GContext","","",null,null],[6,"KeyCode","","",null,null],[6,"KeySym","","",null,null],[6,"Mask","","",null,null],[6,"Pixmap","","",null,null],[6,"Status","","",null,null],[6,"Time","","",null,null],[6,"VisualID","","",null,null],[6,"Window","","",null,null],[6,"XID","","",null,null],[6,"XPointer","","",null,null],[6,"XEDataObject","","",null,null],[6,"Display","","",null,null],[6,"GC","","",null,null],[6,"Region","","",null,null],[6,"XcmsCCC","","",null,null],[6,"XcmsColorSpace","","",null,null],[6,"XcmsFunctionSet","","",null,null],[6,"XFontSet","","",null,null],[6,"XIC","","",null,null],[6,"XIM","","",null,null],[6,"XkbAction","","",null,null],[6,"XkbBoundsPtr","","",null,null],[6,"XkbChangesPtr","","",null,null],[6,"XkbClientMapPtr","","",null,null],[6,"XkbColorPtr","","",null,null],[6,"XkbCompatMapPtr","","",null,null],[6,"XkbComponentListPtr","","",null,null],[6,"XkbComponentNamesPtr","","",null,null],[6,"XkbControlsChangesPtr","","",null,null],[6,"XkbControlsNotifyEvent","","",null,null],[6,"XkbControlsPtr","","",null,null],[6,"XkbDescPtr","","",null,null],[6,"XkbDeviceChangesPtr","","",null,null],[6,"XkbDeviceInfoPtr","","",null,null],[6,"XkbDeviceLedInfoPtr","","",null,null],[6,"XkbDoodadPtr","","",null,null],[6,"XkbExtensionDeviceNotifyEvent","","",null,null],[6,"XkbGeometryPtr","","",null,null],[6,"XkbGeometrySizesPtr","","",null,null],[6,"XkbIndicatorMapPtr","","",null,null],[6,"XkbIndicatorMapRec","","",null,null],[6,"XkbIndicatorPtr","","",null,null],[6,"XkbKeyTypePtr","","",null,null],[6,"XkbMapChangesPtr","","",null,null],[6,"XkbMapNotifyEvent","","",null,null],[6,"XkbModsPtr","","",null,null],[6,"XkbModsRec","","",null,null],[6,"XkbNameChangesPtr","","",null,null],[6,"XkbNamesNotifyEvent","","",null,null],[6,"XkbNamesPtr","","",null,null],[6,"XkbKeyAliasPtr","","",null,null],[6,"XkbKeyNamePtr","","",null,null],[6,"XkbKeyPtr","","",null,null],[6,"XkbOutlinePtr","","",null,null],[6,"XkbOverlayKeyPtr","","",null,null],[6,"XkbOverlayPtr","","",null,null],[6,"XkbOverlayRowPtr","","",null,null],[6,"XkbPropertyPtr","","",null,null],[6,"XkbRowPtr","","",null,null],[6,"XkbSectionPtr","","",null,null],[6,"XkbServerMapPtr","","",null,null],[6,"XkbShapePtr","","",null,null],[6,"XkbStatePtr","","",null,null],[6,"XkbSymInterpretPtr","","",null,null],[6,"XOM","","",null,null],[6,"XrmDatabase","","",null,null],[6,"XrmOptionDescList","","",null,null],[6,"XConnectionWatchProc","","",null,null],[6,"XICCEncodingStyle","","",null,null],[6,"XOrientation","","",null,null],[6,"XrmBinding","","",null,null],[6,"XrmOptionKind","","",null,null],[6,"XButtonPressedEvent","","",null,null],[6,"XButtonReleasedEvent","","",null,null],[6,"XEnterWindowEvent","","",null,null],[6,"XLeaveWindowEvent","","",null,null],[6,"XFocusInEvent","","",null,null],[6,"XFocusOutEvent","","",null,null],[6,"XKeyPressedEvent","","",null,null],[6,"XKeyReleasedEvent","","",null,null],[6,"XPointerMovedEvent","","",null,null],[17,"AllocNone","","",null,null],[17,"AllocAll","","",null,null],[17,"XkbKeyNameLength","","",null,null],[17,"XkbNumIndicators","","",null,null],[17,"XkbNumKbdGroups","","",null,null],[17,"XkbNumVirtualMods","","",null,null],[17,"XA_PRIMARY","","",null,null],[17,"XA_SECONDARY","","",null,null],[17,"XA_ARC","","",null,null],[17,"XA_ATOM","","",null,null],[17,"XA_BITMAP","","",null,null],[17,"XA_CARDINAL","","",null,null],[17,"XA_COLORMAP","","",null,null],[17,"XA_CURSOR","","",null,null],[17,"XA_CUT_BUFFER0","","",null,null],[17,"XA_CUT_BUFFER1","","",null,null],[17,"XA_CUT_BUFFER2","","",null,null],[17,"XA_CUT_BUFFER3","","",null,null],[17,"XA_CUT_BUFFER4","","",null,null],[17,"XA_CUT_BUFFER5","","",null,null],[17,"XA_CUT_BUFFER6","","",null,null],[17,"XA_CUT_BUFFER7","","",null,null],[17,"XA_DRAWABLE","","",null,null],[17,"XA_FONT","","",null,null],[17,"XA_INTEGER","","",null,null],[17,"XA_PIXMAP","","",null,null],[17,"XA_POINT","","",null,null],[17,"XA_RECTANGLE","","",null,null],[17,"XA_RESOURCE_MANAGER","","",null,null],[17,"XA_RGB_COLOR_MAP","","",null,null],[17,"XA_RGB_BEST_MAP","","",null,null],[17,"XA_RGB_BLUE_MAP","","",null,null],[17,"XA_RGB_DEFAULT_MAP","","",null,null],[17,"XA_RGB_GRAY_MAP","","",null,null],[17,"XA_RGB_GREEN_MAP","","",null,null],[17,"XA_RGB_RED_MAP","","",null,null],[17,"XA_STRING","","",null,null],[17,"XA_VISUALID","","",null,null],[17,"XA_WINDOW","","",null,null],[17,"XA_WM_COMMAND","","",null,null],[17,"XA_WM_HINTS","","",null,null],[17,"XA_WM_CLIENT_MACHINE","","",null,null],[17,"XA_WM_ICON_NAME","","",null,null],[17,"XA_WM_ICON_SIZE","","",null,null],[17,"XA_WM_NAME","","",null,null],[17,"XA_WM_NORMAL_HINTS","","",null,null],[17,"XA_WM_SIZE_HINTS","","",null,null],[17,"XA_WM_ZOOM_HINTS","","",null,null],[17,"XA_MIN_SPACE","","",null,null],[17,"XA_NORM_SPACE","","",null,null],[17,"XA_MAX_SPACE","","",null,null],[17,"XA_END_SPACE","","",null,null],[17,"XA_SUPERSCRIPT_X","","",null,null],[17,"XA_SUPERSCRIPT_Y","","",null,null],[17,"XA_SUBSCRIPT_X","","",null,null],[17,"XA_SUBSCRIPT_Y","","",null,null],[17,"XA_UNDERLINE_POSITION","","",null,null],[17,"XA_UNDERLINE_THICKNESS","","",null,null],[17,"XA_STRIKEOUT_ASCENT","","",null,null],[17,"XA_STRIKEOUT_DESCENT","","",null,null],[17,"XA_ITALIC_ANGLE","","",null,null],[17,"XA_X_HEIGHT","","",null,null],[17,"XA_QUAD_WIDTH","","",null,null],[17,"XA_WEIGHT","","",null,null],[17,"XA_POINT_SIZE","","",null,null],[17,"XA_RESOLUTION","","",null,null],[17,"XA_COPYRIGHT","","",null,null],[17,"XA_NOTICE","","",null,null],[17,"XA_FONT_NAME","","",null,null],[17,"XA_FAMILY_NAME","","",null,null],[17,"XA_FULL_NAME","","",null,null],[17,"XA_CAP_HEIGHT","","",null,null],[17,"XA_WM_CLASS","","",null,null],[17,"XA_WM_TRANSIENT_FOR","","",null,null],[17,"False","","",null,null],[17,"True","","",null,null],[17,"Unsorted","","",null,null],[17,"YSorted","","",null,null],[17,"YXSorted","","",null,null],[17,"YXBanded","","",null,null],[17,"DoRed","","",null,null],[17,"DoGreen","","",null,null],[17,"DoBlue","","",null,null],[17,"Success","","",null,null],[17,"BadRequest","","",null,null],[17,"BadValue","","",null,null],[17,"BadWindow","","",null,null],[17,"BadPixmap","","",null,null],[17,"BadAtom","","",null,null],[17,"BadCursor","","",null,null],[17,"BadFont","","",null,null],[17,"BadMatch","","",null,null],[17,"BadDrawable","","",null,null],[17,"BadAccess","","",null,null],[17,"BadAlloc","","",null,null],[17,"BadColor","","",null,null],[17,"BadGC","","",null,null],[17,"BadIDChoice","","",null,null],[17,"BadName","","",null,null],[17,"BadLength","","",null,null],[17,"BadImplementation","","",null,null],[17,"FirstExtensionError","","",null,null],[17,"LastExtensionError","","",null,null],[17,"KeyPress","","",null,null],[17,"KeyRelease","","",null,null],[17,"ButtonPress","","",null,null],[17,"ButtonRelease","","",null,null],[17,"MotionNotify","","",null,null],[17,"EnterNotify","","",null,null],[17,"LeaveNotify","","",null,null],[17,"FocusIn","","",null,null],[17,"FocusOut","","",null,null],[17,"KeymapNotify","","",null,null],[17,"Expose","","",null,null],[17,"GraphicsExpose","","",null,null],[17,"NoExpose","","",null,null],[17,"VisibilityNotify","","",null,null],[17,"CreateNotify","","",null,null],[17,"DestroyNotify","","",null,null],[17,"UnmapNotify","","",null,null],[17,"MapNotify","","",null,null],[17,"MapRequest","","",null,null],[17,"ReparentNotify","","",null,null],[17,"ConfigureNotify","","",null,null],[17,"ConfigureRequest","","",null,null],[17,"GravityNotify","","",null,null],[17,"ResizeRequest","","",null,null],[17,"CirculateNotify","","",null,null],[17,"CirculateRequest","","",null,null],[17,"PropertyNotify","","",null,null],[17,"SelectionClear","","",null,null],[17,"SelectionRequest","","",null,null],[17,"SelectionNotify","","",null,null],[17,"ColormapNotify","","",null,null],[17,"ClientMessage","","",null,null],[17,"MappingNotify","","",null,null],[17,"GenericEvent","","",null,null],[17,"LASTEvent","","",null,null],[17,"NoEventMask","","",null,null],[17,"KeyPressMask","","",null,null],[17,"KeyReleaseMask","","",null,null],[17,"ButtonPressMask","","",null,null],[17,"ButtonReleaseMask","","",null,null],[17,"EnterWindowMask","","",null,null],[17,"LeaveWindowMask","","",null,null],[17,"PointerMotionMask","","",null,null],[17,"PointerMotionHintMask","","",null,null],[17,"Button1MotionMask","","",null,null],[17,"Button2MotionMask","","",null,null],[17,"Button3MotionMask","","",null,null],[17,"Button4MotionMask","","",null,null],[17,"Button5MotionMask","","",null,null],[17,"ButtonMotionMask","","",null,null],[17,"KeymapStateMask","","",null,null],[17,"ExposureMask","","",null,null],[17,"VisibilityChangeMask","","",null,null],[17,"StructureNotifyMask","","",null,null],[17,"ResizeRedirectMask","","",null,null],[17,"SubstructureNotifyMask","","",null,null],[17,"SubstructureRedirectMask","","",null,null],[17,"FocusChangeMask","","",null,null],[17,"PropertyChangeMask","","",null,null],[17,"ColormapChangeMask","","",null,null],[17,"OwnerGrabButtonMask","","",null,null],[17,"PropModeReplace","","",null,null],[17,"PropModePrepend","","",null,null],[17,"PropModeAppend","","",null,null],[17,"ShiftMapIndex","","",null,null],[17,"LockMapIndex","","",null,null],[17,"ControlMapIndex","","",null,null],[17,"Mod1MapIndex","","",null,null],[17,"Mod2MapIndex","","",null,null],[17,"Mod3MapIndex","","",null,null],[17,"Mod4MapIndex","","",null,null],[17,"Mod5MapIndex","","",null,null],[17,"Button1Mask","","",null,null],[17,"Button2Mask","","",null,null],[17,"Button3Mask","","",null,null],[17,"Button4Mask","","",null,null],[17,"Button5Mask","","",null,null],[17,"AnyModifier","","",null,null],[17,"NotifyNormal","","",null,null],[17,"NotifyGrab","","",null,null],[17,"NotifyUngrab","","",null,null],[17,"NotifyWhileGrabbed","","",null,null],[17,"NotifyHint","","",null,null],[17,"NotifyAncestor","","",null,null],[17,"NotifyVirtual","","",null,null],[17,"NotifyInferior","","",null,null],[17,"NotifyNonlinear","","",null,null],[17,"NotifyNonlinearVirtual","","",null,null],[17,"NotifyPointer","","",null,null],[17,"NotifyPointerRoot","","",null,null],[17,"NotifyDetailNone","","",null,null],[17,"VisibilityUnobscured","","",null,null],[17,"VisibilityPartiallyObscured","","",null,null],[17,"VisibilityFullyObscured","","",null,null],[17,"PlaceOnTop","","",null,null],[17,"PlaceOnBottom","","",null,null],[17,"FamilyInternet","","",null,null],[17,"FamilyDECnet","","",null,null],[17,"FamilyChaos","","",null,null],[17,"FamilyInternet6","","",null,null],[17,"FamilyServerInterpreted","","",null,null],[17,"PropertyNewValue","","",null,null],[17,"PropertyDelete","","",null,null],[17,"ColormapUninstalled","","",null,null],[17,"ColormapInstalled","","",null,null],[17,"GrabModeSync","","",null,null],[17,"GrabModeAsync","","",null,null],[17,"GrabSuccess","","",null,null],[17,"AlreadyGrabbed","","",null,null],[17,"GrabInvalidTime","","",null,null],[17,"GrabNotViewable","","",null,null],[17,"GrabFrozen","","",null,null],[17,"AsyncPointer","","",null,null],[17,"SyncPointer","","",null,null],[17,"ReplayPointer","","",null,null],[17,"AsyncKeyboard","","",null,null],[17,"SyncKeyboard","","",null,null],[17,"ReplayKeyboard","","",null,null],[17,"AsyncBoth","","",null,null],[17,"SyncBoth","","",null,null],[17,"RevertToNone","","",null,null],[17,"RevertToPointerRoot","","",null,null],[17,"RevertToParent","","",null,null],[17,"CWX","","",null,null],[17,"CWY","","",null,null],[17,"CWWidth","","",null,null],[17,"CWHeight","","",null,null],[17,"CWBorderWidth","","",null,null],[17,"CWSibling","","",null,null],[17,"CWStackMode","","",null,null],[17,"ForgetGravity","","",null,null],[17,"UnmapGravity","","",null,null],[17,"NorthWestGravity","","",null,null],[17,"NorthGravity","","",null,null],[17,"NorthEastGravity","","",null,null],[17,"WestGravity","","",null,null],[17,"CenterGravity","","",null,null],[17,"EastGravity","","",null,null],[17,"SouthWestGravity","","",null,null],[17,"SouthGravity","","",null,null],[17,"SouthEastGravity","","",null,null],[17,"StaticGravity","","",null,null],[17,"XYBitmap","","",null,null],[17,"XYPixmap","","",null,null],[17,"ZPixmap","","",null,null],[17,"NotUseful","","",null,null],[17,"WhenMapped","","",null,null],[17,"Always","","",null,null],[17,"IsUnmapped","","",null,null],[17,"IsUnviewable","","",null,null],[17,"IsViewable","","",null,null],[17,"ShiftMask","","",null,null],[17,"LockMask","","",null,null],[17,"ControlMask","","",null,null],[17,"Mod1Mask","","",null,null],[17,"Mod2Mask","","",null,null],[17,"Mod3Mask","","",null,null],[17,"Mod4Mask","","",null,null],[17,"Mod5Mask","","",null,null],[17,"Button1","","",null,null],[17,"Button2","","",null,null],[17,"Button3","","",null,null],[17,"Button4","","",null,null],[17,"Button5","","",null,null],[17,"USPosition","","",null,null],[17,"USSize","","",null,null],[17,"PPosition","","",null,null],[17,"PSize","","",null,null],[17,"PMinSize","","",null,null],[17,"PMaxSize","","",null,null],[17,"PResizeInc","","",null,null],[17,"PAspect","","",null,null],[17,"PBaseSize","","",null,null],[17,"PWinGravity","","",null,null],[17,"PAllHints","","",null,null],[17,"SetModeInsert","","",null,null],[17,"SetModeDelete","","",null,null],[17,"DestroyAll","","",null,null],[17,"RetainPermanent","","",null,null],[17,"RetainTemporary","","",null,null],[17,"Above","","",null,null],[17,"Below","","",null,null],[17,"TopIf","","",null,null],[17,"BottomIf","","",null,null],[17,"Opposite","","",null,null],[17,"RaiseLowest","","",null,null],[17,"LowerHighest","","",null,null],[17,"GXclear","","",null,null],[17,"GXand","","",null,null],[17,"GXandReverse","","",null,null],[17,"GXcopy","","",null,null],[17,"GXandInverted","","",null,null],[17,"GXnoop","","",null,null],[17,"GXxor","","",null,null],[17,"GXor","","",null,null],[17,"GXnor","","",null,null],[17,"GXequiv","","",null,null],[17,"GXinvert","","",null,null],[17,"GXorReverse","","",null,null],[17,"GXcopyInverted","","",null,null],[17,"GXorInverted","","",null,null],[17,"GXnand","","",null,null],[17,"GXset","","",null,null],[17,"LineSolid","","",null,null],[17,"LineOnOffDash","","",null,null],[17,"LineDoubleDash","","",null,null],[17,"CapNotLast","","",null,null],[17,"CapButt","","",null,null],[17,"CapRound","","",null,null],[17,"CapProjecting","","",null,null],[17,"JoinMiter","","",null,null],[17,"JoinRound","","",null,null],[17,"JoinBevel","","",null,null],[17,"FillSolid","","",null,null],[17,"FillTiled","","",null,null],[17,"FillStippled","","",null,null],[17,"FillOpaqueStippled","","",null,null],[17,"EvenOddRule","","",null,null],[17,"WindingRule","","",null,null],[17,"ClipByChildren","","",null,null],[17,"IncludeInferiors","","",null,null],[17,"CoordModeOrigin","","",null,null],[17,"CoordModePrevious","","",null,null],[17,"Complex","","",null,null],[17,"Nonconvex","","",null,null],[17,"Convex","","",null,null],[17,"ArcChord","","",null,null],[17,"ArcPieSlice","","",null,null],[17,"GCFunction","","",null,null],[17,"GCPlaneMask","","",null,null],[17,"GCForeground","","",null,null],[17,"GCBackground","","",null,null],[17,"GCLineWidth","","",null,null],[17,"GCLineStyle","","",null,null],[17,"GCCapStyle","","",null,null],[17,"GCJoinStyle","","",null,null],[17,"GCFillStyle","","",null,null],[17,"GCFillRule","","",null,null],[17,"GCTile","","",null,null],[17,"GCStipple","","",null,null],[17,"GCTileStipXOrigin","","",null,null],[17,"GCTileStipYOrigin","","",null,null],[17,"GCFont","","",null,null],[17,"GCSubwindowMode","","",null,null],[17,"GCGraphicsExposures","","",null,null],[17,"GCClipXOrigin","","",null,null],[17,"GCClipYOrigin","","",null,null],[17,"GCClipMask","","",null,null],[17,"GCDashOffset","","",null,null],[17,"GCDashList","","",null,null],[17,"GCArcMode","","",null,null],[17,"GCLastBit","","",null,null],[17,"FontLeftToRight","","",null,null],[17,"FontRightToLeft","","",null,null],[17,"FontChange","","",null,null],[17,"CursorShape","","",null,null],[17,"TileShape","","",null,null],[17,"StippleShape","","",null,null],[17,"AutoRepeatModeOff","","",null,null],[17,"AutoRepeatModeOn","","",null,null],[17,"AutoRepeatModeDefault","","",null,null],[17,"LedModeOff","","",null,null],[17,"LedModeOn","","",null,null],[17,"KBKeyClickPercent","","",null,null],[17,"KBBellPercent","","",null,null],[17,"KBBellPitch","","",null,null],[17,"KBBellDuration","","",null,null],[17,"KBLed","","",null,null],[17,"KBLedMode","","",null,null],[17,"KBKey","","",null,null],[17,"KBAutoRepeatMode","","",null,null],[17,"MappingSuccess","","",null,null],[17,"MappingBusy","","",null,null],[17,"MappingFailed","","",null,null],[17,"MappingModifier","","",null,null],[17,"MappingKeyboard","","",null,null],[17,"MappingPointer","","",null,null],[17,"DontPreferBlanking","","",null,null],[17,"PreferBlanking","","",null,null],[17,"DefaultBlanking","","",null,null],[17,"DisableScreenSaver","","",null,null],[17,"DisableScreenInterval","","",null,null],[17,"DontAllowExposures","","",null,null],[17,"AllowExposures","","",null,null],[17,"DefaultExposures","","",null,null],[17,"ScreenSaverReset","","",null,null],[17,"ScreenSaverActive","","",null,null],[17,"HostInsert","","",null,null],[17,"HostDelete","","",null,null],[17,"EnableAccess","","",null,null],[17,"DisableAccess","","",null,null],[17,"StaticGray","","",null,null],[17,"GrayScale","","",null,null],[17,"StaticColor","","",null,null],[17,"PseudoColor","","",null,null],[17,"TrueColor","","",null,null],[17,"DirectColor","","",null,null],[17,"VisualNoMask","","",null,null],[17,"VisualIDMask","","",null,null],[17,"VisualScreenMask","","",null,null],[17,"VisualDepthMask","","",null,null],[17,"VisualClassMask","","",null,null],[17,"VisualRedMaskMask","","",null,null],[17,"VisualGreenMaskMask","","",null,null],[17,"VisualBlueMaskMask","","",null,null],[17,"VisualColormapSizeMask","","",null,null],[17,"VisualBitsPerRGBMask","","",null,null],[17,"VisualAllMask","","",null,null],[17,"CWBackPixmap","","",null,null],[17,"CWBackPixel","","",null,null],[17,"CWBorderPixmap","","",null,null],[17,"CWBorderPixel","","",null,null],[17,"CWBitGravity","","",null,null],[17,"CWWinGravity","","",null,null],[17,"CWBackingStore","","",null,null],[17,"CWBackingPlanes","","",null,null],[17,"CWBackingPixel","","",null,null],[17,"CWOverrideRedirect","","",null,null],[17,"CWSaveUnder","","",null,null],[17,"CWEventMask","","",null,null],[17,"CWDontPropagate","","",null,null],[17,"CWColormap","","",null,null],[17,"CWCursor","","",null,null],[17,"InputOutput","","",null,null],[17,"InputOnly","","",null,null],[17,"XIMPreeditArea","","",null,null],[17,"XIMPreeditCallbacks","","",null,null],[17,"XIMPreeditPosition","","",null,null],[17,"XIMPreeditNothing","","",null,null],[17,"XIMPreeditNone","","",null,null],[17,"XIMStatusArea","","",null,null],[17,"XIMStatusCallbacks","","",null,null],[17,"XIMStatusNothing","","",null,null],[17,"XIMStatusNone","","",null,null],[17,"LSBFirst","","",null,null],[17,"MSBFirst","","",null,null],[17,"ParentRelative","","",null,null],[17,"CopyFromParent","","",null,null],[17,"PointerWindow","","",null,null],[17,"InputFocus","","",null,null],[17,"PointerRoot","","",null,null],[17,"AnyPropertyType","","",null,null],[17,"AnyKey","","",null,null],[17,"AnyButton","","",null,null],[17,"AllTemporary","","",null,null],[17,"CurrentTime","","",null,null],[17,"NoSymbol","","",null,null],[17,"X_PROTOCOL","","",null,null],[17,"X_PROTOCOL_REVISION","","",null,null],[17,"XNVaNestedList","","",null,null],[17,"XNQueryInputStyle","","",null,null],[17,"XNClientWindow","","",null,null],[17,"XNInputStyle","","",null,null],[17,"XNFocusWindow","","",null,null],[17,"XNResourceName","","",null,null],[17,"XNResourceClass","","",null,null],[17,"XNGeometryCallback","","",null,null],[17,"XNDestroyCallback","","",null,null],[17,"XNFilterEvents","","",null,null],[17,"XNPreeditStartCallback","","",null,null],[17,"XNPreeditDoneCallback","","",null,null],[17,"XNPreeditDrawCallback","","",null,null],[17,"XNPreeditCaretCallback","","",null,null],[17,"XNPreeditStateNotifyCallback","","",null,null],[17,"XNPreeditAttributes","","",null,null],[17,"XNStatusStartCallback","","",null,null],[17,"XNStatusDoneCallback","","",null,null],[17,"XNStatusDrawCallback","","",null,null],[17,"XNStatusAttributes","","",null,null],[17,"XNArea","","",null,null],[17,"XNAreaNeeded","","",null,null],[17,"XNSpotLocation","","",null,null],[17,"XNColormap","","",null,null],[17,"XNStdColormap","","",null,null],[17,"XNForeground","","",null,null],[17,"XNBackground","","",null,null],[17,"XNBackgroundPixmap","","",null,null],[17,"XNFontSet","","",null,null],[17,"XNLineSpace","","",null,null],[17,"XNCursor","","",null,null],[17,"XNQueryIMValuesList","","",null,null],[17,"XNQueryICValuesList","","",null,null],[17,"XNVisiblePosition","","",null,null],[17,"XNR6PreeditCallback","","",null,null],[17,"XNStringConversionCallback","","",null,null],[17,"XNStringConversion","","",null,null],[17,"XNResetState","","",null,null],[17,"XNHotKey","","",null,null],[17,"XNHotKeyState","","",null,null],[17,"XNPreeditState","","",null,null],[17,"XNSeparatorofNestedList","","",null,null],[17,"XBufferOverflow","","",null,null],[17,"XLookupNone","","",null,null],[17,"XLookupChars","","",null,null],[17,"XLookupKeySym","","",null,null],[17,"XLookupBoth","","",null,null],[11,"open","","",64,{"inputs":[],"output":{"name":"result"}}],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"clone","","",65,null],[11,"get_type","","",65,null],[11,"as_mut","","",65,null],[11,"as_ref","","",65,null],[11,"from","","",65,{"inputs":[{"name":"xanyevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xanyevent"}],"output":{"name":"xevent"}}],[11,"from","","",66,{"inputs":[{"name":"xevent"}],"output":{"name":"xanyevent"}}],[11,"from","","",66,{"inputs":[{"name":"xevent"}],"output":{"name":"xanyevent"}}],[11,"as_mut","","",65,null],[11,"as_ref","","",65,null],[11,"from","","",65,{"inputs":[{"name":"xbuttonevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xbuttonevent"}],"output":{"name":"xevent"}}],[11,"from","","",67,{"inputs":[{"name":"xevent"}],"output":{"name":"xbuttonevent"}}],[11,"from","","",67,{"inputs":[{"name":"xevent"}],"output":{"name":"xbuttonevent"}}],[11,"as_mut","","",65,null],[11,"as_ref","","",65,null],[11,"from","","",65,{"inputs":[{"name":"xcirculateevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xcirculateevent"}],"output":{"name":"xevent"}}],[11,"from","","",68,{"inputs":[{"name":"xevent"}],"output":{"name":"xcirculateevent"}}],[11,"from","","",68,{"inputs":[{"name":"xevent"}],"output":{"name":"xcirculateevent"}}],[11,"as_mut","","",65,null],[11,"as_ref","","",65,null],[11,"from","","",65,{"inputs":[{"name":"xcirculaterequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xcirculaterequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",69,{"inputs":[{"name":"xevent"}],"output":{"name":"xcirculaterequestevent"}}],[11,"from","","",69,{"inputs":[{"name":"xevent"}],"output":{"name":"xcirculaterequestevent"}}],[11,"as_mut","","",65,null],[11,"as_ref","","",65,null],[11,"from","","",65,{"inputs":[{"name":"xclientmessageevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xclientmessageevent"}],"output":{"name":"xevent"}}],[11,"from","","",70,{"inputs":[{"name":"xevent"}],"output":{"name":"xclientmessageevent"}}],[11,"from","","",70,{"inputs":[{"name":"xevent"}],"output":{"name":"xclientmessageevent"}}],[11,"as_mut","","",65,null],[11,"as_ref","","",65,null],[11,"from","","",65,{"inputs":[{"name":"xcolormapevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xcolormapevent"}],"output":{"name":"xevent"}}],[11,"from","","",71,{"inputs":[{"name":"xevent"}],"output":{"name":"xcolormapevent"}}],[11,"from","","",71,{"inputs":[{"name":"xevent"}],"output":{"name":"xcolormapevent"}}],[11,"as_mut","","",65,null],[11,"as_ref","","",65,null],[11,"from","","",65,{"inputs":[{"name":"xconfigureevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xconfigureevent"}],"output":{"name":"xevent"}}],[11,"from","","",72,{"inputs":[{"name":"xevent"}],"output":{"name":"xconfigureevent"}}],[11,"from","","",72,{"inputs":[{"name":"xevent"}],"output":{"name":"xconfigureevent"}}],[11,"as_mut","","",65,null],[11,"as_ref","","",65,null],[11,"from","","",65,{"inputs":[{"name":"xconfigurerequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xconfigurerequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",73,{"inputs":[{"name":"xevent"}],"output":{"name":"xconfigurerequestevent"}}],[11,"from","","",73,{"inputs":[{"name":"xevent"}],"output":{"name":"xconfigurerequestevent"}}],[11,"as_mut","","",65,null],[11,"as_ref","","",65,null],[11,"from","","",65,{"inputs":[{"name":"xcreatewindowevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xcreatewindowevent"}],"output":{"name":"xevent"}}],[11,"from","","",74,{"inputs":[{"name":"xevent"}],"output":{"name":"xcreatewindowevent"}}],[11,"from","","",74,{"inputs":[{"name":"xevent"}],"output":{"name":"xcreatewindowevent"}}],[11,"as_mut","","",65,null],[11,"as_ref","","",65,null],[11,"from","","",65,{"inputs":[{"name":"xcrossingevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xcrossingevent"}],"output":{"name":"xevent"}}],[11,"from","","",75,{"inputs":[{"name":"xevent"}],"output":{"name":"xcrossingevent"}}],[11,"from","","",75,{"inputs":[{"name":"xevent"}],"output":{"name":"xcrossingevent"}}],[11,"as_mut","","",65,null],[11,"as_ref","","",65,null],[11,"from","","",65,{"inputs":[{"name":"xdestroywindowevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xdestroywindowevent"}],"output":{"name":"xevent"}}],[11,"from","","",76,{"inputs":[{"name":"xevent"}],"output":{"name":"xdestroywindowevent"}}],[11,"from","","",76,{"inputs":[{"name":"xevent"}],"output":{"name":"xdestroywindowevent"}}],[11,"as_mut","","",65,null],[11,"as_ref","","",65,null],[11,"from","","",65,{"inputs":[{"name":"xerrorevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xerrorevent"}],"output":{"name":"xevent"}}],[11,"from","","",77,{"inputs":[{"name":"xevent"}],"output":{"name":"xerrorevent"}}],[11,"from","","",77,{"inputs":[{"name":"xevent"}],"output":{"name":"xerrorevent"}}],[11,"as_mut","","",65,null],[11,"as_ref","","",65,null],[11,"from","","",65,{"inputs":[{"name":"xexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",78,{"inputs":[{"name":"xevent"}],"output":{"name":"xexposeevent"}}],[11,"from","","",78,{"inputs":[{"name":"xevent"}],"output":{"name":"xexposeevent"}}],[11,"as_mut","","",65,null],[11,"as_ref","","",65,null],[11,"from","","",65,{"inputs":[{"name":"xfocuschangeevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xfocuschangeevent"}],"output":{"name":"xevent"}}],[11,"from","","",79,{"inputs":[{"name":"xevent"}],"output":{"name":"xfocuschangeevent"}}],[11,"from","","",79,{"inputs":[{"name":"xevent"}],"output":{"name":"xfocuschangeevent"}}],[11,"as_mut","","",65,null],[11,"as_ref","","",65,null],[11,"from","","",65,{"inputs":[{"name":"xgenericeventcookie"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xgenericeventcookie"}],"output":{"name":"xevent"}}],[11,"from","","",119,{"inputs":[{"name":"xevent"}],"output":{"name":"xgenericeventcookie"}}],[11,"from","","",119,{"inputs":[{"name":"xevent"}],"output":{"name":"xgenericeventcookie"}}],[11,"as_mut","","",65,null],[11,"as_ref","","",65,null],[11,"from","","",65,{"inputs":[{"name":"xgraphicsexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xgraphicsexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",80,{"inputs":[{"name":"xevent"}],"output":{"name":"xgraphicsexposeevent"}}],[11,"from","","",80,{"inputs":[{"name":"xevent"}],"output":{"name":"xgraphicsexposeevent"}}],[11,"as_mut","","",65,null],[11,"as_ref","","",65,null],[11,"from","","",65,{"inputs":[{"name":"xgravityevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xgravityevent"}],"output":{"name":"xevent"}}],[11,"from","","",81,{"inputs":[{"name":"xevent"}],"output":{"name":"xgravityevent"}}],[11,"from","","",81,{"inputs":[{"name":"xevent"}],"output":{"name":"xgravityevent"}}],[11,"as_mut","","",65,null],[11,"as_ref","","",65,null],[11,"from","","",65,{"inputs":[{"name":"xkeyevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xkeyevent"}],"output":{"name":"xevent"}}],[11,"from","","",82,{"inputs":[{"name":"xevent"}],"output":{"name":"xkeyevent"}}],[11,"from","","",82,{"inputs":[{"name":"xevent"}],"output":{"name":"xkeyevent"}}],[11,"as_mut","","",65,null],[11,"as_ref","","",65,null],[11,"from","","",65,{"inputs":[{"name":"xkeymapevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xkeymapevent"}],"output":{"name":"xevent"}}],[11,"from","","",83,{"inputs":[{"name":"xevent"}],"output":{"name":"xkeymapevent"}}],[11,"from","","",83,{"inputs":[{"name":"xevent"}],"output":{"name":"xkeymapevent"}}],[11,"as_mut","","",65,null],[11,"as_ref","","",65,null],[11,"from","","",65,{"inputs":[{"name":"xmapevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xmapevent"}],"output":{"name":"xevent"}}],[11,"from","","",84,{"inputs":[{"name":"xevent"}],"output":{"name":"xmapevent"}}],[11,"from","","",84,{"inputs":[{"name":"xevent"}],"output":{"name":"xmapevent"}}],[11,"as_mut","","",65,null],[11,"as_ref","","",65,null],[11,"from","","",65,{"inputs":[{"name":"xmappingevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xmappingevent"}],"output":{"name":"xevent"}}],[11,"from","","",85,{"inputs":[{"name":"xevent"}],"output":{"name":"xmappingevent"}}],[11,"from","","",85,{"inputs":[{"name":"xevent"}],"output":{"name":"xmappingevent"}}],[11,"as_mut","","",65,null],[11,"as_ref","","",65,null],[11,"from","","",65,{"inputs":[{"name":"xmaprequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xmaprequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",86,{"inputs":[{"name":"xevent"}],"output":{"name":"xmaprequestevent"}}],[11,"from","","",86,{"inputs":[{"name":"xevent"}],"output":{"name":"xmaprequestevent"}}],[11,"as_mut","","",65,null],[11,"as_ref","","",65,null],[11,"from","","",65,{"inputs":[{"name":"xmotionevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xmotionevent"}],"output":{"name":"xevent"}}],[11,"from","","",87,{"inputs":[{"name":"xevent"}],"output":{"name":"xmotionevent"}}],[11,"from","","",87,{"inputs":[{"name":"xevent"}],"output":{"name":"xmotionevent"}}],[11,"as_mut","","",65,null],[11,"as_ref","","",65,null],[11,"from","","",65,{"inputs":[{"name":"xnoexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xnoexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",88,{"inputs":[{"name":"xevent"}],"output":{"name":"xnoexposeevent"}}],[11,"from","","",88,{"inputs":[{"name":"xevent"}],"output":{"name":"xnoexposeevent"}}],[11,"as_mut","","",65,null],[11,"as_ref","","",65,null],[11,"from","","",65,{"inputs":[{"name":"xpropertyevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xpropertyevent"}],"output":{"name":"xevent"}}],[11,"from","","",89,{"inputs":[{"name":"xevent"}],"output":{"name":"xpropertyevent"}}],[11,"from","","",89,{"inputs":[{"name":"xevent"}],"output":{"name":"xpropertyevent"}}],[11,"as_mut","","",65,null],[11,"as_ref","","",65,null],[11,"from","","",65,{"inputs":[{"name":"xreparentevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xreparentevent"}],"output":{"name":"xevent"}}],[11,"from","","",90,{"inputs":[{"name":"xevent"}],"output":{"name":"xreparentevent"}}],[11,"from","","",90,{"inputs":[{"name":"xevent"}],"output":{"name":"xreparentevent"}}],[11,"as_mut","","",65,null],[11,"as_ref","","",65,null],[11,"from","","",65,{"inputs":[{"name":"xresizerequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xresizerequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",91,{"inputs":[{"name":"xevent"}],"output":{"name":"xresizerequestevent"}}],[11,"from","","",91,{"inputs":[{"name":"xevent"}],"output":{"name":"xresizerequestevent"}}],[11,"as_mut","","",65,null],[11,"as_ref","","",65,null],[11,"from","","",65,{"inputs":[{"name":"xselectionclearevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xselectionclearevent"}],"output":{"name":"xevent"}}],[11,"from","","",92,{"inputs":[{"name":"xevent"}],"output":{"name":"xselectionclearevent"}}],[11,"from","","",92,{"inputs":[{"name":"xevent"}],"output":{"name":"xselectionclearevent"}}],[11,"as_mut","","",65,null],[11,"as_ref","","",65,null],[11,"from","","",65,{"inputs":[{"name":"xselectionevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xselectionevent"}],"output":{"name":"xevent"}}],[11,"from","","",93,{"inputs":[{"name":"xevent"}],"output":{"name":"xselectionevent"}}],[11,"from","","",93,{"inputs":[{"name":"xevent"}],"output":{"name":"xselectionevent"}}],[11,"as_mut","","",65,null],[11,"as_ref","","",65,null],[11,"from","","",65,{"inputs":[{"name":"xselectionrequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xselectionrequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",94,{"inputs":[{"name":"xevent"}],"output":{"name":"xselectionrequestevent"}}],[11,"from","","",94,{"inputs":[{"name":"xevent"}],"output":{"name":"xselectionrequestevent"}}],[11,"as_mut","","",65,null],[11,"as_ref","","",65,null],[11,"from","","",65,{"inputs":[{"name":"xunmapevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xunmapevent"}],"output":{"name":"xevent"}}],[11,"from","","",95,{"inputs":[{"name":"xevent"}],"output":{"name":"xunmapevent"}}],[11,"from","","",95,{"inputs":[{"name":"xevent"}],"output":{"name":"xunmapevent"}}],[11,"as_mut","","",65,null],[11,"as_ref","","",65,null],[11,"from","","",65,{"inputs":[{"name":"xvisibilityevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xvisibilityevent"}],"output":{"name":"xevent"}}],[11,"from","","",96,{"inputs":[{"name":"xevent"}],"output":{"name":"xvisibilityevent"}}],[11,"from","","",96,{"inputs":[{"name":"xevent"}],"output":{"name":"xvisibilityevent"}}],[11,"eq","","",66,null],[11,"ne","","",66,null],[11,"clone","","",66,null],[11,"eq","","",67,null],[11,"ne","","",67,null],[11,"clone","","",67,null],[11,"eq","","",68,null],[11,"ne","","",68,null],[11,"clone","","",68,null],[11,"eq","","",69,null],[11,"ne","","",69,null],[11,"clone","","",69,null],[11,"eq","","",70,null],[11,"ne","","",70,null],[11,"clone","","",70,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"clone","","",71,null],[11,"eq","","",72,null],[11,"ne","","",72,null],[11,"clone","","",72,null],[11,"eq","","",73,null],[11,"ne","","",73,null],[11,"clone","","",73,null],[11,"eq","","",74,null],[11,"ne","","",74,null],[11,"clone","","",74,null],[11,"eq","","",75,null],[11,"ne","","",75,null],[11,"clone","","",75,null],[11,"eq","","",76,null],[11,"ne","","",76,null],[11,"clone","","",76,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"clone","","",77,null],[11,"eq","","",78,null],[11,"ne","","",78,null],[11,"clone","","",78,null],[11,"eq","","",79,null],[11,"ne","","",79,null],[11,"clone","","",79,null],[11,"eq","","",80,null],[11,"ne","","",80,null],[11,"clone","","",80,null],[11,"eq","","",81,null],[11,"ne","","",81,null],[11,"clone","","",81,null],[11,"eq","","",82,null],[11,"ne","","",82,null],[11,"clone","","",82,null],[11,"eq","","",83,null],[11,"ne","","",83,null],[11,"clone","","",83,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"clone","","",84,null],[11,"eq","","",85,null],[11,"ne","","",85,null],[11,"clone","","",85,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"clone","","",86,null],[11,"eq","","",87,null],[11,"ne","","",87,null],[11,"clone","","",87,null],[11,"eq","","",88,null],[11,"ne","","",88,null],[11,"clone","","",88,null],[11,"eq","","",89,null],[11,"ne","","",89,null],[11,"clone","","",89,null],[11,"eq","","",90,null],[11,"ne","","",90,null],[11,"clone","","",90,null],[11,"eq","","",91,null],[11,"ne","","",91,null],[11,"clone","","",91,null],[11,"eq","","",92,null],[11,"ne","","",92,null],[11,"clone","","",92,null],[11,"eq","","",93,null],[11,"ne","","",93,null],[11,"clone","","",93,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"clone","","",94,null],[11,"eq","","",95,null],[11,"ne","","",95,null],[11,"clone","","",95,null],[11,"eq","","",96,null],[11,"ne","","",96,null],[11,"clone","","",96,null],[11,"eq","","",98,null],[11,"ne","","",98,null],[11,"clone","","",98,null],[11,"eq","","",100,null],[11,"ne","","",100,null],[11,"clone","","",100,null],[11,"eq","","",101,null],[11,"ne","","",101,null],[11,"clone","","",101,null],[11,"eq","","",102,null],[11,"ne","","",102,null],[11,"clone","","",102,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"clone","","",103,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"clone","","",104,null],[11,"eq","","",105,null],[11,"ne","","",105,null],[11,"clone","","",105,null],[11,"eq","","",106,null],[11,"ne","","",106,null],[11,"clone","","",106,null],[11,"eq","","",107,null],[11,"ne","","",107,null],[11,"clone","","",107,null],[11,"eq","","",108,null],[11,"ne","","",108,null],[11,"clone","","",108,null],[11,"eq","","",109,null],[11,"ne","","",109,null],[11,"clone","","",109,null],[11,"eq","","",110,null],[11,"ne","","",110,null],[11,"clone","","",110,null],[11,"eq","","",111,null],[11,"ne","","",111,null],[11,"clone","","",111,null],[11,"eq","","",112,null],[11,"ne","","",112,null],[11,"clone","","",112,null],[11,"eq","","",113,null],[11,"ne","","",113,null],[11,"clone","","",113,null],[11,"eq","","",115,null],[11,"ne","","",115,null],[11,"clone","","",115,null],[11,"eq","","",116,null],[11,"ne","","",116,null],[11,"clone","","",116,null],[11,"eq","","",117,null],[11,"ne","","",117,null],[11,"clone","","",117,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"clone","","",118,null],[11,"eq","","",119,null],[11,"ne","","",119,null],[11,"clone","","",119,null],[11,"eq","","",120,null],[11,"ne","","",120,null],[11,"clone","","",120,null],[11,"eq","","",121,null],[11,"ne","","",121,null],[11,"clone","","",121,null],[11,"eq","","",122,null],[11,"ne","","",122,null],[11,"clone","","",122,null],[11,"eq","","",123,null],[11,"ne","","",123,null],[11,"clone","","",123,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"clone","","",124,null],[11,"eq","","",125,null],[11,"ne","","",125,null],[11,"clone","","",125,null],[11,"eq","","",126,null],[11,"ne","","",126,null],[11,"clone","","",126,null],[11,"eq","","",127,null],[11,"ne","","",127,null],[11,"clone","","",127,null],[11,"eq","","",128,null],[11,"ne","","",128,null],[11,"clone","","",128,null],[11,"eq","","",129,null],[11,"ne","","",129,null],[11,"clone","","",129,null],[11,"eq","","",130,null],[11,"ne","","",130,null],[11,"clone","","",130,null],[11,"eq","","",131,null],[11,"ne","","",131,null],[11,"clone","","",131,null],[11,"eq","","",132,null],[11,"ne","","",132,null],[11,"clone","","",132,null],[11,"eq","","",133,null],[11,"ne","","",133,null],[11,"clone","","",133,null],[11,"eq","","",134,null],[11,"ne","","",134,null],[11,"clone","","",134,null],[11,"eq","","",135,null],[11,"ne","","",135,null],[11,"clone","","",135,null],[11,"eq","","",136,null],[11,"ne","","",136,null],[11,"clone","","",136,null],[11,"eq","","",137,null],[11,"ne","","",137,null],[11,"clone","","",137,null],[11,"eq","","",138,null],[11,"ne","","",138,null],[11,"clone","","",138,null],[11,"eq","","",139,null],[11,"ne","","",139,null],[11,"clone","","",139,null],[11,"eq","","",140,null],[11,"ne","","",140,null],[11,"clone","","",140,null],[11,"eq","","",141,null],[11,"ne","","",141,null],[11,"clone","","",141,null],[11,"eq","","",142,null],[11,"ne","","",142,null],[11,"clone","","",142,null],[11,"eq","","",143,null],[11,"ne","","",143,null],[11,"clone","","",143,null],[11,"eq","","",144,null],[11,"ne","","",144,null],[11,"clone","","",144,null],[11,"eq","","",145,null],[11,"ne","","",145,null],[11,"clone","","",145,null],[11,"eq","","",146,null],[11,"ne","","",146,null],[11,"clone","","",146,null],[11,"eq","","",148,null],[11,"ne","","",148,null],[11,"default","","",148,{"inputs":[],"output":{"name":"clientmessagedata"}}],[11,"clone","","",148,null],[11,"as_bytes","","",148,null],[11,"as_bytes_mut","","",148,null],[11,"as_longs","","",148,null],[11,"as_longs_mut","","",148,null],[11,"as_shorts","","",148,null],[11,"as_shorts_mut","","",148,null],[11,"get_byte","","",148,null],[11,"get_long","","",148,null],[11,"get_short","","",148,null],[11,"new","","",148,{"inputs":[],"output":{"name":"clientmessagedata"}}],[11,"set_byte","","",148,null],[11,"set_long","","",148,null],[11,"set_short","","",148,null],[11,"as_mut","","",148,null],[11,"as_ref","","",148,null],[11,"from","","",148,null],[11,"as_mut","","",148,null],[11,"as_ref","","",148,null],[11,"from","","",148,null],[11,"as_mut","","",148,null],[11,"as_ref","","",148,null],[11,"from","","",148,null],[11,"as_mut","","",148,null],[11,"as_ref","","",148,null],[11,"from","","",148,null],[11,"as_mut","","",148,null],[11,"as_ref","","",148,null],[11,"from","","",148,null],[11,"as_mut","","",148,null],[11,"as_ref","","",148,null],[11,"from","","",148,null],[11,"clone","","",147,null],[11,"eq","","",147,null],[0,"xmu","x11_dl","",null,null],[3,"Xmu","x11_dl::xmu","",null,null],[12,"XmuAddCloseDisplayHook","","",149,null],[12,"XmuAddInitializer","","",149,null],[12,"XmuAllStandardColormaps","","",149,null],[12,"XmuAppendSegment","","",149,null],[12,"XmuAreaAnd","","",149,null],[12,"XmuAreaCopy","","",149,null],[12,"XmuAreaDup","","",149,null],[12,"XmuAreaNot","","",149,null],[12,"XmuAreaOrXor","","",149,null],[12,"XmuCallInitializers","","",149,null],[12,"XmuClientWindow","","",149,null],[12,"XmuCompareISOLatin1","","",149,null],[12,"XmuConvertStandardSelection","","",149,null],[12,"XmuCopyISOLatin1Lowered","","",149,null],[12,"XmuCopyISOLatin1Uppered","","",149,null],[12,"XmuCreateColormap","","",149,null],[12,"XmuCreatePixmapFromBitmap","","",149,null],[12,"XmuCreateStippledPixmap","","",149,null],[12,"XmuCursorNameToIndex","","",149,null],[12,"XmuCvtBackingStoreToString","","",149,null],[12,"XmuCvtFunctionToCallback","","",149,null],[12,"XmuCvtGravityToString","","",149,null],[12,"XmuCvtJustifyToString","","",149,null],[12,"XmuCvtLongToString","","",149,null],[12,"XmuCvtOrientationToString","","",149,null],[12,"XmuCvtShapeStyleToString","","",149,null],[12,"XmuCvtStringToBackingStore","","",149,null],[12,"XmuCvtStringToBitmap","","",149,null],[12,"XmuCvtStringToColorCursor","","",149,null],[12,"XmuCvtStringToCursor","","",149,null],[12,"XmuCvtStringToGravity","","",149,null],[12,"XmuCvtStringToJustify","","",149,null],[12,"XmuCvtStringToLong","","",149,null],[12,"XmuCvtStringToOrientation","","",149,null],[12,"XmuCvtStringToShapeStyle","","",149,null],[12,"XmuCvtStringToWidget","","",149,null],[12,"XmuCvtWidgetToString","","",149,null],[12,"XmuDeleteStandardColormap","","",149,null],[12,"XmuDestroyScanlineList","","",149,null],[12,"XmuDestroySegmentList","","",149,null],[12,"XmuDistinguishableColors","","",149,null],[12,"XmuDistinguishablePixels","","",149,null],[12,"XmuDQAddDisplay","","",149,null],[12,"XmuDQCreate","","",149,null],[12,"XmuDQDestroy","","",149,null],[12,"XmuDQLookupDisplay","","",149,null],[12,"XmuDQRemoveDisplay","","",149,null],[12,"XmuDrawLogo","","",149,null],[12,"XmuDrawRoundedRectangle","","",149,null],[12,"XmuFillRoundedRectangle","","",149,null],[12,"XmuGetAtomName","","",149,null],[12,"XmuGetColormapAllocation","","",149,null],[12,"XmuGetHostname","","",149,null],[12,"XmuInternAtom","","",149,null],[12,"XmuInternStrings","","",149,null],[12,"XmuLocateBitmapFile","","",149,null],[12,"XmuLocatePixmapFile","","",149,null],[12,"XmuLookupAPL","","",149,null],[12,"XmuLookupArabic","","",149,null],[12,"XmuLookupCloseDisplayHook","","",149,null],[12,"XmuLookupCyrillic","","",149,null],[12,"XmuLookupGreek","","",149,null],[12,"XmuLookupHebrew","","",149,null],[12,"XmuLookupJISX0201","","",149,null],[12,"XmuLookupKana","","",149,null],[12,"XmuLookupLatin1","","",149,null],[12,"XmuLookupLatin2","","",149,null],[12,"XmuLookupLatin3","","",149,null],[12,"XmuLookupLatin4","","",149,null],[12,"XmuLookupStandardColormap","","",149,null],[12,"XmuLookupString","","",149,null],[12,"XmuMakeAtom","","",149,null],[12,"XmuNameOfAtom","","",149,null],[12,"XmuNCopyISOLatin1Lowered","","",149,null],[12,"XmuNCopyISOLatin1Uppered","","",149,null],[12,"XmuNewArea","","",149,null],[12,"XmuNewCvtStringToWidget","","",149,null],[12,"XmuNewScanline","","",149,null],[12,"XmuNewSegment","","",149,null],[12,"XmuOptimizeArea","","",149,null],[12,"XmuOptimizeScanline","","",149,null],[12,"XmuPrintDefaultErrorMessage","","",149,null],[12,"XmuReadBitmapData","","",149,null],[12,"XmuReadBitmapDataFromFile","","",149,null],[12,"XmuRegisterExternalAgent","","",149,null],[12,"XmuReleaseStippledPixmap","","",149,null],[12,"XmuRemoveCloseDisplayHook","","",149,null],[12,"XmuReshapeWidget","","",149,null],[12,"XmuScanlineAnd","","",149,null],[12,"XmuScanlineAndSegment","","",149,null],[12,"XmuScanlineCopy","","",149,null],[12,"XmuScanlineEqu","","",149,null],[12,"XmuScanlineNot","","",149,null],[12,"XmuScanlineOr","","",149,null],[12,"XmuScanlineOrSegment","","",149,null],[12,"XmuScanlineXor","","",149,null],[12,"XmuScanlineXorSegment","","",149,null],[12,"XmuScreenOfWindow","","",149,null],[12,"XmuSimpleErrorHandler","","",149,null],[12,"XmuStandardColormap","","",149,null],[12,"XmuUpdateMapHints","","",149,null],[12,"XmuValidArea","","",149,null],[12,"XmuValidScanline","","",149,null],[12,"XmuVisualStandardColormaps","","",149,null],[12,"XmuWnCountOwnedResources","","",149,null],[12,"XmuWnFetchResources","","",149,null],[12,"XmuWnInitializeNodes","","",149,null],[12,"XmuWnNameToNode","","",149,null],[12,"XmuSnprintf","","",149,null],[12,"_XA_ATOM_PAIR","","",149,null],[12,"_XA_CHARACTER_POSITION","","",149,null],[12,"_XA_CLASS","","",149,null],[12,"_XA_CLIENT_WINDOW","","",149,null],[12,"_XA_CLIPBOARD","","",149,null],[12,"_XA_COMPOUND_TEXT","","",149,null],[12,"_XA_DECNET_ADDRESS","","",149,null],[12,"_XA_DELETE","","",149,null],[12,"_XA_FILENAME","","",149,null],[12,"_XA_HOSTNAME","","",149,null],[12,"_XA_IP_ADDRESS","","",149,null],[12,"_XA_LENGTH","","",149,null],[12,"_XA_LIST_LENGTH","","",149,null],[12,"_XA_NAME","","",149,null],[12,"_XA_NET_ADDRESS","","",149,null],[12,"_XA_NULL","","",149,null],[12,"_XA_OWNER_OS","","",149,null],[12,"_XA_SPAN","","",149,null],[12,"_XA_TARGETS","","",149,null],[12,"_XA_TEXT","","",149,null],[12,"_XA_TIMESTAMP","","",149,null],[12,"_XA_USER","","",149,null],[12,"_XA_UTF8_STRING","","",149,null],[3,"_AtomRec","","",null,null],[3,"_XmuArea","","",null,null],[3,"_XmuDisplayQueue","","",null,null],[3,"_XmuDisplayQueueEntry","","",null,null],[3,"_XmuScanline","","",null,null],[3,"_XmuSegment","","",null,null],[3,"_XmuWidgetNode","","",null,null],[6,"AtomPtr","","",null,null],[6,"XmuArea","","",null,null],[6,"XmuDisplayQueue","","",null,null],[6,"XmuDisplayQueueEntry","","",null,null],[6,"XmuScanline","","",null,null],[6,"XmuSegment","","",null,null],[6,"XmuWidgetNode","","",null,null],[11,"open","","",149,{"inputs":[],"output":{"name":"result"}}],[0,"xrecord","x11_dl","",null,null],[3,"Xf86vmode","x11_dl::xrecord","",null,null],[12,"XRecordAllocRange","","",150,null],[12,"XRecordCreateContext","","",150,null],[12,"XRecordDisableContext","","",150,null],[12,"XRecordEnableContext","","",150,null],[12,"XRecordEnableContextAsync","","",150,null],[12,"XRecordFreeContext","","",150,null],[12,"XRecordFreeData","","",150,null],[12,"XRecordFreeState","","",150,null],[12,"XRecordGetContext","","",150,null],[12,"XRecordIdBaseMask","","",150,null],[12,"XRecordProcessReplies","","",150,null],[12,"XRecordQueryVersion","","",150,null],[12,"XRecordRegisterClients","","",150,null],[12,"XRecordUnregisterClients","","",150,null],[3,"XRecordClientInfo","","",null,null],[12,"client","","",151,null],[12,"nranges","","",151,null],[12,"ranges","","",151,null],[3,"XRecordExtRange","","",null,null],[12,"ext_major","","",152,null],[12,"ext_minor","","",152,null],[3,"XRecordInterceptData","","",null,null],[12,"id_base","","",153,null],[12,"server_time","","",153,null],[12,"client_seq","","",153,null],[12,"category","","",153,null],[12,"client_swapped","","",153,null],[12,"data","","",153,null],[12,"data_len","","",153,null],[3,"XRecordRange","","",null,null],[12,"core_requests","","",154,null],[12,"core_replies","","",154,null],[12,"ext_requests","","",154,null],[12,"ext_replies","","",154,null],[12,"delivered_events","","",154,null],[12,"device_events","","",154,null],[12,"errors","","",154,null],[12,"client_started","","",154,null],[12,"client_died","","",154,null],[3,"XRecordRange8","","",null,null],[12,"first","","",155,null],[12,"last","","",155,null],[3,"XRecordRange16","","",null,null],[12,"first","","",156,null],[12,"last","","",156,null],[3,"XRecordState","","",null,null],[12,"enabled","","",157,null],[12,"datum_flags","","",157,null],[12,"nclients","","",157,null],[12,"client_info","","",157,null],[6,"XRecordClientSpec","","",null,null],[6,"XRecordContext","","",null,null],[17,"XRecordFromServerTime","","",null,null],[17,"XRecordFromClientTime","","",null,null],[17,"XRecordFromClientSequence","","",null,null],[17,"XRecordCurrentClients","","",null,null],[17,"XRecordFutureClients","","",null,null],[17,"XRecordAllClients","","",null,null],[17,"XRecordFromServer","","",null,null],[17,"XRecordFromClient","","",null,null],[17,"XRecordClientStarted","","",null,null],[17,"XRecordClientDied","","",null,null],[17,"XRecordStartOfData","","",null,null],[17,"XRecordEndOfData","","",null,null],[11,"open","","",150,{"inputs":[],"output":{"name":"result"}}],[11,"eq","","",151,null],[11,"ne","","",151,null],[11,"clone","","",151,null],[11,"eq","","",152,null],[11,"ne","","",152,null],[11,"clone","","",152,null],[11,"eq","","",153,null],[11,"ne","","",153,null],[11,"clone","","",153,null],[11,"eq","","",154,null],[11,"ne","","",154,null],[11,"clone","","",154,null],[11,"eq","","",155,null],[11,"ne","","",155,null],[11,"clone","","",155,null],[11,"eq","","",156,null],[11,"ne","","",156,null],[11,"clone","","",156,null],[11,"eq","","",157,null],[11,"ne","","",157,null],[11,"clone","","",157,null],[0,"xrender","x11_dl","",null,null],[3,"Xrender","x11_dl::xrender","",null,null],[12,"XRenderAddGlyphs","","",158,null],[12,"XRenderAddTraps","","",158,null],[12,"XRenderChangePicture","","",158,null],[12,"XRenderComposite","","",158,null],[12,"XRenderCompositeDoublePoly","","",158,null],[12,"XRenderCompositeString16","","",158,null],[12,"XRenderCompositeString32","","",158,null],[12,"XRenderCompositeString8","","",158,null],[12,"XRenderCompositeText16","","",158,null],[12,"XRenderCompositeText32","","",158,null],[12,"XRenderCompositeText8","","",158,null],[12,"XRenderCompositeTrapezoids","","",158,null],[12,"XRenderCompositeTriangles","","",158,null],[12,"XRenderCompositeTriFan","","",158,null],[12,"XRenderCompositeTriStrip","","",158,null],[12,"XRenderCreateAnimCursor","","",158,null],[12,"XRenderCreateConicalGradient","","",158,null],[12,"XRenderCreateCursor","","",158,null],[12,"XRenderCreateGlyphSet","","",158,null],[12,"XRenderCreateLinearGradient","","",158,null],[12,"XRenderCreatePicture","","",158,null],[12,"XRenderCreateRadialGradient","","",158,null],[12,"XRenderCreateSolidFill","","",158,null],[12,"XRenderFillRectangle","","",158,null],[12,"XRenderFillRectangles","","",158,null],[12,"XRenderFindFormat","","",158,null],[12,"XRenderFindStandardFormat","","",158,null],[12,"XRenderFindVisualFormat","","",158,null],[12,"XRenderFreeGlyphs","","",158,null],[12,"XRenderFreeGlyphSet","","",158,null],[12,"XRenderFreePicture","","",158,null],[12,"XRenderParseColor","","",158,null],[12,"XRenderQueryExtension","","",158,null],[12,"XRenderQueryFilters","","",158,null],[12,"XRenderQueryFormats","","",158,null],[12,"XRenderQueryPictIndexValues","","",158,null],[12,"XRenderQuerySubpixelOrder","","",158,null],[12,"XRenderQueryVersion","","",158,null],[12,"XRenderReferenceGlyphSet","","",158,null],[12,"XRenderSetPictureClipRectangles","","",158,null],[12,"XRenderSetPictureClipRegion","","",158,null],[12,"XRenderSetPictureFilter","","",158,null],[12,"XRenderSetPictureTransform","","",158,null],[12,"XRenderSetSubpixelOrder","","",158,null],[3,"_XAnimCursor","","",null,null],[12,"cursor","","",159,null],[12,"delay","","",159,null],[3,"_XCircle","","",null,null],[12,"x","","",160,null],[12,"y","","",160,null],[12,"radius","","",160,null],[3,"_XConicalGradient","","",null,null],[12,"center","","",161,null],[12,"angle","","",161,null],[3,"_XFilters","","",null,null],[12,"nfilter","","",162,null],[12,"filter","","",162,null],[12,"nalias","","",162,null],[12,"alias","","",162,null],[3,"_XGlyphElt8","","",null,null],[12,"glyphset","","",163,null],[12,"chars","","",163,null],[12,"nchars","","",163,null],[12,"xOff","","",163,null],[12,"yOff","","",163,null],[3,"_XGlyphElt16","","",null,null],[12,"glyphset","","",164,null],[12,"chars","","",164,null],[12,"nchars","","",164,null],[12,"xOff","","",164,null],[12,"yOff","","",164,null],[3,"_XGlyphElt32","","",null,null],[12,"glyphset","","",165,null],[12,"chars","","",165,null],[12,"nchars","","",165,null],[12,"xOff","","",165,null],[12,"yOff","","",165,null],[3,"_XGlyphInfo","","",null,null],[12,"width","","",166,null],[12,"height","","",166,null],[12,"x","","",166,null],[12,"y","","",166,null],[12,"xOff","","",166,null],[12,"yOff","","",166,null],[3,"_XIndexValue","","",null,null],[12,"pixel","","",167,null],[12,"red","","",167,null],[12,"green","","",167,null],[12,"blue","","",167,null],[12,"alpha","","",167,null],[3,"_XLinearGradient","","",null,null],[12,"p1","","",168,null],[12,"p2","","",168,null],[3,"_XLineFixed","","",null,null],[12,"p1","","",169,null],[12,"p2","","",169,null],[3,"_XPointDouble","","",null,null],[12,"x","","",170,null],[12,"y","","",170,null],[3,"_XPointFixed","","",null,null],[12,"x","","",171,null],[12,"y","","",171,null],[3,"_XRadialGradient","","",null,null],[12,"inner","","",172,null],[12,"outer","","",172,null],[3,"XRenderColor","","",null,null],[12,"red","","",173,null],[12,"green","","",173,null],[12,"blue","","",173,null],[12,"alpha","","",173,null],[3,"XRenderDirectFormat","","",null,null],[12,"red","","",174,null],[12,"redMask","","",174,null],[12,"green","","",174,null],[12,"greenMask","","",174,null],[12,"blue","","",174,null],[12,"blueMask","","",174,null],[12,"alpha","","",174,null],[12,"alphaMask","","",174,null],[3,"XRenderPictFormat","","",null,null],[12,"id","","",175,null],[12,"type_","","",175,null],[12,"depth","","",175,null],[12,"direct","","",175,null],[12,"colormap","","",175,null],[3,"_XRenderPictureAttributes","","",null,null],[12,"repeat","","",176,null],[12,"alpha_map","","",176,null],[12,"alpha_x_origin","","",176,null],[12,"alpha_y_origin","","",176,null],[12,"clip_x_origin","","",176,null],[12,"clip_y_origin","","",176,null],[12,"clip_mask","","",176,null],[12,"graphics_exposures","","",176,null],[12,"subwindow_mode","","",176,null],[12,"poly_edge","","",176,null],[12,"poly_mode","","",176,null],[12,"dither","","",176,null],[12,"component_alpha","","",176,null],[3,"_XSpanFix","","",null,null],[12,"left","","",177,null],[12,"right","","",177,null],[12,"y","","",177,null],[3,"_XTrap","","",null,null],[12,"top","","",178,null],[12,"bottom","","",178,null],[3,"_XTrapezoid","","",null,null],[12,"top","","",179,null],[12,"bottom","","",179,null],[12,"left","","",179,null],[12,"right","","",179,null],[3,"_XTriangle","","",null,null],[12,"p1","","",180,null],[12,"p2","","",180,null],[12,"p3","","",180,null],[3,"_XTransform","","",null,null],[12,"matrix","","",181,null],[6,"Glyph","","",null,null],[6,"GlyphSet","","",null,null],[6,"PictFormat","","",null,null],[6,"Picture","","",null,null],[6,"XDouble","","",null,null],[6,"XFixed","","",null,null],[6,"XAnimCursor","","",null,null],[6,"XCircle","","",null,null],[6,"XConicalGradient","","",null,null],[6,"XFilters","","",null,null],[6,"XGlyphElt8","","",null,null],[6,"XGlyphElt16","","",null,null],[6,"XGlyphElt32","","",null,null],[6,"XGlyphInfo","","",null,null],[6,"XIndexValue","","",null,null],[6,"XLinearGradient","","",null,null],[6,"XLineFixed","","",null,null],[6,"XPointDouble","","",null,null],[6,"XPointFixed","","",null,null],[6,"XRadialGradient","","",null,null],[6,"XRenderPictureAttributes","","",null,null],[6,"XSpanFix","","",null,null],[6,"XTrap","","",null,null],[6,"XTrapezoid","","",null,null],[6,"XTriangle","","",null,null],[6,"XTransform","","",null,null],[11,"open","","",158,{"inputs":[],"output":{"name":"result"}}],[11,"eq","","",159,null],[11,"ne","","",159,null],[11,"clone","","",159,null],[11,"eq","","",160,null],[11,"ne","","",160,null],[11,"clone","","",160,null],[11,"eq","","",161,null],[11,"ne","","",161,null],[11,"clone","","",161,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"clone","","",162,null],[11,"eq","","",163,null],[11,"ne","","",163,null],[11,"clone","","",163,null],[11,"eq","","",164,null],[11,"ne","","",164,null],[11,"clone","","",164,null],[11,"eq","","",165,null],[11,"ne","","",165,null],[11,"clone","","",165,null],[11,"eq","","",166,null],[11,"ne","","",166,null],[11,"clone","","",166,null],[11,"eq","","",167,null],[11,"ne","","",167,null],[11,"clone","","",167,null],[11,"eq","","",168,null],[11,"ne","","",168,null],[11,"clone","","",168,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"clone","","",169,null],[11,"eq","","",170,null],[11,"ne","","",170,null],[11,"clone","","",170,null],[11,"eq","","",171,null],[11,"ne","","",171,null],[11,"clone","","",171,null],[11,"eq","","",172,null],[11,"ne","","",172,null],[11,"clone","","",172,null],[11,"eq","","",173,null],[11,"ne","","",173,null],[11,"clone","","",173,null],[11,"eq","","",174,null],[11,"ne","","",174,null],[11,"clone","","",174,null],[11,"eq","","",175,null],[11,"ne","","",175,null],[11,"clone","","",175,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"clone","","",176,null],[11,"eq","","",177,null],[11,"ne","","",177,null],[11,"clone","","",177,null],[11,"eq","","",178,null],[11,"ne","","",178,null],[11,"clone","","",178,null],[11,"eq","","",179,null],[11,"ne","","",179,null],[11,"clone","","",179,null],[11,"eq","","",180,null],[11,"ne","","",180,null],[11,"clone","","",180,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"clone","","",181,null],[0,"xt","x11_dl","",null,null],[3,"Xt","x11_dl::xt","",null,null],[12,"XtAddActions","","",182,null],[12,"XtAddCallback","","",182,null],[12,"XtAddCallbacks","","",182,null],[12,"XtAddConverter","","",182,null],[12,"XtAddEventHandler","","",182,null],[12,"XtAddExposureToRegion","","",182,null],[12,"XtAddGrab","","",182,null],[12,"XtAddInput","","",182,null],[12,"XtAddRawEventHandler","","",182,null],[12,"XtAddSignal","","",182,null],[12,"XtAddTimeOut","","",182,null],[12,"XtAddWorkProc","","",182,null],[12,"XtAllocateGC","","",182,null],[12,"XtAppAddActionHook","","",182,null],[12,"XtAppAddActions","","",182,null],[12,"XtAppAddBlockHook","","",182,null],[12,"XtAppAddConverter","","",182,null],[12,"XtAppAddInput","","",182,null],[12,"XtAppAddSignal","","",182,null],[12,"XtAppAddTimeOut","","",182,null],[12,"XtAppAddWorkProc","","",182,null],[12,"XtAppCreateShell","","",182,null],[12,"XtAppError","","",182,null],[12,"XtAppErrorMsg","","",182,null],[12,"XtAppGetErrorDatabase","","",182,null],[12,"XtAppGetErrorDatabaseText","","",182,null],[12,"XtAppGetExitFlag","","",182,null],[12,"XtAppGetSelectionTimeout","","",182,null],[12,"XtAppInitialize","","",182,null],[12,"XtAppLock","","",182,null],[12,"XtAppMainLoop","","",182,null],[12,"XtAppNextEvent","","",182,null],[12,"XtAppPeekEvent","","",182,null],[12,"XtAppPending","","",182,null],[12,"XtAppProcessEvent","","",182,null],[12,"XtAppReleaseCacheRefs","","",182,null],[12,"XtAppSetErrorHandler","","",182,null],[12,"XtAppSetErrorMsgHandler","","",182,null],[12,"XtAppSetExitFlag","","",182,null],[12,"XtAppSetFallbackResources","","",182,null],[12,"XtAppSetSelectionTimeout","","",182,null],[12,"XtAppSetTypeConverter","","",182,null],[12,"XtAppSetWarningHandler","","",182,null],[12,"XtAppSetWarningMsgHandler","","",182,null],[12,"XtAppUnlock","","",182,null],[12,"XtAppWarning","","",182,null],[12,"XtAppWarningMsg","","",182,null],[12,"XtAugmentTranslations","","",182,null],[12,"XtBuildEventMask","","",182,null],[12,"XtCallAcceptFocus","","",182,null],[12,"XtCallActionProc","","",182,null],[12,"XtCallbackExclusive","","",182,null],[12,"XtCallbackNone","","",182,null],[12,"XtCallbackNonexclusive","","",182,null],[12,"XtCallbackPopdown","","",182,null],[12,"XtCallbackReleaseCacheRef","","",182,null],[12,"XtCallbackReleaseCacheRefList","","",182,null],[12,"XtCallCallbackList","","",182,null],[12,"XtCallCallbacks","","",182,null],[12,"XtCallConverter","","",182,null],[12,"XtCalloc","","",182,null],[12,"XtCancelSelectionRequest","","",182,null],[12,"XtChangeManagedSet","","",182,null],[12,"XtClass","","",182,null],[12,"XtCloseDisplay","","",182,null],[12,"XtConfigureWidget","","",182,null],[12,"XtConvert","","",182,null],[12,"XtConvertAndStore","","",182,null],[12,"XtConvertCase","","",182,null],[12,"XtCreateApplicationContext","","",182,null],[12,"XtCreateApplicationShell","","",182,null],[12,"XtCreateManagedWidget","","",182,null],[12,"XtCreatePopupShell","","",182,null],[12,"XtCreateSelectionRequest","","",182,null],[12,"XtCreateWidget","","",182,null],[12,"XtCreateWindow","","",182,null],[12,"XtCvtColorToPixel","","",182,null],[12,"XtCvtIntToBool","","",182,null],[12,"XtCvtIntToBoolean","","",182,null],[12,"XtCvtIntToColor","","",182,null],[12,"XtCvtIntToFloat","","",182,null],[12,"XtCvtIntToFont","","",182,null],[12,"XtCvtIntToPixel","","",182,null],[12,"XtCvtIntToPixmap","","",182,null],[12,"XtCvtIntToShort","","",182,null],[12,"XtCvtIntToUnsignedChar","","",182,null],[12,"XtCvtStringToAcceleratorTable","","",182,null],[12,"XtCvtStringToAtom","","",182,null],[12,"XtCvtStringToBool","","",182,null],[12,"XtCvtStringToBoolean","","",182,null],[12,"XtCvtStringToCommandArgArray","","",182,null],[12,"XtCvtStringToCursor","","",182,null],[12,"XtCvtStringToDimension","","",182,null],[12,"XtCvtStringToDirectoryString","","",182,null],[12,"XtCvtStringToDisplay","","",182,null],[12,"XtCvtStringToFile","","",182,null],[12,"XtCvtStringToFloat","","",182,null],[12,"XtCvtStringToFont","","",182,null],[12,"XtCvtStringToFontSet","","",182,null],[12,"XtCvtStringToFontStruct","","",182,null],[12,"XtCvtStringToGravity","","",182,null],[12,"XtCvtStringToInitialState","","",182,null],[12,"XtCvtStringToInt","","",182,null],[12,"XtCvtStringToPixel","","",182,null],[12,"XtCvtStringToRestartStyle","","",182,null],[12,"XtCvtStringToShort","","",182,null],[12,"XtCvtStringToTranslationTable","","",182,null],[12,"XtCvtStringToUnsignedChar","","",182,null],[12,"XtCvtStringToVisual","","",182,null],[12,"XtDatabase","","",182,null],[12,"XtDestroyApplicationContext","","",182,null],[12,"XtDestroyGC","","",182,null],[12,"XtDestroyWidget","","",182,null],[12,"XtDirectConvert","","",182,null],[12,"XtDisownSelection","","",182,null],[12,"XtDispatchEvent","","",182,null],[12,"XtDispatchEventToWidget","","",182,null],[12,"XtDisplay","","",182,null],[12,"XtDisplayInitialize","","",182,null],[12,"XtDisplayOfObject","","",182,null],[12,"XtDisplayStringConversionWarning","","",182,null],[12,"XtDisplayToApplicationContext","","",182,null],[12,"XtError","","",182,null],[12,"XtErrorMsg","","",182,null],[12,"XtFindFile","","",182,null],[12,"XtFree","","",182,null],[12,"XtGetActionKeysym","","",182,null],[12,"XtGetActionList","","",182,null],[12,"XtGetApplicationNameAndClass","","",182,null],[12,"XtGetApplicationResources","","",182,null],[12,"XtGetClassExtension","","",182,null],[12,"XtGetConstraintResourceList","","",182,null],[12,"XtGetDisplays","","",182,null],[12,"XtGetErrorDatabase","","",182,null],[12,"XtGetErrorDatabaseText","","",182,null],[12,"XtGetGC","","",182,null],[12,"XtGetKeyboardFocusWidget","","",182,null],[12,"XtGetKeysymTable","","",182,null],[12,"XtGetMultiClickTime","","",182,null],[12,"XtGetResourceList","","",182,null],[12,"XtGetSelectionParameters","","",182,null],[12,"XtGetSelectionRequest","","",182,null],[12,"XtGetSelectionTimeout","","",182,null],[12,"XtGetSelectionValue","","",182,null],[12,"XtGetSelectionValueIncremental","","",182,null],[12,"XtGetSelectionValues","","",182,null],[12,"XtGetSelectionValuesIncremental","","",182,null],[12,"XtGetSubresources","","",182,null],[12,"XtGetSubvalues","","",182,null],[12,"XtGetValues","","",182,null],[12,"XtGrabButton","","",182,null],[12,"XtGrabKey","","",182,null],[12,"XtGrabKeyboard","","",182,null],[12,"XtGrabPointer","","",182,null],[12,"XtHasCallbacks","","",182,null],[12,"XtHooksOfDisplay","","",182,null],[12,"XtInitialize","","",182,null],[12,"XtInitializeWidgetClass","","",182,null],[12,"XtInsertEventHandler","","",182,null],[12,"XtInsertEventTypeHandler","","",182,null],[12,"XtInsertRawEventHandler","","",182,null],[12,"XtInstallAccelerators","","",182,null],[12,"XtInstallAllAccelerators","","",182,null],[12,"XtIsApplicationShell","","",182,null],[12,"XtIsComposite","","",182,null],[12,"XtIsConstraint","","",182,null],[12,"XtIsManaged","","",182,null],[12,"XtIsObject","","",182,null],[12,"XtIsOverrideShell","","",182,null],[12,"XtIsRealized","","",182,null],[12,"XtIsRectObj","","",182,null],[12,"XtIsSensitive","","",182,null],[12,"XtIsSessionShell","","",182,null],[12,"XtIsShell","","",182,null],[12,"XtIsSubclass","","",182,null],[12,"XtIsTopLevelShell","","",182,null],[12,"XtIsTransientShell","","",182,null],[12,"XtIsVendorShell","","",182,null],[12,"XtIsWidget","","",182,null],[12,"XtIsWMShell","","",182,null],[12,"XtKeysymToKeycodeList","","",182,null],[12,"XtLastEventProcessed","","",182,null],[12,"XtLastTimestampProcessed","","",182,null],[12,"XtMainLoop","","",182,null],[12,"XtMakeGeometryRequest","","",182,null],[12,"XtMakeResizeRequest","","",182,null],[12,"XtMalloc","","",182,null],[12,"XtManageChild","","",182,null],[12,"XtManageChildren","","",182,null],[12,"XtMapWidget","","",182,null],[12,"XtMenuPopupAction","","",182,null],[12,"XtMergeArgLists","","",182,null],[12,"XtMoveWidget","","",182,null],[12,"XtName","","",182,null],[12,"XtNameToWidget","","",182,null],[12,"XtNewString","","",182,null],[12,"XtNextEvent","","",182,null],[12,"XtNoticeSignal","","",182,null],[12,"XtOpenApplication","","",182,null],[12,"XtOpenDisplay","","",182,null],[12,"XtOverrideTranslations","","",182,null],[12,"XtOwnSelection","","",182,null],[12,"XtOwnSelectionIncremental","","",182,null],[12,"XtParent","","",182,null],[12,"XtParseAcceleratorTable","","",182,null],[12,"XtParseTranslationTable","","",182,null],[12,"XtPeekEvent","","",182,null],[12,"XtPending","","",182,null],[12,"XtPopdown","","",182,null],[12,"XtPopup","","",182,null],[12,"XtPopupSpringLoaded","","",182,null],[12,"XtProcessEvent","","",182,null],[12,"XtProcessLock","","",182,null],[12,"XtProcessUnlock","","",182,null],[12,"XtQueryGeometry","","",182,null],[12,"XtRealizeWidget","","",182,null],[12,"XtRealloc","","",182,null],[12,"XtRegisterCaseConverter","","",182,null],[12,"XtRegisterDrawable","","",182,null],[12,"XtRegisterExtensionSelector","","",182,null],[12,"XtRegisterGrabAction","","",182,null],[12,"XtReleaseGC","","",182,null],[12,"XtReleasePropertyAtom","","",182,null],[12,"XtRemoveActionHook","","",182,null],[12,"XtRemoveAllCallbacks","","",182,null],[12,"XtRemoveBlockHook","","",182,null],[12,"XtRemoveCallback","","",182,null],[12,"XtRemoveCallbacks","","",182,null],[12,"XtRemoveEventHandler","","",182,null],[12,"XtRemoveEventTypeHandler","","",182,null],[12,"XtRemoveGrab","","",182,null],[12,"XtRemoveInput","","",182,null],[12,"XtRemoveRawEventHandler","","",182,null],[12,"XtRemoveSignal","","",182,null],[12,"XtRemoveTimeOut","","",182,null],[12,"XtRemoveWorkProc","","",182,null],[12,"XtReservePropertyAtom","","",182,null],[12,"XtResizeWidget","","",182,null],[12,"XtResizeWindow","","",182,null],[12,"XtResolvePathname","","",182,null],[12,"XtScreen","","",182,null],[12,"XtScreenDatabase","","",182,null],[12,"XtScreenOfObject","","",182,null],[12,"XtSendSelectionRequest","","",182,null],[12,"XtSessionGetToken","","",182,null],[12,"XtSessionReturnToken","","",182,null],[12,"XtSetErrorHandler","","",182,null],[12,"XtSetErrorMsgHandler","","",182,null],[12,"XtSetEventDispatcher","","",182,null],[12,"XtSetKeyboardFocus","","",182,null],[12,"XtSetKeyTranslator","","",182,null],[12,"XtSetLanguageProc","","",182,null],[12,"XtSetMappedWhenManaged","","",182,null],[12,"XtSetMultiClickTime","","",182,null],[12,"XtSetSelectionParameters","","",182,null],[12,"XtSetSelectionTimeout","","",182,null],[12,"XtSetSensitive","","",182,null],[12,"XtSetSubvalues","","",182,null],[12,"XtSetTypeConverter","","",182,null],[12,"XtSetValues","","",182,null],[12,"XtSetWarningHandler","","",182,null],[12,"XtSetWarningMsgHandler","","",182,null],[12,"XtSetWMColormapWindows","","",182,null],[12,"XtStringConversionWarning","","",182,null],[12,"XtSuperclass","","",182,null],[12,"XtToolkitInitialize","","",182,null],[12,"XtToolkitThreadInitialize","","",182,null],[12,"XtTranslateCoords","","",182,null],[12,"XtTranslateKey","","",182,null],[12,"XtTranslateKeycode","","",182,null],[12,"XtUngrabButton","","",182,null],[12,"XtUngrabKey","","",182,null],[12,"XtUngrabKeyboard","","",182,null],[12,"XtUngrabPointer","","",182,null],[12,"XtUninstallTranslations","","",182,null],[12,"XtUnmanageChild","","",182,null],[12,"XtUnmanageChildren","","",182,null],[12,"XtUnmapWidget","","",182,null],[12,"XtUnrealizeWidget","","",182,null],[12,"XtUnregisterDrawable","","",182,null],[12,"XtWarning","","",182,null],[12,"XtWarningMsg","","",182,null],[12,"XtWidgetToApplicationContext","","",182,null],[12,"XtWindow","","",182,null],[12,"XtWindowOfObject","","",182,null],[12,"XtWindowToWidget","","",182,null],[12,"XtAsprintf","","",182,null],[12,"XtVaAppCreateShell","","",182,null],[12,"XtVaAppInitialize","","",182,null],[12,"XtVaCreateArgsList","","",182,null],[12,"XtVaCreateManagedWidget","","",182,null],[12,"XtVaCreatePopupShell","","",182,null],[12,"XtVaCreateWidget","","",182,null],[12,"XtVaGetApplicationResources","","",182,null],[12,"XtVaGetSubresources","","",182,null],[12,"XtVaGetSubvalues","","",182,null],[12,"XtVaGetValues","","",182,null],[12,"XtVaOpenApplication","","",182,null],[12,"XtVaSetSubvalues","","",182,null],[12,"XtVaSetValues","","",182,null],[3,"Arg","","",null,null],[3,"SubstitutionRec","","",null,null],[3,"_TranslationData","","",null,null],[3,"_WidgetClassRec","","",null,null],[3,"_WidgetRec","","",null,null],[3,"_XtActionsRec","","",null,null],[3,"_XtAppStruct","","",null,null],[3,"_XtCallbackRec","","",null,null],[3,"_XtCheckpointTokenRec","","",null,null],[3,"XtConvertArgRec","","",null,null],[3,"_XtResource","","",null,null],[3,"XtWidgetGeometry","","",null,null],[6,"XtCallbackStatus","","",null,null],[6,"XtGeometryResult","","",null,null],[6,"XtGrabKind","","",null,null],[6,"XtListPosition","","",null,null],[6,"ArgList","","",null,null],[6,"Substitution","","",null,null],[6,"Widget","","",null,null],[6,"WidgetClass","","",null,null],[6,"XtAccelerators","","",null,null],[6,"XtActionList","","",null,null],[6,"XtActionsRec","","",null,null],[6,"XtAppContext","","",null,null],[6,"XtCallbackList","","",null,null],[6,"XtCallbackRec","","",null,null],[6,"XtCheckpointToken","","",null,null],[6,"XtCheckpointTokenRec","","",null,null],[6,"XtConvertArgList","","",null,null],[6,"XtResource","","",null,null],[6,"XtResourceList","","",null,null],[6,"XtTranslations","","",null,null],[11,"open","","",182,{"inputs":[],"output":{"name":"result"}}],[0,"xtest","x11_dl","",null,null],[3,"Xf86vmode","x11_dl::xtest","",null,null],[12,"XTestCompareCurrentCursorWithWindow","","",183,null],[12,"XTestCompareCursorWithWindow","","",183,null],[12,"XTestDiscard","","",183,null],[12,"XTestFakeButtonEvent","","",183,null],[12,"XTestFakeDeviceButtonEvent","","",183,null],[12,"XTestFakeDeviceKeyEvent","","",183,null],[12,"XTestFakeDeviceMotionEvent","","",183,null],[12,"XTestFakeKeyEvent","","",183,null],[12,"XTestFakeMotionEvent","","",183,null],[12,"XTestFakeProximityEvent","","",183,null],[12,"XTestFakeRelativeMotionEvent","","",183,null],[12,"XTestGrabControl","","",183,null],[12,"XTestQueryExtension","","",183,null],[12,"XTestSetGContextOfGC","","",183,null],[12,"XTestSetVisualIDOfVisual","","",183,null],[11,"open","","",183,{"inputs":[],"output":{"name":"result"}}],[0,"xrandr","x11_dl","",null,null],[3,"Xrandr","x11_dl::xrandr","",null,null],[12,"XRRAddOutputMode","","",184,null],[12,"XRRAllocGamma","","",184,null],[12,"XRRAllocModeInfo","","",184,null],[12,"XRRAllocateMonitor","","",184,null],[12,"XRRChangeOutputProperty","","",184,null],[12,"XRRChangeProviderProperty","","",184,null],[12,"XRRConfigCurrentConfiguration","","",184,null],[12,"XRRConfigCurrentRate","","",184,null],[12,"XRRConfigRates","","",184,null],[12,"XRRConfigRotations","","",184,null],[12,"XRRConfigSizes","","",184,null],[12,"XRRConfigTimes","","",184,null],[12,"XRRConfigureOutputProperty","","",184,null],[12,"XRRConfigureProviderProperty","","",184,null],[12,"XRRCreateMode","","",184,null],[12,"XRRDeleteMonitor","","",184,null],[12,"XRRDeleteOutputMode","","",184,null],[12,"XRRDeleteOutputProperty","","",184,null],[12,"XRRDeleteProviderProperty","","",184,null],[12,"XRRDestroyMode","","",184,null],[12,"XRRFreeCrtcInfo","","",184,null],[12,"XRRFreeGamma","","",184,null],[12,"XRRFreeModeInfo","","",184,null],[12,"XRRFreeMonitors","","",184,null],[12,"XRRFreeOutputInfo","","",184,null],[12,"XRRFreePanning","","",184,null],[12,"XRRFreeProviderInfo","","",184,null],[12,"XRRFreeProviderResources","","",184,null],[12,"XRRFreeScreenConfigInfo","","",184,null],[12,"XRRFreeScreenResources","","",184,null],[12,"XRRGetCrtcGamma","","",184,null],[12,"XRRGetCrtcGammaSize","","",184,null],[12,"XRRGetCrtcInfo","","",184,null],[12,"XRRGetCrtcTransform","","",184,null],[12,"XRRGetMonitors","","",184,null],[12,"XRRGetOutputInfo","","",184,null],[12,"XRRGetOutputPrimary","","",184,null],[12,"XRRGetOutputProperty","","",184,null],[12,"XRRGetPanning","","",184,null],[12,"XRRGetProviderInfo","","",184,null],[12,"XRRGetProviderProperty","","",184,null],[12,"XRRGetProviderResources","","",184,null],[12,"XRRGetScreenInfo","","",184,null],[12,"XRRGetScreenResources","","",184,null],[12,"XRRGetScreenResourcesCurrent","","",184,null],[12,"XRRGetScreenSizeRange","","",184,null],[12,"XRRListOutputProperties","","",184,null],[12,"XRRListProviderProperties","","",184,null],[12,"XRRQueryExtension","","",184,null],[12,"XRRQueryOutputProperty","","",184,null],[12,"XRRQueryProviderProperty","","",184,null],[12,"XRRQueryVersion","","",184,null],[12,"XRRRates","","",184,null],[12,"XRRRootToScreen","","",184,null],[12,"XRRRotations","","",184,null],[12,"XRRSelectInput","","",184,null],[12,"XRRSetCrtcConfig","","",184,null],[12,"XRRSetCrtcGamma","","",184,null],[12,"XRRSetCrtcTransform","","",184,null],[12,"XRRSetMonitor","","",184,null],[12,"XRRSetOutputPrimary","","",184,null],[12,"XRRSetPanning","","",184,null],[12,"XRRSetProviderOffloadSink","","",184,null],[12,"XRRSetProviderOutputSource","","",184,null],[12,"XRRSetScreenConfig","","",184,null],[12,"XRRSetScreenConfigAndRate","","",184,null],[12,"XRRSetScreenSize","","",184,null],[12,"XRRSizes","","",184,null],[12,"XRRTimes","","",184,null],[12,"XRRUpdateConfiguration","","",184,null],[3,"XRRScreenSize","","",null,null],[12,"width","","",185,null],[12,"height","","",185,null],[12,"mwidth","","",185,null],[12,"mheight","","",185,null],[3,"XRRScreenChangeNotifyEvent","","",null,null],[12,"type_","","",186,null],[12,"serial","","",186,null],[12,"send_event","","",186,null],[12,"display","","",186,null],[12,"window","","",186,null],[12,"root","","",186,null],[12,"timestamp","","",186,null],[12,"config_timestamp","","",186,null],[12,"size_index","","",186,null],[12,"subpixel_order","","",186,null],[12,"rotation","","",186,null],[12,"width","","",186,null],[12,"height","","",186,null],[12,"mwidth","","",186,null],[12,"mheight","","",186,null],[3,"XRRNotifyEvent","","",null,null],[12,"type_","","",187,null],[12,"serial","","",187,null],[12,"send_event","","",187,null],[12,"display","","",187,null],[12,"window","","",187,null],[12,"subtype","","",187,null],[3,"XRROutputChangeNotifyEvent","","",null,null],[12,"type_","","",188,null],[12,"serial","","",188,null],[12,"send_event","","",188,null],[12,"display","","",188,null],[12,"window","","",188,null],[12,"subtype","","",188,null],[12,"output","","",188,null],[12,"crtc","","",188,null],[12,"mode","","",188,null],[12,"rotation","","",188,null],[12,"connection","","",188,null],[12,"subpixel_order","","",188,null],[3,"XRRCrtcChangeNotifyEvent","","",null,null],[12,"type_","","",189,null],[12,"serial","","",189,null],[12,"send_event","","",189,null],[12,"display","","",189,null],[12,"window","","",189,null],[12,"subtype","","",189,null],[12,"crtc","","",189,null],[12,"mode","","",189,null],[12,"rotation","","",189,null],[12,"x","","",189,null],[12,"y","","",189,null],[12,"width","","",189,null],[12,"height","","",189,null],[3,"XRROutputPropertyNotifyEvent","","",null,null],[12,"type_","","",190,null],[12,"serial","","",190,null],[12,"send_event","","",190,null],[12,"display","","",190,null],[12,"window","","",190,null],[12,"subtype","","",190,null],[12,"output","","",190,null],[12,"property","","",190,null],[12,"timestamp","","",190,null],[12,"state","","",190,null],[3,"XRRProviderChangeNotifyEvent","","",null,null],[12,"type_","","",191,null],[12,"serial","","",191,null],[12,"send_event","","",191,null],[12,"display","","",191,null],[12,"window","","",191,null],[12,"subtype","","",191,null],[12,"provider","","",191,null],[12,"timestamp","","",191,null],[12,"current_role","","",191,null],[3,"XRRProviderPropertyNotifyEvent","","",null,null],[12,"type_","","",192,null],[12,"serial","","",192,null],[12,"send_event","","",192,null],[12,"display","","",192,null],[12,"window","","",192,null],[12,"subtype","","",192,null],[12,"provider","","",192,null],[12,"property","","",192,null],[12,"timestamp","","",192,null],[12,"state","","",192,null],[3,"XRRResourceChangeNotifyEvent","","",null,null],[12,"type_","","",193,null],[12,"serial","","",193,null],[12,"send_event","","",193,null],[12,"display","","",193,null],[12,"window","","",193,null],[12,"subtype","","",193,null],[12,"timestamp","","",193,null],[3,"XRRScreenConfiguration","","",null,null],[3,"XRRModeInfo","","",null,null],[12,"id","","",194,null],[12,"width","","",194,null],[12,"height","","",194,null],[12,"dotClock","","",194,null],[12,"hSyncStart","","",194,null],[12,"hSyncEnd","","",194,null],[12,"hTotal","","",194,null],[12,"hSkew","","",194,null],[12,"vSyncStart","","",194,null],[12,"vSyncEnd","","",194,null],[12,"vTotal","","",194,null],[12,"name","","",194,null],[12,"nameLength","","",194,null],[12,"modeFlags","","",194,null],[3,"XRRScreenResources","","",null,null],[12,"timestamp","","",195,null],[12,"configTimestamp","","",195,null],[12,"ncrtc","","",195,null],[12,"crtcs","","",195,null],[12,"noutput","","",195,null],[12,"outputs","","",195,null],[12,"nmode","","",195,null],[12,"modes","","",195,null],[3,"XRROutputInfo","","",null,null],[12,"timestamp","","",196,null],[12,"crtc","","",196,null],[12,"name","","",196,null],[12,"nameLen","","",196,null],[12,"mm_width","","",196,null],[12,"mm_height","","",196,null],[12,"connection","","",196,null],[12,"subpixel_order","","",196,null],[12,"ncrtc","","",196,null],[12,"crtcs","","",196,null],[12,"nclone","","",196,null],[12,"clones","","",196,null],[12,"nmode","","",196,null],[12,"npreferred","","",196,null],[12,"modes","","",196,null],[3,"XRRPropertyInfo","","",null,null],[12,"pending","","",197,null],[12,"range","","",197,null],[12,"immutable","","",197,null],[12,"num_values","","",197,null],[12,"values","","",197,null],[3,"XRRCrtcInfo","","",null,null],[12,"timestamp","","",198,null],[12,"x","","",198,null],[12,"y","","",198,null],[12,"width","","",198,null],[12,"height","","",198,null],[12,"mode","","",198,null],[12,"rotation","","",198,null],[12,"noutput","","",198,null],[12,"outputs","","",198,null],[12,"rotations","","",198,null],[12,"npossible","","",198,null],[12,"possible","","",198,null],[3,"XRRCrtcGamma","","",null,null],[12,"size","","",199,null],[12,"red","","",199,null],[12,"green","","",199,null],[12,"blue","","",199,null],[3,"XRRCrtcTransformAttributes","","",null,null],[12,"pendingTransform","","",200,null],[12,"pendingFilter","","",200,null],[12,"pendingNparams","","",200,null],[12,"pendingParams","","",200,null],[12,"currentTransform","","",200,null],[12,"currentFilter","","",200,null],[12,"currentNparams","","",200,null],[12,"currentParams","","",200,null],[3,"XRRPanning","","",null,null],[12,"timestamp","","",201,null],[12,"left","","",201,null],[12,"top","","",201,null],[12,"width","","",201,null],[12,"height","","",201,null],[12,"track_left","","",201,null],[12,"track_top","","",201,null],[12,"track_width","","",201,null],[12,"track_height","","",201,null],[12,"border_left","","",201,null],[12,"border_top","","",201,null],[12,"border_right","","",201,null],[12,"border_bottom","","",201,null],[3,"XRRProviderResources","","",null,null],[12,"timestamp","","",202,null],[12,"nproviders","","",202,null],[12,"providers","","",202,null],[3,"XRRProviderInfo","","",null,null],[12,"capabilities","","",203,null],[12,"ncrtcs","","",203,null],[12,"crtcs","","",203,null],[12,"noutputs","","",203,null],[12,"outputs","","",203,null],[12,"name","","",203,null],[12,"nassociatedproviders","","",203,null],[12,"associated_providers","","",203,null],[12,"associated_capability","","",203,null],[12,"nameLen","","",203,null],[3,"XRRMonitorInfo","","",null,null],[12,"name","","",204,null],[12,"primary","","",204,null],[12,"automatic","","",204,null],[12,"noutput","","",204,null],[12,"x","","",204,null],[12,"y","","",204,null],[12,"width","","",204,null],[12,"height","","",204,null],[12,"mwidth","","",204,null],[12,"mheight","","",204,null],[12,"outputs","","",204,null],[3,"Xrandr_2_2_0","","",null,null],[12,"XRRAddOutputMode","","",205,null],[12,"XRRAllocGamma","","",205,null],[12,"XRRAllocModeInfo","","",205,null],[12,"XRRChangeOutputProperty","","",205,null],[12,"XRRChangeProviderProperty","","",205,null],[12,"XRRConfigCurrentConfiguration","","",205,null],[12,"XRRConfigCurrentRate","","",205,null],[12,"XRRConfigRates","","",205,null],[12,"XRRConfigRotations","","",205,null],[12,"XRRConfigSizes","","",205,null],[12,"XRRConfigTimes","","",205,null],[12,"XRRConfigureOutputProperty","","",205,null],[12,"XRRConfigureProviderProperty","","",205,null],[12,"XRRCreateMode","","",205,null],[12,"XRRDeleteOutputMode","","",205,null],[12,"XRRDeleteOutputProperty","","",205,null],[12,"XRRDeleteProviderProperty","","",205,null],[12,"XRRDestroyMode","","",205,null],[12,"XRRFreeCrtcInfo","","",205,null],[12,"XRRFreeGamma","","",205,null],[12,"XRRFreeModeInfo","","",205,null],[12,"XRRFreeOutputInfo","","",205,null],[12,"XRRFreePanning","","",205,null],[12,"XRRFreeProviderInfo","","",205,null],[12,"XRRFreeProviderResources","","",205,null],[12,"XRRFreeScreenConfigInfo","","",205,null],[12,"XRRFreeScreenResources","","",205,null],[12,"XRRGetCrtcGamma","","",205,null],[12,"XRRGetCrtcGammaSize","","",205,null],[12,"XRRGetCrtcInfo","","",205,null],[12,"XRRGetCrtcTransform","","",205,null],[12,"XRRGetOutputInfo","","",205,null],[12,"XRRGetOutputPrimary","","",205,null],[12,"XRRGetOutputProperty","","",205,null],[12,"XRRGetPanning","","",205,null],[12,"XRRGetProviderInfo","","",205,null],[12,"XRRGetProviderProperty","","",205,null],[12,"XRRGetProviderResources","","",205,null],[12,"XRRGetScreenInfo","","",205,null],[12,"XRRGetScreenResources","","",205,null],[12,"XRRGetScreenResourcesCurrent","","",205,null],[12,"XRRGetScreenSizeRange","","",205,null],[12,"XRRListOutputProperties","","",205,null],[12,"XRRListProviderProperties","","",205,null],[12,"XRRQueryExtension","","",205,null],[12,"XRRQueryOutputProperty","","",205,null],[12,"XRRQueryProviderProperty","","",205,null],[12,"XRRQueryVersion","","",205,null],[12,"XRRRates","","",205,null],[12,"XRRRootToScreen","","",205,null],[12,"XRRRotations","","",205,null],[12,"XRRSelectInput","","",205,null],[12,"XRRSetCrtcConfig","","",205,null],[12,"XRRSetCrtcGamma","","",205,null],[12,"XRRSetCrtcTransform","","",205,null],[12,"XRRSetOutputPrimary","","",205,null],[12,"XRRSetPanning","","",205,null],[12,"XRRSetProviderOffloadSink","","",205,null],[12,"XRRSetProviderOutputSource","","",205,null],[12,"XRRSetScreenConfig","","",205,null],[12,"XRRSetScreenConfigAndRate","","",205,null],[12,"XRRSetScreenSize","","",205,null],[12,"XRRSizes","","",205,null],[12,"XRRTimes","","",205,null],[12,"XRRUpdateConfiguration","","",205,null],[6,"Connection","","",null,null],[6,"Rotation","","",null,null],[6,"SizeID","","",null,null],[6,"SubpixelOrder","","",null,null],[6,"RROutput","","",null,null],[6,"RRCrtc","","",null,null],[6,"RRMode","","",null,null],[6,"RRProvider","","",null,null],[6,"XRRModeFlags","","",null,null],[11,"open","","",184,{"inputs":[],"output":{"name":"result"}}],[11,"eq","","",185,null],[11,"ne","","",185,null],[11,"clone","","",185,null],[11,"eq","","",186,null],[11,"ne","","",186,null],[11,"clone","","",186,null],[11,"eq","","",187,null],[11,"ne","","",187,null],[11,"clone","","",187,null],[11,"eq","","",188,null],[11,"ne","","",188,null],[11,"clone","","",188,null],[11,"eq","","",189,null],[11,"ne","","",189,null],[11,"clone","","",189,null],[11,"eq","","",190,null],[11,"ne","","",190,null],[11,"clone","","",190,null],[11,"eq","","",191,null],[11,"ne","","",191,null],[11,"clone","","",191,null],[11,"eq","","",192,null],[11,"ne","","",192,null],[11,"clone","","",192,null],[11,"eq","","",193,null],[11,"ne","","",193,null],[11,"clone","","",193,null],[11,"eq","","",194,null],[11,"ne","","",194,null],[11,"clone","","",194,null],[11,"eq","","",195,null],[11,"ne","","",195,null],[11,"clone","","",195,null],[11,"eq","","",196,null],[11,"ne","","",196,null],[11,"clone","","",196,null],[11,"eq","","",197,null],[11,"ne","","",197,null],[11,"clone","","",197,null],[11,"eq","","",198,null],[11,"ne","","",198,null],[11,"clone","","",198,null],[11,"eq","","",199,null],[11,"ne","","",199,null],[11,"clone","","",199,null],[11,"eq","","",200,null],[11,"ne","","",200,null],[11,"clone","","",200,null],[11,"eq","","",201,null],[11,"ne","","",201,null],[11,"clone","","",201,null],[11,"eq","","",202,null],[11,"ne","","",202,null],[11,"clone","","",202,null],[11,"eq","","",203,null],[11,"ne","","",203,null],[11,"clone","","",203,null],[11,"eq","","",204,null],[11,"ne","","",204,null],[11,"clone","","",204,null],[11,"open","","",205,{"inputs":[],"output":{"name":"result"}}]],"paths":[[4,"OpenErrorKind"],[3,"OpenError"],[3,"Glx"],[3,"Xcursor"],[3,"_XcursorAnimate"],[3,"_XcursorChunkHeader"],[3,"_XcursorComment"],[3,"_XcursorComments"],[3,"_XcursorCursors"],[3,"_XcursorFile"],[3,"_XcursorFileHeader"],[3,"_XcursorFileToc"],[3,"_XcursorImage"],[3,"_XcursorImages"],[3,"Xf86vmode"],[3,"XF86VidModeGamma"],[3,"XF86VidModeModeInfo"],[3,"XF86VidModeModeLine"],[3,"XF86VidModeMonitor"],[3,"XF86VidModeNotifyEvent"],[3,"XF86VidModeSyncRange"],[3,"Xlib"],[3,"XineramaScreenInfo"],[3,"XPanoramiXInfo"],[3,"XInput"],[3,"XDevice"],[3,"XDeviceControl"],[3,"XDeviceInfo"],[3,"XDeviceState"],[3,"XDeviceTimeCoord"],[3,"XExtensionVersion"],[3,"XFeedbackControl"],[3,"XFeedbackState"],[3,"XInputClass"],[3,"XInputClassInfo"],[3,"XInput2"],[3,"Struct_Unnamed1"],[3,"Struct_Unnamed2"],[3,"Struct_Unnamed3"],[3,"Struct_Unnamed4"],[3,"Union_Unnamed5"],[3,"Struct_Unnamed6"],[3,"Struct_Unnamed7"],[3,"Struct_Unnamed8"],[3,"Struct_Unnamed9"],[3,"Struct_Unnamed10"],[3,"Struct_Unnamed11"],[3,"Struct_Unnamed12"],[3,"Struct_Unnamed13"],[3,"Struct_Unnamed14"],[3,"Struct_Unnamed15"],[3,"Struct_Unnamed16"],[3,"Struct_Unnamed17"],[3,"Struct_Unnamed18"],[3,"Struct_Unnamed19"],[3,"Struct_Unnamed20"],[3,"Struct_Unnamed21"],[3,"Struct_Unnamed22"],[3,"Struct_Unnamed23"],[3,"Struct_Unnamed24"],[3,"Struct_Unnamed25"],[3,"Struct_Unnamed26"],[3,"Struct_Unnamed27"],[3,"Struct_Unnamed28"],[3,"Xlib"],[3,"XEvent"],[3,"XAnyEvent"],[3,"XButtonEvent"],[3,"XCirculateEvent"],[3,"XCirculateRequestEvent"],[3,"XClientMessageEvent"],[3,"XColormapEvent"],[3,"XConfigureEvent"],[3,"XConfigureRequestEvent"],[3,"XCreateWindowEvent"],[3,"XCrossingEvent"],[3,"XDestroyWindowEvent"],[3,"XErrorEvent"],[3,"XExposeEvent"],[3,"XFocusChangeEvent"],[3,"XGraphicsExposeEvent"],[3,"XGravityEvent"],[3,"XKeyEvent"],[3,"XKeymapEvent"],[3,"XMapEvent"],[3,"XMappingEvent"],[3,"XMapRequestEvent"],[3,"XMotionEvent"],[3,"XNoExposeEvent"],[3,"XPropertyEvent"],[3,"XReparentEvent"],[3,"XResizeRequestEvent"],[3,"XSelectionClearEvent"],[3,"XSelectionEvent"],[3,"XSelectionRequestEvent"],[3,"XUnmapEvent"],[3,"XVisibilityEvent"],[3,"_XkbCompatMapRec"],[3,"_XkbDesc"],[3,"_XkbIndicatorRec"],[3,"_XkbKeyAliasRec"],[3,"_XkbKeyNameRec"],[3,"_XkbNamesRec"],[3,"Depth"],[3,"Screen"],[3,"ScreenFormat"],[3,"Visual"],[3,"XArc"],[3,"XChar2b"],[3,"XCharStruct"],[3,"XClassHint"],[3,"XColor"],[3,"XComposeStatus"],[3,"XExtCodes"],[3,"XExtData"],[3,"XFontProp"],[3,"XFontSetExtents"],[3,"XFontStruct"],[3,"XGCValues"],[3,"XGenericEventCookie"],[3,"XHostAddress"],[3,"XIconSize"],[3,"XImage"],[3,"XKeyboardControl"],[3,"XKeyboardState"],[3,"XmbTextItem"],[3,"XModifierKeymap"],[3,"XOMCharSetList"],[3,"XPixmapFormatValues"],[3,"XPoint"],[3,"XRectangle"],[3,"XrmOptionDescRec"],[3,"XrmValue"],[3,"XSegment"],[3,"XSetWindowAttributes"],[3,"XSizeHints"],[3,"XStandardColormap"],[3,"XTextItem"],[3,"XTextItem16"],[3,"XTextProperty"],[3,"XTimeCoord"],[3,"XVisualInfo"],[3,"XwcTextItem"],[3,"XWindowAttributes"],[3,"XWindowChanges"],[3,"XWMHints"],[3,"AspectRatio"],[3,"ImageFns"],[3,"ClientMessageData"],[3,"Xmu"],[3,"Xf86vmode"],[3,"XRecordClientInfo"],[3,"XRecordExtRange"],[3,"XRecordInterceptData"],[3,"XRecordRange"],[3,"XRecordRange8"],[3,"XRecordRange16"],[3,"XRecordState"],[3,"Xrender"],[3,"_XAnimCursor"],[3,"_XCircle"],[3,"_XConicalGradient"],[3,"_XFilters"],[3,"_XGlyphElt8"],[3,"_XGlyphElt16"],[3,"_XGlyphElt32"],[3,"_XGlyphInfo"],[3,"_XIndexValue"],[3,"_XLinearGradient"],[3,"_XLineFixed"],[3,"_XPointDouble"],[3,"_XPointFixed"],[3,"_XRadialGradient"],[3,"XRenderColor"],[3,"XRenderDirectFormat"],[3,"XRenderPictFormat"],[3,"_XRenderPictureAttributes"],[3,"_XSpanFix"],[3,"_XTrap"],[3,"_XTrapezoid"],[3,"_XTriangle"],[3,"_XTransform"],[3,"Xt"],[3,"Xf86vmode"],[3,"Xrandr"],[3,"XRRScreenSize"],[3,"XRRScreenChangeNotifyEvent"],[3,"XRRNotifyEvent"],[3,"XRROutputChangeNotifyEvent"],[3,"XRRCrtcChangeNotifyEvent"],[3,"XRROutputPropertyNotifyEvent"],[3,"XRRProviderChangeNotifyEvent"],[3,"XRRProviderPropertyNotifyEvent"],[3,"XRRResourceChangeNotifyEvent"],[3,"XRRModeInfo"],[3,"XRRScreenResources"],[3,"XRROutputInfo"],[3,"XRRPropertyInfo"],[3,"XRRCrtcInfo"],[3,"XRRCrtcGamma"],[3,"XRRCrtcTransformAttributes"],[3,"XRRPanning"],[3,"XRRProviderResources"],[3,"XRRProviderInfo"],[3,"XRRMonitorInfo"],[3,"Xrandr_2_2_0"]]};
searchIndex["ndarray"] = {"doc":"The `ndarray` crate provides an N-dimensional container similar to numpy’s\nndarray.","items":[[3,"Indexes","ndarray","An iterator over the indexes of an array shape.",null,null],[3,"Si","","A slice, a description of a range of an array axis.",null,null],[12,"0","","",0,null],[12,"1","","",0,null],[12,"2","","",0,null],[3,"InnerIter","","An iterator that traverses over all dimensions but the innermost,\nand yields each inner row.",null,null],[3,"InnerIterMut","","An iterator that traverses over all dimensions but the innermost,\nand yields each inner row (mutable).",null,null],[3,"OuterIter","","An iterator that traverses over the outermost dimension\nand yields each subview.",null,null],[3,"OuterIterMut","","An iterator that traverses over the outermost dimension\nand yields each subview (mutable).",null,null],[3,"ArrayBase","","An *N*-dimensional array.",null,null],[3,"ViewRepr","","Array view’s representation.",null,null],[3,"Elements","","An iterator over the elements of an array.",null,null],[3,"ElementsMut","","An iterator over the elements of an array (mutable).",null,null],[3,"Indexed","","An iterator over the indexes and elements of an array.",null,null],[3,"IndexedMut","","An iterator over the indexes and elements of an array (mutable).",null,null],[4,"ShapeError","","An error that can be produced by `.into_shape()`",null,null],[13,"IncompatibleShapes","","incompatible shapes in reshape, (from, to)",1,null],[13,"IncompatibleLayout","","incompatible layout: not contiguous",1,null],[13,"DimensionTooLarge","","Dimension too large (shape)",1,null],[5,"zeros","","Return an array filled with zeros",null,{"inputs":[{"name":"d"}],"output":{"name":"ownedarray"}}],[5,"arr0","","Return a zero-dimensional array with the element `x`.",null,{"inputs":[{"name":"a"}],"output":{"name":"array"}}],[5,"arr1","","Return a one-dimensional array with elements from `xs`.",null,null],[5,"aview0","","Return a zero-dimensional array view borrowing `x`.",null,{"inputs":[{"name":"a"}],"output":{"name":"arrayview"}}],[5,"aview1","","Return a one-dimensional array view with elements borrowing `xs`.",null,null],[5,"aview2","","Return a two-dimensional array view with elements borrowing `xs`.",null,null],[5,"aview_mut1","","Return a one-dimensional read-write array view with elements borrowing `xs`.",null,null],[5,"arr2","","Return a two-dimensional array with elements from `xs`.",null,null],[5,"arr3","","Return a three-dimensional array with elements from `xs`.",null,null],[0,"linalg","","***Deprecated: linalg is not in good shape.***",null,null],[5,"eye","ndarray::linalg","Return the identity matrix of dimension *n*.",null,{"inputs":[{"name":"ix"}],"output":{"name":"mat"}}],[5,"least_squares","","Solve *a x = b* with linear least squares approximation.",null,{"inputs":[{"name":"mat"},{"name":"col"}],"output":{"name":"col"}}],[5,"cholesky","","Factor *a = L L&lt;sup&gt;T&lt;/sup&gt;*.",null,{"inputs":[{"name":"mat"}],"output":{"name":"mat"}}],[5,"subst_fw","","Solve *L x = b* where *L* is a lower triangular matrix.",null,{"inputs":[{"name":"mat"},{"name":"col"}],"output":{"name":"col"}}],[5,"subst_bw","","Solve *U x = b* where *U* is an upper triangular matrix.",null,{"inputs":[{"name":"mat"},{"name":"col"}],"output":{"name":"col"}}],[6,"Col","","Column vector.",null,null],[6,"Mat","","Rectangular matrix.",null,null],[8,"Ring","","Trait union for a ring with 1.",null,null],[8,"Field","","Trait union for a field.",null,null],[8,"ComplexField","","A real or complex number.",null,null],[11,"conjugate","","",2,null],[10,"sqrt_real","","",2,null],[11,"is_complex","","",2,{"inputs":[],"output":{"name":"bool"}}],[11,"conjugate","num_complex","",3,null],[11,"sqrt_real","","",3,null],[11,"is_complex","","",3,{"inputs":[],"output":{"name":"bool"}}],[11,"index","ndarray","",4,null],[11,"index_mut","","",4,null],[11,"eq","","Return `true` if the array shapes and all elements of `self` and\n`rhs` are equal. Return `false` otherwise.",4,null],[11,"from_iter","","",4,{"inputs":[{"name":"i"}],"output":{"name":"arraybase"}}],[11,"hash","","",4,null],[11,"fmt","","",4,null],[11,"fmt","","",4,null],[11,"fmt","","",4,null],[11,"fmt","","",4,null],[11,"fmt","","",4,null],[11,"ndim","collections::vec","",5,null],[11,"slice","","",5,null],[11,"slice_mut","","",5,null],[11,"remove_axis","","",5,null],[11,"clone","ndarray","",6,null],[11,"new","","Create an iterator over the array shape `dim`.",6,{"inputs":[{"name":"d"}],"output":{"name":"indexes"}}],[11,"next","","",6,null],[11,"size_hint","","",6,null],[11,"clone","","",7,null],[11,"next","","",7,null],[11,"size_hint","","",7,null],[11,"next_back","","",7,null],[11,"next","","",8,null],[11,"size_hint","","",8,null],[11,"next","","",9,null],[11,"size_hint","","",9,null],[11,"next_back","","",9,null],[11,"next","","",10,null],[11,"size_hint","","",10,null],[11,"next","","",11,null],[11,"size_hint","","",11,null],[11,"next","","",12,null],[11,"size_hint","","",12,null],[11,"next","","",13,null],[11,"size_hint","","",13,null],[11,"next_back","","",13,null],[11,"next","","",14,null],[11,"size_hint","","",14,null],[11,"next_back","","",14,null],[11,"fmt","","",0,null],[11,"hash","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"clone","","",0,null],[11,"from","","",0,{"inputs":[{"name":"range"}],"output":{"name":"si"}}],[11,"from","","",0,{"inputs":[{"name":"rangefrom"}],"output":{"name":"si"}}],[11,"from","","",0,{"inputs":[{"name":"rangeto"}],"output":{"name":"si"}}],[11,"from","","",0,{"inputs":[{"name":"rangefull"}],"output":{"name":"si"}}],[11,"step","","",0,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"description","","",1,null],[11,"fmt","","",1,null],[11,"add","","",4,null],[11,"add","","",4,null],[11,"add","","",4,null],[11,"sub","","",4,null],[11,"sub","","",4,null],[11,"sub","","",4,null],[11,"mul","","",4,null],[11,"mul","","",4,null],[11,"mul","","",4,null],[11,"div","","",4,null],[11,"div","","",4,null],[11,"div","","",4,null],[11,"rem","","",4,null],[11,"rem","","",4,null],[11,"rem","","",4,null],[11,"bitand","","",4,null],[11,"bitand","","",4,null],[11,"bitand","","",4,null],[11,"bitor","","",4,null],[11,"bitor","","",4,null],[11,"bitor","","",4,null],[11,"bitxor","","",4,null],[11,"bitxor","","",4,null],[11,"bitxor","","",4,null],[11,"shl","","",4,null],[11,"shl","","",4,null],[11,"shl","","",4,null],[11,"shr","","",4,null],[11,"shr","","",4,null],[11,"shr","","",4,null],[11,"add","num_complex","",3,null],[11,"add","","",3,null],[11,"sub","","",3,null],[11,"sub","","",3,null],[11,"mul","","",3,null],[11,"mul","","",3,null],[11,"div","","",3,null],[11,"div","","",3,null],[11,"add","","",3,null],[11,"add","","",3,null],[11,"sub","","",3,null],[11,"sub","","",3,null],[11,"mul","","",3,null],[11,"mul","","",3,null],[11,"div","","",3,null],[11,"div","","",3,null],[11,"neg","ndarray","Perform an elementwise negation of `self` and return the result.",4,null],[11,"not","","Perform an elementwise unary not of `self` and return the result.",4,null],[6,"Ix","","Array index type",null,null],[6,"Ixs","","Array index type (signed)",null,null],[6,"Array","","Array where the data is reference counted and copy on write, it\ncan act as both an owner as the data as well as a lightweight view.",null,null],[6,"OwnedArray","","Array where the data is owned uniquely.",null,null],[6,"ArrayView","","A lightweight array view.",null,null],[6,"ArrayViewMut","","A lightweight read-write array view.",null,null],[17,"S","","Slice value for the full range of an axis.",null,null],[8,"Dimension","","Trait for the shape and index types of arrays.",null,null],[16,"SliceArg","","`SliceArg` is the type which is used to specify slicing for this\ndimension.",15,null],[10,"ndim","","",15,null],[11,"slice","","",15,null],[11,"slice_mut","","",15,null],[11,"size","","",15,null],[11,"default_strides","","",15,null],[11,"first_index","","",15,null],[11,"next_for","","Iteration -- Use self as size, and return next index after `index`\nor None if there are no more.",15,null],[11,"stride_offset","","Return stride offset for index.",15,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"isize"}}],[11,"stride_offset_checked","","Return stride offset for this dimension and index.",15,null],[11,"do_slices","","Modify dimension, strides and return data pointer offset",15,{"inputs":[{"name":"self"},{"name":"self"},{"name":"slicearg"}],"output":{"name":"isize"}}],[8,"RemoveAxis","","Helper trait to define a larger-than relation for array shapes:\nremoving one axis from *Self* gives smaller dimension *Smaller*.",null,null],[16,"Smaller","","",16,null],[10,"remove_axis","","",16,null],[8,"NdIndex","","A tuple or fixed size array that can be used to index an array.",null,null],[16,"Dim","","",17,null],[8,"Data","","Array’s inner representation.",null,null],[16,"Elem","","",18,null],[10,"slice","","",18,null],[8,"DataMut","","Array’s writable inner representation.",null,null],[10,"slice_mut","","",19,null],[11,"ensure_unique","","",19,{"inputs":[{"name":"arraybase"}],"output":null}],[11,"is_unique","","",19,null],[8,"DataClone","","Clone an Array’s storage.",null,null],[10,"clone_with_ptr","","Unsafe because, `ptr` must point inside the current storage.",20,null],[8,"DataOwned","","Array representation that is a unique or shared owner of its data.",null,null],[10,"new","","",21,{"inputs":[{"name":"vec"}],"output":{"name":"self"}}],[10,"into_shared","","",21,null],[8,"DataShared","","Array representation that is a lightweight view.",null,null],[8,"Initializer","","Slice or fixed-size array used for array initialization",null,null],[16,"Elem","","",22,null],[10,"as_init_slice","","",22,null],[11,"is_fixed_size","","",22,{"inputs":[],"output":{"name":"bool"}}],[8,"FixedInitializer","","Fixed-size array used for array initialization",null,null],[10,"len","","",23,{"inputs":[],"output":{"name":"usize"}}],[8,"Scalar","","Elements that can be used as direct operands in arithmetic with arrays.",null,null],[11,"slice","alloc::rc","",24,null],[11,"slice_mut","","",24,null],[11,"ensure_unique","","",24,{"inputs":[{"name":"arraybase"}],"output":null}],[11,"is_unique","","",24,null],[11,"clone_with_ptr","","",24,null],[11,"slice","collections::vec","",5,null],[11,"slice_mut","","",5,null],[11,"clone_with_ptr","","",5,null],[11,"slice","ndarray","",25,null],[11,"clone_with_ptr","","",25,null],[11,"slice","","",25,null],[11,"slice_mut","","",25,null],[11,"new","collections::vec","",5,{"inputs":[{"name":"vec"}],"output":{"name":"self"}}],[11,"into_shared","","",5,null],[11,"new","alloc::rc","",24,{"inputs":[{"name":"vec"}],"output":{"name":"self"}}],[11,"into_shared","","",24,null],[11,"clone","ndarray","",25,null],[11,"clone","","",4,null],[11,"from_vec","","Create a one-dimensional array from a vector (no allocation needed).",4,{"inputs":[{"name":"vec"}],"output":{"name":"arraybase"}}],[11,"from_iter","","Create a one-dimensional array from an iterable.",4,{"inputs":[{"name":"i"}],"output":{"name":"arraybase"}}],[11,"linspace","","Create a one-dimensional array from inclusive interval\n`[start, end]` with `n` elements. `F` must be a floating point type.",4,{"inputs":[{"name":"f"},{"name":"f"},{"name":"usize"}],"output":{"name":"arraybase"}}],[11,"range","","Create a one-dimensional array from interval `[start, end)`",4,{"inputs":[{"name":"f32"},{"name":"f32"}],"output":{"name":"arraybase"}}],[11,"eye","","Create an identity matrix of size `n` (square 2D array).",4,{"inputs":[{"name":"ix"}],"output":{"name":"arraybase"}}],[11,"from_elem","","Create an array with copies of `elem`, dimension `dim`.",4,{"inputs":[{"name":"d"},{"name":"a"}],"output":{"name":"arraybase"}}],[11,"zeros","","Create an array with zeros, dimension `dim`.",4,{"inputs":[{"name":"d"}],"output":{"name":"arraybase"}}],[11,"default","","Create an array with default values, dimension `dim`.",4,{"inputs":[{"name":"d"}],"output":{"name":"arraybase"}}],[11,"from_vec_dim","","Create an array from a vector (with no allocation needed).",4,{"inputs":[{"name":"d"},{"name":"vec"}],"output":{"name":"arraybase"}}],[11,"into_outer_iter","","Return an outer iterator for this view.",26,null],[11,"into_outer_iter","","",27,null],[11,"len","","Return the total number of elements in the Array.",4,null],[11,"dim","","Return the shape of the array.",4,null],[11,"shape","","Return the shape of the array as a slice.",4,null],[11,"strides","","Return the strides of the array",4,null],[11,"ndim","","Return the number of dimensions (axes) in the array",4,null],[11,"view","","Return a read-only view of the array",4,null],[11,"view_mut","","Return a read-write view of the array",4,null],[11,"to_owned","","Return an uniquely owned copy of the array",4,null],[11,"to_shared","","Return a shared ownership (copy on write) array.",4,null],[11,"into_shared","","Turn the array into a shared ownership (copy on write) array,\nwithout any copying.",4,null],[11,"iter","","Return an iterator of references to the elements of the array.",4,null],[11,"indexed_iter","","Return an iterator of references to the elements of the array.",4,null],[11,"iter_mut","","Return an iterator of mutable references to the elements of the array.",4,null],[11,"indexed_iter_mut","","Return an iterator of indexes and mutable references to the elements of the array.",4,null],[11,"slice","","Return a sliced array.",4,null],[11,"islice","","Slice the array’s view in place.",4,null],[11,"slice_iter","","***Deprecated: Use `.slice()` instead.***",4,null],[11,"slice_mut","","Return a sliced read-write view of the array.",4,null],[11,"slice_iter_mut","","***Deprecated: use `.slice_mut()`***",4,null],[11,"get","","Return a reference to the element at `index`, or return `None`\nif the index is out of bounds.",4,null],[11,"at","","***Deprecated: use .get(i)***",4,null],[11,"get_mut","","Return a mutable reference to the element at `index`, or return `None`\nif the index is out of bounds.",4,null],[11,"at_mut","","***Deprecated: use .get_mut(i)***",4,null],[11,"uget","","Perform *unchecked* array indexing.",4,null],[11,"uchk_at","","***Deprecated: use `.uget()`***",4,null],[11,"uget_mut","","Perform *unchecked* array indexing.",4,null],[11,"uchk_at_mut","","***Deprecated: use `.uget_mut()`***",4,null],[11,"swap_axes","","Swap axes `ax` and `bx`.",4,null],[11,"subview","","Along `axis`, select the subview `index` and return a\nview with that axis removed.",4,null],[11,"isubview","","Collapse dimension `axis` into length one,\nand select the subview of `index` along that axis.",4,null],[11,"into_subview","","Along `axis`, select the subview `index` and return `self`\nwith that axis removed.",4,null],[11,"subview_mut","","Along `axis`, select the subview `index` and return a read-write view\nwith the axis removed.",4,null],[11,"sub_iter_mut","","***Deprecated: use `.subview_mut()`***",4,null],[11,"inner_iter","","Return an iterator that traverses over all dimensions but the innermost,\nand yields each inner row.",4,null],[11,"inner_iter_mut","","Return an iterator that traverses over all dimensions but the innermost,\nand yields each inner row.",4,null],[11,"outer_iter","","Return an iterator that traverses over the outermost dimension\nand yields each subview.",4,null],[11,"outer_iter_mut","","Return an iterator that traverses over the outermost dimension\nand yields each subview.",4,null],[11,"axis_iter","","Return an iterator that traverses over `axis`\nand yields each subview along it.",4,null],[11,"axis_iter_mut","","Return an iterator that traverses over `axis`\nand yields each mutable subview along it.",4,null],[11,"diag","","Return an view of the diagonal elements of the array.",4,null],[11,"diag_mut","","Return a read-write view over the diagonal elements of the array.",4,null],[11,"into_diag","","Return the diagonal as a one-dimensional array.",4,null],[11,"diag_iter","","***Deprecated: use `.diag()`***",4,null],[11,"diag_iter_mut","","***Deprecated: use `.diag_mut()`***",4,null],[11,"is_standard_layout","","Return `true` if the array data is laid out in contiguous “C order” in\nmemory (where the last index is the most rapidly varying).",4,null],[11,"as_slice","","Return the array’s data as a slice, if it is contiguous and\nthe element order corresponds to the memory order. Return `None` otherwise.",4,null],[11,"as_slice_mut","","Return the array’s data as a slice, if it is contiguous and\nthe element order corresponds to the memory order. Return `None` otherwise.",4,null],[11,"reshape","","Transform the array into `shape`; any shape with the same number of\nelements is accepted.",4,null],[11,"into_shape","","Transform the array into `shape`; any shape with the same number of\nelements is accepted, but the source array or view must be\ncontiguous, otherwise we cannot rearrange the dimension.",4,null],[11,"broadcast","","Act like a larger size and/or shape array by *broadcasting*\ninto a larger shape, if possible.",4,null],[11,"broadcast_iter","","***Deprecated: Use `.broadcast()` instead.***",4,null],[11,"raw_data","","Return a slice of the array’s backing data in memory order.",4,null],[11,"raw_data_mut","","Return a mutable slice of the array’s backing data in memory order.",4,null],[11,"assign","","Perform an elementwise assigment to `self` from `rhs`.",4,null],[11,"assign_scalar","","Perform an elementwise assigment to `self` from scalar `x`.",4,null],[11,"zip_mut_with","","Traverse two arrays in unspecified order, in lock step,\ncalling the closure `f` on each element pair.",4,null],[11,"fold","","Traverse the array elements in order and apply a fold,\nreturning the resulting value.",4,null],[11,"map","","Apply `f` elementwise and return a new array with\nthe results.",4,null],[11,"sum","","Return sum along `axis`.",4,null],[11,"scalar_sum","","Return the sum of all elements in the array.",4,null],[11,"mean","","Return mean along `axis`.",4,null],[11,"allclose","","Return `true` if the arrays&#39; elementwise differences are all within\nthe given absolute tolerance.&lt;br&gt;\nReturn `false` otherwise, or if the shapes disagree.",4,null],[11,"dot","","Compute the dot product of one-dimensional arrays.",4,null],[11,"row","","Return an array view of row `index`.",4,null],[11,"row_mut","","Return a mutable array view of row `index`.",4,null],[11,"column","","Return an array view of column `index`.",4,null],[11,"column_mut","","Return a mutable array view of column `index`.",4,null],[11,"row_iter","","***Deprecated: Use `.row()` instead.***",4,null],[11,"col_iter","","***Deprecated: Use `.column()` instead.***",4,null],[11,"mat_mul","","Perform matrix multiplication of rectangular arrays `self` and `rhs`.",4,null],[11,"mat_mul_col","","Perform the matrix multiplication of the rectangular array `self` and\ncolumn vector `rhs`.",4,null],[11,"iadd","","Perform elementwise\naddition\n between `self` and `rhs`,\n *in place*.",4,null],[11,"iadd_scalar","","Perform elementwise\naddition\n between `self` and the scalar `x`,\n *in place*.",4,null],[11,"isub","","Perform elementwise\nsubtraction\n between `self` and `rhs`,\n *in place*.",4,null],[11,"isub_scalar","","Perform elementwise\nsubtraction\n between `self` and the scalar `x`,\n *in place*.",4,null],[11,"imul","","Perform elementwise\nmultiplication\n between `self` and `rhs`,\n *in place*.",4,null],[11,"imul_scalar","","Perform elementwise\nmultiplication\n between `self` and the scalar `x`,\n *in place*.",4,null],[11,"idiv","","Perform elementwise\ndivision\n between `self` and `rhs`,\n *in place*.",4,null],[11,"idiv_scalar","","Perform elementwise\ndivision\n between `self` and the scalar `x`,\n *in place*.",4,null],[11,"irem","","Perform elementwise\nremainder\n between `self` and `rhs`,\n *in place*.",4,null],[11,"irem_scalar","","Perform elementwise\nremainder\n between `self` and the scalar `x`,\n *in place*.",4,null],[11,"ibitand","","Perform elementwise\nbit and\n between `self` and `rhs`,\n *in place*.",4,null],[11,"ibitand_scalar","","Perform elementwise\nbit and\n between `self` and the scalar `x`,\n *in place*.",4,null],[11,"ibitor","","Perform elementwise\nbit or\n between `self` and `rhs`,\n *in place*.",4,null],[11,"ibitor_scalar","","Perform elementwise\nbit or\n between `self` and the scalar `x`,\n *in place*.",4,null],[11,"ibitxor","","Perform elementwise\nbit xor\n between `self` and `rhs`,\n *in place*.",4,null],[11,"ibitxor_scalar","","Perform elementwise\nbit xor\n between `self` and the scalar `x`,\n *in place*.",4,null],[11,"ishl","","Perform elementwise\nleft shift\n between `self` and `rhs`,\n *in place*.",4,null],[11,"ishl_scalar","","Perform elementwise\nleft shift\n between `self` and the scalar `x`,\n *in place*.",4,null],[11,"ishr","","Perform elementwise\nright shift\n between `self` and `rhs`,\n *in place*.",4,null],[11,"ishr_scalar","","Perform elementwise\nright shift\n between `self` and the scalar `x`,\n *in place*.",4,null],[11,"ineg","","Perform an elementwise negation of `self`, *in place*.",4,null],[11,"inot","","Perform an elementwise unary not of `self`, *in place*.",4,null],[11,"clone","","",8,null],[14,"s!","","Slice argument constructor.",null,null],[11,"into_iter","","",26,null],[11,"into_iter","","",27,null],[11,"slice","","",15,null],[11,"slice_mut","","",15,null],[11,"size","","",15,null],[11,"default_strides","","",15,null],[11,"first_index","","",15,null],[11,"next_for","","Iteration -- Use self as size, and return next index after `index`\nor None if there are no more.",15,null],[11,"stride_offset","","Return stride offset for index.",15,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"isize"}}],[11,"stride_offset_checked","","Return stride offset for this dimension and index.",15,null],[11,"do_slices","","Modify dimension, strides and return data pointer offset",15,{"inputs":[{"name":"self"},{"name":"self"},{"name":"slicearg"}],"output":{"name":"isize"}}],[11,"ndim","","",28,null],[11,"size","","",28,null],[11,"default_strides","","",28,null],[11,"first_index","","",28,null],[11,"next_for","","",28,null],[11,"stride_offset","","Self is an index, return the stride offset",28,{"inputs":[{"name":"ix"},{"name":"ix"}],"output":{"name":"isize"}}],[11,"stride_offset_checked","","Return stride offset for this dimension and index.",28,null],[11,"remove_axis","","",28,null]],"paths":[[3,"Si"],[4,"ShapeError"],[8,"ComplexField"],[3,"Complex"],[3,"ArrayBase"],[3,"Vec"],[3,"Indexes"],[3,"Elements"],[3,"Indexed"],[3,"ElementsMut"],[3,"IndexedMut"],[3,"InnerIter"],[3,"InnerIterMut"],[3,"OuterIter"],[3,"OuterIterMut"],[8,"Dimension"],[8,"RemoveAxis"],[8,"NdIndex"],[8,"Data"],[8,"DataMut"],[8,"DataClone"],[8,"DataOwned"],[8,"Initializer"],[8,"FixedInitializer"],[3,"Rc"],[3,"ViewRepr"],[6,"ArrayView"],[6,"ArrayViewMut"],[6,"Ix"]]};
searchIndex["num"] = {"doc":"A collection of numeric types and traits for Rust.","items":[[11,"new","num_complex","Create a new Complex",0,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"complex"}}],[11,"i","","Returns imaginary unit",0,{"inputs":[],"output":{"name":"complex"}}],[11,"norm_sqr","","Returns the square of the norm (since `T` doesn&#39;t necessarily\nhave a sqrt function), i.e. `re^2 + im^2`.",0,null],[11,"scale","","Multiplies `self` by the scalar `t`.",0,null],[11,"unscale","","Divides `self` by the scalar `t`.",0,null],[11,"conj","","Returns the complex conjugate. i.e. `re - i im`",0,null],[11,"inv","","Returns `1/self`",0,null],[11,"norm","","Calculate |self|",0,null],[11,"arg","","Calculate the principal Arg of self.",0,null],[11,"to_polar","","Convert to polar form (r, theta), such that `self = r * exp(i\n* theta)`",0,null],[11,"from_polar","","Convert a polar representation into a complex number.",0,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"complex"}}],[11,"exp","","Computes `e^(self)`, where `e` is the base of the natural logarithm.",0,null],[11,"ln","","Computes the principal value of natural logarithm of `self`.",0,null],[11,"sqrt","","Computes the principal value of the square root of `self`.",0,null],[11,"sin","","Computes the sine of `self`.",0,null],[11,"cos","","Computes the cosine of `self`.",0,null],[11,"tan","","Computes the tangent of `self`.",0,null],[11,"asin","","Computes the principal value of the inverse sine of `self`.",0,null],[11,"acos","","Computes the principal value of the inverse cosine of `self`.",0,null],[11,"atan","","Computes the principal value of the inverse tangent of `self`.",0,null],[11,"sinh","","Computes the hyperbolic sine of `self`.",0,null],[11,"cosh","","Computes the hyperbolic cosine of `self`.",0,null],[11,"tanh","","Computes the hyperbolic tangent of `self`.",0,null],[11,"asinh","","Computes the principal value of inverse hyperbolic sine of `self`.",0,null],[11,"acosh","","Computes the principal value of inverse hyperbolic cosine of `self`.",0,null],[11,"atanh","","Computes the principal value of inverse hyperbolic tangent of `self`.",0,null],[11,"is_nan","","Checks if the given complex number is NaN",0,null],[11,"is_infinite","","Checks if the given complex number is infinite",0,null],[11,"is_finite","","Checks if the given complex number is finite",0,null],[11,"is_normal","","Checks if the given complex number is normal",0,null],[11,"fmt","","",0,null],[11,"hash","","",0,null],[11,"clone","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"decode","","",0,{"inputs":[{"name":"__dt"}],"output":{"name":"result"}}],[11,"encode","","",0,null],[11,"from","","",0,{"inputs":[{"name":"t"}],"output":{"name":"complex"}}],[11,"from","","",0,{"inputs":[{"name":"t"}],"output":{"name":"complex"}}],[11,"add","","",0,null],[11,"add","","",0,null],[11,"sub","","",0,null],[11,"sub","","",0,null],[11,"mul","","",0,null],[11,"mul","","",0,null],[11,"div","","",0,null],[11,"div","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"sub","","",0,null],[11,"mul","","",0,null],[11,"div","","",0,null],[11,"add","","",0,null],[11,"sub","","",0,null],[11,"mul","","",0,null],[11,"div","","",0,null],[11,"zero","","",0,{"inputs":[],"output":{"name":"complex"}}],[11,"is_zero","","",0,null],[11,"one","","",0,{"inputs":[],"output":{"name":"complex"}}],[11,"fmt","","",0,null],[3,"Complex","num","A complex number in Cartesian form.",null,null],[12,"re","","Real portion of the complex number",0,null],[12,"im","","Imaginary portion of the complex number",0,null],[8,"Integer","","",null,null],[10,"div_floor","","Floored integer division.",1,null],[10,"mod_floor","","Floored integer modulo, satisfying:",1,null],[10,"gcd","","Greatest Common Divisor (GCD).",1,null],[10,"lcm","","Lowest Common Multiple (LCM).",1,null],[10,"divides","","Deprecated, use `is_multiple_of` instead.",1,null],[10,"is_multiple_of","","Returns `true` if `other` is a multiple of `self`.",1,null],[10,"is_even","","Returns `true` if the number is even.",1,null],[10,"is_odd","","Returns `true` if the number is odd.",1,null],[10,"div_rem","","Simultaneous truncated integer division and modulus.\nReturns `(quotient, remainder)`.",1,null],[11,"div_mod_floor","","Simultaneous floored integer division and modulus.\nReturns `(quotient, remainder)`.",1,null],[5,"range","","Returns an iterator over the given range [start, stop) (that is, starting\nat start (inclusive), and ending at stop (exclusive)).",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"range"}}],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"rangeinclusive"}}],[5,"range_step","","Return an iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestep"}}],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestepinclusive"}}],[11,"fmt","num_traits","",2,null],[11,"fmt","","",3,null],[8,"Num","num","The base trait for numeric types",null,null],[16,"FromStrRadixErr","","",4,null],[10,"from_str_radix","","Convert from a string and radix &lt;= 36.",4,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",5,{"inputs":[],"output":{"name":"self"}}],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",5,null],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",6,{"inputs":[],"output":{"name":"self"}}],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can be negative).",null,null],[10,"abs","","Computes the absolute value.",7,null],[10,"abs_sub","","The positive difference of two numbers.",7,null],[10,"signum","","Returns the sign of the number.",7,null],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",7,null],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",7,null],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",8,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","returns the largest finite number this type can represent",8,{"inputs":[],"output":{"name":"self"}}],[8,"Saturating","","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator.\nReturns a+b, saturating at the numeric bounds instead of overflowing.",9,null],[10,"saturating_sub","","Saturating subtraction operator.\nReturns a-b, saturating at the numeric bounds instead of overflowing.",9,null],[8,"CheckedAdd","","Performs addition that returns `None` instead of wrapping around on\noverflow.",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is\nreturned.",10,null],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens,\n`None` is returned.",11,null],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or\noverflow.",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow\nor overflow happens, `None` is returned.",12,null],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of\nwrapping around on underflow and overflow.",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by\nzero. If any of that happens, `None` is returned.",13,null],[8,"PrimInt","","",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",14,null],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",14,null],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation\nof `self`.",14,null],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation\nof `self`.",14,null],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping\nthe truncated bits to the end of the resulting integer.",14,null],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping\nthe truncated bits to the beginning of the resulting integer.",14,null],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling\nzeros in the least significant bits.",14,null],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying\nthe &quot;sign bit&quot; in the most significant bits even for unsigned types.",14,null],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling\nzeros in the least significant bits.",14,null],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling\nzeros in the most significant bits.",14,null],[10,"swap_bytes","","Reverses the byte order of the integer.",14,null],[10,"from_be","","Convert an integer from big endian to the target&#39;s endianness.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"from_le","","Convert an integer from little endian to the target&#39;s endianness.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_be","","Convert `self` to big endian from the target&#39;s endianness.",14,null],[10,"to_le","","Convert `self` to little endian from the target&#39;s endianness.",14,null],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",14,null],[8,"Float","","",null,null],[10,"nan","","Returns the `NaN` value.",15,{"inputs":[],"output":{"name":"self"}}],[10,"infinity","","Returns the infinite value.",15,{"inputs":[],"output":{"name":"self"}}],[10,"neg_infinity","","Returns the negative infinite value.",15,{"inputs":[],"output":{"name":"self"}}],[10,"neg_zero","","Returns `-0.0`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"min_value","","Returns the smallest finite value that this type can represent.",15,{"inputs":[],"output":{"name":"self"}}],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",15,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","Returns the largest finite value that this type can represent.",15,{"inputs":[],"output":{"name":"self"}}],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",15,null],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and\nfalse otherwise.",15,null],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",15,null],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,\n[subnormal][subnormal], or `NaN`.",15,null],[10,"classify","","Returns the floating point category of the number. If only one property\nis going to be tested, it is generally faster to use the specific\npredicate instead.",15,null],[10,"floor","","Returns the largest integer less than or equal to a number.",15,null],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",15,null],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from\n`0.0`.",15,null],[10,"trunc","","Return the integer part of a number.",15,null],[10,"fract","","Returns the fractional part of a number.",15,null],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the\nnumber is `Float::nan()`.",15,null],[10,"signum","","Returns a number that represents the sign of `self`.",15,null],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and\n`Float::infinity()`.",15,null],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and\n`Float::neg_infinity()`.",15,null],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding\nerror. This produces a more accurate result with better performance than\na separate multiplication operation followed by an add.",15,null],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",15,null],[10,"powi","","Raise a number to an integer power.",15,null],[10,"powf","","Raise a number to a floating point power.",15,null],[10,"sqrt","","Take the square root of a number.",15,null],[10,"exp","","Returns `e^(self)`, (the exponential function).",15,null],[10,"exp2","","Returns `2^(self)`.",15,null],[10,"ln","","Returns the natural logarithm of the number.",15,null],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",15,null],[10,"log2","","Returns the base 2 logarithm of the number.",15,null],[10,"log10","","Returns the base 10 logarithm of the number.",15,null],[10,"max","","Returns the maximum of the two numbers.",15,null],[10,"min","","Returns the minimum of the two numbers.",15,null],[10,"abs_sub","","The positive difference of two numbers.",15,null],[10,"cbrt","","Take the cubic root of a number.",15,null],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given\nlegs of length `x` and `y`.",15,null],[10,"sin","","Computes the sine of a number (in radians).",15,null],[10,"cos","","Computes the cosine of a number (in radians).",15,null],[10,"tan","","Computes the tangent of a number (in radians).",15,null],[10,"asin","","Computes the arcsine of a number. Return value is in radians in\nthe range [-pi/2, pi/2] or NaN if the number is outside the range\n[-1, 1].",15,null],[10,"acos","","Computes the arccosine of a number. Return value is in radians in\nthe range [0, pi] or NaN if the number is outside the range\n[-1, 1].",15,null],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the\nrange [-pi/2, pi/2];",15,null],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",15,null],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns\n`(sin(x), cos(x))`.",15,null],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the\nnumber is close to zero.",15,null],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if\nthe operations were performed separately.",15,null],[10,"sinh","","Hyperbolic sine function.",15,null],[10,"cosh","","Hyperbolic cosine function.",15,null],[10,"tanh","","Hyperbolic tangent function.",15,null],[10,"asinh","","Inverse hyperbolic sine function.",15,null],[10,"acosh","","Inverse hyperbolic cosine function.",15,null],[10,"atanh","","Inverse hyperbolic tangent function.",15,null],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively.\nThe original number can be recovered by `sign * mantissa * 2 ^ exponent`.\nThe floating point encoding is documented in the [Reference][floating-point].",15,null],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",16,null],[11,"to_i8","","Converts the value of `self` to an `i8`.",16,null],[11,"to_i16","","Converts the value of `self` to an `i16`.",16,null],[11,"to_i32","","Converts the value of `self` to an `i32`.",16,null],[10,"to_i64","","Converts the value of `self` to an `i64`.",16,null],[11,"to_usize","","Converts the value of `self` to a `usize`.",16,null],[11,"to_u8","","Converts the value of `self` to an `u8`.",16,null],[11,"to_u16","","Converts the value of `self` to an `u16`.",16,null],[11,"to_u32","","Converts the value of `self` to an `u32`.",16,null],[10,"to_u64","","Converts the value of `self` to an `u64`.",16,null],[11,"to_f32","","Converts the value of `self` to an `f32`.",16,null],[11,"to_f64","","Converts the value of `self` to an `f64`.",16,null],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the\nvalue cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into\na primitive via the `ToPrimitive` trait.",18,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[0,"cast","","",null,null],[8,"ToPrimitive","num::cast","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",16,null],[11,"to_i8","","Converts the value of `self` to an `i8`.",16,null],[11,"to_i16","","Converts the value of `self` to an `i16`.",16,null],[11,"to_i32","","Converts the value of `self` to an `i32`.",16,null],[10,"to_i64","","Converts the value of `self` to an `i64`.",16,null],[11,"to_usize","","Converts the value of `self` to a `usize`.",16,null],[11,"to_u8","","Converts the value of `self` to an `u8`.",16,null],[11,"to_u16","","Converts the value of `self` to an `u16`.",16,null],[11,"to_u32","","Converts the value of `self` to an `u32`.",16,null],[10,"to_u64","","Converts the value of `self` to an `u64`.",16,null],[11,"to_f32","","Converts the value of `self` to an `f32`.",16,null],[11,"to_f64","","Converts the value of `self` to an `f64`.",16,null],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the\nvalue cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[5,"cast","","Cast from one machine scalar to another.",null,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into\na primitive via the `ToPrimitive` trait.",18,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[3,"Complex","num::complex","A complex number in Cartesian form.",null,null],[12,"re","","Real portion of the complex number",0,null],[12,"im","","Imaginary portion of the complex number",0,null],[6,"Complex32","","",null,null],[6,"Complex64","","",null,null],[8,"Integer","num::integer","",null,null],[10,"div_floor","","Floored integer division.",1,null],[10,"mod_floor","","Floored integer modulo, satisfying:",1,null],[10,"gcd","","Greatest Common Divisor (GCD).",1,null],[10,"lcm","","Lowest Common Multiple (LCM).",1,null],[10,"divides","","Deprecated, use `is_multiple_of` instead.",1,null],[10,"is_multiple_of","","Returns `true` if `other` is a multiple of `self`.",1,null],[10,"is_even","","Returns `true` if the number is even.",1,null],[10,"is_odd","","Returns `true` if the number is odd.",1,null],[10,"div_rem","","Simultaneous truncated integer division and modulus.\nReturns `(quotient, remainder)`.",1,null],[11,"div_mod_floor","","Simultaneous floored integer division and modulus.\nReturns `(quotient, remainder)`.",1,null],[5,"div_rem","","Simultaneous integer division and modulus",null,null],[5,"div_floor","","Floored integer division",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"mod_floor","","Floored integer modulus",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",null,null],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`. The\nresult is always positive.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[11,"clone","num_iter","",19,null],[11,"next","","",19,null],[11,"size_hint","","",19,null],[11,"next_back","","",19,null],[11,"clone","","",20,null],[11,"next","","",20,null],[11,"size_hint","","",20,null],[11,"next_back","","",20,null],[11,"clone","","",21,null],[11,"next","","",21,null],[11,"clone","","",22,null],[11,"next","","",22,null],[3,"Range","num::iter","An iterator over the range [start, stop)",null,null],[5,"range","","Returns an iterator over the given range [start, stop) (that is, starting\nat start (inclusive), and ending at stop (exclusive)).",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"range"}}],[3,"RangeInclusive","","An iterator over the range [start, stop]",null,null],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"rangeinclusive"}}],[3,"RangeStep","","An iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,null],[5,"range_step","","Return an iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestep"}}],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,null],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestepinclusive"}}],[0,"identities","num::traits","",null,null],[8,"Zero","num::traits::identities","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",5,{"inputs":[],"output":{"name":"self"}}],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",5,null],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",6,{"inputs":[],"output":{"name":"self"}}],[0,"sign","num::traits","",null,null],[8,"Signed","num::traits::sign","Useful functions for signed numbers (i.e. numbers that can be negative).",null,null],[10,"abs","","Computes the absolute value.",7,null],[10,"abs_sub","","The positive difference of two numbers.",7,null],[10,"signum","","Returns the sign of the number.",7,null],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",7,null],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",7,null],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[0,"ops","num::traits","",null,null],[0,"saturating","num::traits::ops","",null,null],[8,"Saturating","num::traits::ops::saturating","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator.\nReturns a+b, saturating at the numeric bounds instead of overflowing.",9,null],[10,"saturating_sub","","Saturating subtraction operator.\nReturns a-b, saturating at the numeric bounds instead of overflowing.",9,null],[0,"checked","num::traits::ops","",null,null],[8,"CheckedAdd","num::traits::ops::checked","Performs addition that returns `None` instead of wrapping around on\noverflow.",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is\nreturned.",10,null],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens,\n`None` is returned.",11,null],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or\noverflow.",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow\nor overflow happens, `None` is returned.",12,null],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of\nwrapping around on underflow and overflow.",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by\nzero. If any of that happens, `None` is returned.",13,null],[0,"bounds","num::traits","",null,null],[8,"Bounded","num::traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",8,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","returns the largest finite number this type can represent",8,{"inputs":[],"output":{"name":"self"}}],[0,"float","num::traits","",null,null],[8,"Float","num::traits::float","",null,null],[10,"nan","","Returns the `NaN` value.",15,{"inputs":[],"output":{"name":"self"}}],[10,"infinity","","Returns the infinite value.",15,{"inputs":[],"output":{"name":"self"}}],[10,"neg_infinity","","Returns the negative infinite value.",15,{"inputs":[],"output":{"name":"self"}}],[10,"neg_zero","","Returns `-0.0`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"min_value","","Returns the smallest finite value that this type can represent.",15,{"inputs":[],"output":{"name":"self"}}],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",15,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","Returns the largest finite value that this type can represent.",15,{"inputs":[],"output":{"name":"self"}}],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",15,null],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and\nfalse otherwise.",15,null],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",15,null],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,\n[subnormal][subnormal], or `NaN`.",15,null],[10,"classify","","Returns the floating point category of the number. If only one property\nis going to be tested, it is generally faster to use the specific\npredicate instead.",15,null],[10,"floor","","Returns the largest integer less than or equal to a number.",15,null],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",15,null],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from\n`0.0`.",15,null],[10,"trunc","","Return the integer part of a number.",15,null],[10,"fract","","Returns the fractional part of a number.",15,null],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the\nnumber is `Float::nan()`.",15,null],[10,"signum","","Returns a number that represents the sign of `self`.",15,null],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and\n`Float::infinity()`.",15,null],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and\n`Float::neg_infinity()`.",15,null],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding\nerror. This produces a more accurate result with better performance than\na separate multiplication operation followed by an add.",15,null],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",15,null],[10,"powi","","Raise a number to an integer power.",15,null],[10,"powf","","Raise a number to a floating point power.",15,null],[10,"sqrt","","Take the square root of a number.",15,null],[10,"exp","","Returns `e^(self)`, (the exponential function).",15,null],[10,"exp2","","Returns `2^(self)`.",15,null],[10,"ln","","Returns the natural logarithm of the number.",15,null],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",15,null],[10,"log2","","Returns the base 2 logarithm of the number.",15,null],[10,"log10","","Returns the base 10 logarithm of the number.",15,null],[10,"max","","Returns the maximum of the two numbers.",15,null],[10,"min","","Returns the minimum of the two numbers.",15,null],[10,"abs_sub","","The positive difference of two numbers.",15,null],[10,"cbrt","","Take the cubic root of a number.",15,null],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given\nlegs of length `x` and `y`.",15,null],[10,"sin","","Computes the sine of a number (in radians).",15,null],[10,"cos","","Computes the cosine of a number (in radians).",15,null],[10,"tan","","Computes the tangent of a number (in radians).",15,null],[10,"asin","","Computes the arcsine of a number. Return value is in radians in\nthe range [-pi/2, pi/2] or NaN if the number is outside the range\n[-1, 1].",15,null],[10,"acos","","Computes the arccosine of a number. Return value is in radians in\nthe range [0, pi] or NaN if the number is outside the range\n[-1, 1].",15,null],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the\nrange [-pi/2, pi/2];",15,null],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",15,null],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns\n`(sin(x), cos(x))`.",15,null],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the\nnumber is close to zero.",15,null],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if\nthe operations were performed separately.",15,null],[10,"sinh","","Hyperbolic sine function.",15,null],[10,"cosh","","Hyperbolic cosine function.",15,null],[10,"tanh","","Hyperbolic tangent function.",15,null],[10,"asinh","","Inverse hyperbolic sine function.",15,null],[10,"acosh","","Inverse hyperbolic cosine function.",15,null],[10,"atanh","","Inverse hyperbolic tangent function.",15,null],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively.\nThe original number can be recovered by `sign * mantissa * 2 ^ exponent`.\nThe floating point encoding is documented in the [Reference][floating-point].",15,null],[0,"cast","num::traits","",null,null],[8,"ToPrimitive","num::traits::cast","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",16,null],[11,"to_i8","","Converts the value of `self` to an `i8`.",16,null],[11,"to_i16","","Converts the value of `self` to an `i16`.",16,null],[11,"to_i32","","Converts the value of `self` to an `i32`.",16,null],[10,"to_i64","","Converts the value of `self` to an `i64`.",16,null],[11,"to_usize","","Converts the value of `self` to a `usize`.",16,null],[11,"to_u8","","Converts the value of `self` to an `u8`.",16,null],[11,"to_u16","","Converts the value of `self` to an `u16`.",16,null],[11,"to_u32","","Converts the value of `self` to an `u32`.",16,null],[10,"to_u64","","Converts the value of `self` to an `u64`.",16,null],[11,"to_f32","","Converts the value of `self` to an `f32`.",16,null],[11,"to_f64","","Converts the value of `self` to an `f64`.",16,null],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the\nvalue cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[5,"cast","","Cast from one machine scalar to another.",null,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into\na primitive via the `ToPrimitive` trait.",18,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[0,"int","num::traits","",null,null],[8,"PrimInt","num::traits::int","",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",14,null],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",14,null],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation\nof `self`.",14,null],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation\nof `self`.",14,null],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping\nthe truncated bits to the end of the resulting integer.",14,null],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping\nthe truncated bits to the beginning of the resulting integer.",14,null],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling\nzeros in the least significant bits.",14,null],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying\nthe &quot;sign bit&quot; in the most significant bits even for unsigned types.",14,null],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling\nzeros in the least significant bits.",14,null],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling\nzeros in the most significant bits.",14,null],[10,"swap_bytes","","Reverses the byte order of the integer.",14,null],[10,"from_be","","Convert an integer from big endian to the target&#39;s endianness.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"from_le","","Convert an integer from little endian to the target&#39;s endianness.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_be","","Convert `self` to big endian from the target&#39;s endianness.",14,null],[10,"to_le","","Convert `self` to little endian from the target&#39;s endianness.",14,null],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",14,null],[8,"Num","num::traits","The base trait for numeric types",null,null],[16,"FromStrRadixErr","","",4,null],[10,"from_str_radix","","Convert from a string and radix &lt;= 36.",4,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",2,null],[13,"Invalid","","",2,null],[3,"ParseFloatError","","",null,null],[12,"kind","","",3,null],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the\nvalue cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",5,{"inputs":[],"output":{"name":"self"}}],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",5,null],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or\noverflow.",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow\nor overflow happens, `None` is returned.",12,null],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens,\n`None` is returned.",11,null],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",16,null],[11,"to_i8","","Converts the value of `self` to an `i8`.",16,null],[11,"to_i16","","Converts the value of `self` to an `i16`.",16,null],[11,"to_i32","","Converts the value of `self` to an `i32`.",16,null],[10,"to_i64","","Converts the value of `self` to an `i64`.",16,null],[11,"to_usize","","Converts the value of `self` to a `usize`.",16,null],[11,"to_u8","","Converts the value of `self` to an `u8`.",16,null],[11,"to_u16","","Converts the value of `self` to an `u16`.",16,null],[11,"to_u32","","Converts the value of `self` to an `u32`.",16,null],[10,"to_u64","","Converts the value of `self` to an `u64`.",16,null],[11,"to_f32","","Converts the value of `self` to an `f32`.",16,null],[11,"to_f64","","Converts the value of `self` to an `f64`.",16,null],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of\nwrapping around on underflow and overflow.",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by\nzero. If any of that happens, `None` is returned.",13,null],[8,"Float","","",null,null],[10,"nan","","Returns the `NaN` value.",15,{"inputs":[],"output":{"name":"self"}}],[10,"infinity","","Returns the infinite value.",15,{"inputs":[],"output":{"name":"self"}}],[10,"neg_infinity","","Returns the negative infinite value.",15,{"inputs":[],"output":{"name":"self"}}],[10,"neg_zero","","Returns `-0.0`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"min_value","","Returns the smallest finite value that this type can represent.",15,{"inputs":[],"output":{"name":"self"}}],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",15,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","Returns the largest finite value that this type can represent.",15,{"inputs":[],"output":{"name":"self"}}],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",15,null],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and\nfalse otherwise.",15,null],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",15,null],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,\n[subnormal][subnormal], or `NaN`.",15,null],[10,"classify","","Returns the floating point category of the number. If only one property\nis going to be tested, it is generally faster to use the specific\npredicate instead.",15,null],[10,"floor","","Returns the largest integer less than or equal to a number.",15,null],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",15,null],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from\n`0.0`.",15,null],[10,"trunc","","Return the integer part of a number.",15,null],[10,"fract","","Returns the fractional part of a number.",15,null],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the\nnumber is `Float::nan()`.",15,null],[10,"signum","","Returns a number that represents the sign of `self`.",15,null],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and\n`Float::infinity()`.",15,null],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and\n`Float::neg_infinity()`.",15,null],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding\nerror. This produces a more accurate result with better performance than\na separate multiplication operation followed by an add.",15,null],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",15,null],[10,"powi","","Raise a number to an integer power.",15,null],[10,"powf","","Raise a number to a floating point power.",15,null],[10,"sqrt","","Take the square root of a number.",15,null],[10,"exp","","Returns `e^(self)`, (the exponential function).",15,null],[10,"exp2","","Returns `2^(self)`.",15,null],[10,"ln","","Returns the natural logarithm of the number.",15,null],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",15,null],[10,"log2","","Returns the base 2 logarithm of the number.",15,null],[10,"log10","","Returns the base 10 logarithm of the number.",15,null],[10,"max","","Returns the maximum of the two numbers.",15,null],[10,"min","","Returns the minimum of the two numbers.",15,null],[10,"abs_sub","","The positive difference of two numbers.",15,null],[10,"cbrt","","Take the cubic root of a number.",15,null],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given\nlegs of length `x` and `y`.",15,null],[10,"sin","","Computes the sine of a number (in radians).",15,null],[10,"cos","","Computes the cosine of a number (in radians).",15,null],[10,"tan","","Computes the tangent of a number (in radians).",15,null],[10,"asin","","Computes the arcsine of a number. Return value is in radians in\nthe range [-pi/2, pi/2] or NaN if the number is outside the range\n[-1, 1].",15,null],[10,"acos","","Computes the arccosine of a number. Return value is in radians in\nthe range [0, pi] or NaN if the number is outside the range\n[-1, 1].",15,null],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the\nrange [-pi/2, pi/2];",15,null],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",15,null],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns\n`(sin(x), cos(x))`.",15,null],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the\nnumber is close to zero.",15,null],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if\nthe operations were performed separately.",15,null],[10,"sinh","","Hyperbolic sine function.",15,null],[10,"cosh","","Hyperbolic cosine function.",15,null],[10,"tanh","","Hyperbolic tangent function.",15,null],[10,"asinh","","Inverse hyperbolic sine function.",15,null],[10,"acosh","","Inverse hyperbolic cosine function.",15,null],[10,"atanh","","Inverse hyperbolic tangent function.",15,null],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively.\nThe original number can be recovered by `sign * mantissa * 2 ^ exponent`.\nThe floating point encoding is documented in the [Reference][floating-point].",15,null],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into\na primitive via the `ToPrimitive` trait.",18,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can be negative).",null,null],[10,"abs","","Computes the absolute value.",7,null],[10,"abs_sub","","The positive difference of two numbers.",7,null],[10,"signum","","Returns the sign of the number.",7,null],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",7,null],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",7,null],[8,"CheckedAdd","","Performs addition that returns `None` instead of wrapping around on\noverflow.",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is\nreturned.",10,null],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",8,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","returns the largest finite number this type can represent",8,{"inputs":[],"output":{"name":"self"}}],[5,"cast","","Cast from one machine scalar to another.",null,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Saturating","","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator.\nReturns a+b, saturating at the numeric bounds instead of overflowing.",9,null],[10,"saturating_sub","","Saturating subtraction operator.\nReturns a-b, saturating at the numeric bounds instead of overflowing.",9,null],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",6,{"inputs":[],"output":{"name":"self"}}],[8,"PrimInt","","",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",14,null],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",14,null],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation\nof `self`.",14,null],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation\nof `self`.",14,null],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping\nthe truncated bits to the end of the resulting integer.",14,null],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping\nthe truncated bits to the beginning of the resulting integer.",14,null],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling\nzeros in the least significant bits.",14,null],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying\nthe &quot;sign bit&quot; in the most significant bits even for unsigned types.",14,null],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling\nzeros in the least significant bits.",14,null],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling\nzeros in the most significant bits.",14,null],[10,"swap_bytes","","Reverses the byte order of the integer.",14,null],[10,"from_be","","Convert an integer from big endian to the target&#39;s endianness.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"from_le","","Convert an integer from little endian to the target&#39;s endianness.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_be","","Convert `self` to big endian from the target&#39;s endianness.",14,null],[10,"to_le","","Convert `self` to little endian from the target&#39;s endianness.",14,null],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",14,null],[5,"zero","num","Returns the additive identity, `0`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"one","","Returns the multiplicative identity, `1`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"abs","","Computes the absolute value.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"abs_sub","","The positive difference of two numbers.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"signum","","Returns the sign of the number.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"pow","","Raises a value to the power of exp, using exponentiation by squaring.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"t"}}],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an overflow occurred.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"option"}}]],"paths":[[3,"Complex"],[8,"Integer"],[4,"FloatErrorKind"],[3,"ParseFloatError"],[8,"Num"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Bounded"],[8,"Saturating"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"PrimInt"],[8,"Float"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"]]};
searchIndex["num_complex"] = {"doc":"Complex numbers.","items":[[3,"Complex","num_complex","A complex number in Cartesian form.",null,null],[12,"re","","Real portion of the complex number",0,null],[12,"im","","Imaginary portion of the complex number",0,null],[6,"Complex32","","",null,null],[6,"Complex64","","",null,null],[11,"fmt","","",0,null],[11,"hash","","",0,null],[11,"clone","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"decode","","",0,{"inputs":[{"name":"__dt"}],"output":{"name":"result"}}],[11,"encode","","",0,null],[11,"new","","Create a new Complex",0,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"complex"}}],[11,"i","","Returns imaginary unit",0,{"inputs":[],"output":{"name":"complex"}}],[11,"norm_sqr","","Returns the square of the norm (since `T` doesn&#39;t necessarily\nhave a sqrt function), i.e. `re^2 + im^2`.",0,null],[11,"scale","","Multiplies `self` by the scalar `t`.",0,null],[11,"unscale","","Divides `self` by the scalar `t`.",0,null],[11,"conj","","Returns the complex conjugate. i.e. `re - i im`",0,null],[11,"inv","","Returns `1/self`",0,null],[11,"norm","","Calculate |self|",0,null],[11,"arg","","Calculate the principal Arg of self.",0,null],[11,"to_polar","","Convert to polar form (r, theta), such that `self = r * exp(i\n* theta)`",0,null],[11,"from_polar","","Convert a polar representation into a complex number.",0,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"complex"}}],[11,"exp","","Computes `e^(self)`, where `e` is the base of the natural logarithm.",0,null],[11,"ln","","Computes the principal value of natural logarithm of `self`.",0,null],[11,"sqrt","","Computes the principal value of the square root of `self`.",0,null],[11,"sin","","Computes the sine of `self`.",0,null],[11,"cos","","Computes the cosine of `self`.",0,null],[11,"tan","","Computes the tangent of `self`.",0,null],[11,"asin","","Computes the principal value of the inverse sine of `self`.",0,null],[11,"acos","","Computes the principal value of the inverse cosine of `self`.",0,null],[11,"atan","","Computes the principal value of the inverse tangent of `self`.",0,null],[11,"sinh","","Computes the hyperbolic sine of `self`.",0,null],[11,"cosh","","Computes the hyperbolic cosine of `self`.",0,null],[11,"tanh","","Computes the hyperbolic tangent of `self`.",0,null],[11,"asinh","","Computes the principal value of inverse hyperbolic sine of `self`.",0,null],[11,"acosh","","Computes the principal value of inverse hyperbolic cosine of `self`.",0,null],[11,"atanh","","Computes the principal value of inverse hyperbolic tangent of `self`.",0,null],[11,"is_nan","","Checks if the given complex number is NaN",0,null],[11,"is_infinite","","Checks if the given complex number is infinite",0,null],[11,"is_finite","","Checks if the given complex number is finite",0,null],[11,"is_normal","","Checks if the given complex number is normal",0,null],[11,"from","","",0,{"inputs":[{"name":"t"}],"output":{"name":"complex"}}],[11,"from","","",0,{"inputs":[{"name":"t"}],"output":{"name":"complex"}}],[11,"add","","",0,null],[11,"add","","",0,null],[11,"sub","","",0,null],[11,"sub","","",0,null],[11,"mul","","",0,null],[11,"mul","","",0,null],[11,"div","","",0,null],[11,"div","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"sub","","",0,null],[11,"mul","","",0,null],[11,"div","","",0,null],[11,"add","","",0,null],[11,"sub","","",0,null],[11,"mul","","",0,null],[11,"div","","",0,null],[11,"zero","","",0,{"inputs":[],"output":{"name":"complex"}}],[11,"is_zero","","",0,null],[11,"one","","",0,{"inputs":[],"output":{"name":"complex"}}],[11,"fmt","","",0,null]],"paths":[[3,"Complex"]]};
searchIndex["rustc_serialize"] = {"doc":"Support code for encoding and decoding types.","items":[[11,"encode","collections::string","",0,null],[11,"decode","","",0,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","alloc::boxed","",1,null],[11,"decode","","",1,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"decode","","",1,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","alloc::rc","",2,null],[11,"decode","","",2,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::borrow","",3,null],[11,"decode","","",3,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::vec","",4,null],[11,"decode","","",4,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","core::option","",5,null],[11,"decode","","",5,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","core::marker","",6,null],[11,"decode","","",6,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","std::path","",7,null],[11,"encode","","",8,null],[11,"decode","","",8,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","core::cell","",9,null],[11,"decode","","",9,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","","",10,null],[11,"decode","","",10,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","alloc::arc","",11,null],[11,"decode","","",11,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::linked_list","",12,null],[11,"decode","","",12,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::vec_deque","",13,null],[11,"decode","","",13,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::btree::map","",14,null],[11,"decode","","",14,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::btree::set","",15,null],[11,"decode","","",15,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","std::collections::hash::map","",16,null],[11,"decode","","",16,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","std::collections::hash::set","",17,null],[11,"decode","","",17,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[0,"base64","rustc_serialize","Base64 binary-to-text encoding",null,null],[3,"Config","rustc_serialize::base64","Contains configuration parameters for `to_base64`.",null,null],[12,"char_set","","Character set to use",18,null],[12,"newline","","Newline to use",18,null],[12,"pad","","True to pad output with `=` characters",18,null],[12,"line_length","","`Some(len)` to wrap lines at `len`, `None` to disable line wrapping",18,null],[4,"CharacterSet","","Available encoding character sets",null,null],[13,"Standard","","The standard character set (uses `+` and `/`)",19,null],[13,"UrlSafe","","The URL safe character set (uses `-` and `_`)",19,null],[4,"Newline","","Available newline types",null,null],[13,"LF","","A linefeed (i.e. Unix-style newline)",20,null],[13,"CRLF","","A carriage return and a linefeed (i.e. Windows-style newline)",20,null],[4,"FromBase64Error","","Errors that can occur when decoding a base64 encoded string",null,null],[13,"InvalidBase64Byte","","The input contained a character not part of the base64 format",21,null],[13,"InvalidBase64Length","","The input had an invalid length",21,null],[7,"STANDARD","","Configuration for RFC 4648 standard base64 encoding",null,null],[7,"URL_SAFE","","Configuration for RFC 4648 base64url encoding",null,null],[7,"MIME","","Configuration for RFC 2045 MIME base64 encoding",null,null],[8,"ToBase64","","A trait for converting a value to base64 encoding.",null,null],[10,"to_base64","","Converts the value of `self` to a base64 value following the specified\nformat configuration, returning the owned string.",22,null],[8,"FromBase64","","A trait for converting from base64 encoded values.",null,null],[10,"from_base64","","Converts the value of `self`, interpreted as base64 encoded data, into\nan owned vector of bytes, returning the vector.",23,null],[11,"fmt","","",19,null],[11,"clone","","",19,null],[11,"fmt","","",20,null],[11,"clone","","",20,null],[11,"fmt","","",18,null],[11,"clone","","",18,null],[11,"clone","","",21,null],[11,"fmt","","",21,null],[11,"description","","",21,null],[11,"fmt","","",21,null],[0,"hex","rustc_serialize","Hex binary-to-text encoding",null,null],[4,"FromHexError","rustc_serialize::hex","Errors that can occur when decoding a hex encoded string",null,null],[13,"InvalidHexCharacter","","The input contained a character not part of the hex format",24,null],[13,"InvalidHexLength","","The input had an invalid length",24,null],[8,"ToHex","","A trait for converting a value to hexadecimal encoding",null,null],[10,"to_hex","","Converts the value of `self` to a hex value, returning the owned\nstring.",25,null],[8,"FromHex","","A trait for converting hexadecimal encoded values",null,null],[10,"from_hex","","Converts the value of `self`, interpreted as hexadecimal encoded data,\ninto an owned vector of bytes, returning the vector.",26,null],[11,"clone","","",24,null],[11,"fmt","","",24,null],[11,"description","","",24,null],[11,"fmt","","",24,null],[0,"json","rustc_serialize","JSON parsing and serialization",null,null],[3,"PrettyJson","rustc_serialize::json","",null,null],[3,"AsJson","","",null,null],[3,"AsPrettyJson","","",null,null],[3,"Encoder","","A structure for implementing serialization to JSON.",null,null],[3,"Stack","","A Stack represents the current position of the parser in the logical\nstructure of the JSON stream.\nFor example foo.bar[3].x",null,null],[3,"Parser","","A streaming JSON parser implemented as an iterator of JsonEvent, consuming\nan iterator of char.",null,null],[3,"Builder","","A Builder consumes a json::Parser to create a generic Json structure.",null,null],[3,"Decoder","","A structure to decode JSON to values in rust.",null,null],[4,"Json","","Represents a json value",null,null],[13,"I64","","",27,null],[13,"U64","","",27,null],[13,"F64","","",27,null],[13,"String","","",27,null],[13,"Boolean","","",27,null],[13,"Array","","",27,null],[13,"Object","","",27,null],[13,"Null","","",27,null],[4,"ErrorCode","","The errors that can arise while parsing a JSON stream.",null,null],[13,"InvalidSyntax","","",28,null],[13,"InvalidNumber","","",28,null],[13,"EOFWhileParsingObject","","",28,null],[13,"EOFWhileParsingArray","","",28,null],[13,"EOFWhileParsingValue","","",28,null],[13,"EOFWhileParsingString","","",28,null],[13,"KeyMustBeAString","","",28,null],[13,"ExpectedColon","","",28,null],[13,"TrailingCharacters","","",28,null],[13,"TrailingComma","","",28,null],[13,"InvalidEscape","","",28,null],[13,"InvalidUnicodeCodePoint","","",28,null],[13,"LoneLeadingSurrogateInHexEscape","","",28,null],[13,"UnexpectedEndOfHexEscape","","",28,null],[13,"UnrecognizedHex","","",28,null],[13,"NotFourDigit","","",28,null],[13,"ControlCharacterInString","","",28,null],[13,"NotUtf8","","",28,null],[4,"ParserError","","",null,null],[13,"SyntaxError","","msg, line, col",29,null],[13,"IoError","","",29,null],[4,"DecoderError","","",null,null],[13,"ParseError","","",30,null],[13,"ExpectedError","","",30,null],[13,"MissingFieldError","","",30,null],[13,"UnknownVariantError","","",30,null],[13,"ApplicationError","","",30,null],[13,"EOF","","",30,null],[4,"EncoderError","","",null,null],[13,"FmtError","","",31,null],[13,"BadHashmapKey","","",31,null],[4,"JsonEvent","","The output of the streaming parser.",null,null],[13,"ObjectStart","","",32,null],[13,"ObjectEnd","","",32,null],[13,"ArrayStart","","",32,null],[13,"ArrayEnd","","",32,null],[13,"BooleanValue","","",32,null],[13,"I64Value","","",32,null],[13,"U64Value","","",32,null],[13,"F64Value","","",32,null],[13,"StringValue","","",32,null],[13,"NullValue","","",32,null],[13,"Error","","",32,null],[4,"StackElement","","StackElements compose a Stack.\nFor example, Key(&quot;foo&quot;), Key(&quot;bar&quot;), Index(3) and Key(&quot;x&quot;) are the\nStackElements compositing the stack that represents foo.bar[3].x",null,null],[13,"Index","","",33,null],[13,"Key","","",33,null],[5,"error_str","","Returns a readable error string for a given error code.",null,{"inputs":[{"name":"errorcode"}],"output":{"name":"str"}}],[5,"decode","","Shortcut function to decode a JSON `&amp;str` into an object",null,{"inputs":[{"name":"str"}],"output":{"name":"decoderesult"}}],[5,"encode","","Shortcut function to encode a `T` into a JSON `String`",null,{"inputs":[{"name":"t"}],"output":{"name":"encoderesult"}}],[5,"as_json","","Create an `AsJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asjson"}}],[5,"as_pretty_json","","Create an `AsPrettyJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asprettyjson"}}],[6,"Array","","",null,null],[6,"Object","","",null,null],[6,"BuilderError","","",null,null],[6,"EncodeResult","","",null,null],[6,"DecodeResult","","",null,null],[8,"ToJson","","A trait for converting values to JSON",null,null],[10,"to_json","","Converts the value of `self` to an instance of JSON",34,null],[11,"fmt","","",27,null],[11,"partial_cmp","","",27,null],[11,"lt","","",27,null],[11,"le","","",27,null],[11,"gt","","",27,null],[11,"ge","","",27,null],[11,"eq","","",27,null],[11,"ne","","",27,null],[11,"clone","","",27,null],[11,"eq","","",28,null],[11,"clone","","",28,null],[11,"fmt","","",29,null],[11,"eq","","",29,null],[11,"fmt","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"fmt","","",31,null],[11,"clone","","",31,null],[11,"fmt","","",28,null],[11,"description","","",30,null],[11,"cause","","",30,null],[11,"fmt","","",30,null],[11,"from","","",30,{"inputs":[{"name":"parsererror"}],"output":{"name":"decodererror"}}],[11,"description","","",29,null],[11,"fmt","","",29,null],[11,"from","","",29,{"inputs":[{"name":"error"}],"output":{"name":"parsererror"}}],[11,"description","","",31,null],[11,"fmt","","",31,null],[11,"from","","",31,{"inputs":[{"name":"error"}],"output":{"name":"encodererror"}}],[11,"new_pretty","","Creates a new encoder whose output will be written in human-readable\nJSON to the specified writer",35,{"inputs":[{"name":"write"}],"output":{"name":"encoder"}}],[11,"new","","Creates a new encoder whose output will be written in compact\nJSON to the specified writer",35,{"inputs":[{"name":"write"}],"output":{"name":"encoder"}}],[11,"set_indent","","Set the number of spaces to indent for each level.\nThis is safe to set during encoding.",35,null],[11,"emit_nil","","",35,null],[11,"emit_usize","","",35,null],[11,"emit_u64","","",35,null],[11,"emit_u32","","",35,null],[11,"emit_u16","","",35,null],[11,"emit_u8","","",35,null],[11,"emit_isize","","",35,null],[11,"emit_i64","","",35,null],[11,"emit_i32","","",35,null],[11,"emit_i16","","",35,null],[11,"emit_i8","","",35,null],[11,"emit_bool","","",35,null],[11,"emit_f64","","",35,null],[11,"emit_f32","","",35,null],[11,"emit_char","","",35,null],[11,"emit_str","","",35,null],[11,"emit_enum","","",35,null],[11,"emit_enum_variant","","",35,null],[11,"emit_enum_variant_arg","","",35,null],[11,"emit_enum_struct_variant","","",35,null],[11,"emit_enum_struct_variant_field","","",35,null],[11,"emit_struct","","",35,null],[11,"emit_struct_field","","",35,null],[11,"emit_tuple","","",35,null],[11,"emit_tuple_arg","","",35,null],[11,"emit_tuple_struct","","",35,null],[11,"emit_tuple_struct_arg","","",35,null],[11,"emit_option","","",35,null],[11,"emit_option_none","","",35,null],[11,"emit_option_some","","",35,null],[11,"emit_seq","","",35,null],[11,"emit_seq_elt","","",35,null],[11,"emit_map","","",35,null],[11,"emit_map_elt_key","","",35,null],[11,"emit_map_elt_val","","",35,null],[11,"encode","","",27,null],[11,"from_reader","","Decodes a json value from an `&amp;mut io::Read`",27,{"inputs":[{"name":"read"}],"output":{"name":"result"}}],[11,"from_str","","Decodes a json value from a string",27,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"pretty","","Borrow this json object as a pretty object to generate a pretty\nrepresentation for it via `Display`.",27,null],[11,"find","","If the Json value is an Object, returns the value associated with the provided key.\nOtherwise, returns None.",27,null],[11,"find_path","","Attempts to get a nested Json Object for each key in `keys`.\nIf any key is found not to exist, find_path will return None.\nOtherwise, it will return the Json value associated with the final key.",27,null],[11,"search","","If the Json value is an Object, performs a depth-first search until\na value associated with the provided key is found. If no value is found\nor the Json value is not an Object, returns None.",27,null],[11,"is_object","","Returns true if the Json value is an Object. Returns false otherwise.",27,null],[11,"as_object","","If the Json value is an Object, returns the associated BTreeMap.\nReturns None otherwise.",27,null],[11,"as_object_mut","","If the Json value is an Object, returns the associated mutable BTreeMap.\nReturns None otherwise.",27,null],[11,"is_array","","Returns true if the Json value is an Array. Returns false otherwise.",27,null],[11,"as_array","","If the Json value is an Array, returns the associated vector.\nReturns None otherwise.",27,null],[11,"as_array_mut","","If the Json value is an Array, returns the associated mutable vector.\nReturns None otherwise.",27,null],[11,"is_string","","Returns true if the Json value is a String. Returns false otherwise.",27,null],[11,"as_string","","If the Json value is a String, returns the associated str.\nReturns None otherwise.",27,null],[11,"is_number","","Returns true if the Json value is a Number. Returns false otherwise.",27,null],[11,"is_i64","","Returns true if the Json value is a i64. Returns false otherwise.",27,null],[11,"is_u64","","Returns true if the Json value is a u64. Returns false otherwise.",27,null],[11,"is_f64","","Returns true if the Json value is a f64. Returns false otherwise.",27,null],[11,"as_i64","","If the Json value is a number, return or cast it to a i64.\nReturns None otherwise.",27,null],[11,"as_u64","","If the Json value is a number, return or cast it to a u64.\nReturns None otherwise.",27,null],[11,"as_f64","","If the Json value is a number, return or cast it to a f64.\nReturns None otherwise.",27,null],[11,"is_boolean","","Returns true if the Json value is a Boolean. Returns false otherwise.",27,null],[11,"as_boolean","","If the Json value is a Boolean, returns the associated bool.\nReturns None otherwise.",27,null],[11,"is_null","","Returns true if the Json value is a Null. Returns false otherwise.",27,null],[11,"as_null","","If the Json value is a Null, returns ().\nReturns None otherwise.",27,null],[11,"index","","",27,null],[11,"index","","",27,null],[11,"fmt","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"fmt","","",33,null],[11,"clone","","",33,null],[11,"eq","","",33,null],[11,"ne","","",33,null],[11,"new","","",36,{"inputs":[],"output":{"name":"stack"}}],[11,"len","","Returns The number of elements in the Stack.",36,null],[11,"is_empty","","Returns true if the stack is empty.",36,null],[11,"get","","Provides access to the StackElement at a given index.\nlower indices are at the bottom of the stack while higher indices are\nat the top.",36,null],[11,"is_equal_to","","Compares this stack with an array of StackElements.",36,null],[11,"starts_with","","Returns true if the bottom-most elements of this stack are the same as\nthe ones passed as parameter.",36,null],[11,"ends_with","","Returns true if the top-most elements of this stack are the same as\nthe ones passed as parameter.",36,null],[11,"top","","Returns the top-most element (if any).",36,null],[11,"next","","",37,null],[11,"new","","Creates the JSON parser.",37,{"inputs":[{"name":"t"}],"output":{"name":"parser"}}],[11,"stack","","Provides access to the current position in the logical structure of the\nJSON stream.",37,null],[11,"new","","Create a JSON Builder.",38,{"inputs":[{"name":"t"}],"output":{"name":"builder"}}],[11,"build","","",38,null],[11,"new","","Creates a new decoder instance for decoding the specified JSON value.",39,{"inputs":[{"name":"json"}],"output":{"name":"decoder"}}],[11,"read_nil","","",39,null],[11,"read_usize","","",39,null],[11,"read_u8","","",39,null],[11,"read_u16","","",39,null],[11,"read_u32","","",39,null],[11,"read_u64","","",39,null],[11,"read_isize","","",39,null],[11,"read_i8","","",39,null],[11,"read_i16","","",39,null],[11,"read_i32","","",39,null],[11,"read_i64","","",39,null],[11,"read_f32","","",39,null],[11,"read_f64","","",39,null],[11,"read_bool","","",39,null],[11,"read_char","","",39,null],[11,"read_str","","",39,null],[11,"read_enum","","",39,null],[11,"read_enum_variant","","",39,null],[11,"read_enum_variant_arg","","",39,null],[11,"read_enum_struct_variant","","",39,null],[11,"read_enum_struct_variant_field","","",39,null],[11,"read_struct","","",39,null],[11,"read_struct_field","","",39,null],[11,"read_tuple","","",39,null],[11,"read_tuple_arg","","",39,null],[11,"read_tuple_struct","","",39,null],[11,"read_tuple_struct_arg","","",39,null],[11,"read_option","","",39,null],[11,"read_seq","","",39,null],[11,"read_seq_elt","","",39,null],[11,"read_map","","",39,null],[11,"read_map_elt_key","","",39,null],[11,"read_map_elt_val","","",39,null],[11,"error","","",39,null],[11,"to_json","","",27,null],[11,"to_json","collections::string","",0,null],[11,"to_json","collections::vec","",4,null],[11,"to_json","collections::btree::map","",14,null],[11,"to_json","std::collections::hash::map","",16,null],[11,"to_json","core::option","",5,null],[11,"fmt","rustc_serialize::json","Encodes a json value into a string",27,null],[11,"fmt","","Encodes a json value into a string",40,null],[11,"fmt","","Encodes a json value into a string",41,null],[11,"indent","","Set the indentation level for the emitted JSON",42,null],[11,"fmt","","Encodes a json value into a string",42,null],[11,"from_str","","",27,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[8,"Decoder","rustc_serialize","",null,null],[16,"Error","","",43,null],[10,"read_nil","","",43,null],[10,"read_usize","","",43,null],[10,"read_u64","","",43,null],[10,"read_u32","","",43,null],[10,"read_u16","","",43,null],[10,"read_u8","","",43,null],[10,"read_isize","","",43,null],[10,"read_i64","","",43,null],[10,"read_i32","","",43,null],[10,"read_i16","","",43,null],[10,"read_i8","","",43,null],[10,"read_bool","","",43,null],[10,"read_f64","","",43,null],[10,"read_f32","","",43,null],[10,"read_char","","",43,null],[10,"read_str","","",43,null],[10,"read_enum","","",43,null],[10,"read_enum_variant","","",43,null],[10,"read_enum_variant_arg","","",43,null],[10,"read_enum_struct_variant","","",43,null],[10,"read_enum_struct_variant_field","","",43,null],[10,"read_struct","","",43,null],[10,"read_struct_field","","",43,null],[10,"read_tuple","","",43,null],[10,"read_tuple_arg","","",43,null],[10,"read_tuple_struct","","",43,null],[10,"read_tuple_struct_arg","","",43,null],[10,"read_option","","",43,null],[10,"read_seq","","",43,null],[10,"read_seq_elt","","",43,null],[10,"read_map","","",43,null],[10,"read_map_elt_key","","",43,null],[10,"read_map_elt_val","","",43,null],[10,"error","","",43,null],[8,"Encoder","","",null,null],[16,"Error","","",44,null],[10,"emit_nil","","",44,null],[10,"emit_usize","","",44,null],[10,"emit_u64","","",44,null],[10,"emit_u32","","",44,null],[10,"emit_u16","","",44,null],[10,"emit_u8","","",44,null],[10,"emit_isize","","",44,null],[10,"emit_i64","","",44,null],[10,"emit_i32","","",44,null],[10,"emit_i16","","",44,null],[10,"emit_i8","","",44,null],[10,"emit_bool","","",44,null],[10,"emit_f64","","",44,null],[10,"emit_f32","","",44,null],[10,"emit_char","","",44,null],[10,"emit_str","","",44,null],[10,"emit_enum","","",44,null],[10,"emit_enum_variant","","",44,null],[10,"emit_enum_variant_arg","","",44,null],[10,"emit_enum_struct_variant","","",44,null],[10,"emit_enum_struct_variant_field","","",44,null],[10,"emit_struct","","",44,null],[10,"emit_struct_field","","",44,null],[10,"emit_tuple","","",44,null],[10,"emit_tuple_arg","","",44,null],[10,"emit_tuple_struct","","",44,null],[10,"emit_tuple_struct_arg","","",44,null],[10,"emit_option","","",44,null],[10,"emit_option_none","","",44,null],[10,"emit_option_some","","",44,null],[10,"emit_seq","","",44,null],[10,"emit_seq_elt","","",44,null],[10,"emit_map","","",44,null],[10,"emit_map_elt_key","","",44,null],[10,"emit_map_elt_val","","",44,null],[8,"Decodable","","",null,null],[10,"decode","","",45,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[8,"Encodable","","",null,null],[10,"encode","","",46,null],[8,"DecoderHelpers","","",null,null],[10,"read_to_vec","","",47,null],[8,"EncoderHelpers","","",null,null],[10,"emit_from_vec","","",48,null]],"paths":[[3,"String"],[3,"Box"],[3,"Rc"],[4,"Cow"],[3,"Vec"],[4,"Option"],[3,"PhantomData"],[3,"Path"],[3,"PathBuf"],[3,"Cell"],[3,"RefCell"],[3,"Arc"],[3,"LinkedList"],[3,"VecDeque"],[3,"BTreeMap"],[3,"BTreeSet"],[3,"HashMap"],[3,"HashSet"],[3,"Config"],[4,"CharacterSet"],[4,"Newline"],[4,"FromBase64Error"],[8,"ToBase64"],[8,"FromBase64"],[4,"FromHexError"],[8,"ToHex"],[8,"FromHex"],[4,"Json"],[4,"ErrorCode"],[4,"ParserError"],[4,"DecoderError"],[4,"EncoderError"],[4,"JsonEvent"],[4,"StackElement"],[8,"ToJson"],[3,"Encoder"],[3,"Stack"],[3,"Parser"],[3,"Builder"],[3,"Decoder"],[3,"PrettyJson"],[3,"AsJson"],[3,"AsPrettyJson"],[8,"Decoder"],[8,"Encoder"],[8,"Decodable"],[8,"Encodable"],[8,"DecoderHelpers"],[8,"EncoderHelpers"]]};
searchIndex["itertools"] = {"doc":"Itertools — extra iterator adaptors, functions and macros.","items":[[3,"Dedup","itertools","An iterator adaptor that removes repeated duplicates.",null,null],[3,"Interleave","","An iterator adaptor that alternates elements from two iterators until both\nrun out.",null,null],[3,"InterleaveShortest","","An iterator adaptor that alternates elements from the two iterators until\none of them runs out.",null,null],[3,"Product","","An iterator adaptor that iterates over the cartesian product of\nthe element sets of two iterators `I` and `J`.",null,null],[3,"PutBack","","An iterator adaptor that allows putting back a single\nitem to the front of the iterator.",null,null],[3,"PutBackN","","An iterator adaptor that allows putting multiple\nitems in front of the iterator.",null,null],[3,"Batching","","A “meta iterator adaptor”. Its closure recives a reference to the iterator\nand may pick off as many elements as it likes, to produce the next iterator element.",null,null],[3,"GroupBy","","An iterator adaptor that groups iterator elements. Consecutive elements\nthat map to the same key (“runs”), are returned as the iterator elements.",null,null],[3,"Step","","An iterator adaptor that steps a number elements in the base iterator\nfor each iteration.",null,null],[3,"Merge","","An iterator adaptor that merges the two base iterators in ascending order.\nIf both base iterators are sorted (ascending), the result is sorted.",null,null],[3,"MergeBy","","An iterator adaptor that merges the two base iterators in ascending order.\nIf both base iterators are sorted (ascending), the result is sorted.",null,null],[3,"MultiPeek","","An iterator adaptor that allows the user to peek at multiple *.next()*\nvalues without advancing itself.",null,null],[3,"TakeWhileRef","","An iterator adaptor that borrows from a `Clone`-able iterator\nto only pick off elements while the predicate returns `true`.",null,null],[3,"WhileSome","","An iterator adaptor that filters `Option&lt;A&gt;` iterator elements\nand produces `A`. Stops on the first `None` encountered.",null,null],[3,"Coalesce","","An iterator adaptor that may join together adjacent elements.",null,null],[3,"MendSlices","","An iterator adaptor that glues together adjacent contiguous slices.",null,null],[3,"Combinations","","An iterator to iterate through all the combinations of pairs in a `Clone`-able iterator.",null,null],[3,"CombinationsN","","An iterator to iterate through all the `n`-length combinations in an iterator.",null,null],[3,"Unique","","An iterator adapter to filter out duplicate elements.",null,null],[3,"UniqueBy","","An iterator adapter to filter out duplicate elements.",null,null],[3,"Flatten","","An iterator adapter to simply flatten a structure.",null,null],[3,"Format","","Format all iterator elements lazily, separated by `sep`.",null,null],[3,"FormatDefault","","Format all iterator elements lazily, separated by `sep`.",null,null],[3,"ChunksLazy","","`ChunkLazy` is the storage for a lazy chunking operation.",null,null],[3,"Chunk","","An iterator for the elements in a single chunk.",null,null],[3,"Chunks","","An iterator that yields the Chunk iterators.",null,null],[3,"GroupByLazy","","`GroupByLazy` is the storage for the lazy grouping operation.",null,null],[3,"Group","","An iterator for the elements in a single group.",null,null],[3,"Groups","","An iterator that yields the Group iterators.",null,null],[3,"Intersperse","","An iterator adaptor to insert a particular value\nbetween each element of the adapted iterator.",null,null],[3,"ISlice","","An iterator adaptor that yields a subset (a slice) of the base iterator.",null,null],[3,"KMerge","","An iterator adaptor that merges an abitrary number of base iterators in ascending order.\nIf all base iterators are sorted (ascending), the result is sorted.",null,null],[3,"Linspace","","An iterator of a sequence of evenly spaced floats.",null,null],[3,"PadUsing","","An iterator adaptor that pads a sequence to a minimum length by filling\nmissing elements using a closure.",null,null],[3,"RcIter","","A wrapper for `Rc&lt;RefCell&lt;I&gt;&gt;`, that implements the `Iterator` trait.",null,null],[12,"rciter","","The boxed iterator.",0,null],[3,"RepeatN","","An iterator that repeats an element exactly *n* times.",null,null],[3,"RepeatCall","","An iterator source that produces elements indefinitely by calling\na given closure.",null,null],[3,"Unfold","","`Unfold` is a general iterator builder: it has a mutable state value,\nand a closure with access to the state that produces the next value.",null,null],[12,"state","","Internal state that will be passed to the closure on the next iteration",1,null],[3,"Stride","","An iterator similar to the slice iterator, but with a certain number of steps\n(the stride) skipped per iteration.",null,null],[3,"StrideMut","","The mutable equivalent of Stride.",null,null],[3,"Tee","","One half of an iterator pair where both return the same elements.",null,null],[3,"ZipEq","","An iterator which iterates two other iterators simultaneously",null,null],[3,"ZipLongest","","An iterator which iterates two other iterators simultaneously",null,null],[3,"Zip","","An iterator that generalizes *.zip()* and allows running multiple iterators in lockstep.",null,null],[3,"ZipSlices","","An iterator which iterates two slices simultaneously.",null,null],[4,"Diff","","A type returned by the [`diff_with`](./fn.diff_with.html) function.",null,null],[13,"FirstMismatch","","The index of the first non-matching element along with both iterator&#39;s remaining elements\nstarting with the first mis-match.",2,null],[13,"Shorter","","The total number of elements that were in `J` along with the remaining elements of `I`.",2,null],[13,"Longer","","The total number of elements that were in `I` along with the remaining elements of `J`.",2,null],[4,"MinMaxResult","","`MinMaxResult` is an enum returned by `minmax`. See `Itertools::minmax()` for\nmore detail.",null,null],[13,"NoElements","","Empty iterator",3,null],[13,"OneElement","","Iterator with one element, so the minimum and maximum are the same",3,null],[13,"MinMax","","More than one element in the iterator, the first element is not larger\nthan the second",3,null],[4,"EitherOrBoth","","A value yielded by `ZipLongest`.\nContains one or two values, depending on which of the input iterators are exhausted.",null,null],[13,"Both","","Neither input iterator is exhausted yet, yielding two values.",4,null],[13,"Left","","The parameter iterator of `.zip_longest()` is exhausted,\nonly yielding a value from the `self` iterator.",4,null],[13,"Right","","The `self` iterator of `.zip_longest()` is exhausted,\nonly yielding a value from the parameter iterator.",4,null],[4,"Partition","","Classifies the result of the `.partition_map()` closure into a\npartition.",null,null],[13,"Left","","Classify into the left partition.",5,null],[13,"Right","","Classify into the right partition.",5,null],[4,"FoldWhile","","An enum used for controlling the execution of `.fold_while()`.",null,null],[13,"Continue","","Continue folding with this value",6,null],[13,"Done","","Fold is complete and will return this value",6,null],[5,"diff_with","","Compares every element yielded by both `i` and `j` with the given function in lock-step and\nreturns a `Diff` which describes how `j` differs from `i`.",null,{"inputs":[{"name":"i"},{"name":"j"},{"name":"f"}],"output":{"name":"option"}}],[5,"linspace","","Return an iterator of evenly spaced floats.",null,{"inputs":[{"name":"f"},{"name":"f"},{"name":"usize"}],"output":{"name":"linspace"}}],[5,"equal","","Return `true` if both iterators produce equal sequences\n(elements pairwise equal and sequences of the same length),\n`false` otherwise.",null,{"inputs":[{"name":"i"},{"name":"j"}],"output":{"name":"bool"}}],[5,"assert_equal","","Assert that two iterators produce equal sequences, with the same\nsemantics as *equal(a, b)*.",null,{"inputs":[{"name":"i"},{"name":"j"}],"output":null}],[5,"partition","","Partition a sequence using predicate `pred` so that elements\nthat map to `true` are placed before elements which map to `false`.",null,{"inputs":[{"name":"i"},{"name":"f"}],"output":{"name":"usize"}}],[11,"clone","","",7,null],[11,"new","","Creat a new `Interleave` iterator.",7,{"inputs":[{"name":"i"},{"name":"j"}],"output":{"name":"interleave"}}],[11,"next","","",7,null],[11,"clone","","",8,null],[11,"new","","Create a new `InterleaveShortest` iterator.",8,{"inputs":[{"name":"i"},{"name":"j"}],"output":{"name":"interleaveshortest"}}],[11,"next","","",8,null],[11,"size_hint","","",8,null],[11,"clone","","",9,null],[11,"new","","Iterator element type is `A`",9,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"with_value","","Create a `PutBack` along with the `value` to put back.",9,{"inputs":[{"name":"item"},{"name":"i"}],"output":{"name":"self"}}],[11,"into_parts","","Split the `PutBack` into its parts.",9,null],[11,"put_back","","Put back a single value to the front of the iterator.",9,null],[11,"next","","",9,null],[11,"size_hint","","",9,null],[11,"new","","Iterator element type is `A`",10,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"put_back","","Puts x in front of the iterator.\nThe values are yielded in order.",10,null],[11,"next","","",10,null],[11,"size_hint","","",10,null],[11,"clone","","",10,null],[11,"clone","","",11,null],[11,"new","","Create a new cartesian product iterator",11,{"inputs":[{"name":"i"},{"name":"j"}],"output":{"name":"self"}}],[11,"next","","",11,null],[11,"size_hint","","",11,null],[11,"clone","","",12,null],[11,"new","","Create a new Batching iterator.",12,{"inputs":[{"name":"i"},{"name":"f"}],"output":{"name":"batching"}}],[11,"next","","",12,null],[11,"size_hint","","",12,null],[11,"clone","","",13,null],[11,"new","","Create a new `GroupBy` iterator.",13,{"inputs":[{"name":"i"},{"name":"f"}],"output":{"name":"self"}}],[11,"next","","",13,null],[11,"size_hint","","",13,null],[11,"clone","","",14,null],[11,"new","","Create a `Step` iterator.",14,{"inputs":[{"name":"i"},{"name":"usize"}],"output":{"name":"self"}}],[11,"next","","",14,null],[11,"size_hint","","",14,null],[11,"clone","","",15,null],[11,"next","","",15,null],[11,"size_hint","","",15,null],[11,"clone","","",16,null],[11,"next","","",16,null],[11,"size_hint","","",16,null],[11,"clone","","",17,null],[11,"new","","Create a `MultiPeek` iterator.",17,{"inputs":[{"name":"i"}],"output":{"name":"multipeek"}}],[11,"peek","","Works exactly like *.next()* with the only difference that it doesn&#39;t\nadvance itself. *.peek()* can be called multiple times, to peek\nfurther ahead.",17,null],[11,"next","","",17,null],[11,"size_hint","","",17,null],[11,"clone","","",18,null],[11,"new","","Create a new `Coalesce`.",18,{"inputs":[{"name":"i"},{"name":"f"}],"output":{"name":"self"}}],[11,"next","","",18,null],[11,"size_hint","","",18,null],[11,"clone","","",19,null],[11,"new","","Create a new `Dedup`.",19,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"next","","",19,null],[11,"size_hint","","",19,null],[11,"clone","","",20,null],[11,"new","","Create a new `MendSlices`.",20,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"next","","",20,null],[11,"size_hint","","",20,null],[11,"new","","Create a new `TakeWhileRef` from a reference to clonable iterator.",21,{"inputs":[{"name":"i"},{"name":"f"}],"output":{"name":"self"}}],[11,"next","","",21,null],[11,"size_hint","","",21,null],[11,"clone","","",22,null],[11,"new","","Create a new `WhileSome&lt;I&gt;`.",22,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"next","","",22,null],[11,"size_hint","","",22,null],[11,"clone","","",23,null],[11,"new","","Create a new `Combinations` from a clonable iterator.",23,{"inputs":[{"name":"i"}],"output":{"name":"combinations"}}],[11,"next","","",23,null],[11,"size_hint","","",23,null],[11,"new","","Create a new `CombinationsN` from a clonable iterator.",24,{"inputs":[{"name":"i"},{"name":"usize"}],"output":{"name":"combinationsn"}}],[11,"next","","",24,null],[11,"clone","","",25,null],[11,"new","","Create a new `UniqueBy` iterator.",25,{"inputs":[{"name":"i"},{"name":"f"}],"output":{"name":"uniqueby"}}],[11,"next","","",25,null],[11,"size_hint","","",25,null],[11,"next","","",26,null],[11,"size_hint","","",26,null],[11,"clone","","",26,null],[11,"new","","Create a new `Flatten` iterator.",27,{"inputs":[{"name":"i"}],"output":{"name":"flatten"}}],[11,"next","","",27,null],[11,"next_back","","",27,null],[11,"clone","","",27,null],[0,"free","","Free functions that create iterator adaptors or call iterator methods.",null,null],[5,"enumerate","itertools::free","Iterate `iterable` with a running index.",null,{"inputs":[{"name":"i"}],"output":{"name":"enumerate"}}],[5,"rev","","Iterate `iterable` in reverse.",null,{"inputs":[{"name":"i"}],"output":{"name":"rev"}}],[5,"zip","","Iterate `i` and `j` in lock step.",null,{"inputs":[{"name":"i"},{"name":"j"}],"output":{"name":"zip"}}],[5,"zip_eq","","Iterate `i` and `j` in lock step.",null,{"inputs":[{"name":"i"},{"name":"j"}],"output":{"name":"zipeq"}}],[5,"chain","","Create an iterator that first iterates `i` and then `j`.",null,{"inputs":[{"name":"i"},{"name":"j"}],"output":{"name":"chain"}}],[5,"fold","","Perform a fold operation over the iterable.",null,{"inputs":[{"name":"i"},{"name":"b"},{"name":"f"}],"output":{"name":"b"}}],[5,"all","","Test whether the predicate holds for all elements in the iterable.",null,{"inputs":[{"name":"i"},{"name":"f"}],"output":{"name":"bool"}}],[5,"any","","Test whether the predicate holds for any elements in the iterable.",null,{"inputs":[{"name":"i"},{"name":"f"}],"output":{"name":"bool"}}],[5,"max","","Return the maximum value of the iterable.",null,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[5,"min","","Return the minimum value of the iterable.",null,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[5,"interleave","","Create an iterator that interleaves elements in `i` and `j`.",null,{"inputs":[{"name":"i"},{"name":"j"}],"output":{"name":"interleave"}}],[5,"merge","","Create an iterator that merges elements in `i` and `j`.",null,{"inputs":[{"name":"i"},{"name":"j"}],"output":{"name":"merge"}}],[5,"kmerge","","Create an iterator that merges elements of the contained iterators.",null,{"inputs":[{"name":"i"}],"output":{"name":"kmerge"}}],[5,"join","","Combine all iterator elements into one String, seperated by `sep`.",null,{"inputs":[{"name":"i"},{"name":"str"}],"output":{"name":"string"}}],[5,"sorted","","Collect all the iterable&#39;s elements into a sorted vector in ascending order.",null,{"inputs":[{"name":"i"}],"output":{"name":"vec"}}],[11,"clone","itertools","",28,null],[11,"fmt","","",29,null],[11,"fmt","","",28,null],[11,"fmt","","",28,null],[11,"fmt","","",28,null],[11,"fmt","","",28,null],[11,"fmt","","",28,null],[11,"fmt","","",28,null],[11,"fmt","","",28,null],[11,"fmt","","",28,null],[11,"fmt","","",28,null],[11,"next","","",30,null],[11,"drop","","",31,null],[11,"next","","",31,null],[11,"next","","",32,null],[11,"drop","","",33,null],[11,"next","","",33,null],[11,"clone","","",34,null],[11,"new","","Create a new Intersperse iterator",34,{"inputs":[{"name":"i"},{"name":"item"}],"output":{"name":"self"}}],[11,"next","","",34,null],[11,"size_hint","","",34,null],[11,"clone","","",35,null],[11,"new","","Create a new **ISlice**.",35,{"inputs":[{"name":"i"},{"name":"r"}],"output":{"name":"self"}}],[11,"next","","",35,null],[11,"size_hint","","",35,null],[11,"clone","","",36,null],[11,"next","","",36,null],[11,"size_hint","","",36,null],[11,"fmt","","",37,null],[11,"clone","","",37,null],[11,"next","","",37,null],[11,"size_hint","","",37,null],[11,"next_back","","",37,null],[11,"fmt","","",3,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"into_option","","`into_option` creates an `Option` of type `(T, T)`. The returned `Option`\nhas variant `None` if and only if the `MinMaxResult` has variant\n`NoElements`. Otherwise variant `Some(x, y)` is returned where `x &lt;= y`.\nIf `MinMaxResult` has variant `OneElement(x)`, performing this operation\nwill make one clone of `x`.",3,null],[0,"misc","","A module of helper traits and iterators that are not intended to be used\ndirectly.",null,null],[3,"FlatTuples","itertools::misc","A helper iterator that maps an iterator of tuples like\n`((A, B), C)` to an iterator of `(A, B, C)`.",null,null],[8,"IntoIteratorTuple","","Apply `IntoIterator` on each element of a tuple.",null,null],[16,"Output","","Tuple of values that implement `Iterator`.",38,null],[10,"into_iterator_tuple","","Return a tuple of iterators.",38,null],[8,"AppendTuple","","A helper trait for (x, y, z) ++ w =&gt; (x, y, z, w),\nused for implementing `iproduct!`.",null,null],[16,"Result","","Resulting tuple type",39,null],[10,"append","","“Append” value `x` to a tuple.",39,null],[8,"GenericRange","","`GenericRange` is implemented by Rust&#39;s built-in range types, produced\nby range syntax like `a..`, `..b` or `c..d`.",null,null],[8,"ToFloat","","Helper trait to convert usize to floating point type.",null,null],[8,"MendSlice","","A trait for items that can *maybe* be joined together.",null,null],[8,"Slice","","A helper trait to let `ZipSlices` accept both `&amp;[T]` and `&amp;mut [T]`.",null,null],[16,"Item","","The type of a reference to the slice&#39;s elements",40,null],[11,"clone","","",41,null],[11,"next","","",41,null],[11,"size_hint","","",41,null],[11,"next_back","","",41,null],[11,"start","core::ops","",42,null],[11,"end","","",43,null],[11,"start","","",44,null],[11,"end","","",44,null],[11,"clone","itertools","",45,null],[11,"new","","Create a new **PadUsing** iterator.",45,{"inputs":[{"name":"i"},{"name":"usize"},{"name":"f"}],"output":{"name":"padusing"}}],[11,"next","","",45,null],[11,"size_hint","","",45,null],[11,"next_back","","",45,null],[11,"new","","Create a new RcIter.",0,{"inputs":[{"name":"i"}],"output":{"name":"rciter"}}],[11,"clone","","",0,null],[11,"next","","",0,null],[11,"size_hint","","",0,null],[11,"next_back","","",0,null],[11,"new","","Create a new **RepeatN** with **n** repetitions.",46,{"inputs":[{"name":"a"},{"name":"usize"}],"output":{"name":"self"}}],[11,"next","","",46,null],[11,"size_hint","","",46,null],[11,"next_back","","",46,null],[11,"new","","Create a new `RepeatCall` from a closure.",47,{"inputs":[{"name":"f"}],"output":{"name":"self"}}],[11,"next","","",47,null],[11,"size_hint","","",47,null],[11,"next_back","","",47,null],[11,"clone","","",1,null],[11,"new","","Creates a new iterator with the specified closure as the &quot;iterator\nfunction&quot; and an initial state to eventually pass to the closure",1,{"inputs":[{"name":"st"},{"name":"f"}],"output":{"name":"unfold"}}],[11,"next","","",1,null],[11,"size_hint","","",1,null],[0,"size_hint","","Arithmetic on **Iterator** *.size_hint()* values.",null,null],[5,"add","itertools::size_hint","Add **SizeHint** correctly.",null,{"inputs":[{"name":"sizehint"},{"name":"sizehint"}],"output":{"name":"sizehint"}}],[5,"add_scalar","","Add **x** correctly to a **SizeHint**.",null,{"inputs":[{"name":"sizehint"},{"name":"usize"}],"output":{"name":"sizehint"}}],[5,"sub_scalar","","Sbb **x** correctly to a **SizeHint**.",null,{"inputs":[{"name":"sizehint"},{"name":"usize"}],"output":{"name":"sizehint"}}],[5,"mul_scalar","","Multiply **x** correctly with a **SizeHint**.",null,{"inputs":[{"name":"sizehint"},{"name":"usize"}],"output":{"name":"sizehint"}}],[5,"mul","","Multiply **SizeHint** correctly",null,{"inputs":[{"name":"sizehint"},{"name":"sizehint"}],"output":{"name":"sizehint"}}],[5,"max","","Return the maximum",null,{"inputs":[{"name":"sizehint"},{"name":"sizehint"}],"output":{"name":"sizehint"}}],[5,"min","","Return the minimum",null,{"inputs":[{"name":"sizehint"},{"name":"sizehint"}],"output":{"name":"sizehint"}}],[6,"SizeHint","","**SizeHint** is the return type of **Iterator::size_hint()**.",null,null],[11,"from_ptr_len","itertools","Create a Stride iterator from a raw pointer.",48,null],[11,"from_ptr_len","","Create a StrideMut iterator from a raw pointer.",49,null],[11,"from_slice","","Create Stride iterator from a slice and the element step count.",48,null],[11,"from_stride","","Create Stride iterator from an existing Stride iterator",48,{"inputs":[{"name":"stride"},{"name":"isize"}],"output":{"name":"stride"}}],[11,"swap_ends","","Swap the begin and end and reverse the stride,\nin effect reversing the iterator.",48,null],[11,"len","","Return the number of elements in the iterator.",48,null],[11,"get","","Return a reference to the element of a stride at the\ngiven index, or None if the index is out of bounds.",48,null],[11,"next","","",48,null],[11,"size_hint","","",48,null],[11,"next_back","","",48,null],[11,"index","","Return a reference to the element at a given index.",48,null],[11,"fmt","","",48,null],[11,"len","","",48,null],[11,"get_unchecked","","",48,null],[11,"from_slice","","Create Stride iterator from a slice and the element step count.",49,null],[11,"from_stride","","Create Stride iterator from an existing Stride iterator",49,{"inputs":[{"name":"stridemut"},{"name":"isize"}],"output":{"name":"stridemut"}}],[11,"swap_ends","","Swap the begin and end and reverse the stride,\nin effect reversing the iterator.",49,null],[11,"len","","Return the number of elements in the iterator.",49,null],[11,"get","","Return a reference to the element of a stride at the\ngiven index, or None if the index is out of bounds.",49,null],[11,"next","","",49,null],[11,"size_hint","","",49,null],[11,"next_back","","",49,null],[11,"index","","Return a reference to the element at a given index.",49,null],[11,"fmt","","",49,null],[11,"len","","",49,null],[11,"get_unchecked","","",49,null],[11,"clone","","",48,null],[11,"get_mut","","Return a mutable reference to the element of a stride at the\ngiven index, or None if the index is out of bounds.",49,null],[11,"index_mut","","Return a mutable reference to the element at a given index.",49,null],[11,"next","","",50,null],[11,"size_hint","","",50,null],[11,"clone","","",51,null],[11,"next","","",51,null],[11,"size_hint","","",51,null],[11,"clone","","",52,null],[11,"new","","Create a new `ZipLongest` iterator.",52,{"inputs":[{"name":"t"},{"name":"u"}],"output":{"name":"ziplongest"}}],[11,"next","","",52,null],[11,"size_hint","","",52,null],[11,"next_back","","",52,null],[11,"fmt","","",4,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"clone","","",4,null],[11,"clone","","",53,null],[11,"new","","Create a new `Zip` from a tuple of iterators.",53,{"inputs":[{"name":"t"}],"output":{"name":"zip"}}],[11,"next","","",53,null],[11,"size_hint","","",53,null],[11,"next","","",53,null],[11,"size_hint","","",53,null],[11,"next","","",53,null],[11,"size_hint","","",53,null],[11,"next","","",53,null],[11,"size_hint","","",53,null],[11,"next","","",53,null],[11,"size_hint","","",53,null],[11,"next","","",53,null],[11,"size_hint","","",53,null],[11,"next","","",53,null],[11,"size_hint","","",53,null],[11,"next","","",53,null],[11,"size_hint","","",53,null],[11,"next","","",53,null],[11,"size_hint","","",53,null],[11,"clone","","",54,null],[11,"new","","Create a new `ZipSlices` from slices `a` and `b`.",54,null],[11,"from_slices","","Create a new `ZipSlices` from slices `a` and `b`.",54,{"inputs":[{"name":"t"},{"name":"u"}],"output":{"name":"self"}}],[11,"next","","",54,null],[11,"size_hint","","",54,null],[11,"next_back","","",54,null],[11,"len","","",54,null],[11,"get_unchecked","","",54,null],[6,"MapFn","","The function pointer map iterator created with `.map_fn()`.",null,null],[8,"Itertools","","The trait `Itertools`: extra iterator adaptors and methods for iterators.",null,null],[11,"interleave","","Alternate elements from two iterators until both\nrun out.",55,null],[11,"interleave_shortest","","Alternate elements from two iterators until one of them runs out.",55,null],[11,"intersperse","","An iterator adaptor to insert a particular value\nbetween each element of the adapted iterator.",55,null],[11,"zip_longest","","Create an iterator which iterates over both this and the specified\niterator simultaneously, yielding pairs of two optional elements.",55,null],[11,"zip_eq","","Create an iterator which iterates over both this and the specified\niterator simultaneously, yielding pairs of elements.",55,null],[11,"batching","","A “meta iterator adaptor”. Its closure recives a reference to the iterator\nand may pick off as many elements as it likes, to produce the next iterator element.",55,null],[11,"group_by","","Group iterator elements. Consecutive elements that map to the same key (“runs”),\nare returned as the iterator elements of `GroupBy`.",55,null],[11,"group_by_lazy","","Return an iterable that can group iterator elements.\nConsecutive elements that map to the same key (“runs”), are assigned\nto the same group.",55,null],[11,"chunks_lazy","","Return an iterable that can chunk the iterator.",55,null],[11,"tee","","Split into an iterator pair that both yield all elements from\nthe original iterator.",55,null],[11,"slice","","Return a sliced iterator.",55,null],[11,"into_rc","","Return an iterator inside a `Rc&lt;RefCell&lt;_&gt;&gt;` wrapper.",55,null],[11,"step","","Return an iterator adaptor that steps `n` elements in the base iterator\nfor each iteration.",55,null],[11,"merge","","Return an iterator adaptor that merges the two base iterators in ascending order.\nIf both base iterators are sorted (ascending), the result is sorted.",55,null],[11,"merge_by","","Return an iterator adaptor that merges the two base iterators in order.\nThis is much like `.merge()` but allows for a custom ordering.",55,null],[11,"kmerge","","Return an iterator adaptor that flattens an iterator of iterators by\nmerging them in ascending order.",55,null],[11,"cartesian_product","","Return an iterator adaptor that iterates over the cartesian product of\nthe element sets of two iterators `self` and `J`.",55,null],[11,"multipeek","","Return an iterator adapter that allows peeking multiple values.",55,null],[11,"coalesce","","Return an iterator adaptor that uses the passed-in closure to\noptionally merge together consecutive elements.",55,null],[11,"dedup","","Remove duplicates from sections of consecutive identical elements.\nIf the iterator is sorted, all elements will be unique.",55,null],[11,"unique","","Return an iterator adaptor that filters out elements that have\nalready been produced once during the iteration. Duplicates\nare detected using hash and equality.",55,null],[11,"unique_by","","Return an iterator adaptor that filters out elements that have\nalready been produced once during the iteration.",55,null],[11,"mend_slices","","Return an iterator adaptor that joins together adjacent slices if possible.",55,null],[11,"take_while_ref","","Return an iterator adaptor that borrows from a `Clone`-able iterator\nto only pick off elements while the predicate `f` returns `true`.",55,null],[11,"while_some","","Return an iterator adaptor that filters `Option&lt;A&gt;` iterator elements\nand produces `A`. Stops on the first `None` encountered.",55,null],[11,"combinations","","Return an iterator adaptor that iterates over the combinations of\nthe elements from an iterator.",55,null],[11,"combinations_n","","Return an iterator adaptor that iterates over the `n`-length combinations of\nthe elements from an iterator.",55,null],[11,"pad_using","","Return an iterator adaptor that pads the sequence to a minimum length of\n`min` by filling missing elements using a closure `f`.",55,null],[11,"flatten","","Unravel a nested iterator.",55,null],[11,"map_fn","","Like regular `.map()`, specialized to using a simple function pointer instead,\nso that the resulting `Map` iterator value can be cloned.",55,null],[11,"find_position","","Find the position and value of the first element satisfying a predicate.",55,null],[11,"dropn","","Consume the first `n` elements of the iterator eagerly.",55,null],[11,"dropping","","Consume the first `n` elements from the iterator eagerly,\nand return the same iterator again.",55,null],[11,"dropping_back","","Consume the last `n` elements from the iterator eagerly,\nand return the same iterator again.",55,null],[11,"foreach","","Run the closure `f` eagerly on each element of the iterator.",55,null],[11,"collect_vec","","`.collect_vec()` is simply a type specialization of `.collect()`,\nfor convenience.",55,null],[11,"set_from","","Assign to each reference in `self` from the `from` iterator,\nstopping at the shortest of the two iterators.",55,null],[11,"join","","Combine all iterator elements into one String, seperated by `sep`.",55,null],[11,"format_default","","Format all iterator elements, separated by `sep`.",55,null],[11,"format","","Format all iterator elements, separated by `sep`.",55,null],[11,"fold_results","","Fold `Result` values from an iterator.",55,null],[11,"fold_options","","Fold `Option` values from an iterator.",55,null],[11,"fold1","","Accumulator of the elements in the iterator.",55,null],[11,"fold_while","","An iterator adaptor that applies a function, producing a single, final value.",55,null],[11,"is_empty_hint","","Tell if the iterator is empty or not according to its size hint.\nReturn `None` if the size hint does not tell, or return a `Some`\nvalue with the emptiness if it&#39;s possible to tell.",55,null],[11,"sorted","","Collect all iterator elements into a sorted vector in ascending order.",55,null],[11,"sorted_by","","Collect all iterator elements into a sorted vector.",55,null],[11,"sort_by","","**Deprecated:** renamed to `.sorted_by()`",55,null],[11,"partition_map","","Collect all iterator elements into one of two\npartitions. Unlike `Iterator::partition`, each partition may\nhave a distinct type.",55,null],[11,"minmax","","Return the minimum and maximum elements in the iterator.",55,null],[11,"minmax_by_key","","Return the minimum and maximum element of an iterator, as determined by\nthe specified function.",55,null],[14,"iproduct!","","Create an iterator over the “cartesian product” of iterators.",null,null],[14,"izip!","","Create an iterator running multiple iterators in lockstep.",null,null]],"paths":[[3,"RcIter"],[3,"Unfold"],[4,"Diff"],[4,"MinMaxResult"],[4,"EitherOrBoth"],[4,"Partition"],[4,"FoldWhile"],[3,"Interleave"],[3,"InterleaveShortest"],[3,"PutBack"],[3,"PutBackN"],[3,"Product"],[3,"Batching"],[3,"GroupBy"],[3,"Step"],[3,"Merge"],[3,"MergeBy"],[3,"MultiPeek"],[3,"Coalesce"],[3,"Dedup"],[3,"MendSlices"],[3,"TakeWhileRef"],[3,"WhileSome"],[3,"Combinations"],[3,"CombinationsN"],[3,"UniqueBy"],[3,"Unique"],[3,"Flatten"],[3,"FormatDefault"],[3,"Format"],[3,"Groups"],[3,"Group"],[3,"Chunks"],[3,"Chunk"],[3,"Intersperse"],[3,"ISlice"],[3,"KMerge"],[3,"Linspace"],[8,"IntoIteratorTuple"],[8,"AppendTuple"],[8,"Slice"],[3,"FlatTuples"],[3,"RangeFrom"],[3,"RangeTo"],[3,"Range"],[3,"PadUsing"],[3,"RepeatN"],[3,"RepeatCall"],[3,"Stride"],[3,"StrideMut"],[3,"Tee"],[3,"ZipEq"],[3,"ZipLongest"],[3,"Zip"],[3,"ZipSlices"],[8,"Itertools"]]};
searchIndex["roboime_next_protocol"] = {"doc":"","items":[[5,"parse_from_bytes","roboime_next_protocol","",null,null],[11,"default","protobuf::descriptor","",0,{"inputs":[],"output":{"name":"filedescriptorset"}}],[11,"clone","","",0,null],[11,"new","","",0,{"inputs":[],"output":{"name":"filedescriptorset"}}],[11,"default_instance","","",0,{"inputs":[],"output":{"name":"filedescriptorset"}}],[11,"clear_file","","",0,null],[11,"set_file","","",0,null],[11,"mut_file","","",0,null],[11,"take_file","","",0,null],[11,"get_file","","",0,null],[11,"is_initialized","","",0,null],[11,"merge_from","","",0,null],[11,"compute_size","","",0,null],[11,"write_to_with_cached_sizes","","",0,null],[11,"get_cached_size","","",0,null],[11,"get_unknown_fields","","",0,null],[11,"mut_unknown_fields","","",0,null],[11,"type_id","","",0,null],[11,"as_any","","",0,null],[11,"descriptor","","",0,null],[11,"new","","",0,{"inputs":[],"output":{"name":"filedescriptorset"}}],[11,"descriptor_static","","",0,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",0,null],[11,"eq","","",0,null],[11,"fmt","","",0,null],[11,"default","","",1,{"inputs":[],"output":{"name":"filedescriptorproto"}}],[11,"clone","","",1,null],[11,"new","","",1,{"inputs":[],"output":{"name":"filedescriptorproto"}}],[11,"default_instance","","",1,{"inputs":[],"output":{"name":"filedescriptorproto"}}],[11,"clear_name","","",1,null],[11,"has_name","","",1,null],[11,"set_name","","",1,null],[11,"mut_name","","",1,null],[11,"take_name","","",1,null],[11,"get_name","","",1,null],[11,"clear_package","","",1,null],[11,"has_package","","",1,null],[11,"set_package","","",1,null],[11,"mut_package","","",1,null],[11,"take_package","","",1,null],[11,"get_package","","",1,null],[11,"clear_dependency","","",1,null],[11,"set_dependency","","",1,null],[11,"mut_dependency","","",1,null],[11,"take_dependency","","",1,null],[11,"get_dependency","","",1,null],[11,"clear_public_dependency","","",1,null],[11,"set_public_dependency","","",1,null],[11,"mut_public_dependency","","",1,null],[11,"take_public_dependency","","",1,null],[11,"get_public_dependency","","",1,null],[11,"clear_weak_dependency","","",1,null],[11,"set_weak_dependency","","",1,null],[11,"mut_weak_dependency","","",1,null],[11,"take_weak_dependency","","",1,null],[11,"get_weak_dependency","","",1,null],[11,"clear_message_type","","",1,null],[11,"set_message_type","","",1,null],[11,"mut_message_type","","",1,null],[11,"take_message_type","","",1,null],[11,"get_message_type","","",1,null],[11,"clear_enum_type","","",1,null],[11,"set_enum_type","","",1,null],[11,"mut_enum_type","","",1,null],[11,"take_enum_type","","",1,null],[11,"get_enum_type","","",1,null],[11,"clear_service","","",1,null],[11,"set_service","","",1,null],[11,"mut_service","","",1,null],[11,"take_service","","",1,null],[11,"get_service","","",1,null],[11,"clear_extension","","",1,null],[11,"set_extension","","",1,null],[11,"mut_extension","","",1,null],[11,"take_extension","","",1,null],[11,"get_extension","","",1,null],[11,"clear_options","","",1,null],[11,"has_options","","",1,null],[11,"set_options","","",1,null],[11,"mut_options","","",1,null],[11,"take_options","","",1,null],[11,"get_options","","",1,null],[11,"clear_source_code_info","","",1,null],[11,"has_source_code_info","","",1,null],[11,"set_source_code_info","","",1,null],[11,"mut_source_code_info","","",1,null],[11,"take_source_code_info","","",1,null],[11,"get_source_code_info","","",1,null],[11,"is_initialized","","",1,null],[11,"merge_from","","",1,null],[11,"compute_size","","",1,null],[11,"write_to_with_cached_sizes","","",1,null],[11,"get_cached_size","","",1,null],[11,"get_unknown_fields","","",1,null],[11,"mut_unknown_fields","","",1,null],[11,"type_id","","",1,null],[11,"as_any","","",1,null],[11,"descriptor","","",1,null],[11,"new","","",1,{"inputs":[],"output":{"name":"filedescriptorproto"}}],[11,"descriptor_static","","",1,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",1,null],[11,"eq","","",1,null],[11,"fmt","","",1,null],[11,"default","","",2,{"inputs":[],"output":{"name":"descriptorproto"}}],[11,"clone","","",2,null],[11,"new","","",2,{"inputs":[],"output":{"name":"descriptorproto"}}],[11,"default_instance","","",2,{"inputs":[],"output":{"name":"descriptorproto"}}],[11,"clear_name","","",2,null],[11,"has_name","","",2,null],[11,"set_name","","",2,null],[11,"mut_name","","",2,null],[11,"take_name","","",2,null],[11,"get_name","","",2,null],[11,"clear_field","","",2,null],[11,"set_field","","",2,null],[11,"mut_field","","",2,null],[11,"take_field","","",2,null],[11,"get_field","","",2,null],[11,"clear_extension","","",2,null],[11,"set_extension","","",2,null],[11,"mut_extension","","",2,null],[11,"take_extension","","",2,null],[11,"get_extension","","",2,null],[11,"clear_nested_type","","",2,null],[11,"set_nested_type","","",2,null],[11,"mut_nested_type","","",2,null],[11,"take_nested_type","","",2,null],[11,"get_nested_type","","",2,null],[11,"clear_enum_type","","",2,null],[11,"set_enum_type","","",2,null],[11,"mut_enum_type","","",2,null],[11,"take_enum_type","","",2,null],[11,"get_enum_type","","",2,null],[11,"clear_extension_range","","",2,null],[11,"set_extension_range","","",2,null],[11,"mut_extension_range","","",2,null],[11,"take_extension_range","","",2,null],[11,"get_extension_range","","",2,null],[11,"clear_oneof_decl","","",2,null],[11,"set_oneof_decl","","",2,null],[11,"mut_oneof_decl","","",2,null],[11,"take_oneof_decl","","",2,null],[11,"get_oneof_decl","","",2,null],[11,"clear_options","","",2,null],[11,"has_options","","",2,null],[11,"set_options","","",2,null],[11,"mut_options","","",2,null],[11,"take_options","","",2,null],[11,"get_options","","",2,null],[11,"is_initialized","","",2,null],[11,"merge_from","","",2,null],[11,"compute_size","","",2,null],[11,"write_to_with_cached_sizes","","",2,null],[11,"get_cached_size","","",2,null],[11,"get_unknown_fields","","",2,null],[11,"mut_unknown_fields","","",2,null],[11,"type_id","","",2,null],[11,"as_any","","",2,null],[11,"descriptor","","",2,null],[11,"new","","",2,{"inputs":[],"output":{"name":"descriptorproto"}}],[11,"descriptor_static","","",2,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",2,null],[11,"eq","","",2,null],[11,"fmt","","",2,null],[11,"default","","",3,{"inputs":[],"output":{"name":"descriptorproto_extensionrange"}}],[11,"clone","","",3,null],[11,"new","","",3,{"inputs":[],"output":{"name":"descriptorproto_extensionrange"}}],[11,"default_instance","","",3,{"inputs":[],"output":{"name":"descriptorproto_extensionrange"}}],[11,"clear_start","","",3,null],[11,"has_start","","",3,null],[11,"set_start","","",3,null],[11,"get_start","","",3,null],[11,"clear_end","","",3,null],[11,"has_end","","",3,null],[11,"set_end","","",3,null],[11,"get_end","","",3,null],[11,"is_initialized","","",3,null],[11,"merge_from","","",3,null],[11,"compute_size","","",3,null],[11,"write_to_with_cached_sizes","","",3,null],[11,"get_cached_size","","",3,null],[11,"get_unknown_fields","","",3,null],[11,"mut_unknown_fields","","",3,null],[11,"type_id","","",3,null],[11,"as_any","","",3,null],[11,"descriptor","","",3,null],[11,"new","","",3,{"inputs":[],"output":{"name":"descriptorproto_extensionrange"}}],[11,"descriptor_static","","",3,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",3,null],[11,"eq","","",3,null],[11,"fmt","","",3,null],[11,"default","","",4,{"inputs":[],"output":{"name":"fielddescriptorproto"}}],[11,"clone","","",4,null],[11,"new","","",4,{"inputs":[],"output":{"name":"fielddescriptorproto"}}],[11,"default_instance","","",4,{"inputs":[],"output":{"name":"fielddescriptorproto"}}],[11,"clear_name","","",4,null],[11,"has_name","","",4,null],[11,"set_name","","",4,null],[11,"mut_name","","",4,null],[11,"take_name","","",4,null],[11,"get_name","","",4,null],[11,"clear_number","","",4,null],[11,"has_number","","",4,null],[11,"set_number","","",4,null],[11,"get_number","","",4,null],[11,"clear_label","","",4,null],[11,"has_label","","",4,null],[11,"set_label","","",4,null],[11,"get_label","","",4,null],[11,"clear_field_type","","",4,null],[11,"has_field_type","","",4,null],[11,"set_field_type","","",4,null],[11,"get_field_type","","",4,null],[11,"clear_type_name","","",4,null],[11,"has_type_name","","",4,null],[11,"set_type_name","","",4,null],[11,"mut_type_name","","",4,null],[11,"take_type_name","","",4,null],[11,"get_type_name","","",4,null],[11,"clear_extendee","","",4,null],[11,"has_extendee","","",4,null],[11,"set_extendee","","",4,null],[11,"mut_extendee","","",4,null],[11,"take_extendee","","",4,null],[11,"get_extendee","","",4,null],[11,"clear_default_value","","",4,null],[11,"has_default_value","","",4,null],[11,"set_default_value","","",4,null],[11,"mut_default_value","","",4,null],[11,"take_default_value","","",4,null],[11,"get_default_value","","",4,null],[11,"clear_oneof_index","","",4,null],[11,"has_oneof_index","","",4,null],[11,"set_oneof_index","","",4,null],[11,"get_oneof_index","","",4,null],[11,"clear_options","","",4,null],[11,"has_options","","",4,null],[11,"set_options","","",4,null],[11,"mut_options","","",4,null],[11,"take_options","","",4,null],[11,"get_options","","",4,null],[11,"is_initialized","","",4,null],[11,"merge_from","","",4,null],[11,"compute_size","","",4,null],[11,"write_to_with_cached_sizes","","",4,null],[11,"get_cached_size","","",4,null],[11,"get_unknown_fields","","",4,null],[11,"mut_unknown_fields","","",4,null],[11,"type_id","","",4,null],[11,"as_any","","",4,null],[11,"descriptor","","",4,null],[11,"new","","",4,{"inputs":[],"output":{"name":"fielddescriptorproto"}}],[11,"descriptor_static","","",4,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",4,null],[11,"eq","","",4,null],[11,"fmt","","",4,null],[11,"hash","","",5,null],[11,"fmt","","",5,null],[11,"eq","","",5,null],[11,"clone","","",5,null],[11,"value","","",5,null],[11,"from_i32","","",5,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"values","","",5,null],[11,"enum_descriptor_static","","",5,{"inputs":[{"name":"option"}],"output":{"name":"enumdescriptor"}}],[11,"hash","","",6,null],[11,"fmt","","",6,null],[11,"eq","","",6,null],[11,"clone","","",6,null],[11,"value","","",6,null],[11,"from_i32","","",6,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"values","","",6,null],[11,"enum_descriptor_static","","",6,{"inputs":[{"name":"option"}],"output":{"name":"enumdescriptor"}}],[11,"default","","",7,{"inputs":[],"output":{"name":"oneofdescriptorproto"}}],[11,"clone","","",7,null],[11,"new","","",7,{"inputs":[],"output":{"name":"oneofdescriptorproto"}}],[11,"default_instance","","",7,{"inputs":[],"output":{"name":"oneofdescriptorproto"}}],[11,"clear_name","","",7,null],[11,"has_name","","",7,null],[11,"set_name","","",7,null],[11,"mut_name","","",7,null],[11,"take_name","","",7,null],[11,"get_name","","",7,null],[11,"is_initialized","","",7,null],[11,"merge_from","","",7,null],[11,"compute_size","","",7,null],[11,"write_to_with_cached_sizes","","",7,null],[11,"get_cached_size","","",7,null],[11,"get_unknown_fields","","",7,null],[11,"mut_unknown_fields","","",7,null],[11,"type_id","","",7,null],[11,"as_any","","",7,null],[11,"descriptor","","",7,null],[11,"new","","",7,{"inputs":[],"output":{"name":"oneofdescriptorproto"}}],[11,"descriptor_static","","",7,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",7,null],[11,"eq","","",7,null],[11,"fmt","","",7,null],[11,"default","","",8,{"inputs":[],"output":{"name":"enumdescriptorproto"}}],[11,"clone","","",8,null],[11,"new","","",8,{"inputs":[],"output":{"name":"enumdescriptorproto"}}],[11,"default_instance","","",8,{"inputs":[],"output":{"name":"enumdescriptorproto"}}],[11,"clear_name","","",8,null],[11,"has_name","","",8,null],[11,"set_name","","",8,null],[11,"mut_name","","",8,null],[11,"take_name","","",8,null],[11,"get_name","","",8,null],[11,"clear_value","","",8,null],[11,"set_value","","",8,null],[11,"mut_value","","",8,null],[11,"take_value","","",8,null],[11,"get_value","","",8,null],[11,"clear_options","","",8,null],[11,"has_options","","",8,null],[11,"set_options","","",8,null],[11,"mut_options","","",8,null],[11,"take_options","","",8,null],[11,"get_options","","",8,null],[11,"is_initialized","","",8,null],[11,"merge_from","","",8,null],[11,"compute_size","","",8,null],[11,"write_to_with_cached_sizes","","",8,null],[11,"get_cached_size","","",8,null],[11,"get_unknown_fields","","",8,null],[11,"mut_unknown_fields","","",8,null],[11,"type_id","","",8,null],[11,"as_any","","",8,null],[11,"descriptor","","",8,null],[11,"new","","",8,{"inputs":[],"output":{"name":"enumdescriptorproto"}}],[11,"descriptor_static","","",8,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",8,null],[11,"eq","","",8,null],[11,"fmt","","",8,null],[11,"default","","",9,{"inputs":[],"output":{"name":"enumvaluedescriptorproto"}}],[11,"clone","","",9,null],[11,"new","","",9,{"inputs":[],"output":{"name":"enumvaluedescriptorproto"}}],[11,"default_instance","","",9,{"inputs":[],"output":{"name":"enumvaluedescriptorproto"}}],[11,"clear_name","","",9,null],[11,"has_name","","",9,null],[11,"set_name","","",9,null],[11,"mut_name","","",9,null],[11,"take_name","","",9,null],[11,"get_name","","",9,null],[11,"clear_number","","",9,null],[11,"has_number","","",9,null],[11,"set_number","","",9,null],[11,"get_number","","",9,null],[11,"clear_options","","",9,null],[11,"has_options","","",9,null],[11,"set_options","","",9,null],[11,"mut_options","","",9,null],[11,"take_options","","",9,null],[11,"get_options","","",9,null],[11,"is_initialized","","",9,null],[11,"merge_from","","",9,null],[11,"compute_size","","",9,null],[11,"write_to_with_cached_sizes","","",9,null],[11,"get_cached_size","","",9,null],[11,"get_unknown_fields","","",9,null],[11,"mut_unknown_fields","","",9,null],[11,"type_id","","",9,null],[11,"as_any","","",9,null],[11,"descriptor","","",9,null],[11,"new","","",9,{"inputs":[],"output":{"name":"enumvaluedescriptorproto"}}],[11,"descriptor_static","","",9,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",9,null],[11,"eq","","",9,null],[11,"fmt","","",9,null],[11,"default","","",10,{"inputs":[],"output":{"name":"servicedescriptorproto"}}],[11,"clone","","",10,null],[11,"new","","",10,{"inputs":[],"output":{"name":"servicedescriptorproto"}}],[11,"default_instance","","",10,{"inputs":[],"output":{"name":"servicedescriptorproto"}}],[11,"clear_name","","",10,null],[11,"has_name","","",10,null],[11,"set_name","","",10,null],[11,"mut_name","","",10,null],[11,"take_name","","",10,null],[11,"get_name","","",10,null],[11,"clear_method","","",10,null],[11,"set_method","","",10,null],[11,"mut_method","","",10,null],[11,"take_method","","",10,null],[11,"get_method","","",10,null],[11,"clear_options","","",10,null],[11,"has_options","","",10,null],[11,"set_options","","",10,null],[11,"mut_options","","",10,null],[11,"take_options","","",10,null],[11,"get_options","","",10,null],[11,"is_initialized","","",10,null],[11,"merge_from","","",10,null],[11,"compute_size","","",10,null],[11,"write_to_with_cached_sizes","","",10,null],[11,"get_cached_size","","",10,null],[11,"get_unknown_fields","","",10,null],[11,"mut_unknown_fields","","",10,null],[11,"type_id","","",10,null],[11,"as_any","","",10,null],[11,"descriptor","","",10,null],[11,"new","","",10,{"inputs":[],"output":{"name":"servicedescriptorproto"}}],[11,"descriptor_static","","",10,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",10,null],[11,"eq","","",10,null],[11,"fmt","","",10,null],[11,"default","","",11,{"inputs":[],"output":{"name":"methoddescriptorproto"}}],[11,"clone","","",11,null],[11,"new","","",11,{"inputs":[],"output":{"name":"methoddescriptorproto"}}],[11,"default_instance","","",11,{"inputs":[],"output":{"name":"methoddescriptorproto"}}],[11,"clear_name","","",11,null],[11,"has_name","","",11,null],[11,"set_name","","",11,null],[11,"mut_name","","",11,null],[11,"take_name","","",11,null],[11,"get_name","","",11,null],[11,"clear_input_type","","",11,null],[11,"has_input_type","","",11,null],[11,"set_input_type","","",11,null],[11,"mut_input_type","","",11,null],[11,"take_input_type","","",11,null],[11,"get_input_type","","",11,null],[11,"clear_output_type","","",11,null],[11,"has_output_type","","",11,null],[11,"set_output_type","","",11,null],[11,"mut_output_type","","",11,null],[11,"take_output_type","","",11,null],[11,"get_output_type","","",11,null],[11,"clear_options","","",11,null],[11,"has_options","","",11,null],[11,"set_options","","",11,null],[11,"mut_options","","",11,null],[11,"take_options","","",11,null],[11,"get_options","","",11,null],[11,"is_initialized","","",11,null],[11,"merge_from","","",11,null],[11,"compute_size","","",11,null],[11,"write_to_with_cached_sizes","","",11,null],[11,"get_cached_size","","",11,null],[11,"get_unknown_fields","","",11,null],[11,"mut_unknown_fields","","",11,null],[11,"type_id","","",11,null],[11,"as_any","","",11,null],[11,"descriptor","","",11,null],[11,"new","","",11,{"inputs":[],"output":{"name":"methoddescriptorproto"}}],[11,"descriptor_static","","",11,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",11,null],[11,"eq","","",11,null],[11,"fmt","","",11,null],[11,"default","","",12,{"inputs":[],"output":{"name":"fileoptions"}}],[11,"clone","","",12,null],[11,"new","","",12,{"inputs":[],"output":{"name":"fileoptions"}}],[11,"default_instance","","",12,{"inputs":[],"output":{"name":"fileoptions"}}],[11,"clear_java_package","","",12,null],[11,"has_java_package","","",12,null],[11,"set_java_package","","",12,null],[11,"mut_java_package","","",12,null],[11,"take_java_package","","",12,null],[11,"get_java_package","","",12,null],[11,"clear_java_outer_classname","","",12,null],[11,"has_java_outer_classname","","",12,null],[11,"set_java_outer_classname","","",12,null],[11,"mut_java_outer_classname","","",12,null],[11,"take_java_outer_classname","","",12,null],[11,"get_java_outer_classname","","",12,null],[11,"clear_java_multiple_files","","",12,null],[11,"has_java_multiple_files","","",12,null],[11,"set_java_multiple_files","","",12,null],[11,"get_java_multiple_files","","",12,null],[11,"clear_java_generate_equals_and_hash","","",12,null],[11,"has_java_generate_equals_and_hash","","",12,null],[11,"set_java_generate_equals_and_hash","","",12,null],[11,"get_java_generate_equals_and_hash","","",12,null],[11,"clear_java_string_check_utf8","","",12,null],[11,"has_java_string_check_utf8","","",12,null],[11,"set_java_string_check_utf8","","",12,null],[11,"get_java_string_check_utf8","","",12,null],[11,"clear_optimize_for","","",12,null],[11,"has_optimize_for","","",12,null],[11,"set_optimize_for","","",12,null],[11,"get_optimize_for","","",12,null],[11,"clear_go_package","","",12,null],[11,"has_go_package","","",12,null],[11,"set_go_package","","",12,null],[11,"mut_go_package","","",12,null],[11,"take_go_package","","",12,null],[11,"get_go_package","","",12,null],[11,"clear_cc_generic_services","","",12,null],[11,"has_cc_generic_services","","",12,null],[11,"set_cc_generic_services","","",12,null],[11,"get_cc_generic_services","","",12,null],[11,"clear_java_generic_services","","",12,null],[11,"has_java_generic_services","","",12,null],[11,"set_java_generic_services","","",12,null],[11,"get_java_generic_services","","",12,null],[11,"clear_py_generic_services","","",12,null],[11,"has_py_generic_services","","",12,null],[11,"set_py_generic_services","","",12,null],[11,"get_py_generic_services","","",12,null],[11,"clear_deprecated","","",12,null],[11,"has_deprecated","","",12,null],[11,"set_deprecated","","",12,null],[11,"get_deprecated","","",12,null],[11,"clear_uninterpreted_option","","",12,null],[11,"set_uninterpreted_option","","",12,null],[11,"mut_uninterpreted_option","","",12,null],[11,"take_uninterpreted_option","","",12,null],[11,"get_uninterpreted_option","","",12,null],[11,"is_initialized","","",12,null],[11,"merge_from","","",12,null],[11,"compute_size","","",12,null],[11,"write_to_with_cached_sizes","","",12,null],[11,"get_cached_size","","",12,null],[11,"get_unknown_fields","","",12,null],[11,"mut_unknown_fields","","",12,null],[11,"type_id","","",12,null],[11,"as_any","","",12,null],[11,"descriptor","","",12,null],[11,"new","","",12,{"inputs":[],"output":{"name":"fileoptions"}}],[11,"descriptor_static","","",12,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",12,null],[11,"eq","","",12,null],[11,"fmt","","",12,null],[11,"hash","","",13,null],[11,"fmt","","",13,null],[11,"eq","","",13,null],[11,"clone","","",13,null],[11,"value","","",13,null],[11,"from_i32","","",13,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"values","","",13,null],[11,"enum_descriptor_static","","",13,{"inputs":[{"name":"option"}],"output":{"name":"enumdescriptor"}}],[11,"default","","",14,{"inputs":[],"output":{"name":"messageoptions"}}],[11,"clone","","",14,null],[11,"new","","",14,{"inputs":[],"output":{"name":"messageoptions"}}],[11,"default_instance","","",14,{"inputs":[],"output":{"name":"messageoptions"}}],[11,"clear_message_set_wire_format","","",14,null],[11,"has_message_set_wire_format","","",14,null],[11,"set_message_set_wire_format","","",14,null],[11,"get_message_set_wire_format","","",14,null],[11,"clear_no_standard_descriptor_accessor","","",14,null],[11,"has_no_standard_descriptor_accessor","","",14,null],[11,"set_no_standard_descriptor_accessor","","",14,null],[11,"get_no_standard_descriptor_accessor","","",14,null],[11,"clear_deprecated","","",14,null],[11,"has_deprecated","","",14,null],[11,"set_deprecated","","",14,null],[11,"get_deprecated","","",14,null],[11,"clear_uninterpreted_option","","",14,null],[11,"set_uninterpreted_option","","",14,null],[11,"mut_uninterpreted_option","","",14,null],[11,"take_uninterpreted_option","","",14,null],[11,"get_uninterpreted_option","","",14,null],[11,"is_initialized","","",14,null],[11,"merge_from","","",14,null],[11,"compute_size","","",14,null],[11,"write_to_with_cached_sizes","","",14,null],[11,"get_cached_size","","",14,null],[11,"get_unknown_fields","","",14,null],[11,"mut_unknown_fields","","",14,null],[11,"type_id","","",14,null],[11,"as_any","","",14,null],[11,"descriptor","","",14,null],[11,"new","","",14,{"inputs":[],"output":{"name":"messageoptions"}}],[11,"descriptor_static","","",14,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",14,null],[11,"eq","","",14,null],[11,"fmt","","",14,null],[11,"default","","",15,{"inputs":[],"output":{"name":"fieldoptions"}}],[11,"clone","","",15,null],[11,"new","","",15,{"inputs":[],"output":{"name":"fieldoptions"}}],[11,"default_instance","","",15,{"inputs":[],"output":{"name":"fieldoptions"}}],[11,"clear_ctype","","",15,null],[11,"has_ctype","","",15,null],[11,"set_ctype","","",15,null],[11,"get_ctype","","",15,null],[11,"clear_packed","","",15,null],[11,"has_packed","","",15,null],[11,"set_packed","","",15,null],[11,"get_packed","","",15,null],[11,"clear_lazy","","",15,null],[11,"has_lazy","","",15,null],[11,"set_lazy","","",15,null],[11,"get_lazy","","",15,null],[11,"clear_deprecated","","",15,null],[11,"has_deprecated","","",15,null],[11,"set_deprecated","","",15,null],[11,"get_deprecated","","",15,null],[11,"clear_experimental_map_key","","",15,null],[11,"has_experimental_map_key","","",15,null],[11,"set_experimental_map_key","","",15,null],[11,"mut_experimental_map_key","","",15,null],[11,"take_experimental_map_key","","",15,null],[11,"get_experimental_map_key","","",15,null],[11,"clear_weak","","",15,null],[11,"has_weak","","",15,null],[11,"set_weak","","",15,null],[11,"get_weak","","",15,null],[11,"clear_uninterpreted_option","","",15,null],[11,"set_uninterpreted_option","","",15,null],[11,"mut_uninterpreted_option","","",15,null],[11,"take_uninterpreted_option","","",15,null],[11,"get_uninterpreted_option","","",15,null],[11,"is_initialized","","",15,null],[11,"merge_from","","",15,null],[11,"compute_size","","",15,null],[11,"write_to_with_cached_sizes","","",15,null],[11,"get_cached_size","","",15,null],[11,"get_unknown_fields","","",15,null],[11,"mut_unknown_fields","","",15,null],[11,"type_id","","",15,null],[11,"as_any","","",15,null],[11,"descriptor","","",15,null],[11,"new","","",15,{"inputs":[],"output":{"name":"fieldoptions"}}],[11,"descriptor_static","","",15,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",15,null],[11,"eq","","",15,null],[11,"fmt","","",15,null],[11,"hash","","",16,null],[11,"fmt","","",16,null],[11,"eq","","",16,null],[11,"clone","","",16,null],[11,"value","","",16,null],[11,"from_i32","","",16,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"values","","",16,null],[11,"enum_descriptor_static","","",16,{"inputs":[{"name":"option"}],"output":{"name":"enumdescriptor"}}],[11,"default","","",17,{"inputs":[],"output":{"name":"enumoptions"}}],[11,"clone","","",17,null],[11,"new","","",17,{"inputs":[],"output":{"name":"enumoptions"}}],[11,"default_instance","","",17,{"inputs":[],"output":{"name":"enumoptions"}}],[11,"clear_allow_alias","","",17,null],[11,"has_allow_alias","","",17,null],[11,"set_allow_alias","","",17,null],[11,"get_allow_alias","","",17,null],[11,"clear_deprecated","","",17,null],[11,"has_deprecated","","",17,null],[11,"set_deprecated","","",17,null],[11,"get_deprecated","","",17,null],[11,"clear_uninterpreted_option","","",17,null],[11,"set_uninterpreted_option","","",17,null],[11,"mut_uninterpreted_option","","",17,null],[11,"take_uninterpreted_option","","",17,null],[11,"get_uninterpreted_option","","",17,null],[11,"is_initialized","","",17,null],[11,"merge_from","","",17,null],[11,"compute_size","","",17,null],[11,"write_to_with_cached_sizes","","",17,null],[11,"get_cached_size","","",17,null],[11,"get_unknown_fields","","",17,null],[11,"mut_unknown_fields","","",17,null],[11,"type_id","","",17,null],[11,"as_any","","",17,null],[11,"descriptor","","",17,null],[11,"new","","",17,{"inputs":[],"output":{"name":"enumoptions"}}],[11,"descriptor_static","","",17,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",17,null],[11,"eq","","",17,null],[11,"fmt","","",17,null],[11,"default","","",18,{"inputs":[],"output":{"name":"enumvalueoptions"}}],[11,"clone","","",18,null],[11,"new","","",18,{"inputs":[],"output":{"name":"enumvalueoptions"}}],[11,"default_instance","","",18,{"inputs":[],"output":{"name":"enumvalueoptions"}}],[11,"clear_deprecated","","",18,null],[11,"has_deprecated","","",18,null],[11,"set_deprecated","","",18,null],[11,"get_deprecated","","",18,null],[11,"clear_uninterpreted_option","","",18,null],[11,"set_uninterpreted_option","","",18,null],[11,"mut_uninterpreted_option","","",18,null],[11,"take_uninterpreted_option","","",18,null],[11,"get_uninterpreted_option","","",18,null],[11,"is_initialized","","",18,null],[11,"merge_from","","",18,null],[11,"compute_size","","",18,null],[11,"write_to_with_cached_sizes","","",18,null],[11,"get_cached_size","","",18,null],[11,"get_unknown_fields","","",18,null],[11,"mut_unknown_fields","","",18,null],[11,"type_id","","",18,null],[11,"as_any","","",18,null],[11,"descriptor","","",18,null],[11,"new","","",18,{"inputs":[],"output":{"name":"enumvalueoptions"}}],[11,"descriptor_static","","",18,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",18,null],[11,"eq","","",18,null],[11,"fmt","","",18,null],[11,"default","","",19,{"inputs":[],"output":{"name":"serviceoptions"}}],[11,"clone","","",19,null],[11,"new","","",19,{"inputs":[],"output":{"name":"serviceoptions"}}],[11,"default_instance","","",19,{"inputs":[],"output":{"name":"serviceoptions"}}],[11,"clear_deprecated","","",19,null],[11,"has_deprecated","","",19,null],[11,"set_deprecated","","",19,null],[11,"get_deprecated","","",19,null],[11,"clear_uninterpreted_option","","",19,null],[11,"set_uninterpreted_option","","",19,null],[11,"mut_uninterpreted_option","","",19,null],[11,"take_uninterpreted_option","","",19,null],[11,"get_uninterpreted_option","","",19,null],[11,"is_initialized","","",19,null],[11,"merge_from","","",19,null],[11,"compute_size","","",19,null],[11,"write_to_with_cached_sizes","","",19,null],[11,"get_cached_size","","",19,null],[11,"get_unknown_fields","","",19,null],[11,"mut_unknown_fields","","",19,null],[11,"type_id","","",19,null],[11,"as_any","","",19,null],[11,"descriptor","","",19,null],[11,"new","","",19,{"inputs":[],"output":{"name":"serviceoptions"}}],[11,"descriptor_static","","",19,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",19,null],[11,"eq","","",19,null],[11,"fmt","","",19,null],[11,"default","","",20,{"inputs":[],"output":{"name":"methodoptions"}}],[11,"clone","","",20,null],[11,"new","","",20,{"inputs":[],"output":{"name":"methodoptions"}}],[11,"default_instance","","",20,{"inputs":[],"output":{"name":"methodoptions"}}],[11,"clear_deprecated","","",20,null],[11,"has_deprecated","","",20,null],[11,"set_deprecated","","",20,null],[11,"get_deprecated","","",20,null],[11,"clear_uninterpreted_option","","",20,null],[11,"set_uninterpreted_option","","",20,null],[11,"mut_uninterpreted_option","","",20,null],[11,"take_uninterpreted_option","","",20,null],[11,"get_uninterpreted_option","","",20,null],[11,"is_initialized","","",20,null],[11,"merge_from","","",20,null],[11,"compute_size","","",20,null],[11,"write_to_with_cached_sizes","","",20,null],[11,"get_cached_size","","",20,null],[11,"get_unknown_fields","","",20,null],[11,"mut_unknown_fields","","",20,null],[11,"type_id","","",20,null],[11,"as_any","","",20,null],[11,"descriptor","","",20,null],[11,"new","","",20,{"inputs":[],"output":{"name":"methodoptions"}}],[11,"descriptor_static","","",20,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",20,null],[11,"eq","","",20,null],[11,"fmt","","",20,null],[11,"default","","",21,{"inputs":[],"output":{"name":"uninterpretedoption"}}],[11,"clone","","",21,null],[11,"new","","",21,{"inputs":[],"output":{"name":"uninterpretedoption"}}],[11,"default_instance","","",21,{"inputs":[],"output":{"name":"uninterpretedoption"}}],[11,"clear_name","","",21,null],[11,"set_name","","",21,null],[11,"mut_name","","",21,null],[11,"take_name","","",21,null],[11,"get_name","","",21,null],[11,"clear_identifier_value","","",21,null],[11,"has_identifier_value","","",21,null],[11,"set_identifier_value","","",21,null],[11,"mut_identifier_value","","",21,null],[11,"take_identifier_value","","",21,null],[11,"get_identifier_value","","",21,null],[11,"clear_positive_int_value","","",21,null],[11,"has_positive_int_value","","",21,null],[11,"set_positive_int_value","","",21,null],[11,"get_positive_int_value","","",21,null],[11,"clear_negative_int_value","","",21,null],[11,"has_negative_int_value","","",21,null],[11,"set_negative_int_value","","",21,null],[11,"get_negative_int_value","","",21,null],[11,"clear_double_value","","",21,null],[11,"has_double_value","","",21,null],[11,"set_double_value","","",21,null],[11,"get_double_value","","",21,null],[11,"clear_string_value","","",21,null],[11,"has_string_value","","",21,null],[11,"set_string_value","","",21,null],[11,"mut_string_value","","",21,null],[11,"take_string_value","","",21,null],[11,"get_string_value","","",21,null],[11,"clear_aggregate_value","","",21,null],[11,"has_aggregate_value","","",21,null],[11,"set_aggregate_value","","",21,null],[11,"mut_aggregate_value","","",21,null],[11,"take_aggregate_value","","",21,null],[11,"get_aggregate_value","","",21,null],[11,"is_initialized","","",21,null],[11,"merge_from","","",21,null],[11,"compute_size","","",21,null],[11,"write_to_with_cached_sizes","","",21,null],[11,"get_cached_size","","",21,null],[11,"get_unknown_fields","","",21,null],[11,"mut_unknown_fields","","",21,null],[11,"type_id","","",21,null],[11,"as_any","","",21,null],[11,"descriptor","","",21,null],[11,"new","","",21,{"inputs":[],"output":{"name":"uninterpretedoption"}}],[11,"descriptor_static","","",21,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",21,null],[11,"eq","","",21,null],[11,"fmt","","",21,null],[11,"default","","",22,{"inputs":[],"output":{"name":"uninterpretedoption_namepart"}}],[11,"clone","","",22,null],[11,"new","","",22,{"inputs":[],"output":{"name":"uninterpretedoption_namepart"}}],[11,"default_instance","","",22,{"inputs":[],"output":{"name":"uninterpretedoption_namepart"}}],[11,"clear_name_part","","",22,null],[11,"has_name_part","","",22,null],[11,"set_name_part","","",22,null],[11,"mut_name_part","","",22,null],[11,"take_name_part","","",22,null],[11,"get_name_part","","",22,null],[11,"clear_is_extension","","",22,null],[11,"has_is_extension","","",22,null],[11,"set_is_extension","","",22,null],[11,"get_is_extension","","",22,null],[11,"is_initialized","","",22,null],[11,"merge_from","","",22,null],[11,"compute_size","","",22,null],[11,"write_to_with_cached_sizes","","",22,null],[11,"get_cached_size","","",22,null],[11,"get_unknown_fields","","",22,null],[11,"mut_unknown_fields","","",22,null],[11,"type_id","","",22,null],[11,"as_any","","",22,null],[11,"descriptor","","",22,null],[11,"new","","",22,{"inputs":[],"output":{"name":"uninterpretedoption_namepart"}}],[11,"descriptor_static","","",22,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",22,null],[11,"eq","","",22,null],[11,"fmt","","",22,null],[11,"default","","",23,{"inputs":[],"output":{"name":"sourcecodeinfo"}}],[11,"clone","","",23,null],[11,"new","","",23,{"inputs":[],"output":{"name":"sourcecodeinfo"}}],[11,"default_instance","","",23,{"inputs":[],"output":{"name":"sourcecodeinfo"}}],[11,"clear_location","","",23,null],[11,"set_location","","",23,null],[11,"mut_location","","",23,null],[11,"take_location","","",23,null],[11,"get_location","","",23,null],[11,"is_initialized","","",23,null],[11,"merge_from","","",23,null],[11,"compute_size","","",23,null],[11,"write_to_with_cached_sizes","","",23,null],[11,"get_cached_size","","",23,null],[11,"get_unknown_fields","","",23,null],[11,"mut_unknown_fields","","",23,null],[11,"type_id","","",23,null],[11,"as_any","","",23,null],[11,"descriptor","","",23,null],[11,"new","","",23,{"inputs":[],"output":{"name":"sourcecodeinfo"}}],[11,"descriptor_static","","",23,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",23,null],[11,"eq","","",23,null],[11,"fmt","","",23,null],[11,"default","","",24,{"inputs":[],"output":{"name":"sourcecodeinfo_location"}}],[11,"clone","","",24,null],[11,"new","","",24,{"inputs":[],"output":{"name":"sourcecodeinfo_location"}}],[11,"default_instance","","",24,{"inputs":[],"output":{"name":"sourcecodeinfo_location"}}],[11,"clear_path","","",24,null],[11,"set_path","","",24,null],[11,"mut_path","","",24,null],[11,"take_path","","",24,null],[11,"get_path","","",24,null],[11,"clear_span","","",24,null],[11,"set_span","","",24,null],[11,"mut_span","","",24,null],[11,"take_span","","",24,null],[11,"get_span","","",24,null],[11,"clear_leading_comments","","",24,null],[11,"has_leading_comments","","",24,null],[11,"set_leading_comments","","",24,null],[11,"mut_leading_comments","","",24,null],[11,"take_leading_comments","","",24,null],[11,"get_leading_comments","","",24,null],[11,"clear_trailing_comments","","",24,null],[11,"has_trailing_comments","","",24,null],[11,"set_trailing_comments","","",24,null],[11,"mut_trailing_comments","","",24,null],[11,"take_trailing_comments","","",24,null],[11,"get_trailing_comments","","",24,null],[11,"is_initialized","","",24,null],[11,"merge_from","","",24,null],[11,"compute_size","","",24,null],[11,"write_to_with_cached_sizes","","",24,null],[11,"get_cached_size","","",24,null],[11,"get_unknown_fields","","",24,null],[11,"mut_unknown_fields","","",24,null],[11,"type_id","","",24,null],[11,"as_any","","",24,null],[11,"descriptor","","",24,null],[11,"new","","",24,{"inputs":[],"output":{"name":"sourcecodeinfo_location"}}],[11,"descriptor_static","","",24,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",24,null],[11,"eq","","",24,null],[11,"fmt","","",24,null],[11,"default","protobuf::plugin","",25,{"inputs":[],"output":{"name":"codegeneratorrequest"}}],[11,"clone","","",25,null],[11,"new","","",25,{"inputs":[],"output":{"name":"codegeneratorrequest"}}],[11,"default_instance","","",25,{"inputs":[],"output":{"name":"codegeneratorrequest"}}],[11,"clear_file_to_generate","","",25,null],[11,"set_file_to_generate","","",25,null],[11,"mut_file_to_generate","","",25,null],[11,"take_file_to_generate","","",25,null],[11,"get_file_to_generate","","",25,null],[11,"clear_parameter","","",25,null],[11,"has_parameter","","",25,null],[11,"set_parameter","","",25,null],[11,"mut_parameter","","",25,null],[11,"take_parameter","","",25,null],[11,"get_parameter","","",25,null],[11,"clear_proto_file","","",25,null],[11,"set_proto_file","","",25,null],[11,"mut_proto_file","","",25,null],[11,"take_proto_file","","",25,null],[11,"get_proto_file","","",25,null],[11,"is_initialized","","",25,null],[11,"merge_from","","",25,null],[11,"compute_size","","",25,null],[11,"write_to_with_cached_sizes","","",25,null],[11,"get_cached_size","","",25,null],[11,"get_unknown_fields","","",25,null],[11,"mut_unknown_fields","","",25,null],[11,"type_id","","",25,null],[11,"as_any","","",25,null],[11,"descriptor","","",25,null],[11,"new","","",25,{"inputs":[],"output":{"name":"codegeneratorrequest"}}],[11,"descriptor_static","","",25,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",25,null],[11,"eq","","",25,null],[11,"fmt","","",25,null],[11,"default","","",26,{"inputs":[],"output":{"name":"codegeneratorresponse"}}],[11,"clone","","",26,null],[11,"new","","",26,{"inputs":[],"output":{"name":"codegeneratorresponse"}}],[11,"default_instance","","",26,{"inputs":[],"output":{"name":"codegeneratorresponse"}}],[11,"clear_error","","",26,null],[11,"has_error","","",26,null],[11,"set_error","","",26,null],[11,"mut_error","","",26,null],[11,"take_error","","",26,null],[11,"get_error","","",26,null],[11,"clear_file","","",26,null],[11,"set_file","","",26,null],[11,"mut_file","","",26,null],[11,"take_file","","",26,null],[11,"get_file","","",26,null],[11,"is_initialized","","",26,null],[11,"merge_from","","",26,null],[11,"compute_size","","",26,null],[11,"write_to_with_cached_sizes","","",26,null],[11,"get_cached_size","","",26,null],[11,"get_unknown_fields","","",26,null],[11,"mut_unknown_fields","","",26,null],[11,"type_id","","",26,null],[11,"as_any","","",26,null],[11,"descriptor","","",26,null],[11,"new","","",26,{"inputs":[],"output":{"name":"codegeneratorresponse"}}],[11,"descriptor_static","","",26,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",26,null],[11,"eq","","",26,null],[11,"fmt","","",26,null],[11,"default","","",27,{"inputs":[],"output":{"name":"codegeneratorresponse_file"}}],[11,"clone","","",27,null],[11,"new","","",27,{"inputs":[],"output":{"name":"codegeneratorresponse_file"}}],[11,"default_instance","","",27,{"inputs":[],"output":{"name":"codegeneratorresponse_file"}}],[11,"clear_name","","",27,null],[11,"has_name","","",27,null],[11,"set_name","","",27,null],[11,"mut_name","","",27,null],[11,"take_name","","",27,null],[11,"get_name","","",27,null],[11,"clear_insertion_point","","",27,null],[11,"has_insertion_point","","",27,null],[11,"set_insertion_point","","",27,null],[11,"mut_insertion_point","","",27,null],[11,"take_insertion_point","","",27,null],[11,"get_insertion_point","","",27,null],[11,"clear_content","","",27,null],[11,"has_content","","",27,null],[11,"set_content","","",27,null],[11,"mut_content","","",27,null],[11,"take_content","","",27,null],[11,"get_content","","",27,null],[11,"is_initialized","","",27,null],[11,"merge_from","","",27,null],[11,"compute_size","","",27,null],[11,"write_to_with_cached_sizes","","",27,null],[11,"get_cached_size","","",27,null],[11,"get_unknown_fields","","",27,null],[11,"mut_unknown_fields","","",27,null],[11,"type_id","","",27,null],[11,"as_any","","",27,null],[11,"descriptor","","",27,null],[11,"new","","",27,{"inputs":[],"output":{"name":"codegeneratorresponse_file"}}],[11,"descriptor_static","","",27,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",27,null],[11,"eq","","",27,null],[11,"fmt","","",27,null],[11,"get","protobuf::lazy","",28,null],[11,"new","protobuf::code_writer","",29,{"inputs":[{"name":"write"}],"output":{"name":"codewriter"}}],[11,"write_line","","",29,null],[11,"todo","","",29,null],[11,"indented","","",29,null],[11,"commented","","",29,null],[11,"lazy_static","","",29,null],[11,"lazy_static_decl_get","","",29,null],[11,"block","","",29,null],[11,"expr_block","","",29,null],[11,"stmt_block","","",29,null],[11,"unsafe_expr","","",29,null],[11,"impl_self_block","","",29,null],[11,"impl_for_block","","",29,null],[11,"unsafe_impl","","",29,null],[11,"pub_struct","","",29,null],[11,"pub_enum","","",29,null],[11,"field_entry","","",29,null],[11,"field_decl","","",29,null],[11,"derive","","",29,null],[11,"allow","","",29,null],[11,"comment","","",29,null],[11,"pub_fn","","",29,null],[11,"def_fn","","",29,null],[11,"while_block","","",29,null],[11,"if_stmt","","",29,null],[11,"if_else_stmt","","",29,null],[11,"if_let_stmt","","",29,null],[11,"if_let_else_stmt","","",29,null],[11,"for_stmt","","",29,null],[11,"match_block","","",29,null],[11,"match_expr","","",29,null],[11,"case_block","","",29,null],[11,"case_expr","","",29,null],[11,"error_unexpected_wire_type","","",29,null],[11,"assert_wire_type","","",29,null],[11,"eq","protobuf::codegen","",30,null],[11,"ne","","",30,null],[11,"clone","","",30,null],[11,"fmt","","",30,null],[11,"clear","protobuf::repeated","",31,null],[11,"clear","","",31,null],[11,"default","","",31,{"inputs":[],"output":{"name":"repeatedfield"}}],[11,"new","","",31,{"inputs":[],"output":{"name":"repeatedfield"}}],[11,"from_vec","","",31,{"inputs":[{"name":"vec"}],"output":{"name":"repeatedfield"}}],[11,"into_vec","","",31,null],[11,"capacity","","",31,null],[11,"as_mut_slice","","",31,null],[11,"slice","","",31,null],[11,"slice_mut","","",31,null],[11,"slice_from","","",31,null],[11,"slice_from_mut","","",31,null],[11,"slice_to","","",31,null],[11,"slice_to_mut","","",31,null],[11,"split_at","","",31,null],[11,"split_at_mut","","",31,null],[11,"tail","","",31,null],[11,"last","","",31,null],[11,"last_mut","","",31,null],[11,"init","","",31,null],[11,"push","","",31,null],[11,"pop","","",31,null],[11,"insert","","",31,null],[11,"remove","","",31,null],[11,"truncate","","",31,null],[11,"reverse","","",31,null],[11,"into_iter","","",31,null],[11,"iter","","",31,null],[11,"iter_mut","","",31,null],[11,"sort_by","","",31,null],[11,"as_ptr","","",31,null],[11,"as_mut_ptr","","",31,null],[11,"push_default","","",31,null],[11,"from_slice","","",31,null],[11,"clone","","",31,null],[11,"from_iter","","",31,{"inputs":[{"name":"i"}],"output":{"name":"repeatedfield"}}],[11,"eq","","",31,null],[11,"contains","","",31,null],[11,"hash","","",31,null],[11,"as_ref","","",31,null],[11,"borrow","","",31,null],[11,"deref","","",31,null],[11,"deref_mut","","",31,null],[11,"index","","",31,null],[11,"index_mut","","",31,null],[11,"fmt","","",31,null],[11,"some","protobuf::singular","",32,{"inputs":[{"name":"t"}],"output":{"name":"singularfield"}}],[11,"is_some","","",32,null],[11,"is_none","","",32,null],[11,"into_option","","",32,null],[11,"as_ref","","",32,null],[11,"as_mut","","",32,null],[11,"get_ref","","",32,null],[11,"get_mut_ref","","",32,null],[11,"unwrap","","",32,null],[11,"unwrap_or","","",32,null],[11,"unwrap_or_else","","",32,null],[11,"map","","",32,null],[11,"iter","","",32,null],[11,"mut_iter","","",32,null],[11,"clear","","",32,null],[11,"none","","",32,{"inputs":[],"output":{"name":"singularfield"}}],[11,"from_option","","",32,{"inputs":[{"name":"option"}],"output":{"name":"singularfield"}}],[11,"take","","",32,null],[11,"some","","",33,{"inputs":[{"name":"t"}],"output":{"name":"singularptrfield"}}],[11,"none","","",33,{"inputs":[],"output":{"name":"singularptrfield"}}],[11,"from_option","","",33,{"inputs":[{"name":"option"}],"output":{"name":"singularptrfield"}}],[11,"is_some","","",33,null],[11,"is_none","","",33,null],[11,"into_option","","",33,null],[11,"as_ref","","",33,null],[11,"as_mut","","",33,null],[11,"get_ref","","",33,null],[11,"get_mut_ref","","",33,null],[11,"unwrap","","",33,null],[11,"unwrap_or","","",33,null],[11,"unwrap_or_else","","",33,null],[11,"map","","",33,null],[11,"iter","","",33,null],[11,"mut_iter","","",33,null],[11,"take","","",33,null],[11,"clear","","",33,null],[11,"unwrap_or_default","","",32,null],[11,"set_default","","",32,null],[11,"unwrap_or_default","","",33,null],[11,"set_default","","",33,null],[11,"default","","",32,{"inputs":[],"output":{"name":"singularfield"}}],[11,"default","","",33,{"inputs":[],"output":{"name":"singularptrfield"}}],[11,"clone","","",32,null],[11,"clone","","",33,null],[11,"fmt","","",32,null],[11,"fmt","","",33,null],[11,"eq","","",32,null],[11,"eq","","",33,null],[11,"hash","","",32,null],[11,"hash","","",33,null],[11,"clear","core::option","",34,null],[11,"clear","collections::string","",35,null],[11,"clear","collections::vec","",36,null],[11,"proto","protobuf::reflect","",37,null],[11,"name","","",37,null],[11,"is_repeated","","",37,null],[11,"has_field","","",37,null],[11,"len_field","","",37,null],[11,"get_message","","",37,null],[11,"get_rep_message_item","","",37,null],[11,"get_enum","","",37,null],[11,"get_rep_enum_item","","",37,null],[11,"get_str","","",37,null],[11,"get_rep_str","","",37,null],[11,"get_rep_str_item","","",37,null],[11,"get_bytes","","",37,null],[11,"get_rep_bytes","","",37,null],[11,"get_rep_bytes_item","","",37,null],[11,"get_u32","","",37,null],[11,"get_rep_u32","","",37,null],[11,"get_u64","","",37,null],[11,"get_rep_u64","","",37,null],[11,"get_i32","","",37,null],[11,"get_rep_i32","","",37,null],[11,"get_i64","","",37,null],[11,"get_rep_i64","","",37,null],[11,"get_bool","","",37,null],[11,"get_rep_bool","","",37,null],[11,"get_f32","","",37,null],[11,"get_rep_f32","","",37,null],[11,"get_f64","","",37,null],[11,"get_rep_f64","","",37,null],[11,"for_type","","",38,{"inputs":[],"output":{"name":"messagedescriptor"}}],[11,"new","","",38,{"inputs":[{"name":"str"},{"name":"vec"},{"name":"filedescriptorproto"}],"output":{"name":"messagedescriptor"}}],[11,"new_instance","","",38,null],[11,"name","","",38,null],[11,"full_name","","",38,null],[11,"fields","","",38,null],[11,"field_by_name","","",38,null],[11,"field_by_number","","",38,null],[11,"clone","","",39,null],[11,"name","","",39,null],[11,"value","","",39,null],[11,"name","","",40,null],[11,"for_type","","",40,{"inputs":[],"output":{"name":"enumdescriptor"}}],[11,"new","","",40,{"inputs":[{"name":"str"},{"name":"filedescriptorproto"}],"output":{"name":"enumdescriptor"}}],[11,"value_by_name","","",40,null],[11,"value_by_number","","",40,null],[11,"fmt","protobuf::stream::wire_format","",41,null],[11,"clone","","",41,null],[11,"eq","","",41,null],[11,"new","","",41,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"clone","","",42,null],[11,"value","","",42,null],[11,"new","","",42,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"make","","",42,{"inputs":[{"name":"u32"},{"name":"wiretype"}],"output":{"name":"tag"}}],[11,"unpack","","",42,null],[11,"field_number","","",42,null],[11,"new","protobuf::stream","",43,{"inputs":[{"name":"read"}],"output":{"name":"codedinputstream"}}],[11,"from_buffered_reader","","",43,{"inputs":[{"name":"bufread"}],"output":{"name":"codedinputstream"}}],[11,"from_bytes","","",43,null],[11,"pos","","",43,null],[11,"bytes_until_limit","","",43,null],[11,"read","","",43,null],[11,"read_raw_byte","","",43,null],[11,"push_limit","","",43,null],[11,"pop_limit","","",43,null],[11,"eof","","",43,null],[11,"check_eof","","",43,null],[11,"read_raw_varint64","","",43,null],[11,"read_raw_varint32","","",43,null],[11,"read_raw_little_endian32","","",43,null],[11,"read_raw_little_endian64","","",43,null],[11,"read_tag","","",43,null],[11,"read_tag_unpack","","",43,null],[11,"read_double","","",43,null],[11,"read_float","","",43,null],[11,"read_int64","","",43,null],[11,"read_int32","","",43,null],[11,"read_uint64","","",43,null],[11,"read_uint32","","",43,null],[11,"read_sint64","","",43,null],[11,"read_sint32","","",43,null],[11,"read_fixed64","","",43,null],[11,"read_fixed32","","",43,null],[11,"read_sfixed64","","",43,null],[11,"read_sfixed32","","",43,null],[11,"read_bool","","",43,null],[11,"read_enum","","",43,null],[11,"read_repeated_packed_double_into","","",43,null],[11,"read_repeated_packed_float_into","","",43,null],[11,"read_repeated_packed_int64_into","","",43,null],[11,"read_repeated_packed_int32_into","","",43,null],[11,"read_repeated_packed_uint64_into","","",43,null],[11,"read_repeated_packed_uint32_into","","",43,null],[11,"read_repeated_packed_sint64_into","","",43,null],[11,"read_repeated_packed_sint32_into","","",43,null],[11,"read_repeated_packed_fixed64_into","","",43,null],[11,"read_repeated_packed_fixed32_into","","",43,null],[11,"read_repeated_packed_sfixed64_into","","",43,null],[11,"read_repeated_packed_sfixed32_into","","",43,null],[11,"read_repeated_packed_bool_into","","",43,null],[11,"read_repeated_packed_enum_into","","",43,null],[11,"read_unknown","","",43,null],[11,"skip_field","","",43,null],[11,"read_raw_bytes_into","","Read raw bytes into the supplied vector.  The vector will be resized as needed and\noverwritten.",43,null],[11,"read_raw_bytes","","Read exact number of bytes",43,null],[11,"skip_raw_bytes","","",43,null],[11,"read_bytes","","",43,null],[11,"read_bytes_into","","",43,null],[11,"read_string","","",43,null],[11,"read_string_into","","",43,null],[11,"merge_message","","",43,null],[11,"read_message","","",43,null],[11,"new","","",44,{"inputs":[{"name":"write"}],"output":{"name":"codedoutputstream"}}],[11,"flush","","",44,null],[11,"write_raw_byte","","",44,null],[11,"write_raw_bytes","","",44,null],[11,"write_tag","","",44,null],[11,"write_raw_varint32","","",44,null],[11,"write_raw_varint64","","",44,null],[11,"write_raw_little_endian32","","",44,null],[11,"write_raw_little_endian64","","",44,null],[11,"write_float_no_tag","","",44,null],[11,"write_double_no_tag","","",44,null],[11,"write_float","","",44,null],[11,"write_double","","",44,null],[11,"write_uint64_no_tag","","",44,null],[11,"write_uint32_no_tag","","",44,null],[11,"write_int64_no_tag","","",44,null],[11,"write_int32_no_tag","","",44,null],[11,"write_sint64_no_tag","","",44,null],[11,"write_sint32_no_tag","","",44,null],[11,"write_fixed64_no_tag","","",44,null],[11,"write_fixed32_no_tag","","",44,null],[11,"write_sfixed64_no_tag","","",44,null],[11,"write_sfixed32_no_tag","","",44,null],[11,"write_bool_no_tag","","",44,null],[11,"write_enum_no_tag","","",44,null],[11,"write_enum_obj_no_tag","","",44,null],[11,"write_unknown_no_tag","","",44,null],[11,"write_uint64","","",44,null],[11,"write_uint32","","",44,null],[11,"write_int64","","",44,null],[11,"write_int32","","",44,null],[11,"write_sint64","","",44,null],[11,"write_sint32","","",44,null],[11,"write_fixed64","","",44,null],[11,"write_fixed32","","",44,null],[11,"write_sfixed64","","",44,null],[11,"write_sfixed32","","",44,null],[11,"write_bool","","",44,null],[11,"write_enum","","",44,null],[11,"write_enum_obj","","",44,null],[11,"write_unknown","","",44,null],[11,"write_unknown_fields","","",44,null],[11,"write_bytes_no_tag","","",44,null],[11,"write_string_no_tag","","",44,null],[11,"write_message_no_tag","","",44,null],[11,"write_bytes","","",44,null],[11,"write_string","","",44,null],[11,"write_message","","",44,null],[11,"fmt","protobuf::error","",45,null],[11,"message_not_initialized","","",45,{"inputs":[{"name":"str"}],"output":{"name":"protobuferror"}}],[11,"fmt","","",45,null],[11,"description","","",45,null],[11,"cause","","",45,null],[11,"fmt","protobuf::unknown","",46,null],[11,"wire_type","","",46,null],[11,"get_ref","","",46,null],[11,"wire_type","","",47,null],[11,"default","","",48,{"inputs":[],"output":{"name":"unknownvalues"}}],[11,"fmt","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"clone","","",48,null],[11,"add_value","","",48,null],[11,"iter","","",48,null],[11,"next","","",49,null],[11,"default","","",50,{"inputs":[],"output":{"name":"unknownfields"}}],[11,"fmt","","",50,null],[11,"eq","","",50,null],[11,"ne","","",50,null],[11,"clone","","",50,null],[11,"new","","",50,{"inputs":[],"output":{"name":"unknownfields"}}],[11,"add_fixed32","","",50,null],[11,"add_fixed64","","",50,null],[11,"add_varint","","",50,null],[11,"add_length_delimited","","",50,null],[11,"add_value","","",50,null],[11,"iter","","",50,null],[11,"clear","","",50,null],[11,"next","","",51,null],[8,"Message","roboime_next_protocol","",null,null],[10,"descriptor","","",52,null],[10,"is_initialized","","",52,null],[10,"merge_from","","",52,null],[10,"write_to_with_cached_sizes","","",52,null],[10,"compute_size","","",52,null],[10,"get_cached_size","","",52,null],[11,"write_to","","",52,null],[11,"write_length_delimited_to","","",52,null],[11,"merge_from_bytes","","",52,null],[11,"check_initialized","","",52,null],[11,"write_to_writer","","",52,null],[11,"write_to_vec","","",52,null],[11,"write_to_bytes","","",52,null],[11,"write_length_delimited_to_writer","","",52,null],[11,"write_length_delimited_to_bytes","","",52,null],[10,"get_unknown_fields","","",52,null],[10,"mut_unknown_fields","","",52,null],[10,"type_id","","",52,null],[10,"as_any","","",52,null],[4,"ProtobufError","","",null,null],[13,"IoError","","",45,null],[13,"WireError","","",45,null],[13,"MessageNotInitialized","","",45,null],[12,"message","roboime_next_protocol::ProtobufError","",45,null],[0,"grSim_Commands","roboime_next_protocol","",null,null],[3,"grSim_Robot_Command","roboime_next_protocol::grSim_Commands","",null,null],[3,"grSim_Commands","","",null,null],[5,"file_descriptor_proto","","",null,{"inputs":[],"output":{"name":"filedescriptorproto"}}],[11,"default","","",53,{"inputs":[],"output":{"name":"grsim_robot_command"}}],[11,"clone","","",53,null],[11,"new","","",53,{"inputs":[],"output":{"name":"grsim_robot_command"}}],[11,"default_instance","","",53,{"inputs":[],"output":{"name":"grsim_robot_command"}}],[11,"clear_id","","",53,null],[11,"has_id","","",53,null],[11,"set_id","","",53,null],[11,"get_id","","",53,null],[11,"clear_kickspeedx","","",53,null],[11,"has_kickspeedx","","",53,null],[11,"set_kickspeedx","","",53,null],[11,"get_kickspeedx","","",53,null],[11,"clear_kickspeedz","","",53,null],[11,"has_kickspeedz","","",53,null],[11,"set_kickspeedz","","",53,null],[11,"get_kickspeedz","","",53,null],[11,"clear_veltangent","","",53,null],[11,"has_veltangent","","",53,null],[11,"set_veltangent","","",53,null],[11,"get_veltangent","","",53,null],[11,"clear_velnormal","","",53,null],[11,"has_velnormal","","",53,null],[11,"set_velnormal","","",53,null],[11,"get_velnormal","","",53,null],[11,"clear_velangular","","",53,null],[11,"has_velangular","","",53,null],[11,"set_velangular","","",53,null],[11,"get_velangular","","",53,null],[11,"clear_spinner","","",53,null],[11,"has_spinner","","",53,null],[11,"set_spinner","","",53,null],[11,"get_spinner","","",53,null],[11,"clear_wheelsspeed","","",53,null],[11,"has_wheelsspeed","","",53,null],[11,"set_wheelsspeed","","",53,null],[11,"get_wheelsspeed","","",53,null],[11,"clear_wheel1","","",53,null],[11,"has_wheel1","","",53,null],[11,"set_wheel1","","",53,null],[11,"get_wheel1","","",53,null],[11,"clear_wheel2","","",53,null],[11,"has_wheel2","","",53,null],[11,"set_wheel2","","",53,null],[11,"get_wheel2","","",53,null],[11,"clear_wheel3","","",53,null],[11,"has_wheel3","","",53,null],[11,"set_wheel3","","",53,null],[11,"get_wheel3","","",53,null],[11,"clear_wheel4","","",53,null],[11,"has_wheel4","","",53,null],[11,"set_wheel4","","",53,null],[11,"get_wheel4","","",53,null],[11,"is_initialized","","",53,null],[11,"merge_from","","",53,null],[11,"compute_size","","",53,null],[11,"write_to_with_cached_sizes","","",53,null],[11,"get_cached_size","","",53,null],[11,"get_unknown_fields","","",53,null],[11,"mut_unknown_fields","","",53,null],[11,"type_id","","",53,null],[11,"as_any","","",53,null],[11,"descriptor","","",53,null],[11,"new","","",53,{"inputs":[],"output":{"name":"grsim_robot_command"}}],[11,"descriptor_static","","",53,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",53,null],[11,"eq","","",53,null],[11,"fmt","","",53,null],[11,"default","","",54,{"inputs":[],"output":{"name":"grsim_commands"}}],[11,"clone","","",54,null],[11,"new","","",54,{"inputs":[],"output":{"name":"grsim_commands"}}],[11,"default_instance","","",54,{"inputs":[],"output":{"name":"grsim_commands"}}],[11,"clear_timestamp","","",54,null],[11,"has_timestamp","","",54,null],[11,"set_timestamp","","",54,null],[11,"get_timestamp","","",54,null],[11,"clear_isteamyellow","","",54,null],[11,"has_isteamyellow","","",54,null],[11,"set_isteamyellow","","",54,null],[11,"get_isteamyellow","","",54,null],[11,"clear_robot_commands","","",54,null],[11,"set_robot_commands","","",54,null],[11,"mut_robot_commands","","",54,null],[11,"take_robot_commands","","",54,null],[11,"get_robot_commands","","",54,null],[11,"is_initialized","","",54,null],[11,"merge_from","","",54,null],[11,"compute_size","","",54,null],[11,"write_to_with_cached_sizes","","",54,null],[11,"get_cached_size","","",54,null],[11,"get_unknown_fields","","",54,null],[11,"mut_unknown_fields","","",54,null],[11,"type_id","","",54,null],[11,"as_any","","",54,null],[11,"descriptor","","",54,null],[11,"new","","",54,{"inputs":[],"output":{"name":"grsim_commands"}}],[11,"descriptor_static","","",54,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",54,null],[11,"eq","","",54,null],[11,"fmt","","",54,null],[0,"grSim_Packet","roboime_next_protocol","",null,null],[3,"grSim_Packet","roboime_next_protocol::grSim_Packet","",null,null],[5,"file_descriptor_proto","","",null,{"inputs":[],"output":{"name":"filedescriptorproto"}}],[11,"default","","",55,{"inputs":[],"output":{"name":"grsim_packet"}}],[11,"clone","","",55,null],[11,"new","","",55,{"inputs":[],"output":{"name":"grsim_packet"}}],[11,"default_instance","","",55,{"inputs":[],"output":{"name":"grsim_packet"}}],[11,"clear_commands","","",55,null],[11,"has_commands","","",55,null],[11,"set_commands","","",55,null],[11,"mut_commands","","",55,null],[11,"take_commands","","",55,null],[11,"get_commands","","",55,null],[11,"clear_replacement","","",55,null],[11,"has_replacement","","",55,null],[11,"set_replacement","","",55,null],[11,"mut_replacement","","",55,null],[11,"take_replacement","","",55,null],[11,"get_replacement","","",55,null],[11,"is_initialized","","",55,null],[11,"merge_from","","",55,null],[11,"compute_size","","",55,null],[11,"write_to_with_cached_sizes","","",55,null],[11,"get_cached_size","","",55,null],[11,"get_unknown_fields","","",55,null],[11,"mut_unknown_fields","","",55,null],[11,"type_id","","",55,null],[11,"as_any","","",55,null],[11,"descriptor","","",55,null],[11,"new","","",55,{"inputs":[],"output":{"name":"grsim_packet"}}],[11,"descriptor_static","","",55,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",55,null],[11,"eq","","",55,null],[11,"fmt","","",55,null],[0,"grSim_Replacement","roboime_next_protocol","",null,null],[3,"grSim_RobotReplacement","roboime_next_protocol::grSim_Replacement","",null,null],[3,"grSim_BallReplacement","","",null,null],[3,"grSim_Replacement","","",null,null],[5,"file_descriptor_proto","","",null,{"inputs":[],"output":{"name":"filedescriptorproto"}}],[11,"default","","",56,{"inputs":[],"output":{"name":"grsim_robotreplacement"}}],[11,"clone","","",56,null],[11,"new","","",56,{"inputs":[],"output":{"name":"grsim_robotreplacement"}}],[11,"default_instance","","",56,{"inputs":[],"output":{"name":"grsim_robotreplacement"}}],[11,"clear_x","","",56,null],[11,"has_x","","",56,null],[11,"set_x","","",56,null],[11,"get_x","","",56,null],[11,"clear_y","","",56,null],[11,"has_y","","",56,null],[11,"set_y","","",56,null],[11,"get_y","","",56,null],[11,"clear_dir","","",56,null],[11,"has_dir","","",56,null],[11,"set_dir","","",56,null],[11,"get_dir","","",56,null],[11,"clear_id","","",56,null],[11,"has_id","","",56,null],[11,"set_id","","",56,null],[11,"get_id","","",56,null],[11,"clear_yellowteam","","",56,null],[11,"has_yellowteam","","",56,null],[11,"set_yellowteam","","",56,null],[11,"get_yellowteam","","",56,null],[11,"is_initialized","","",56,null],[11,"merge_from","","",56,null],[11,"compute_size","","",56,null],[11,"write_to_with_cached_sizes","","",56,null],[11,"get_cached_size","","",56,null],[11,"get_unknown_fields","","",56,null],[11,"mut_unknown_fields","","",56,null],[11,"type_id","","",56,null],[11,"as_any","","",56,null],[11,"descriptor","","",56,null],[11,"new","","",56,{"inputs":[],"output":{"name":"grsim_robotreplacement"}}],[11,"descriptor_static","","",56,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",56,null],[11,"eq","","",56,null],[11,"fmt","","",56,null],[11,"default","","",57,{"inputs":[],"output":{"name":"grsim_ballreplacement"}}],[11,"clone","","",57,null],[11,"new","","",57,{"inputs":[],"output":{"name":"grsim_ballreplacement"}}],[11,"default_instance","","",57,{"inputs":[],"output":{"name":"grsim_ballreplacement"}}],[11,"clear_x","","",57,null],[11,"has_x","","",57,null],[11,"set_x","","",57,null],[11,"get_x","","",57,null],[11,"clear_y","","",57,null],[11,"has_y","","",57,null],[11,"set_y","","",57,null],[11,"get_y","","",57,null],[11,"clear_vx","","",57,null],[11,"has_vx","","",57,null],[11,"set_vx","","",57,null],[11,"get_vx","","",57,null],[11,"clear_vy","","",57,null],[11,"has_vy","","",57,null],[11,"set_vy","","",57,null],[11,"get_vy","","",57,null],[11,"is_initialized","","",57,null],[11,"merge_from","","",57,null],[11,"compute_size","","",57,null],[11,"write_to_with_cached_sizes","","",57,null],[11,"get_cached_size","","",57,null],[11,"get_unknown_fields","","",57,null],[11,"mut_unknown_fields","","",57,null],[11,"type_id","","",57,null],[11,"as_any","","",57,null],[11,"descriptor","","",57,null],[11,"new","","",57,{"inputs":[],"output":{"name":"grsim_ballreplacement"}}],[11,"descriptor_static","","",57,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",57,null],[11,"eq","","",57,null],[11,"fmt","","",57,null],[11,"default","","",58,{"inputs":[],"output":{"name":"grsim_replacement"}}],[11,"clone","","",58,null],[11,"new","","",58,{"inputs":[],"output":{"name":"grsim_replacement"}}],[11,"default_instance","","",58,{"inputs":[],"output":{"name":"grsim_replacement"}}],[11,"clear_ball","","",58,null],[11,"has_ball","","",58,null],[11,"set_ball","","",58,null],[11,"mut_ball","","",58,null],[11,"take_ball","","",58,null],[11,"get_ball","","",58,null],[11,"clear_robots","","",58,null],[11,"set_robots","","",58,null],[11,"mut_robots","","",58,null],[11,"take_robots","","",58,null],[11,"get_robots","","",58,null],[11,"is_initialized","","",58,null],[11,"merge_from","","",58,null],[11,"compute_size","","",58,null],[11,"write_to_with_cached_sizes","","",58,null],[11,"get_cached_size","","",58,null],[11,"get_unknown_fields","","",58,null],[11,"mut_unknown_fields","","",58,null],[11,"type_id","","",58,null],[11,"as_any","","",58,null],[11,"descriptor","","",58,null],[11,"new","","",58,{"inputs":[],"output":{"name":"grsim_replacement"}}],[11,"descriptor_static","","",58,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",58,null],[11,"eq","","",58,null],[11,"fmt","","",58,null],[0,"messages_robocup_ssl_detection","roboime_next_protocol","",null,null],[3,"SSL_DetectionBall","roboime_next_protocol::messages_robocup_ssl_detection","",null,null],[3,"SSL_DetectionRobot","","",null,null],[3,"SSL_DetectionFrame","","",null,null],[5,"file_descriptor_proto","","",null,{"inputs":[],"output":{"name":"filedescriptorproto"}}],[11,"default","","",59,{"inputs":[],"output":{"name":"ssl_detectionball"}}],[11,"clone","","",59,null],[11,"new","","",59,{"inputs":[],"output":{"name":"ssl_detectionball"}}],[11,"default_instance","","",59,{"inputs":[],"output":{"name":"ssl_detectionball"}}],[11,"clear_confidence","","",59,null],[11,"has_confidence","","",59,null],[11,"set_confidence","","",59,null],[11,"get_confidence","","",59,null],[11,"clear_area","","",59,null],[11,"has_area","","",59,null],[11,"set_area","","",59,null],[11,"get_area","","",59,null],[11,"clear_x","","",59,null],[11,"has_x","","",59,null],[11,"set_x","","",59,null],[11,"get_x","","",59,null],[11,"clear_y","","",59,null],[11,"has_y","","",59,null],[11,"set_y","","",59,null],[11,"get_y","","",59,null],[11,"clear_z","","",59,null],[11,"has_z","","",59,null],[11,"set_z","","",59,null],[11,"get_z","","",59,null],[11,"clear_pixel_x","","",59,null],[11,"has_pixel_x","","",59,null],[11,"set_pixel_x","","",59,null],[11,"get_pixel_x","","",59,null],[11,"clear_pixel_y","","",59,null],[11,"has_pixel_y","","",59,null],[11,"set_pixel_y","","",59,null],[11,"get_pixel_y","","",59,null],[11,"is_initialized","","",59,null],[11,"merge_from","","",59,null],[11,"compute_size","","",59,null],[11,"write_to_with_cached_sizes","","",59,null],[11,"get_cached_size","","",59,null],[11,"get_unknown_fields","","",59,null],[11,"mut_unknown_fields","","",59,null],[11,"type_id","","",59,null],[11,"as_any","","",59,null],[11,"descriptor","","",59,null],[11,"new","","",59,{"inputs":[],"output":{"name":"ssl_detectionball"}}],[11,"descriptor_static","","",59,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",59,null],[11,"eq","","",59,null],[11,"fmt","","",59,null],[11,"default","","",60,{"inputs":[],"output":{"name":"ssl_detectionrobot"}}],[11,"clone","","",60,null],[11,"new","","",60,{"inputs":[],"output":{"name":"ssl_detectionrobot"}}],[11,"default_instance","","",60,{"inputs":[],"output":{"name":"ssl_detectionrobot"}}],[11,"clear_confidence","","",60,null],[11,"has_confidence","","",60,null],[11,"set_confidence","","",60,null],[11,"get_confidence","","",60,null],[11,"clear_robot_id","","",60,null],[11,"has_robot_id","","",60,null],[11,"set_robot_id","","",60,null],[11,"get_robot_id","","",60,null],[11,"clear_x","","",60,null],[11,"has_x","","",60,null],[11,"set_x","","",60,null],[11,"get_x","","",60,null],[11,"clear_y","","",60,null],[11,"has_y","","",60,null],[11,"set_y","","",60,null],[11,"get_y","","",60,null],[11,"clear_orientation","","",60,null],[11,"has_orientation","","",60,null],[11,"set_orientation","","",60,null],[11,"get_orientation","","",60,null],[11,"clear_pixel_x","","",60,null],[11,"has_pixel_x","","",60,null],[11,"set_pixel_x","","",60,null],[11,"get_pixel_x","","",60,null],[11,"clear_pixel_y","","",60,null],[11,"has_pixel_y","","",60,null],[11,"set_pixel_y","","",60,null],[11,"get_pixel_y","","",60,null],[11,"clear_height","","",60,null],[11,"has_height","","",60,null],[11,"set_height","","",60,null],[11,"get_height","","",60,null],[11,"is_initialized","","",60,null],[11,"merge_from","","",60,null],[11,"compute_size","","",60,null],[11,"write_to_with_cached_sizes","","",60,null],[11,"get_cached_size","","",60,null],[11,"get_unknown_fields","","",60,null],[11,"mut_unknown_fields","","",60,null],[11,"type_id","","",60,null],[11,"as_any","","",60,null],[11,"descriptor","","",60,null],[11,"new","","",60,{"inputs":[],"output":{"name":"ssl_detectionrobot"}}],[11,"descriptor_static","","",60,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",60,null],[11,"eq","","",60,null],[11,"fmt","","",60,null],[11,"default","","",61,{"inputs":[],"output":{"name":"ssl_detectionframe"}}],[11,"clone","","",61,null],[11,"new","","",61,{"inputs":[],"output":{"name":"ssl_detectionframe"}}],[11,"default_instance","","",61,{"inputs":[],"output":{"name":"ssl_detectionframe"}}],[11,"clear_frame_number","","",61,null],[11,"has_frame_number","","",61,null],[11,"set_frame_number","","",61,null],[11,"get_frame_number","","",61,null],[11,"clear_t_capture","","",61,null],[11,"has_t_capture","","",61,null],[11,"set_t_capture","","",61,null],[11,"get_t_capture","","",61,null],[11,"clear_t_sent","","",61,null],[11,"has_t_sent","","",61,null],[11,"set_t_sent","","",61,null],[11,"get_t_sent","","",61,null],[11,"clear_camera_id","","",61,null],[11,"has_camera_id","","",61,null],[11,"set_camera_id","","",61,null],[11,"get_camera_id","","",61,null],[11,"clear_balls","","",61,null],[11,"set_balls","","",61,null],[11,"mut_balls","","",61,null],[11,"take_balls","","",61,null],[11,"get_balls","","",61,null],[11,"clear_robots_yellow","","",61,null],[11,"set_robots_yellow","","",61,null],[11,"mut_robots_yellow","","",61,null],[11,"take_robots_yellow","","",61,null],[11,"get_robots_yellow","","",61,null],[11,"clear_robots_blue","","",61,null],[11,"set_robots_blue","","",61,null],[11,"mut_robots_blue","","",61,null],[11,"take_robots_blue","","",61,null],[11,"get_robots_blue","","",61,null],[11,"is_initialized","","",61,null],[11,"merge_from","","",61,null],[11,"compute_size","","",61,null],[11,"write_to_with_cached_sizes","","",61,null],[11,"get_cached_size","","",61,null],[11,"get_unknown_fields","","",61,null],[11,"mut_unknown_fields","","",61,null],[11,"type_id","","",61,null],[11,"as_any","","",61,null],[11,"descriptor","","",61,null],[11,"new","","",61,{"inputs":[],"output":{"name":"ssl_detectionframe"}}],[11,"descriptor_static","","",61,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",61,null],[11,"eq","","",61,null],[11,"fmt","","",61,null],[0,"messages_robocup_ssl_geometry","roboime_next_protocol","",null,null],[3,"Vector2f","roboime_next_protocol::messages_robocup_ssl_geometry","",null,null],[3,"SSL_FieldLineSegment","","",null,null],[3,"SSL_FieldCicularArc","","",null,null],[3,"SSL_GeometryFieldSize","","",null,null],[3,"SSL_GeometryCameraCalibration","","",null,null],[3,"SSL_GeometryData","","",null,null],[5,"file_descriptor_proto","","",null,{"inputs":[],"output":{"name":"filedescriptorproto"}}],[11,"default","","",62,{"inputs":[],"output":{"name":"vector2f"}}],[11,"clone","","",62,null],[11,"new","","",62,{"inputs":[],"output":{"name":"vector2f"}}],[11,"default_instance","","",62,{"inputs":[],"output":{"name":"vector2f"}}],[11,"clear_x","","",62,null],[11,"has_x","","",62,null],[11,"set_x","","",62,null],[11,"get_x","","",62,null],[11,"clear_y","","",62,null],[11,"has_y","","",62,null],[11,"set_y","","",62,null],[11,"get_y","","",62,null],[11,"is_initialized","","",62,null],[11,"merge_from","","",62,null],[11,"compute_size","","",62,null],[11,"write_to_with_cached_sizes","","",62,null],[11,"get_cached_size","","",62,null],[11,"get_unknown_fields","","",62,null],[11,"mut_unknown_fields","","",62,null],[11,"type_id","","",62,null],[11,"as_any","","",62,null],[11,"descriptor","","",62,null],[11,"new","","",62,{"inputs":[],"output":{"name":"vector2f"}}],[11,"descriptor_static","","",62,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",62,null],[11,"eq","","",62,null],[11,"fmt","","",62,null],[11,"default","","",63,{"inputs":[],"output":{"name":"ssl_fieldlinesegment"}}],[11,"clone","","",63,null],[11,"new","","",63,{"inputs":[],"output":{"name":"ssl_fieldlinesegment"}}],[11,"default_instance","","",63,{"inputs":[],"output":{"name":"ssl_fieldlinesegment"}}],[11,"clear_name","","",63,null],[11,"has_name","","",63,null],[11,"set_name","","",63,null],[11,"mut_name","","",63,null],[11,"take_name","","",63,null],[11,"get_name","","",63,null],[11,"clear_p1","","",63,null],[11,"has_p1","","",63,null],[11,"set_p1","","",63,null],[11,"mut_p1","","",63,null],[11,"take_p1","","",63,null],[11,"get_p1","","",63,null],[11,"clear_p2","","",63,null],[11,"has_p2","","",63,null],[11,"set_p2","","",63,null],[11,"mut_p2","","",63,null],[11,"take_p2","","",63,null],[11,"get_p2","","",63,null],[11,"clear_thickness","","",63,null],[11,"has_thickness","","",63,null],[11,"set_thickness","","",63,null],[11,"get_thickness","","",63,null],[11,"is_initialized","","",63,null],[11,"merge_from","","",63,null],[11,"compute_size","","",63,null],[11,"write_to_with_cached_sizes","","",63,null],[11,"get_cached_size","","",63,null],[11,"get_unknown_fields","","",63,null],[11,"mut_unknown_fields","","",63,null],[11,"type_id","","",63,null],[11,"as_any","","",63,null],[11,"descriptor","","",63,null],[11,"new","","",63,{"inputs":[],"output":{"name":"ssl_fieldlinesegment"}}],[11,"descriptor_static","","",63,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",63,null],[11,"eq","","",63,null],[11,"fmt","","",63,null],[11,"default","","",64,{"inputs":[],"output":{"name":"ssl_fieldciculararc"}}],[11,"clone","","",64,null],[11,"new","","",64,{"inputs":[],"output":{"name":"ssl_fieldciculararc"}}],[11,"default_instance","","",64,{"inputs":[],"output":{"name":"ssl_fieldciculararc"}}],[11,"clear_name","","",64,null],[11,"has_name","","",64,null],[11,"set_name","","",64,null],[11,"mut_name","","",64,null],[11,"take_name","","",64,null],[11,"get_name","","",64,null],[11,"clear_center","","",64,null],[11,"has_center","","",64,null],[11,"set_center","","",64,null],[11,"mut_center","","",64,null],[11,"take_center","","",64,null],[11,"get_center","","",64,null],[11,"clear_radius","","",64,null],[11,"has_radius","","",64,null],[11,"set_radius","","",64,null],[11,"get_radius","","",64,null],[11,"clear_a1","","",64,null],[11,"has_a1","","",64,null],[11,"set_a1","","",64,null],[11,"get_a1","","",64,null],[11,"clear_a2","","",64,null],[11,"has_a2","","",64,null],[11,"set_a2","","",64,null],[11,"get_a2","","",64,null],[11,"clear_thickness","","",64,null],[11,"has_thickness","","",64,null],[11,"set_thickness","","",64,null],[11,"get_thickness","","",64,null],[11,"is_initialized","","",64,null],[11,"merge_from","","",64,null],[11,"compute_size","","",64,null],[11,"write_to_with_cached_sizes","","",64,null],[11,"get_cached_size","","",64,null],[11,"get_unknown_fields","","",64,null],[11,"mut_unknown_fields","","",64,null],[11,"type_id","","",64,null],[11,"as_any","","",64,null],[11,"descriptor","","",64,null],[11,"new","","",64,{"inputs":[],"output":{"name":"ssl_fieldciculararc"}}],[11,"descriptor_static","","",64,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",64,null],[11,"eq","","",64,null],[11,"fmt","","",64,null],[11,"default","","",65,{"inputs":[],"output":{"name":"ssl_geometryfieldsize"}}],[11,"clone","","",65,null],[11,"new","","",65,{"inputs":[],"output":{"name":"ssl_geometryfieldsize"}}],[11,"default_instance","","",65,{"inputs":[],"output":{"name":"ssl_geometryfieldsize"}}],[11,"clear_field_length","","",65,null],[11,"has_field_length","","",65,null],[11,"set_field_length","","",65,null],[11,"get_field_length","","",65,null],[11,"clear_field_width","","",65,null],[11,"has_field_width","","",65,null],[11,"set_field_width","","",65,null],[11,"get_field_width","","",65,null],[11,"clear_goal_width","","",65,null],[11,"has_goal_width","","",65,null],[11,"set_goal_width","","",65,null],[11,"get_goal_width","","",65,null],[11,"clear_goal_depth","","",65,null],[11,"has_goal_depth","","",65,null],[11,"set_goal_depth","","",65,null],[11,"get_goal_depth","","",65,null],[11,"clear_boundary_width","","",65,null],[11,"has_boundary_width","","",65,null],[11,"set_boundary_width","","",65,null],[11,"get_boundary_width","","",65,null],[11,"clear_field_lines","","",65,null],[11,"set_field_lines","","",65,null],[11,"mut_field_lines","","",65,null],[11,"take_field_lines","","",65,null],[11,"get_field_lines","","",65,null],[11,"clear_field_arcs","","",65,null],[11,"set_field_arcs","","",65,null],[11,"mut_field_arcs","","",65,null],[11,"take_field_arcs","","",65,null],[11,"get_field_arcs","","",65,null],[11,"is_initialized","","",65,null],[11,"merge_from","","",65,null],[11,"compute_size","","",65,null],[11,"write_to_with_cached_sizes","","",65,null],[11,"get_cached_size","","",65,null],[11,"get_unknown_fields","","",65,null],[11,"mut_unknown_fields","","",65,null],[11,"type_id","","",65,null],[11,"as_any","","",65,null],[11,"descriptor","","",65,null],[11,"new","","",65,{"inputs":[],"output":{"name":"ssl_geometryfieldsize"}}],[11,"descriptor_static","","",65,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",65,null],[11,"eq","","",65,null],[11,"fmt","","",65,null],[11,"default","","",66,{"inputs":[],"output":{"name":"ssl_geometrycameracalibration"}}],[11,"clone","","",66,null],[11,"new","","",66,{"inputs":[],"output":{"name":"ssl_geometrycameracalibration"}}],[11,"default_instance","","",66,{"inputs":[],"output":{"name":"ssl_geometrycameracalibration"}}],[11,"clear_camera_id","","",66,null],[11,"has_camera_id","","",66,null],[11,"set_camera_id","","",66,null],[11,"get_camera_id","","",66,null],[11,"clear_focal_length","","",66,null],[11,"has_focal_length","","",66,null],[11,"set_focal_length","","",66,null],[11,"get_focal_length","","",66,null],[11,"clear_principal_point_x","","",66,null],[11,"has_principal_point_x","","",66,null],[11,"set_principal_point_x","","",66,null],[11,"get_principal_point_x","","",66,null],[11,"clear_principal_point_y","","",66,null],[11,"has_principal_point_y","","",66,null],[11,"set_principal_point_y","","",66,null],[11,"get_principal_point_y","","",66,null],[11,"clear_distortion","","",66,null],[11,"has_distortion","","",66,null],[11,"set_distortion","","",66,null],[11,"get_distortion","","",66,null],[11,"clear_q0","","",66,null],[11,"has_q0","","",66,null],[11,"set_q0","","",66,null],[11,"get_q0","","",66,null],[11,"clear_q1","","",66,null],[11,"has_q1","","",66,null],[11,"set_q1","","",66,null],[11,"get_q1","","",66,null],[11,"clear_q2","","",66,null],[11,"has_q2","","",66,null],[11,"set_q2","","",66,null],[11,"get_q2","","",66,null],[11,"clear_q3","","",66,null],[11,"has_q3","","",66,null],[11,"set_q3","","",66,null],[11,"get_q3","","",66,null],[11,"clear_tx","","",66,null],[11,"has_tx","","",66,null],[11,"set_tx","","",66,null],[11,"get_tx","","",66,null],[11,"clear_ty","","",66,null],[11,"has_ty","","",66,null],[11,"set_ty","","",66,null],[11,"get_ty","","",66,null],[11,"clear_tz","","",66,null],[11,"has_tz","","",66,null],[11,"set_tz","","",66,null],[11,"get_tz","","",66,null],[11,"clear_derived_camera_world_tx","","",66,null],[11,"has_derived_camera_world_tx","","",66,null],[11,"set_derived_camera_world_tx","","",66,null],[11,"get_derived_camera_world_tx","","",66,null],[11,"clear_derived_camera_world_ty","","",66,null],[11,"has_derived_camera_world_ty","","",66,null],[11,"set_derived_camera_world_ty","","",66,null],[11,"get_derived_camera_world_ty","","",66,null],[11,"clear_derived_camera_world_tz","","",66,null],[11,"has_derived_camera_world_tz","","",66,null],[11,"set_derived_camera_world_tz","","",66,null],[11,"get_derived_camera_world_tz","","",66,null],[11,"is_initialized","","",66,null],[11,"merge_from","","",66,null],[11,"compute_size","","",66,null],[11,"write_to_with_cached_sizes","","",66,null],[11,"get_cached_size","","",66,null],[11,"get_unknown_fields","","",66,null],[11,"mut_unknown_fields","","",66,null],[11,"type_id","","",66,null],[11,"as_any","","",66,null],[11,"descriptor","","",66,null],[11,"new","","",66,{"inputs":[],"output":{"name":"ssl_geometrycameracalibration"}}],[11,"descriptor_static","","",66,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",66,null],[11,"eq","","",66,null],[11,"fmt","","",66,null],[11,"default","","",67,{"inputs":[],"output":{"name":"ssl_geometrydata"}}],[11,"clone","","",67,null],[11,"new","","",67,{"inputs":[],"output":{"name":"ssl_geometrydata"}}],[11,"default_instance","","",67,{"inputs":[],"output":{"name":"ssl_geometrydata"}}],[11,"clear_field","","",67,null],[11,"has_field","","",67,null],[11,"set_field","","",67,null],[11,"mut_field","","",67,null],[11,"take_field","","",67,null],[11,"get_field","","",67,null],[11,"clear_calib","","",67,null],[11,"set_calib","","",67,null],[11,"mut_calib","","",67,null],[11,"take_calib","","",67,null],[11,"get_calib","","",67,null],[11,"is_initialized","","",67,null],[11,"merge_from","","",67,null],[11,"compute_size","","",67,null],[11,"write_to_with_cached_sizes","","",67,null],[11,"get_cached_size","","",67,null],[11,"get_unknown_fields","","",67,null],[11,"mut_unknown_fields","","",67,null],[11,"type_id","","",67,null],[11,"as_any","","",67,null],[11,"descriptor","","",67,null],[11,"new","","",67,{"inputs":[],"output":{"name":"ssl_geometrydata"}}],[11,"descriptor_static","","",67,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",67,null],[11,"eq","","",67,null],[11,"fmt","","",67,null],[0,"messages_robocup_ssl_geometry_legacy","roboime_next_protocol","",null,null],[3,"SSL_GeometryFieldSize","roboime_next_protocol::messages_robocup_ssl_geometry_legacy","",null,null],[3,"SSL_GeometryData","","",null,null],[5,"file_descriptor_proto","","",null,{"inputs":[],"output":{"name":"filedescriptorproto"}}],[11,"default","","",68,{"inputs":[],"output":{"name":"ssl_geometryfieldsize"}}],[11,"clone","","",68,null],[11,"new","","",68,{"inputs":[],"output":{"name":"ssl_geometryfieldsize"}}],[11,"default_instance","","",68,{"inputs":[],"output":{"name":"ssl_geometryfieldsize"}}],[11,"clear_line_width","","",68,null],[11,"has_line_width","","",68,null],[11,"set_line_width","","",68,null],[11,"get_line_width","","",68,null],[11,"clear_field_length","","",68,null],[11,"has_field_length","","",68,null],[11,"set_field_length","","",68,null],[11,"get_field_length","","",68,null],[11,"clear_field_width","","",68,null],[11,"has_field_width","","",68,null],[11,"set_field_width","","",68,null],[11,"get_field_width","","",68,null],[11,"clear_boundary_width","","",68,null],[11,"has_boundary_width","","",68,null],[11,"set_boundary_width","","",68,null],[11,"get_boundary_width","","",68,null],[11,"clear_referee_width","","",68,null],[11,"has_referee_width","","",68,null],[11,"set_referee_width","","",68,null],[11,"get_referee_width","","",68,null],[11,"clear_goal_width","","",68,null],[11,"has_goal_width","","",68,null],[11,"set_goal_width","","",68,null],[11,"get_goal_width","","",68,null],[11,"clear_goal_depth","","",68,null],[11,"has_goal_depth","","",68,null],[11,"set_goal_depth","","",68,null],[11,"get_goal_depth","","",68,null],[11,"clear_goal_wall_width","","",68,null],[11,"has_goal_wall_width","","",68,null],[11,"set_goal_wall_width","","",68,null],[11,"get_goal_wall_width","","",68,null],[11,"clear_center_circle_radius","","",68,null],[11,"has_center_circle_radius","","",68,null],[11,"set_center_circle_radius","","",68,null],[11,"get_center_circle_radius","","",68,null],[11,"clear_defense_radius","","",68,null],[11,"has_defense_radius","","",68,null],[11,"set_defense_radius","","",68,null],[11,"get_defense_radius","","",68,null],[11,"clear_defense_stretch","","",68,null],[11,"has_defense_stretch","","",68,null],[11,"set_defense_stretch","","",68,null],[11,"get_defense_stretch","","",68,null],[11,"clear_free_kick_from_defense_dist","","",68,null],[11,"has_free_kick_from_defense_dist","","",68,null],[11,"set_free_kick_from_defense_dist","","",68,null],[11,"get_free_kick_from_defense_dist","","",68,null],[11,"clear_penalty_spot_from_field_line_dist","","",68,null],[11,"has_penalty_spot_from_field_line_dist","","",68,null],[11,"set_penalty_spot_from_field_line_dist","","",68,null],[11,"get_penalty_spot_from_field_line_dist","","",68,null],[11,"clear_penalty_line_from_spot_dist","","",68,null],[11,"has_penalty_line_from_spot_dist","","",68,null],[11,"set_penalty_line_from_spot_dist","","",68,null],[11,"get_penalty_line_from_spot_dist","","",68,null],[11,"is_initialized","","",68,null],[11,"merge_from","","",68,null],[11,"compute_size","","",68,null],[11,"write_to_with_cached_sizes","","",68,null],[11,"get_cached_size","","",68,null],[11,"get_unknown_fields","","",68,null],[11,"mut_unknown_fields","","",68,null],[11,"type_id","","",68,null],[11,"as_any","","",68,null],[11,"descriptor","","",68,null],[11,"new","","",68,{"inputs":[],"output":{"name":"ssl_geometryfieldsize"}}],[11,"descriptor_static","","",68,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",68,null],[11,"eq","","",68,null],[11,"fmt","","",68,null],[11,"default","","",69,{"inputs":[],"output":{"name":"ssl_geometrydata"}}],[11,"clone","","",69,null],[11,"new","","",69,{"inputs":[],"output":{"name":"ssl_geometrydata"}}],[11,"default_instance","","",69,{"inputs":[],"output":{"name":"ssl_geometrydata"}}],[11,"clear_field","","",69,null],[11,"has_field","","",69,null],[11,"set_field","","",69,null],[11,"mut_field","","",69,null],[11,"take_field","","",69,null],[11,"get_field","","",69,null],[11,"clear_calib","","",69,null],[11,"set_calib","","",69,null],[11,"mut_calib","","",69,null],[11,"take_calib","","",69,null],[11,"get_calib","","",69,null],[11,"is_initialized","","",69,null],[11,"merge_from","","",69,null],[11,"compute_size","","",69,null],[11,"write_to_with_cached_sizes","","",69,null],[11,"get_cached_size","","",69,null],[11,"get_unknown_fields","","",69,null],[11,"mut_unknown_fields","","",69,null],[11,"type_id","","",69,null],[11,"as_any","","",69,null],[11,"descriptor","","",69,null],[11,"new","","",69,{"inputs":[],"output":{"name":"ssl_geometrydata"}}],[11,"descriptor_static","","",69,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",69,null],[11,"eq","","",69,null],[11,"fmt","","",69,null],[0,"messages_robocup_ssl_refbox_log","roboime_next_protocol","",null,null],[3,"Log_Frame","roboime_next_protocol::messages_robocup_ssl_refbox_log","",null,null],[3,"Refbox_Log","","",null,null],[5,"file_descriptor_proto","","",null,{"inputs":[],"output":{"name":"filedescriptorproto"}}],[11,"default","","",70,{"inputs":[],"output":{"name":"log_frame"}}],[11,"clone","","",70,null],[11,"new","","",70,{"inputs":[],"output":{"name":"log_frame"}}],[11,"default_instance","","",70,{"inputs":[],"output":{"name":"log_frame"}}],[11,"clear_frame","","",70,null],[11,"has_frame","","",70,null],[11,"set_frame","","",70,null],[11,"mut_frame","","",70,null],[11,"take_frame","","",70,null],[11,"get_frame","","",70,null],[11,"clear_refbox_cmd","","",70,null],[11,"has_refbox_cmd","","",70,null],[11,"set_refbox_cmd","","",70,null],[11,"mut_refbox_cmd","","",70,null],[11,"take_refbox_cmd","","",70,null],[11,"get_refbox_cmd","","",70,null],[11,"is_initialized","","",70,null],[11,"merge_from","","",70,null],[11,"compute_size","","",70,null],[11,"write_to_with_cached_sizes","","",70,null],[11,"get_cached_size","","",70,null],[11,"get_unknown_fields","","",70,null],[11,"mut_unknown_fields","","",70,null],[11,"type_id","","",70,null],[11,"as_any","","",70,null],[11,"descriptor","","",70,null],[11,"new","","",70,{"inputs":[],"output":{"name":"log_frame"}}],[11,"descriptor_static","","",70,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",70,null],[11,"eq","","",70,null],[11,"fmt","","",70,null],[11,"default","","",71,{"inputs":[],"output":{"name":"refbox_log"}}],[11,"clone","","",71,null],[11,"new","","",71,{"inputs":[],"output":{"name":"refbox_log"}}],[11,"default_instance","","",71,{"inputs":[],"output":{"name":"refbox_log"}}],[11,"clear_log","","",71,null],[11,"set_log","","",71,null],[11,"mut_log","","",71,null],[11,"take_log","","",71,null],[11,"get_log","","",71,null],[11,"is_initialized","","",71,null],[11,"merge_from","","",71,null],[11,"compute_size","","",71,null],[11,"write_to_with_cached_sizes","","",71,null],[11,"get_cached_size","","",71,null],[11,"get_unknown_fields","","",71,null],[11,"mut_unknown_fields","","",71,null],[11,"type_id","","",71,null],[11,"as_any","","",71,null],[11,"descriptor","","",71,null],[11,"new","","",71,{"inputs":[],"output":{"name":"refbox_log"}}],[11,"descriptor_static","","",71,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",71,null],[11,"eq","","",71,null],[11,"fmt","","",71,null],[0,"messages_robocup_ssl_wrapper","roboime_next_protocol","",null,null],[3,"SSL_WrapperPacket","roboime_next_protocol::messages_robocup_ssl_wrapper","",null,null],[5,"file_descriptor_proto","","",null,{"inputs":[],"output":{"name":"filedescriptorproto"}}],[11,"default","","",72,{"inputs":[],"output":{"name":"ssl_wrapperpacket"}}],[11,"clone","","",72,null],[11,"new","","",72,{"inputs":[],"output":{"name":"ssl_wrapperpacket"}}],[11,"default_instance","","",72,{"inputs":[],"output":{"name":"ssl_wrapperpacket"}}],[11,"clear_detection","","",72,null],[11,"has_detection","","",72,null],[11,"set_detection","","",72,null],[11,"mut_detection","","",72,null],[11,"take_detection","","",72,null],[11,"get_detection","","",72,null],[11,"clear_geometry","","",72,null],[11,"has_geometry","","",72,null],[11,"set_geometry","","",72,null],[11,"mut_geometry","","",72,null],[11,"take_geometry","","",72,null],[11,"get_geometry","","",72,null],[11,"is_initialized","","",72,null],[11,"merge_from","","",72,null],[11,"compute_size","","",72,null],[11,"write_to_with_cached_sizes","","",72,null],[11,"get_cached_size","","",72,null],[11,"get_unknown_fields","","",72,null],[11,"mut_unknown_fields","","",72,null],[11,"type_id","","",72,null],[11,"as_any","","",72,null],[11,"descriptor","","",72,null],[11,"new","","",72,{"inputs":[],"output":{"name":"ssl_wrapperpacket"}}],[11,"descriptor_static","","",72,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",72,null],[11,"eq","","",72,null],[11,"fmt","","",72,null],[0,"messages_robocup_ssl_wrapper_legacy","roboime_next_protocol","",null,null],[3,"SSL_WrapperPacket","roboime_next_protocol::messages_robocup_ssl_wrapper_legacy","",null,null],[5,"file_descriptor_proto","","",null,{"inputs":[],"output":{"name":"filedescriptorproto"}}],[11,"default","","",73,{"inputs":[],"output":{"name":"ssl_wrapperpacket"}}],[11,"clone","","",73,null],[11,"new","","",73,{"inputs":[],"output":{"name":"ssl_wrapperpacket"}}],[11,"default_instance","","",73,{"inputs":[],"output":{"name":"ssl_wrapperpacket"}}],[11,"clear_detection","","",73,null],[11,"has_detection","","",73,null],[11,"set_detection","","",73,null],[11,"mut_detection","","",73,null],[11,"take_detection","","",73,null],[11,"get_detection","","",73,null],[11,"clear_geometry","","",73,null],[11,"has_geometry","","",73,null],[11,"set_geometry","","",73,null],[11,"mut_geometry","","",73,null],[11,"take_geometry","","",73,null],[11,"get_geometry","","",73,null],[11,"is_initialized","","",73,null],[11,"merge_from","","",73,null],[11,"compute_size","","",73,null],[11,"write_to_with_cached_sizes","","",73,null],[11,"get_cached_size","","",73,null],[11,"get_unknown_fields","","",73,null],[11,"mut_unknown_fields","","",73,null],[11,"type_id","","",73,null],[11,"as_any","","",73,null],[11,"descriptor","","",73,null],[11,"new","","",73,{"inputs":[],"output":{"name":"ssl_wrapperpacket"}}],[11,"descriptor_static","","",73,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",73,null],[11,"eq","","",73,null],[11,"fmt","","",73,null],[0,"referee","roboime_next_protocol","",null,null],[3,"SSL_Referee","roboime_next_protocol::referee","",null,null],[3,"SSL_Referee_TeamInfo","","",null,null],[4,"SSL_Referee_Stage","","",null,null],[13,"NORMAL_FIRST_HALF_PRE","","",74,null],[13,"NORMAL_FIRST_HALF","","",74,null],[13,"NORMAL_HALF_TIME","","",74,null],[13,"NORMAL_SECOND_HALF_PRE","","",74,null],[13,"NORMAL_SECOND_HALF","","",74,null],[13,"EXTRA_TIME_BREAK","","",74,null],[13,"EXTRA_FIRST_HALF_PRE","","",74,null],[13,"EXTRA_FIRST_HALF","","",74,null],[13,"EXTRA_HALF_TIME","","",74,null],[13,"EXTRA_SECOND_HALF_PRE","","",74,null],[13,"EXTRA_SECOND_HALF","","",74,null],[13,"PENALTY_SHOOTOUT_BREAK","","",74,null],[13,"PENALTY_SHOOTOUT","","",74,null],[13,"POST_GAME","","",74,null],[4,"SSL_Referee_Command","","",null,null],[13,"HALT","","",75,null],[13,"STOP","","",75,null],[13,"NORMAL_START","","",75,null],[13,"FORCE_START","","",75,null],[13,"PREPARE_KICKOFF_YELLOW","","",75,null],[13,"PREPARE_KICKOFF_BLUE","","",75,null],[13,"PREPARE_PENALTY_YELLOW","","",75,null],[13,"PREPARE_PENALTY_BLUE","","",75,null],[13,"DIRECT_FREE_YELLOW","","",75,null],[13,"DIRECT_FREE_BLUE","","",75,null],[13,"INDIRECT_FREE_YELLOW","","",75,null],[13,"INDIRECT_FREE_BLUE","","",75,null],[13,"TIMEOUT_YELLOW","","",75,null],[13,"TIMEOUT_BLUE","","",75,null],[13,"GOAL_YELLOW","","",75,null],[13,"GOAL_BLUE","","",75,null],[5,"file_descriptor_proto","","",null,{"inputs":[],"output":{"name":"filedescriptorproto"}}],[11,"default","","",76,{"inputs":[],"output":{"name":"ssl_referee"}}],[11,"clone","","",76,null],[11,"new","","",76,{"inputs":[],"output":{"name":"ssl_referee"}}],[11,"default_instance","","",76,{"inputs":[],"output":{"name":"ssl_referee"}}],[11,"clear_packet_timestamp","","",76,null],[11,"has_packet_timestamp","","",76,null],[11,"set_packet_timestamp","","",76,null],[11,"get_packet_timestamp","","",76,null],[11,"clear_stage","","",76,null],[11,"has_stage","","",76,null],[11,"set_stage","","",76,null],[11,"get_stage","","",76,null],[11,"clear_stage_time_left","","",76,null],[11,"has_stage_time_left","","",76,null],[11,"set_stage_time_left","","",76,null],[11,"get_stage_time_left","","",76,null],[11,"clear_command","","",76,null],[11,"has_command","","",76,null],[11,"set_command","","",76,null],[11,"get_command","","",76,null],[11,"clear_command_counter","","",76,null],[11,"has_command_counter","","",76,null],[11,"set_command_counter","","",76,null],[11,"get_command_counter","","",76,null],[11,"clear_command_timestamp","","",76,null],[11,"has_command_timestamp","","",76,null],[11,"set_command_timestamp","","",76,null],[11,"get_command_timestamp","","",76,null],[11,"clear_yellow","","",76,null],[11,"has_yellow","","",76,null],[11,"set_yellow","","",76,null],[11,"mut_yellow","","",76,null],[11,"take_yellow","","",76,null],[11,"get_yellow","","",76,null],[11,"clear_blue","","",76,null],[11,"has_blue","","",76,null],[11,"set_blue","","",76,null],[11,"mut_blue","","",76,null],[11,"take_blue","","",76,null],[11,"get_blue","","",76,null],[11,"is_initialized","","",76,null],[11,"merge_from","","",76,null],[11,"compute_size","","",76,null],[11,"write_to_with_cached_sizes","","",76,null],[11,"get_cached_size","","",76,null],[11,"get_unknown_fields","","",76,null],[11,"mut_unknown_fields","","",76,null],[11,"type_id","","",76,null],[11,"as_any","","",76,null],[11,"descriptor","","",76,null],[11,"new","","",76,{"inputs":[],"output":{"name":"ssl_referee"}}],[11,"descriptor_static","","",76,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",76,null],[11,"eq","","",76,null],[11,"fmt","","",76,null],[11,"default","","",77,{"inputs":[],"output":{"name":"ssl_referee_teaminfo"}}],[11,"clone","","",77,null],[11,"new","","",77,{"inputs":[],"output":{"name":"ssl_referee_teaminfo"}}],[11,"default_instance","","",77,{"inputs":[],"output":{"name":"ssl_referee_teaminfo"}}],[11,"clear_name","","",77,null],[11,"has_name","","",77,null],[11,"set_name","","",77,null],[11,"mut_name","","",77,null],[11,"take_name","","",77,null],[11,"get_name","","",77,null],[11,"clear_score","","",77,null],[11,"has_score","","",77,null],[11,"set_score","","",77,null],[11,"get_score","","",77,null],[11,"clear_red_cards","","",77,null],[11,"has_red_cards","","",77,null],[11,"set_red_cards","","",77,null],[11,"get_red_cards","","",77,null],[11,"clear_yellow_card_times","","",77,null],[11,"set_yellow_card_times","","",77,null],[11,"mut_yellow_card_times","","",77,null],[11,"take_yellow_card_times","","",77,null],[11,"get_yellow_card_times","","",77,null],[11,"clear_yellow_cards","","",77,null],[11,"has_yellow_cards","","",77,null],[11,"set_yellow_cards","","",77,null],[11,"get_yellow_cards","","",77,null],[11,"clear_timeouts","","",77,null],[11,"has_timeouts","","",77,null],[11,"set_timeouts","","",77,null],[11,"get_timeouts","","",77,null],[11,"clear_timeout_time","","",77,null],[11,"has_timeout_time","","",77,null],[11,"set_timeout_time","","",77,null],[11,"get_timeout_time","","",77,null],[11,"clear_goalie","","",77,null],[11,"has_goalie","","",77,null],[11,"set_goalie","","",77,null],[11,"get_goalie","","",77,null],[11,"is_initialized","","",77,null],[11,"merge_from","","",77,null],[11,"compute_size","","",77,null],[11,"write_to_with_cached_sizes","","",77,null],[11,"get_cached_size","","",77,null],[11,"get_unknown_fields","","",77,null],[11,"mut_unknown_fields","","",77,null],[11,"type_id","","",77,null],[11,"as_any","","",77,null],[11,"descriptor","","",77,null],[11,"new","","",77,{"inputs":[],"output":{"name":"ssl_referee_teaminfo"}}],[11,"descriptor_static","","",77,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",77,null],[11,"eq","","",77,null],[11,"fmt","","",77,null],[11,"hash","","",74,null],[11,"fmt","","",74,null],[11,"eq","","",74,null],[11,"clone","","",74,null],[11,"value","","",74,null],[11,"from_i32","","",74,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"values","","",74,null],[11,"enum_descriptor_static","","",74,{"inputs":[{"name":"option"}],"output":{"name":"enumdescriptor"}}],[11,"hash","","",75,null],[11,"fmt","","",75,null],[11,"eq","","",75,null],[11,"clone","","",75,null],[11,"value","","",75,null],[11,"from_i32","","",75,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"values","","",75,null],[11,"enum_descriptor_static","","",75,{"inputs":[{"name":"option"}],"output":{"name":"enumdescriptor"}}]],"paths":[[3,"FileDescriptorSet"],[3,"FileDescriptorProto"],[3,"DescriptorProto"],[3,"DescriptorProto_ExtensionRange"],[3,"FieldDescriptorProto"],[4,"FieldDescriptorProto_Type"],[4,"FieldDescriptorProto_Label"],[3,"OneofDescriptorProto"],[3,"EnumDescriptorProto"],[3,"EnumValueDescriptorProto"],[3,"ServiceDescriptorProto"],[3,"MethodDescriptorProto"],[3,"FileOptions"],[4,"FileOptions_OptimizeMode"],[3,"MessageOptions"],[3,"FieldOptions"],[4,"FieldOptions_CType"],[3,"EnumOptions"],[3,"EnumValueOptions"],[3,"ServiceOptions"],[3,"MethodOptions"],[3,"UninterpretedOption"],[3,"UninterpretedOption_NamePart"],[3,"SourceCodeInfo"],[3,"SourceCodeInfo_Location"],[3,"CodeGeneratorRequest"],[3,"CodeGeneratorResponse"],[3,"CodeGeneratorResponse_File"],[3,"Lazy"],[3,"CodeWriter"],[4,"RustType"],[3,"RepeatedField"],[3,"SingularField"],[3,"SingularPtrField"],[4,"Option"],[3,"String"],[3,"Vec"],[3,"FieldDescriptor"],[3,"MessageDescriptor"],[3,"EnumValueDescriptor"],[3,"EnumDescriptor"],[4,"WireType"],[3,"Tag"],[3,"CodedInputStream"],[3,"CodedOutputStream"],[4,"ProtobufError"],[4,"UnknownValue"],[4,"UnknownValueRef"],[3,"UnknownValues"],[3,"UnknownValuesIter"],[3,"UnknownFields"],[3,"UnknownFieldIter"],[8,"Message"],[3,"grSim_Robot_Command"],[3,"grSim_Commands"],[3,"grSim_Packet"],[3,"grSim_RobotReplacement"],[3,"grSim_BallReplacement"],[3,"grSim_Replacement"],[3,"SSL_DetectionBall"],[3,"SSL_DetectionRobot"],[3,"SSL_DetectionFrame"],[3,"Vector2f"],[3,"SSL_FieldLineSegment"],[3,"SSL_FieldCicularArc"],[3,"SSL_GeometryFieldSize"],[3,"SSL_GeometryCameraCalibration"],[3,"SSL_GeometryData"],[3,"SSL_GeometryFieldSize"],[3,"SSL_GeometryData"],[3,"Log_Frame"],[3,"Refbox_Log"],[3,"SSL_WrapperPacket"],[3,"SSL_WrapperPacket"],[4,"SSL_Referee_Stage"],[4,"SSL_Referee_Command"],[3,"SSL_Referee"],[3,"SSL_Referee_TeamInfo"]]};
searchIndex["wayland_kbd"] = {"doc":"Keyboard mapping utility for `wayland-client` using libxkbcommon.","items":[[3,"MappedKeyboard","wayland_kbd","A wayland keyboard mapped to its keymap",null,null],[3,"KeyEvent","","",null,null],[12,"keycode","","The raw keycode associated with this event. Only use it if\nyou know what you&#39;re doing.",0,null],[12,"serial","","",0,null],[12,"time","","",0,null],[12,"keystate","","",0,null],[4,"MappedKeyboardEvent","","",null,null],[13,"KeyEvent","","",1,null],[13,"Other","","",1,null],[4,"MappedKeyboardError","","",null,null],[13,"XKBNotFound","","",2,null],[13,"NoKeyboardOnSeat","","",2,null],[11,"is_some","core::option","Returns `true` if the option is a `Some` value",3,null],[11,"is_none","","Returns `true` if the option is a `None` value",3,null],[11,"as_ref","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`",3,null],[11,"as_mut","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;mut T&gt;`",3,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",3,null],[11,"unwrap","","Moves the value `v` out of the `Option&lt;T&gt;` if it is `Some(v)`.",3,null],[11,"unwrap_or","","Returns the contained value or a default.",3,null],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",3,null],[11,"map","","Maps an `Option&lt;T&gt;` to `Option&lt;U&gt;` by applying a function to a contained value",3,null],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",3,null],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",3,null],[11,"ok_or","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",3,null],[11,"ok_or_else","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",3,null],[11,"iter","","Returns an iterator over the possibly contained value.",3,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",3,null],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",3,null],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",3,null],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",3,null],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",3,null],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",3,null],[11,"cloned","","Maps an `Option&lt;&amp;T&gt;` to an `Option&lt;T&gt;` by cloning the contents of the\noption.",3,null],[11,"unwrap_or_default","","Returns the contained value or a default",3,null],[11,"hash","core::num","",4,null],[11,"default","","",4,{"inputs":[],"output":{"name":"wrapping"}}],[11,"clone","","",4,null],[11,"cmp","","",4,null],[11,"partial_cmp","","",4,null],[11,"lt","","",4,null],[11,"le","","",4,null],[11,"gt","","",4,null],[11,"ge","","",4,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"fmt","","",4,null],[11,"fmt","","",4,null],[11,"fmt","","",4,null],[11,"fmt","","",4,null],[11,"fmt","","",4,null],[11,"fmt","","",4,null],[11,"shl","","",4,null],[11,"shl_assign","","",4,null],[11,"shr","","",4,null],[11,"shr_assign","","",4,null],[11,"shl","","",4,null],[11,"shl_assign","","",4,null],[11,"shr","","",4,null],[11,"shr_assign","","",4,null],[11,"shl","","",4,null],[11,"shl_assign","","",4,null],[11,"shr","","",4,null],[11,"shr_assign","","",4,null],[11,"shl","","",4,null],[11,"shl_assign","","",4,null],[11,"shr","","",4,null],[11,"shr_assign","","",4,null],[11,"shl","","",4,null],[11,"shl_assign","","",4,null],[11,"shr","","",4,null],[11,"shr_assign","","",4,null],[11,"shl","","",4,null],[11,"shl_assign","","",4,null],[11,"shr","","",4,null],[11,"shr_assign","","",4,null],[11,"shl","","",4,null],[11,"shl_assign","","",4,null],[11,"shr","","",4,null],[11,"shr_assign","","",4,null],[11,"shl","","",4,null],[11,"shl_assign","","",4,null],[11,"shr","","",4,null],[11,"shr_assign","","",4,null],[11,"shl","","",4,null],[11,"shl_assign","","",4,null],[11,"shr","","",4,null],[11,"shr_assign","","",4,null],[11,"shl","","",4,null],[11,"shl_assign","","",4,null],[11,"shr","","",4,null],[11,"shr_assign","","",4,null],[11,"add","","",4,null],[11,"add_assign","","",4,null],[11,"sub","","",4,null],[11,"sub_assign","","",4,null],[11,"mul","","",4,null],[11,"mul_assign","","",4,null],[11,"div","","",4,null],[11,"div_assign","","",4,null],[11,"rem","","",4,null],[11,"rem_assign","","",4,null],[11,"not","","",4,null],[11,"bitxor","","",4,null],[11,"bitxor_assign","","",4,null],[11,"bitor","","",4,null],[11,"bitor_assign","","",4,null],[11,"bitand","","",4,null],[11,"bitand_assign","","",4,null],[11,"neg","","",4,null],[11,"add","","",4,null],[11,"add_assign","","",4,null],[11,"sub","","",4,null],[11,"sub_assign","","",4,null],[11,"mul","","",4,null],[11,"mul_assign","","",4,null],[11,"div","","",4,null],[11,"div_assign","","",4,null],[11,"rem","","",4,null],[11,"rem_assign","","",4,null],[11,"not","","",4,null],[11,"bitxor","","",4,null],[11,"bitxor_assign","","",4,null],[11,"bitor","","",4,null],[11,"bitor_assign","","",4,null],[11,"bitand","","",4,null],[11,"bitand_assign","","",4,null],[11,"neg","","",4,null],[11,"add","","",4,null],[11,"add_assign","","",4,null],[11,"sub","","",4,null],[11,"sub_assign","","",4,null],[11,"mul","","",4,null],[11,"mul_assign","","",4,null],[11,"div","","",4,null],[11,"div_assign","","",4,null],[11,"rem","","",4,null],[11,"rem_assign","","",4,null],[11,"not","","",4,null],[11,"bitxor","","",4,null],[11,"bitxor_assign","","",4,null],[11,"bitor","","",4,null],[11,"bitor_assign","","",4,null],[11,"bitand","","",4,null],[11,"bitand_assign","","",4,null],[11,"neg","","",4,null],[11,"add","","",4,null],[11,"add_assign","","",4,null],[11,"sub","","",4,null],[11,"sub_assign","","",4,null],[11,"mul","","",4,null],[11,"mul_assign","","",4,null],[11,"div","","",4,null],[11,"div_assign","","",4,null],[11,"rem","","",4,null],[11,"rem_assign","","",4,null],[11,"not","","",4,null],[11,"bitxor","","",4,null],[11,"bitxor_assign","","",4,null],[11,"bitor","","",4,null],[11,"bitor_assign","","",4,null],[11,"bitand","","",4,null],[11,"bitand_assign","","",4,null],[11,"neg","","",4,null],[11,"add","","",4,null],[11,"add_assign","","",4,null],[11,"sub","","",4,null],[11,"sub_assign","","",4,null],[11,"mul","","",4,null],[11,"mul_assign","","",4,null],[11,"div","","",4,null],[11,"div_assign","","",4,null],[11,"rem","","",4,null],[11,"rem_assign","","",4,null],[11,"not","","",4,null],[11,"bitxor","","",4,null],[11,"bitxor_assign","","",4,null],[11,"bitor","","",4,null],[11,"bitor_assign","","",4,null],[11,"bitand","","",4,null],[11,"bitand_assign","","",4,null],[11,"neg","","",4,null],[11,"add","","",4,null],[11,"add_assign","","",4,null],[11,"sub","","",4,null],[11,"sub_assign","","",4,null],[11,"mul","","",4,null],[11,"mul_assign","","",4,null],[11,"div","","",4,null],[11,"div_assign","","",4,null],[11,"rem","","",4,null],[11,"rem_assign","","",4,null],[11,"not","","",4,null],[11,"bitxor","","",4,null],[11,"bitxor_assign","","",4,null],[11,"bitor","","",4,null],[11,"bitor_assign","","",4,null],[11,"bitand","","",4,null],[11,"bitand_assign","","",4,null],[11,"neg","","",4,null],[11,"add","","",4,null],[11,"add_assign","","",4,null],[11,"sub","","",4,null],[11,"sub_assign","","",4,null],[11,"mul","","",4,null],[11,"mul_assign","","",4,null],[11,"div","","",4,null],[11,"div_assign","","",4,null],[11,"rem","","",4,null],[11,"rem_assign","","",4,null],[11,"not","","",4,null],[11,"bitxor","","",4,null],[11,"bitxor_assign","","",4,null],[11,"bitor","","",4,null],[11,"bitor_assign","","",4,null],[11,"bitand","","",4,null],[11,"bitand_assign","","",4,null],[11,"neg","","",4,null],[11,"add","","",4,null],[11,"add_assign","","",4,null],[11,"sub","","",4,null],[11,"sub_assign","","",4,null],[11,"mul","","",4,null],[11,"mul_assign","","",4,null],[11,"div","","",4,null],[11,"div_assign","","",4,null],[11,"rem","","",4,null],[11,"rem_assign","","",4,null],[11,"not","","",4,null],[11,"bitxor","","",4,null],[11,"bitxor_assign","","",4,null],[11,"bitor","","",4,null],[11,"bitor_assign","","",4,null],[11,"bitand","","",4,null],[11,"bitand_assign","","",4,null],[11,"neg","","",4,null],[11,"add","","",4,null],[11,"add_assign","","",4,null],[11,"sub","","",4,null],[11,"sub_assign","","",4,null],[11,"mul","","",4,null],[11,"mul_assign","","",4,null],[11,"div","","",4,null],[11,"div_assign","","",4,null],[11,"rem","","",4,null],[11,"rem_assign","","",4,null],[11,"not","","",4,null],[11,"bitxor","","",4,null],[11,"bitxor_assign","","",4,null],[11,"bitor","","",4,null],[11,"bitor_assign","","",4,null],[11,"bitand","","",4,null],[11,"bitand_assign","","",4,null],[11,"neg","","",4,null],[11,"add","","",4,null],[11,"add_assign","","",4,null],[11,"sub","","",4,null],[11,"sub_assign","","",4,null],[11,"mul","","",4,null],[11,"mul_assign","","",4,null],[11,"div","","",4,null],[11,"div_assign","","",4,null],[11,"rem","","",4,null],[11,"rem_assign","","",4,null],[11,"not","","",4,null],[11,"bitxor","","",4,null],[11,"bitxor_assign","","",4,null],[11,"bitor","","",4,null],[11,"bitor_assign","","",4,null],[11,"bitand","","",4,null],[11,"bitand_assign","","",4,null],[11,"neg","","",4,null],[11,"eq","core::num::dec2flt","",5,null],[11,"ne","","",5,null],[11,"clone","","",5,null],[11,"fmt","","",5,null],[11,"fmt","","",5,null],[11,"fmt","core::num","",6,null],[11,"eq","","",6,null],[11,"clone","","",6,null],[11,"clone","","",7,null],[11,"fmt","","",7,null],[11,"fmt","","",7,null],[11,"eq","","",8,null],[11,"ne","","",8,null],[11,"clone","","",8,null],[11,"fmt","","",8,null],[11,"fmt","","",8,null],[11,"hash","core::nonzero","",9,null],[11,"fmt","","",9,null],[11,"partial_cmp","","",9,null],[11,"lt","","",9,null],[11,"le","","",9,null],[11,"gt","","",9,null],[11,"ge","","",9,null],[11,"cmp","","",9,null],[11,"eq","","",9,null],[11,"ne","","",9,null],[11,"clone","","",9,null],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually &quot;non-zero&quot;.",9,{"inputs":[{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",9,null],[11,"new","core::ptr","Creates a new `Unique`.",10,null],[11,"get","","Dereferences the content.",10,null],[11,"get_mut","","Mutably dereferences the content.",10,null],[11,"deref","","",10,null],[11,"fmt","","",10,null],[11,"new","","Creates a new `Shared`.",11,null],[11,"clone","","",11,null],[11,"deref","","",11,null],[11,"fmt","","",11,null],[11,"hash","core::marker","",12,null],[11,"eq","","",12,null],[11,"partial_cmp","","",12,null],[11,"cmp","","",12,null],[11,"clone","","",12,null],[11,"default","","",12,{"inputs":[],"output":{"name":"phantomdata"}}],[11,"hash","core::ops","",13,null],[11,"eq","","",13,null],[11,"clone","","",13,null],[11,"fmt","","",13,null],[11,"hash","","",14,null],[11,"eq","","",14,null],[11,"ne","","",14,null],[11,"clone","","",14,null],[11,"fmt","","",14,null],[11,"contains","","# Examples",14,null],[11,"hash","","",15,null],[11,"eq","","",15,null],[11,"ne","","",15,null],[11,"clone","","",15,null],[11,"fmt","","",15,null],[11,"contains","","# Examples",15,null],[11,"hash","","",16,null],[11,"eq","","",16,null],[11,"ne","","",16,null],[11,"clone","","",16,null],[11,"fmt","","",16,null],[11,"contains","","# Examples",16,null],[11,"hash","","",17,null],[11,"eq","","",17,null],[11,"ne","","",17,null],[11,"clone","","",17,null],[11,"fmt","","",17,null],[11,"contains","","# Examples",17,null],[11,"hash","","",18,null],[11,"eq","","",18,null],[11,"ne","","",18,null],[11,"clone","","",18,null],[11,"fmt","","",18,null],[11,"contains","","# Examples",18,null],[11,"hash","core::cmp","",19,null],[11,"fmt","","",19,null],[11,"eq","","",19,null],[11,"clone","","",19,null],[11,"reverse","","Reverse the `Ordering`.",19,null],[11,"cmp","","",19,null],[11,"partial_cmp","","",19,null],[11,"fmt","wayland_kbd","",20,null],[11,"fmt","","",20,null],[11,"is","","Returns true if the boxed type is the same as `T`",20,null],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",20,null],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",20,null],[11,"is","","Forwards to the method defined on the type `Any`.",20,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",20,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",20,null],[11,"hash","core::any","",21,null],[11,"fmt","","",21,null],[11,"eq","","",21,null],[11,"ne","","",21,null],[11,"clone","","",21,null],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",21,{"inputs":[],"output":{"name":"typeid"}}],[11,"default","core::sync::atomic","",22,{"inputs":[],"output":{"name":"atomicbool"}}],[11,"default","","",23,{"inputs":[],"output":{"name":"atomicptr"}}],[11,"fmt","","",24,null],[11,"clone","","",24,null],[11,"new","","Creates a new `AtomicBool`.",22,{"inputs":[{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",22,null],[11,"store","","Stores a value into the bool.",22,null],[11,"swap","","Stores a value into the bool, returning the old value.",22,null],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",22,null],[11,"compare_exchange","","Stores a value into the `bool` if the current value is the same as the `current` value.",22,null],[11,"compare_exchange_weak","","Stores a value into the `bool` if the current value is the same as the `current` value.",22,null],[11,"fetch_and","","Logical &quot;and&quot; with a boolean value.",22,null],[11,"fetch_nand","","Logical &quot;nand&quot; with a boolean value.",22,null],[11,"fetch_or","","Logical &quot;or&quot; with a boolean value.",22,null],[11,"fetch_xor","","Logical &quot;xor&quot; with a boolean value.",22,null],[11,"new","","Creates a new `AtomicPtr`.",23,null],[11,"load","","Loads a value from the pointer.",23,null],[11,"store","","Stores a value into the pointer.",23,null],[11,"swap","","Stores a value into the pointer, returning the old value.",23,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",23,null],[11,"compare_exchange","","Stores a value into the pointer if the current value is the same as the `current` value.",23,null],[11,"compare_exchange_weak","","Stores a value into the pointer if the current value is the same as the `current` value.",23,null],[11,"default","","",25,{"inputs":[],"output":{"name":"atomici8"}}],[11,"fmt","","",25,null],[11,"new","","Creates a new atomic integer.",25,{"inputs":[{"name":"i8"}],"output":{"name":"atomici8"}}],[11,"load","","Loads a value from the atomic integer.",25,null],[11,"store","","Stores a value into the atomic integer.",25,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",25,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",25,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",25,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",25,null],[11,"fetch_add","","Add to the current value, returning the previous value.",25,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",25,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",25,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",25,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",25,null],[11,"default","","",26,{"inputs":[],"output":{"name":"atomicu8"}}],[11,"fmt","","",26,null],[11,"new","","Creates a new atomic integer.",26,{"inputs":[{"name":"u8"}],"output":{"name":"atomicu8"}}],[11,"load","","Loads a value from the atomic integer.",26,null],[11,"store","","Stores a value into the atomic integer.",26,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",26,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",26,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",26,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",26,null],[11,"fetch_add","","Add to the current value, returning the previous value.",26,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",26,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",26,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",26,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",26,null],[11,"default","","",27,{"inputs":[],"output":{"name":"atomici16"}}],[11,"fmt","","",27,null],[11,"new","","Creates a new atomic integer.",27,{"inputs":[{"name":"i16"}],"output":{"name":"atomici16"}}],[11,"load","","Loads a value from the atomic integer.",27,null],[11,"store","","Stores a value into the atomic integer.",27,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",27,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",27,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",27,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",27,null],[11,"fetch_add","","Add to the current value, returning the previous value.",27,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",27,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",27,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",27,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",27,null],[11,"default","","",28,{"inputs":[],"output":{"name":"atomicu16"}}],[11,"fmt","","",28,null],[11,"new","","Creates a new atomic integer.",28,{"inputs":[{"name":"u16"}],"output":{"name":"atomicu16"}}],[11,"load","","Loads a value from the atomic integer.",28,null],[11,"store","","Stores a value into the atomic integer.",28,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",28,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",28,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",28,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",28,null],[11,"fetch_add","","Add to the current value, returning the previous value.",28,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",28,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",28,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",28,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",28,null],[11,"default","","",29,{"inputs":[],"output":{"name":"atomici32"}}],[11,"fmt","","",29,null],[11,"new","","Creates a new atomic integer.",29,{"inputs":[{"name":"i32"}],"output":{"name":"atomici32"}}],[11,"load","","Loads a value from the atomic integer.",29,null],[11,"store","","Stores a value into the atomic integer.",29,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",29,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",29,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",29,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",29,null],[11,"fetch_add","","Add to the current value, returning the previous value.",29,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",29,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",29,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",29,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",29,null],[11,"default","","",30,{"inputs":[],"output":{"name":"atomicu32"}}],[11,"fmt","","",30,null],[11,"new","","Creates a new atomic integer.",30,{"inputs":[{"name":"u32"}],"output":{"name":"atomicu32"}}],[11,"load","","Loads a value from the atomic integer.",30,null],[11,"store","","Stores a value into the atomic integer.",30,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",30,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",30,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",30,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",30,null],[11,"fetch_add","","Add to the current value, returning the previous value.",30,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",30,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",30,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",30,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",30,null],[11,"default","","",31,{"inputs":[],"output":{"name":"atomici64"}}],[11,"fmt","","",31,null],[11,"new","","Creates a new atomic integer.",31,{"inputs":[{"name":"i64"}],"output":{"name":"atomici64"}}],[11,"load","","Loads a value from the atomic integer.",31,null],[11,"store","","Stores a value into the atomic integer.",31,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",31,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",31,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",31,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",31,null],[11,"fetch_add","","Add to the current value, returning the previous value.",31,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",31,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",31,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",31,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",31,null],[11,"default","","",32,{"inputs":[],"output":{"name":"atomicu64"}}],[11,"fmt","","",32,null],[11,"new","","Creates a new atomic integer.",32,{"inputs":[{"name":"u64"}],"output":{"name":"atomicu64"}}],[11,"load","","Loads a value from the atomic integer.",32,null],[11,"store","","Stores a value into the atomic integer.",32,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",32,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",32,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",32,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",32,null],[11,"fetch_add","","Add to the current value, returning the previous value.",32,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",32,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",32,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",32,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",32,null],[11,"default","","",33,{"inputs":[],"output":{"name":"atomicisize"}}],[11,"fmt","","",33,null],[11,"new","","Creates a new atomic integer.",33,{"inputs":[{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the atomic integer.",33,null],[11,"store","","Stores a value into the atomic integer.",33,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",33,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",33,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",33,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",33,null],[11,"fetch_add","","Add to the current value, returning the previous value.",33,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",33,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",33,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",33,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",33,null],[11,"default","","",34,{"inputs":[],"output":{"name":"atomicusize"}}],[11,"fmt","","",34,null],[11,"new","","Creates a new atomic integer.",34,{"inputs":[{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the atomic integer.",34,null],[11,"store","","Stores a value into the atomic integer.",34,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",34,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",34,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",34,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",34,null],[11,"fetch_add","","Add to the current value, returning the previous value.",34,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",34,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",34,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",34,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",34,null],[11,"fmt","","",22,null],[11,"fmt","","",23,null],[11,"new","core::cell","Creates a new `Cell` containing the given value.",35,{"inputs":[{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",35,null],[11,"set","","Sets the contained value.",35,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",35,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",35,null],[11,"clone","","",35,null],[11,"default","","",35,{"inputs":[],"output":{"name":"cell"}}],[11,"eq","","",35,null],[11,"partial_cmp","","",35,null],[11,"lt","","",35,null],[11,"le","","",35,null],[11,"gt","","",35,null],[11,"ge","","",35,null],[11,"cmp","","",35,null],[11,"fmt","","",36,null],[11,"eq","","",36,null],[11,"clone","","",36,null],[11,"new","","Creates a new `RefCell` containing `value`.",37,{"inputs":[{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",37,null],[11,"borrow_state","","Query the current state of this `RefCell`",37,null],[11,"borrow","","Immutably borrows the wrapped value.",37,null],[11,"borrow_mut","","Mutably borrows the wrapped value.",37,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",37,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",37,null],[11,"clone","","",37,null],[11,"default","","",37,{"inputs":[],"output":{"name":"refcell"}}],[11,"eq","","",37,null],[11,"partial_cmp","","",37,null],[11,"lt","","",37,null],[11,"le","","",37,null],[11,"gt","","",37,null],[11,"ge","","",37,null],[11,"cmp","","",37,null],[11,"deref","","",38,null],[11,"clone","","Copies a `Ref`.",38,{"inputs":[{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",38,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",39,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"deref","","",39,null],[11,"deref_mut","","",39,null],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",40,{"inputs":[{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",40,null],[11,"get","","Gets a mutable pointer to the wrapped value.",40,null],[11,"default","","",40,{"inputs":[],"output":{"name":"unsafecell"}}],[11,"fmt","core::char","",41,null],[11,"clone","","",41,null],[11,"next","","",41,null],[11,"size_hint","","",41,null],[11,"count","","",41,null],[11,"last","","",41,null],[11,"len","","",41,null],[11,"fmt","","",42,null],[11,"clone","","",42,null],[11,"next","","",42,null],[11,"size_hint","","",42,null],[11,"count","","",42,null],[11,"nth","","",42,null],[11,"last","","",42,null],[11,"len","","",42,null],[11,"fmt","","",43,null],[11,"as_slice","","Returns the remaining bytes of this iterator as a slice.",43,null],[11,"next","","",43,null],[11,"size_hint","","",43,null],[11,"fmt","","",44,null],[11,"as_slice","","Returns the remaining bytes of this iterator as a slice.",44,null],[11,"next","","",44,null],[11,"size_hint","","",44,null],[11,"fmt","core::iter::range","",45,null],[11,"clone","","",45,null],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",15,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",14,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",17,null],[11,"next","core::iter::range","",45,null],[11,"size_hint","","",45,null],[11,"next","","",45,null],[11,"size_hint","","",45,null],[11,"next","","",45,null],[11,"size_hint","","",45,null],[11,"next","core::ops","",14,null],[11,"size_hint","","",14,null],[11,"next_back","","",14,null],[11,"next","","",15,null],[11,"next","","",17,null],[11,"size_hint","","",17,null],[11,"next_back","","",17,null],[11,"fmt","core::iter::sources","",46,null],[11,"clone","","",46,null],[11,"next","","",46,null],[11,"size_hint","","",46,null],[11,"next_back","","",46,null],[11,"fmt","","",47,null],[11,"next","","",47,null],[11,"size_hint","","",47,null],[11,"next_back","","",47,null],[11,"len","","",47,null],[11,"clone","","",47,null],[11,"default","","",47,{"inputs":[],"output":{"name":"empty"}}],[11,"fmt","","",48,null],[11,"clone","","",48,null],[11,"next","","",48,null],[11,"size_hint","","",48,null],[11,"next_back","","",48,null],[11,"len","","",48,null],[11,"fmt","core::iter","",49,null],[11,"clone","","",49,null],[11,"next","","",49,null],[11,"size_hint","","",49,null],[11,"next_back","","",49,null],[11,"fmt","","",50,null],[11,"clone","","",50,null],[11,"next","","",50,null],[11,"size_hint","","",50,null],[11,"next_back","","",50,null],[11,"fmt","","",51,null],[11,"clone","","",51,null],[11,"next","","",51,null],[11,"size_hint","","",51,null],[11,"fmt","","",52,null],[11,"clone","","",52,null],[11,"next","","",52,null],[11,"count","","",52,null],[11,"nth","","",52,null],[11,"find","","",52,null],[11,"last","","",52,null],[11,"size_hint","","",52,null],[11,"next_back","","",52,null],[11,"fmt","","",53,null],[11,"clone","","",53,null],[11,"next","","",53,null],[11,"size_hint","","",53,null],[11,"next_back","","",53,null],[11,"clone","","",54,null],[11,"fmt","","",54,null],[11,"next","","",54,null],[11,"size_hint","","",54,null],[11,"next_back","","",54,null],[11,"clone","","",55,null],[11,"fmt","","",55,null],[11,"next","","",55,null],[11,"size_hint","","",55,null],[11,"next_back","","",55,null],[11,"clone","","",56,null],[11,"fmt","","",56,null],[11,"next","","",56,null],[11,"size_hint","","",56,null],[11,"next_back","","",56,null],[11,"fmt","","",57,null],[11,"clone","","",57,null],[11,"next","","# Overflow Behavior",57,null],[11,"size_hint","","",57,null],[11,"nth","","",57,null],[11,"count","","",57,null],[11,"next_back","","",57,null],[11,"fmt","","",58,null],[11,"clone","","",58,null],[11,"next","","",58,null],[11,"count","","",58,null],[11,"nth","","",58,null],[11,"last","","",58,null],[11,"size_hint","","",58,null],[11,"peek","","Returns a reference to the next() value without advancing the iterator.",58,null],[11,"is_empty","","Checks if the iterator has finished iterating.",58,null],[11,"clone","","",59,null],[11,"fmt","","",59,null],[11,"next","","",59,null],[11,"size_hint","","",59,null],[11,"clone","","",60,null],[11,"fmt","","",60,null],[11,"next","","",60,null],[11,"size_hint","","",60,null],[11,"fmt","","",61,null],[11,"clone","","",61,null],[11,"next","","",61,null],[11,"nth","","",61,null],[11,"count","","",61,null],[11,"last","","",61,null],[11,"size_hint","","",61,null],[11,"next_back","","",61,null],[11,"fmt","","",62,null],[11,"clone","","",62,null],[11,"next","","",62,null],[11,"nth","","",62,null],[11,"size_hint","","",62,null],[11,"clone","","",63,null],[11,"fmt","","",63,null],[11,"next","","",63,null],[11,"size_hint","","",63,null],[11,"clone","","",64,null],[11,"fmt","","",64,null],[11,"next","","",64,null],[11,"size_hint","","",64,null],[11,"next_back","","",64,null],[11,"fmt","","",65,null],[11,"clone","","",65,null],[11,"next","","",65,null],[11,"nth","","",65,null],[11,"last","","",65,null],[11,"count","","",65,null],[11,"size_hint","","",65,null],[11,"next_back","","",65,null],[11,"clone","","",66,null],[11,"fmt","","",66,null],[11,"next","","",66,null],[11,"size_hint","","",66,null],[11,"next_back","","",66,null],[11,"hash","core::option","",3,null],[11,"fmt","","",3,null],[11,"cmp","","",3,null],[11,"partial_cmp","","",3,null],[11,"lt","","",3,null],[11,"le","","",3,null],[11,"gt","","",3,null],[11,"ge","","",3,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"clone","","",3,null],[11,"default","","",3,{"inputs":[],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",3,null],[11,"fmt","","",67,null],[11,"next","","",67,null],[11,"size_hint","","",67,null],[11,"next_back","","",67,null],[11,"clone","","",67,null],[11,"fmt","","",68,null],[11,"next","","",68,null],[11,"size_hint","","",68,null],[11,"next_back","","",68,null],[11,"fmt","","",69,null],[11,"clone","","",69,null],[11,"next","","",69,null],[11,"size_hint","","",69,null],[11,"next_back","","",69,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",3,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[11,"clone","core::raw","",70,null],[11,"hash","core::result","",71,null],[11,"fmt","","",71,null],[11,"cmp","","",71,null],[11,"partial_cmp","","",71,null],[11,"lt","","",71,null],[11,"le","","",71,null],[11,"gt","","",71,null],[11,"ge","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"clone","","",71,null],[11,"is_ok","","Returns true if the result is `Ok`",71,null],[11,"is_err","","Returns true if the result is `Err`",71,null],[11,"ok","","Converts from `Result&lt;T, E&gt;` to `Option&lt;T&gt;`",71,null],[11,"err","","Converts from `Result&lt;T, E&gt;` to `Option&lt;E&gt;`",71,null],[11,"as_ref","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;T, &amp;E&gt;`",71,null],[11,"as_mut","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;mut T, &amp;mut E&gt;`",71,null],[11,"map","","Maps a `Result&lt;T, E&gt;` to `Result&lt;U, E&gt;` by applying a function to a\ncontained `Ok` value, leaving an `Err` value untouched.",71,null],[11,"map_err","","Maps a `Result&lt;T, E&gt;` to `Result&lt;T, F&gt;` by applying a function to a\ncontained `Err` value, leaving an `Ok` value untouched.",71,null],[11,"iter","","Returns an iterator over the possibly contained value.",71,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",71,null],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",71,null],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",71,null],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",71,null],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",71,null],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",71,null],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",71,null],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",71,null],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",71,null],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",71,null],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",71,null],[11,"fmt","","",72,null],[11,"next","","",72,null],[11,"size_hint","","",72,null],[11,"next_back","","",72,null],[11,"clone","","",72,null],[11,"fmt","","",73,null],[11,"next","","",73,null],[11,"size_hint","","",73,null],[11,"next_back","","",73,null],[11,"fmt","","",74,null],[11,"next","","",74,null],[11,"size_hint","","",74,null],[11,"next_back","","",74,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",71,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","core::slice","",75,null],[11,"as_slice","","View the underlying data as a subslice of the original data.",75,null],[11,"next","","",75,null],[11,"size_hint","","",75,null],[11,"count","","",75,null],[11,"nth","","",75,null],[11,"last","","",75,null],[11,"next_back","","",75,null],[11,"clone","","",75,null],[11,"fmt","","",76,null],[11,"into_slice","","View the underlying data as a subslice of the original data.",76,null],[11,"next","","",76,null],[11,"size_hint","","",76,null],[11,"count","","",76,null],[11,"nth","","",76,null],[11,"last","","",76,null],[11,"next_back","","",76,null],[11,"fmt","","",77,null],[11,"clone","","",77,null],[11,"next","","",77,null],[11,"size_hint","","",77,null],[11,"next_back","","",77,null],[11,"fmt","","",78,null],[11,"next","","",78,null],[11,"size_hint","","",78,null],[11,"next_back","","",78,null],[11,"fmt","","",79,null],[11,"fmt","","",80,null],[11,"fmt","","",81,null],[11,"fmt","","",82,null],[11,"next","","",79,null],[11,"size_hint","","",79,null],[11,"next","","",80,null],[11,"size_hint","","",80,null],[11,"next","","",81,null],[11,"size_hint","","",81,null],[11,"next","","",82,null],[11,"size_hint","","",82,null],[11,"fmt","","",83,null],[11,"clone","","",83,null],[11,"next","","",83,null],[11,"size_hint","","",83,null],[11,"count","","",83,null],[11,"nth","","",83,null],[11,"last","","",83,null],[11,"next_back","","",83,null],[11,"fmt","","",84,null],[11,"clone","","",84,null],[11,"next","","",84,null],[11,"size_hint","","",84,null],[11,"count","","",84,null],[11,"nth","","",84,null],[11,"last","","",84,null],[11,"next_back","","",84,null],[11,"fmt","","",85,null],[11,"next","","",85,null],[11,"size_hint","","",85,null],[11,"count","","",85,null],[11,"nth","","",85,null],[11,"last","","",85,null],[11,"next_back","","",85,null],[11,"fmt","core::str::pattern","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"clone","","",86,null],[11,"fmt","","",87,null],[11,"clone","","",87,null],[11,"haystack","","",87,null],[11,"next","","",87,null],[11,"next_match","","",87,null],[11,"next_reject","","",87,null],[11,"next_back","","",87,null],[11,"next_match_back","","",87,null],[11,"next_reject_back","","",87,null],[11,"fmt","","",88,null],[11,"clone","","",88,null],[11,"haystack","","",88,null],[11,"next","","",88,null],[11,"next_match","","",88,null],[11,"next_reject","","",88,null],[11,"next_back","","",88,null],[11,"next_match_back","","",88,null],[11,"next_reject_back","","",88,null],[11,"clone","","",89,null],[11,"fmt","","",89,null],[11,"haystack","","",89,null],[11,"next","","",89,null],[11,"next_match","","",89,null],[11,"next_reject","","",89,null],[11,"next_back","","",89,null],[11,"next_match_back","","",89,null],[11,"next_reject_back","","",89,null],[11,"fmt","","",90,null],[11,"clone","","",90,null],[11,"haystack","","",90,null],[11,"next","","",90,null],[11,"next_match","","",90,null],[11,"next_back","","",90,null],[11,"next_match_back","","",90,null],[11,"eq","core::str","",91,null],[11,"ne","","",91,null],[11,"clone","","",91,null],[11,"fmt","","",91,null],[11,"fmt","","",91,null],[11,"fmt","","",92,null],[11,"clone","","",92,null],[11,"eq","","",92,null],[11,"ne","","",92,null],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",92,null],[11,"fmt","","",92,null],[11,"fmt","","",93,null],[11,"clone","","",93,null],[11,"next","","",93,null],[11,"size_hint","","",93,null],[11,"next_back","","",93,null],[11,"as_str","","View the underlying data as a subslice of the original data.",93,null],[11,"fmt","","",94,null],[11,"clone","","",94,null],[11,"next","","",94,null],[11,"size_hint","","",94,null],[11,"next_back","","",94,null],[11,"as_str","","View the underlying data as a subslice of the original data.",94,null],[11,"fmt","","",95,null],[11,"clone","","",95,null],[11,"next","","",95,null],[11,"size_hint","","",95,null],[11,"count","","",95,null],[11,"last","","",95,null],[11,"nth","","",95,null],[11,"next_back","","",95,null],[11,"len","","",95,null],[11,"fmt","","",96,null],[11,"next","","",96,null],[11,"clone","","",96,null],[11,"fmt","","",97,null],[11,"next","","",97,null],[11,"clone","","",97,null],[11,"next_back","","",96,null],[11,"next_back","","",97,null],[11,"fmt","","",98,null],[11,"next","","",98,null],[11,"clone","","",98,null],[11,"fmt","","",99,null],[11,"next","","",99,null],[11,"clone","","",99,null],[11,"next_back","","",98,null],[11,"next_back","","",99,null],[11,"fmt","","",100,null],[11,"next","","",100,null],[11,"clone","","",100,null],[11,"fmt","","",101,null],[11,"next","","",101,null],[11,"clone","","",101,null],[11,"fmt","","",102,null],[11,"next","","",102,null],[11,"clone","","",102,null],[11,"fmt","","",103,null],[11,"next","","",103,null],[11,"clone","","",103,null],[11,"next_back","","",102,null],[11,"next_back","","",103,null],[11,"fmt","","",104,null],[11,"next","","",104,null],[11,"clone","","",104,null],[11,"fmt","","",105,null],[11,"next","","",105,null],[11,"clone","","",105,null],[11,"next_back","","",104,null],[11,"next_back","","",105,null],[11,"fmt","","",106,null],[11,"clone","","",106,null],[11,"next","","",106,null],[11,"size_hint","","",106,null],[11,"next_back","","",106,null],[11,"fmt","","",107,null],[11,"clone","","",107,null],[11,"next","","",107,null],[11,"size_hint","","",107,null],[11,"next_back","","",107,null],[11,"default","core::hash::sip","",108,{"inputs":[],"output":{"name":"siphasher13"}}],[11,"clone","","",108,null],[11,"fmt","","",108,null],[11,"default","","",109,{"inputs":[],"output":{"name":"siphasher24"}}],[11,"clone","","",109,null],[11,"fmt","","",109,null],[11,"default","","",110,{"inputs":[],"output":{"name":"siphasher"}}],[11,"clone","","",110,null],[11,"fmt","","",110,null],[11,"new","","Creates a new `SipHasher` with the two initial keys set to 0.",110,{"inputs":[],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",110,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"new","","Creates a new `SipHasher13` with the two initial keys set to 0.",108,{"inputs":[],"output":{"name":"siphasher13"}}],[11,"new_with_keys","","Creates a `SipHasher13` that is keyed off the provided keys.",108,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher13"}}],[11,"new","","Creates a new `SipHasher24` with the two initial keys set to 0.",109,{"inputs":[],"output":{"name":"siphasher24"}}],[11,"new_with_keys","","Creates a `SipHasher24` that is keyed off the provided keys.",109,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher24"}}],[11,"write","","",110,null],[11,"finish","","",110,null],[11,"write","","",108,null],[11,"finish","","",108,null],[11,"write","","",109,null],[11,"finish","","",109,null],[11,"fmt","core::hash","",111,null],[11,"build_hasher","","",111,null],[11,"clone","","",111,null],[11,"default","","",111,{"inputs":[],"output":{"name":"buildhasherdefault"}}],[11,"fmt","core::fmt","",112,null],[11,"field","core::fmt::builders","Adds a new field to the generated struct output.",113,null],[11,"finish","","Finishes output and returns any error encountered.",113,null],[11,"field","","Adds a new field to the generated tuple struct output.",114,null],[11,"finish","","Finishes output and returns any error encountered.",114,null],[11,"entry","","Adds a new entry to the set output.",115,null],[11,"entries","","Adds the contents of an iterator of entries to the set output.",115,null],[11,"finish","","Finishes output and returns any error encountered.",115,null],[11,"entry","","Adds a new entry to the list output.",116,null],[11,"entries","","Adds the contents of an iterator of entries to the list output.",116,null],[11,"finish","","Finishes output and returns any error encountered.",116,null],[11,"entry","","Adds a new entry to the map output.",117,null],[11,"entries","","Adds the contents of an iterator of entries to the map output.",117,null],[11,"finish","","Finishes output and returns any error encountered.",117,null],[11,"partial_cmp","core::fmt","",118,null],[11,"eq","","",118,null],[11,"cmp","","",118,null],[11,"hash","","",118,null],[11,"default","","",118,{"inputs":[],"output":{"name":"error"}}],[11,"fmt","","",118,null],[11,"clone","","",118,null],[11,"clone","","",119,null],[11,"fmt","","",119,null],[11,"fmt","","",119,null],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",120,null],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",120,null],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",120,null],[11,"write_fmt","","Writes some formatted information into this instance",120,null],[11,"flags","","Flags for formatting (packed version of rt::Flag)",120,null],[11,"fill","","Character used as &#39;fill&#39; whenever there is alignment",120,null],[11,"align","","Flag indicating what form of alignment was requested",120,null],[11,"width","","Optionally specified integer width that the output should be",120,null],[11,"precision","","Optionally specified precision for numeric types",120,null],[11,"sign_plus","","Determines if the `+` flag was specified.",120,null],[11,"sign_minus","","Determines if the `-` flag was specified.",120,null],[11,"alternate","","Determines if the `#` flag was specified.",120,null],[11,"sign_aware_zero_pad","","Determines if the `0` flag was specified.",120,null],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",120,null],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",120,null],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",120,null],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",120,null],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",120,null],[11,"write_str","","",120,null],[11,"write_char","","",120,null],[11,"write_fmt","","",120,null],[11,"fmt","","",118,null],[11,"fmt","core::marker","",12,null],[11,"fmt","core::cell","",35,null],[11,"fmt","","",37,null],[11,"fmt","","",38,null],[11,"fmt","","",39,null],[11,"fmt","","",40,null],[11,"as_utf8","wayland_kbd","Tries to retrieve the key event as an UTF8 sequence",0,null],[11,"as_symbol","","Tries to match this key event as a key symbol according to current keyboard state.",0,null],[11,"new","","Creates a mapped keyboard by extracting the keyboard from a seat.",121,{"inputs":[{"name":"wlseat"}],"output":{"name":"result"}}],[11,"next","","",121,null],[0,"keysyms","","",null,null],[17,"XKB_KEY_VoidSymbol","wayland_kbd::keysyms","",null,null],[17,"XKB_KEY_BackSpace","","",null,null],[17,"XKB_KEY_Tab","","",null,null],[17,"XKB_KEY_Linefeed","","",null,null],[17,"XKB_KEY_Clear","","",null,null],[17,"XKB_KEY_Return","","",null,null],[17,"XKB_KEY_Pause","","",null,null],[17,"XKB_KEY_Scroll_Lock","","",null,null],[17,"XKB_KEY_Sys_Req","","",null,null],[17,"XKB_KEY_Escape","","",null,null],[17,"XKB_KEY_Delete","","",null,null],[17,"XKB_KEY_Multi_key","","",null,null],[17,"XKB_KEY_Codeinput","","",null,null],[17,"XKB_KEY_SingleCandidate","","",null,null],[17,"XKB_KEY_MultipleCandidate","","",null,null],[17,"XKB_KEY_PreviousCandidate","","",null,null],[17,"XKB_KEY_Kanji","","",null,null],[17,"XKB_KEY_Muhenkan","","",null,null],[17,"XKB_KEY_Henkan_Mode","","",null,null],[17,"XKB_KEY_Henkan","","",null,null],[17,"XKB_KEY_Romaji","","",null,null],[17,"XKB_KEY_Hiragana","","",null,null],[17,"XKB_KEY_Katakana","","",null,null],[17,"XKB_KEY_Hiragana_Katakana","","",null,null],[17,"XKB_KEY_Zenkaku","","",null,null],[17,"XKB_KEY_Hankaku","","",null,null],[17,"XKB_KEY_Zenkaku_Hankaku","","",null,null],[17,"XKB_KEY_Touroku","","",null,null],[17,"XKB_KEY_Massyo","","",null,null],[17,"XKB_KEY_Kana_Lock","","",null,null],[17,"XKB_KEY_Kana_Shift","","",null,null],[17,"XKB_KEY_Eisu_Shift","","",null,null],[17,"XKB_KEY_Eisu_toggle","","",null,null],[17,"XKB_KEY_Kanji_Bangou","","",null,null],[17,"XKB_KEY_Zen_Koho","","",null,null],[17,"XKB_KEY_Mae_Koho","","",null,null],[17,"XKB_KEY_Home","","",null,null],[17,"XKB_KEY_Left","","",null,null],[17,"XKB_KEY_Up","","",null,null],[17,"XKB_KEY_Right","","",null,null],[17,"XKB_KEY_Down","","",null,null],[17,"XKB_KEY_Prior","","",null,null],[17,"XKB_KEY_Page_Up","","",null,null],[17,"XKB_KEY_Next","","",null,null],[17,"XKB_KEY_Page_Down","","",null,null],[17,"XKB_KEY_End","","",null,null],[17,"XKB_KEY_Begin","","",null,null],[17,"XKB_KEY_Select","","",null,null],[17,"XKB_KEY_Print","","",null,null],[17,"XKB_KEY_Execute","","",null,null],[17,"XKB_KEY_Insert","","",null,null],[17,"XKB_KEY_Undo","","",null,null],[17,"XKB_KEY_Redo","","",null,null],[17,"XKB_KEY_Menu","","",null,null],[17,"XKB_KEY_Find","","",null,null],[17,"XKB_KEY_Cancel","","",null,null],[17,"XKB_KEY_Help","","",null,null],[17,"XKB_KEY_Break","","",null,null],[17,"XKB_KEY_Mode_switch","","",null,null],[17,"XKB_KEY_script_switch","","",null,null],[17,"XKB_KEY_Num_Lock","","",null,null],[17,"XKB_KEY_KP_Space","","",null,null],[17,"XKB_KEY_KP_Tab","","",null,null],[17,"XKB_KEY_KP_Enter","","",null,null],[17,"XKB_KEY_KP_F1","","",null,null],[17,"XKB_KEY_KP_F2","","",null,null],[17,"XKB_KEY_KP_F3","","",null,null],[17,"XKB_KEY_KP_F4","","",null,null],[17,"XKB_KEY_KP_Home","","",null,null],[17,"XKB_KEY_KP_Left","","",null,null],[17,"XKB_KEY_KP_Up","","",null,null],[17,"XKB_KEY_KP_Right","","",null,null],[17,"XKB_KEY_KP_Down","","",null,null],[17,"XKB_KEY_KP_Prior","","",null,null],[17,"XKB_KEY_KP_Page_Up","","",null,null],[17,"XKB_KEY_KP_Next","","",null,null],[17,"XKB_KEY_KP_Page_Down","","",null,null],[17,"XKB_KEY_KP_End","","",null,null],[17,"XKB_KEY_KP_Begin","","",null,null],[17,"XKB_KEY_KP_Insert","","",null,null],[17,"XKB_KEY_KP_Delete","","",null,null],[17,"XKB_KEY_KP_Equal","","",null,null],[17,"XKB_KEY_KP_Multiply","","",null,null],[17,"XKB_KEY_KP_Add","","",null,null],[17,"XKB_KEY_KP_Separator","","",null,null],[17,"XKB_KEY_KP_Subtract","","",null,null],[17,"XKB_KEY_KP_Decimal","","",null,null],[17,"XKB_KEY_KP_Divide","","",null,null],[17,"XKB_KEY_KP_0","","",null,null],[17,"XKB_KEY_KP_1","","",null,null],[17,"XKB_KEY_KP_2","","",null,null],[17,"XKB_KEY_KP_3","","",null,null],[17,"XKB_KEY_KP_4","","",null,null],[17,"XKB_KEY_KP_5","","",null,null],[17,"XKB_KEY_KP_6","","",null,null],[17,"XKB_KEY_KP_7","","",null,null],[17,"XKB_KEY_KP_8","","",null,null],[17,"XKB_KEY_KP_9","","",null,null],[17,"XKB_KEY_F1","","",null,null],[17,"XKB_KEY_F2","","",null,null],[17,"XKB_KEY_F3","","",null,null],[17,"XKB_KEY_F4","","",null,null],[17,"XKB_KEY_F5","","",null,null],[17,"XKB_KEY_F6","","",null,null],[17,"XKB_KEY_F7","","",null,null],[17,"XKB_KEY_F8","","",null,null],[17,"XKB_KEY_F9","","",null,null],[17,"XKB_KEY_F10","","",null,null],[17,"XKB_KEY_F11","","",null,null],[17,"XKB_KEY_L1","","",null,null],[17,"XKB_KEY_F12","","",null,null],[17,"XKB_KEY_L2","","",null,null],[17,"XKB_KEY_F13","","",null,null],[17,"XKB_KEY_L3","","",null,null],[17,"XKB_KEY_F14","","",null,null],[17,"XKB_KEY_L4","","",null,null],[17,"XKB_KEY_F15","","",null,null],[17,"XKB_KEY_L5","","",null,null],[17,"XKB_KEY_F16","","",null,null],[17,"XKB_KEY_L6","","",null,null],[17,"XKB_KEY_F17","","",null,null],[17,"XKB_KEY_L7","","",null,null],[17,"XKB_KEY_F18","","",null,null],[17,"XKB_KEY_L8","","",null,null],[17,"XKB_KEY_F19","","",null,null],[17,"XKB_KEY_L9","","",null,null],[17,"XKB_KEY_F20","","",null,null],[17,"XKB_KEY_L10","","",null,null],[17,"XKB_KEY_F21","","",null,null],[17,"XKB_KEY_R1","","",null,null],[17,"XKB_KEY_F22","","",null,null],[17,"XKB_KEY_R2","","",null,null],[17,"XKB_KEY_F23","","",null,null],[17,"XKB_KEY_R3","","",null,null],[17,"XKB_KEY_F24","","",null,null],[17,"XKB_KEY_R4","","",null,null],[17,"XKB_KEY_F25","","",null,null],[17,"XKB_KEY_R5","","",null,null],[17,"XKB_KEY_F26","","",null,null],[17,"XKB_KEY_R6","","",null,null],[17,"XKB_KEY_F27","","",null,null],[17,"XKB_KEY_R7","","",null,null],[17,"XKB_KEY_F28","","",null,null],[17,"XKB_KEY_R8","","",null,null],[17,"XKB_KEY_F29","","",null,null],[17,"XKB_KEY_R9","","",null,null],[17,"XKB_KEY_F30","","",null,null],[17,"XKB_KEY_R10","","",null,null],[17,"XKB_KEY_F31","","",null,null],[17,"XKB_KEY_R11","","",null,null],[17,"XKB_KEY_F32","","",null,null],[17,"XKB_KEY_R12","","",null,null],[17,"XKB_KEY_F33","","",null,null],[17,"XKB_KEY_R13","","",null,null],[17,"XKB_KEY_F34","","",null,null],[17,"XKB_KEY_R14","","",null,null],[17,"XKB_KEY_F35","","",null,null],[17,"XKB_KEY_R15","","",null,null],[17,"XKB_KEY_Shift_L","","",null,null],[17,"XKB_KEY_Shift_R","","",null,null],[17,"XKB_KEY_Control_L","","",null,null],[17,"XKB_KEY_Control_R","","",null,null],[17,"XKB_KEY_Caps_Lock","","",null,null],[17,"XKB_KEY_Shift_Lock","","",null,null],[17,"XKB_KEY_Meta_L","","",null,null],[17,"XKB_KEY_Meta_R","","",null,null],[17,"XKB_KEY_Alt_L","","",null,null],[17,"XKB_KEY_Alt_R","","",null,null],[17,"XKB_KEY_Super_L","","",null,null],[17,"XKB_KEY_Super_R","","",null,null],[17,"XKB_KEY_Hyper_L","","",null,null],[17,"XKB_KEY_Hyper_R","","",null,null],[17,"XKB_KEY_ISO_Lock","","",null,null],[17,"XKB_KEY_ISO_Level2_Latch","","",null,null],[17,"XKB_KEY_ISO_Level3_Shift","","",null,null],[17,"XKB_KEY_ISO_Level3_Latch","","",null,null],[17,"XKB_KEY_ISO_Level3_Lock","","",null,null],[17,"XKB_KEY_ISO_Level5_Shift","","",null,null],[17,"XKB_KEY_ISO_Level5_Latch","","",null,null],[17,"XKB_KEY_ISO_Level5_Lock","","",null,null],[17,"XKB_KEY_ISO_Group_Shift","","",null,null],[17,"XKB_KEY_ISO_Group_Latch","","",null,null],[17,"XKB_KEY_ISO_Group_Lock","","",null,null],[17,"XKB_KEY_ISO_Next_Group","","",null,null],[17,"XKB_KEY_ISO_Next_Group_Lock","","",null,null],[17,"XKB_KEY_ISO_Prev_Group","","",null,null],[17,"XKB_KEY_ISO_Prev_Group_Lock","","",null,null],[17,"XKB_KEY_ISO_First_Group","","",null,null],[17,"XKB_KEY_ISO_First_Group_Lock","","",null,null],[17,"XKB_KEY_ISO_Last_Group","","",null,null],[17,"XKB_KEY_ISO_Last_Group_Lock","","",null,null],[17,"XKB_KEY_ISO_Left_Tab","","",null,null],[17,"XKB_KEY_ISO_Move_Line_Up","","",null,null],[17,"XKB_KEY_ISO_Move_Line_Down","","",null,null],[17,"XKB_KEY_ISO_Partial_Line_Up","","",null,null],[17,"XKB_KEY_ISO_Partial_Line_Down","","",null,null],[17,"XKB_KEY_ISO_Partial_Space_Left","","",null,null],[17,"XKB_KEY_ISO_Partial_Space_Right","","",null,null],[17,"XKB_KEY_ISO_Set_Margin_Left","","",null,null],[17,"XKB_KEY_ISO_Set_Margin_Right","","",null,null],[17,"XKB_KEY_ISO_Release_Margin_Left","","",null,null],[17,"XKB_KEY_ISO_Release_Margin_Right","","",null,null],[17,"XKB_KEY_ISO_Release_Both_Margins","","",null,null],[17,"XKB_KEY_ISO_Fast_Cursor_Left","","",null,null],[17,"XKB_KEY_ISO_Fast_Cursor_Right","","",null,null],[17,"XKB_KEY_ISO_Fast_Cursor_Up","","",null,null],[17,"XKB_KEY_ISO_Fast_Cursor_Down","","",null,null],[17,"XKB_KEY_ISO_Continuous_Underline","","",null,null],[17,"XKB_KEY_ISO_Discontinuous_Underline","","",null,null],[17,"XKB_KEY_ISO_Emphasize","","",null,null],[17,"XKB_KEY_ISO_Center_Object","","",null,null],[17,"XKB_KEY_ISO_Enter","","",null,null],[17,"XKB_KEY_dead_grave","","",null,null],[17,"XKB_KEY_dead_acute","","",null,null],[17,"XKB_KEY_dead_circumflex","","",null,null],[17,"XKB_KEY_dead_tilde","","",null,null],[17,"XKB_KEY_dead_perispomeni","","",null,null],[17,"XKB_KEY_dead_macron","","",null,null],[17,"XKB_KEY_dead_breve","","",null,null],[17,"XKB_KEY_dead_abovedot","","",null,null],[17,"XKB_KEY_dead_diaeresis","","",null,null],[17,"XKB_KEY_dead_abovering","","",null,null],[17,"XKB_KEY_dead_doubleacute","","",null,null],[17,"XKB_KEY_dead_caron","","",null,null],[17,"XKB_KEY_dead_cedilla","","",null,null],[17,"XKB_KEY_dead_ogonek","","",null,null],[17,"XKB_KEY_dead_iota","","",null,null],[17,"XKB_KEY_dead_voiced_sound","","",null,null],[17,"XKB_KEY_dead_semivoiced_sound","","",null,null],[17,"XKB_KEY_dead_belowdot","","",null,null],[17,"XKB_KEY_dead_hook","","",null,null],[17,"XKB_KEY_dead_horn","","",null,null],[17,"XKB_KEY_dead_stroke","","",null,null],[17,"XKB_KEY_dead_abovecomma","","",null,null],[17,"XKB_KEY_dead_psili","","",null,null],[17,"XKB_KEY_dead_abovereversedcomma","","",null,null],[17,"XKB_KEY_dead_dasia","","",null,null],[17,"XKB_KEY_dead_doublegrave","","",null,null],[17,"XKB_KEY_dead_belowring","","",null,null],[17,"XKB_KEY_dead_belowmacron","","",null,null],[17,"XKB_KEY_dead_belowcircumflex","","",null,null],[17,"XKB_KEY_dead_belowtilde","","",null,null],[17,"XKB_KEY_dead_belowbreve","","",null,null],[17,"XKB_KEY_dead_belowdiaeresis","","",null,null],[17,"XKB_KEY_dead_invertedbreve","","",null,null],[17,"XKB_KEY_dead_belowcomma","","",null,null],[17,"XKB_KEY_dead_currency","","",null,null],[17,"XKB_KEY_dead_lowline","","",null,null],[17,"XKB_KEY_dead_aboveverticalline","","",null,null],[17,"XKB_KEY_dead_belowverticalline","","",null,null],[17,"XKB_KEY_dead_longsolidusoverlay","","",null,null],[17,"XKB_KEY_dead_a","","",null,null],[17,"XKB_KEY_dead_A","","",null,null],[17,"XKB_KEY_dead_e","","",null,null],[17,"XKB_KEY_dead_E","","",null,null],[17,"XKB_KEY_dead_i","","",null,null],[17,"XKB_KEY_dead_I","","",null,null],[17,"XKB_KEY_dead_o","","",null,null],[17,"XKB_KEY_dead_O","","",null,null],[17,"XKB_KEY_dead_u","","",null,null],[17,"XKB_KEY_dead_U","","",null,null],[17,"XKB_KEY_dead_small_schwa","","",null,null],[17,"XKB_KEY_dead_capital_schwa","","",null,null],[17,"XKB_KEY_dead_greek","","",null,null],[17,"XKB_KEY_First_Virtual_Screen","","",null,null],[17,"XKB_KEY_Prev_Virtual_Screen","","",null,null],[17,"XKB_KEY_Next_Virtual_Screen","","",null,null],[17,"XKB_KEY_Last_Virtual_Screen","","",null,null],[17,"XKB_KEY_Terminate_Server","","",null,null],[17,"XKB_KEY_AccessX_Enable","","",null,null],[17,"XKB_KEY_AccessX_Feedback_Enable","","",null,null],[17,"XKB_KEY_RepeatKeys_Enable","","",null,null],[17,"XKB_KEY_SlowKeys_Enable","","",null,null],[17,"XKB_KEY_BounceKeys_Enable","","",null,null],[17,"XKB_KEY_StickyKeys_Enable","","",null,null],[17,"XKB_KEY_MouseKeys_Enable","","",null,null],[17,"XKB_KEY_MouseKeys_Accel_Enable","","",null,null],[17,"XKB_KEY_Overlay1_Enable","","",null,null],[17,"XKB_KEY_Overlay2_Enable","","",null,null],[17,"XKB_KEY_AudibleBell_Enable","","",null,null],[17,"XKB_KEY_Pointer_Left","","",null,null],[17,"XKB_KEY_Pointer_Right","","",null,null],[17,"XKB_KEY_Pointer_Up","","",null,null],[17,"XKB_KEY_Pointer_Down","","",null,null],[17,"XKB_KEY_Pointer_UpLeft","","",null,null],[17,"XKB_KEY_Pointer_UpRight","","",null,null],[17,"XKB_KEY_Pointer_DownLeft","","",null,null],[17,"XKB_KEY_Pointer_DownRight","","",null,null],[17,"XKB_KEY_Pointer_Button_Dflt","","",null,null],[17,"XKB_KEY_Pointer_Button1","","",null,null],[17,"XKB_KEY_Pointer_Button2","","",null,null],[17,"XKB_KEY_Pointer_Button3","","",null,null],[17,"XKB_KEY_Pointer_Button4","","",null,null],[17,"XKB_KEY_Pointer_Button5","","",null,null],[17,"XKB_KEY_Pointer_DblClick_Dflt","","",null,null],[17,"XKB_KEY_Pointer_DblClick1","","",null,null],[17,"XKB_KEY_Pointer_DblClick2","","",null,null],[17,"XKB_KEY_Pointer_DblClick3","","",null,null],[17,"XKB_KEY_Pointer_DblClick4","","",null,null],[17,"XKB_KEY_Pointer_DblClick5","","",null,null],[17,"XKB_KEY_Pointer_Drag_Dflt","","",null,null],[17,"XKB_KEY_Pointer_Drag1","","",null,null],[17,"XKB_KEY_Pointer_Drag2","","",null,null],[17,"XKB_KEY_Pointer_Drag3","","",null,null],[17,"XKB_KEY_Pointer_Drag4","","",null,null],[17,"XKB_KEY_Pointer_Drag5","","",null,null],[17,"XKB_KEY_Pointer_EnableKeys","","",null,null],[17,"XKB_KEY_Pointer_Accelerate","","",null,null],[17,"XKB_KEY_Pointer_DfltBtnNext","","",null,null],[17,"XKB_KEY_Pointer_DfltBtnPrev","","",null,null],[17,"XKB_KEY_ch","","",null,null],[17,"XKB_KEY_Ch","","",null,null],[17,"XKB_KEY_CH","","",null,null],[17,"XKB_KEY_c_h","","",null,null],[17,"XKB_KEY_C_h","","",null,null],[17,"XKB_KEY_C_H","","",null,null],[17,"XKB_KEY_3270_Duplicate","","",null,null],[17,"XKB_KEY_3270_FieldMark","","",null,null],[17,"XKB_KEY_3270_Right2","","",null,null],[17,"XKB_KEY_3270_Left2","","",null,null],[17,"XKB_KEY_3270_BackTab","","",null,null],[17,"XKB_KEY_3270_EraseEOF","","",null,null],[17,"XKB_KEY_3270_EraseInput","","",null,null],[17,"XKB_KEY_3270_Reset","","",null,null],[17,"XKB_KEY_3270_Quit","","",null,null],[17,"XKB_KEY_3270_PA1","","",null,null],[17,"XKB_KEY_3270_PA2","","",null,null],[17,"XKB_KEY_3270_PA3","","",null,null],[17,"XKB_KEY_3270_Test","","",null,null],[17,"XKB_KEY_3270_Attn","","",null,null],[17,"XKB_KEY_3270_CursorBlink","","",null,null],[17,"XKB_KEY_3270_AltCursor","","",null,null],[17,"XKB_KEY_3270_KeyClick","","",null,null],[17,"XKB_KEY_3270_Jump","","",null,null],[17,"XKB_KEY_3270_Ident","","",null,null],[17,"XKB_KEY_3270_Rule","","",null,null],[17,"XKB_KEY_3270_Copy","","",null,null],[17,"XKB_KEY_3270_Play","","",null,null],[17,"XKB_KEY_3270_Setup","","",null,null],[17,"XKB_KEY_3270_Record","","",null,null],[17,"XKB_KEY_3270_ChangeScreen","","",null,null],[17,"XKB_KEY_3270_DeleteWord","","",null,null],[17,"XKB_KEY_3270_ExSelect","","",null,null],[17,"XKB_KEY_3270_CursorSelect","","",null,null],[17,"XKB_KEY_3270_PrintScreen","","",null,null],[17,"XKB_KEY_3270_Enter","","",null,null],[17,"XKB_KEY_space","","",null,null],[17,"XKB_KEY_exclam","","",null,null],[17,"XKB_KEY_quotedbl","","",null,null],[17,"XKB_KEY_numbersign","","",null,null],[17,"XKB_KEY_dollar","","",null,null],[17,"XKB_KEY_percent","","",null,null],[17,"XKB_KEY_ampersand","","",null,null],[17,"XKB_KEY_apostrophe","","",null,null],[17,"XKB_KEY_quoteright","","",null,null],[17,"XKB_KEY_parenleft","","",null,null],[17,"XKB_KEY_parenright","","",null,null],[17,"XKB_KEY_asterisk","","",null,null],[17,"XKB_KEY_plus","","",null,null],[17,"XKB_KEY_comma","","",null,null],[17,"XKB_KEY_minus","","",null,null],[17,"XKB_KEY_period","","",null,null],[17,"XKB_KEY_slash","","",null,null],[17,"XKB_KEY_0","","",null,null],[17,"XKB_KEY_1","","",null,null],[17,"XKB_KEY_2","","",null,null],[17,"XKB_KEY_3","","",null,null],[17,"XKB_KEY_4","","",null,null],[17,"XKB_KEY_5","","",null,null],[17,"XKB_KEY_6","","",null,null],[17,"XKB_KEY_7","","",null,null],[17,"XKB_KEY_8","","",null,null],[17,"XKB_KEY_9","","",null,null],[17,"XKB_KEY_colon","","",null,null],[17,"XKB_KEY_semicolon","","",null,null],[17,"XKB_KEY_less","","",null,null],[17,"XKB_KEY_equal","","",null,null],[17,"XKB_KEY_greater","","",null,null],[17,"XKB_KEY_question","","",null,null],[17,"XKB_KEY_at","","",null,null],[17,"XKB_KEY_A","","",null,null],[17,"XKB_KEY_B","","",null,null],[17,"XKB_KEY_C","","",null,null],[17,"XKB_KEY_D","","",null,null],[17,"XKB_KEY_E","","",null,null],[17,"XKB_KEY_F","","",null,null],[17,"XKB_KEY_G","","",null,null],[17,"XKB_KEY_H","","",null,null],[17,"XKB_KEY_I","","",null,null],[17,"XKB_KEY_J","","",null,null],[17,"XKB_KEY_K","","",null,null],[17,"XKB_KEY_L","","",null,null],[17,"XKB_KEY_M","","",null,null],[17,"XKB_KEY_N","","",null,null],[17,"XKB_KEY_O","","",null,null],[17,"XKB_KEY_P","","",null,null],[17,"XKB_KEY_Q","","",null,null],[17,"XKB_KEY_R","","",null,null],[17,"XKB_KEY_S","","",null,null],[17,"XKB_KEY_T","","",null,null],[17,"XKB_KEY_U","","",null,null],[17,"XKB_KEY_V","","",null,null],[17,"XKB_KEY_W","","",null,null],[17,"XKB_KEY_X","","",null,null],[17,"XKB_KEY_Y","","",null,null],[17,"XKB_KEY_Z","","",null,null],[17,"XKB_KEY_bracketleft","","",null,null],[17,"XKB_KEY_backslash","","",null,null],[17,"XKB_KEY_bracketright","","",null,null],[17,"XKB_KEY_asciicircum","","",null,null],[17,"XKB_KEY_underscore","","",null,null],[17,"XKB_KEY_grave","","",null,null],[17,"XKB_KEY_quoteleft","","",null,null],[17,"XKB_KEY_a","","",null,null],[17,"XKB_KEY_b","","",null,null],[17,"XKB_KEY_c","","",null,null],[17,"XKB_KEY_d","","",null,null],[17,"XKB_KEY_e","","",null,null],[17,"XKB_KEY_f","","",null,null],[17,"XKB_KEY_g","","",null,null],[17,"XKB_KEY_h","","",null,null],[17,"XKB_KEY_i","","",null,null],[17,"XKB_KEY_j","","",null,null],[17,"XKB_KEY_k","","",null,null],[17,"XKB_KEY_l","","",null,null],[17,"XKB_KEY_m","","",null,null],[17,"XKB_KEY_n","","",null,null],[17,"XKB_KEY_o","","",null,null],[17,"XKB_KEY_p","","",null,null],[17,"XKB_KEY_q","","",null,null],[17,"XKB_KEY_r","","",null,null],[17,"XKB_KEY_s","","",null,null],[17,"XKB_KEY_t","","",null,null],[17,"XKB_KEY_u","","",null,null],[17,"XKB_KEY_v","","",null,null],[17,"XKB_KEY_w","","",null,null],[17,"XKB_KEY_x","","",null,null],[17,"XKB_KEY_y","","",null,null],[17,"XKB_KEY_z","","",null,null],[17,"XKB_KEY_braceleft","","",null,null],[17,"XKB_KEY_bar","","",null,null],[17,"XKB_KEY_braceright","","",null,null],[17,"XKB_KEY_asciitilde","","",null,null],[17,"XKB_KEY_nobreakspace","","",null,null],[17,"XKB_KEY_exclamdown","","",null,null],[17,"XKB_KEY_cent","","",null,null],[17,"XKB_KEY_sterling","","",null,null],[17,"XKB_KEY_currency","","",null,null],[17,"XKB_KEY_yen","","",null,null],[17,"XKB_KEY_brokenbar","","",null,null],[17,"XKB_KEY_section","","",null,null],[17,"XKB_KEY_diaeresis","","",null,null],[17,"XKB_KEY_copyright","","",null,null],[17,"XKB_KEY_ordfeminine","","",null,null],[17,"XKB_KEY_guillemotleft","","",null,null],[17,"XKB_KEY_notsign","","",null,null],[17,"XKB_KEY_hyphen","","",null,null],[17,"XKB_KEY_registered","","",null,null],[17,"XKB_KEY_macron","","",null,null],[17,"XKB_KEY_degree","","",null,null],[17,"XKB_KEY_plusminus","","",null,null],[17,"XKB_KEY_twosuperior","","",null,null],[17,"XKB_KEY_threesuperior","","",null,null],[17,"XKB_KEY_acute","","",null,null],[17,"XKB_KEY_mu","","",null,null],[17,"XKB_KEY_paragraph","","",null,null],[17,"XKB_KEY_periodcentered","","",null,null],[17,"XKB_KEY_cedilla","","",null,null],[17,"XKB_KEY_onesuperior","","",null,null],[17,"XKB_KEY_masculine","","",null,null],[17,"XKB_KEY_guillemotright","","",null,null],[17,"XKB_KEY_onequarter","","",null,null],[17,"XKB_KEY_onehalf","","",null,null],[17,"XKB_KEY_threequarters","","",null,null],[17,"XKB_KEY_questiondown","","",null,null],[17,"XKB_KEY_Agrave","","",null,null],[17,"XKB_KEY_Aacute","","",null,null],[17,"XKB_KEY_Acircumflex","","",null,null],[17,"XKB_KEY_Atilde","","",null,null],[17,"XKB_KEY_Adiaeresis","","",null,null],[17,"XKB_KEY_Aring","","",null,null],[17,"XKB_KEY_AE","","",null,null],[17,"XKB_KEY_Ccedilla","","",null,null],[17,"XKB_KEY_Egrave","","",null,null],[17,"XKB_KEY_Eacute","","",null,null],[17,"XKB_KEY_Ecircumflex","","",null,null],[17,"XKB_KEY_Ediaeresis","","",null,null],[17,"XKB_KEY_Igrave","","",null,null],[17,"XKB_KEY_Iacute","","",null,null],[17,"XKB_KEY_Icircumflex","","",null,null],[17,"XKB_KEY_Idiaeresis","","",null,null],[17,"XKB_KEY_ETH","","",null,null],[17,"XKB_KEY_Eth","","",null,null],[17,"XKB_KEY_Ntilde","","",null,null],[17,"XKB_KEY_Ograve","","",null,null],[17,"XKB_KEY_Oacute","","",null,null],[17,"XKB_KEY_Ocircumflex","","",null,null],[17,"XKB_KEY_Otilde","","",null,null],[17,"XKB_KEY_Odiaeresis","","",null,null],[17,"XKB_KEY_multiply","","",null,null],[17,"XKB_KEY_Oslash","","",null,null],[17,"XKB_KEY_Ooblique","","",null,null],[17,"XKB_KEY_Ugrave","","",null,null],[17,"XKB_KEY_Uacute","","",null,null],[17,"XKB_KEY_Ucircumflex","","",null,null],[17,"XKB_KEY_Udiaeresis","","",null,null],[17,"XKB_KEY_Yacute","","",null,null],[17,"XKB_KEY_THORN","","",null,null],[17,"XKB_KEY_Thorn","","",null,null],[17,"XKB_KEY_ssharp","","",null,null],[17,"XKB_KEY_agrave","","",null,null],[17,"XKB_KEY_aacute","","",null,null],[17,"XKB_KEY_acircumflex","","",null,null],[17,"XKB_KEY_atilde","","",null,null],[17,"XKB_KEY_adiaeresis","","",null,null],[17,"XKB_KEY_aring","","",null,null],[17,"XKB_KEY_ae","","",null,null],[17,"XKB_KEY_ccedilla","","",null,null],[17,"XKB_KEY_egrave","","",null,null],[17,"XKB_KEY_eacute","","",null,null],[17,"XKB_KEY_ecircumflex","","",null,null],[17,"XKB_KEY_ediaeresis","","",null,null],[17,"XKB_KEY_igrave","","",null,null],[17,"XKB_KEY_iacute","","",null,null],[17,"XKB_KEY_icircumflex","","",null,null],[17,"XKB_KEY_idiaeresis","","",null,null],[17,"XKB_KEY_eth","","",null,null],[17,"XKB_KEY_ntilde","","",null,null],[17,"XKB_KEY_ograve","","",null,null],[17,"XKB_KEY_oacute","","",null,null],[17,"XKB_KEY_ocircumflex","","",null,null],[17,"XKB_KEY_otilde","","",null,null],[17,"XKB_KEY_odiaeresis","","",null,null],[17,"XKB_KEY_division","","",null,null],[17,"XKB_KEY_oslash","","",null,null],[17,"XKB_KEY_ooblique","","",null,null],[17,"XKB_KEY_ugrave","","",null,null],[17,"XKB_KEY_uacute","","",null,null],[17,"XKB_KEY_ucircumflex","","",null,null],[17,"XKB_KEY_udiaeresis","","",null,null],[17,"XKB_KEY_yacute","","",null,null],[17,"XKB_KEY_thorn","","",null,null],[17,"XKB_KEY_ydiaeresis","","",null,null],[17,"XKB_KEY_Aogonek","","",null,null],[17,"XKB_KEY_breve","","",null,null],[17,"XKB_KEY_Lstroke","","",null,null],[17,"XKB_KEY_Lcaron","","",null,null],[17,"XKB_KEY_Sacute","","",null,null],[17,"XKB_KEY_Scaron","","",null,null],[17,"XKB_KEY_Scedilla","","",null,null],[17,"XKB_KEY_Tcaron","","",null,null],[17,"XKB_KEY_Zacute","","",null,null],[17,"XKB_KEY_Zcaron","","",null,null],[17,"XKB_KEY_Zabovedot","","",null,null],[17,"XKB_KEY_aogonek","","",null,null],[17,"XKB_KEY_ogonek","","",null,null],[17,"XKB_KEY_lstroke","","",null,null],[17,"XKB_KEY_lcaron","","",null,null],[17,"XKB_KEY_sacute","","",null,null],[17,"XKB_KEY_caron","","",null,null],[17,"XKB_KEY_scaron","","",null,null],[17,"XKB_KEY_scedilla","","",null,null],[17,"XKB_KEY_tcaron","","",null,null],[17,"XKB_KEY_zacute","","",null,null],[17,"XKB_KEY_doubleacute","","",null,null],[17,"XKB_KEY_zcaron","","",null,null],[17,"XKB_KEY_zabovedot","","",null,null],[17,"XKB_KEY_Racute","","",null,null],[17,"XKB_KEY_Abreve","","",null,null],[17,"XKB_KEY_Lacute","","",null,null],[17,"XKB_KEY_Cacute","","",null,null],[17,"XKB_KEY_Ccaron","","",null,null],[17,"XKB_KEY_Eogonek","","",null,null],[17,"XKB_KEY_Ecaron","","",null,null],[17,"XKB_KEY_Dcaron","","",null,null],[17,"XKB_KEY_Dstroke","","",null,null],[17,"XKB_KEY_Nacute","","",null,null],[17,"XKB_KEY_Ncaron","","",null,null],[17,"XKB_KEY_Odoubleacute","","",null,null],[17,"XKB_KEY_Rcaron","","",null,null],[17,"XKB_KEY_Uring","","",null,null],[17,"XKB_KEY_Udoubleacute","","",null,null],[17,"XKB_KEY_Tcedilla","","",null,null],[17,"XKB_KEY_racute","","",null,null],[17,"XKB_KEY_abreve","","",null,null],[17,"XKB_KEY_lacute","","",null,null],[17,"XKB_KEY_cacute","","",null,null],[17,"XKB_KEY_ccaron","","",null,null],[17,"XKB_KEY_eogonek","","",null,null],[17,"XKB_KEY_ecaron","","",null,null],[17,"XKB_KEY_dcaron","","",null,null],[17,"XKB_KEY_dstroke","","",null,null],[17,"XKB_KEY_nacute","","",null,null],[17,"XKB_KEY_ncaron","","",null,null],[17,"XKB_KEY_odoubleacute","","",null,null],[17,"XKB_KEY_rcaron","","",null,null],[17,"XKB_KEY_uring","","",null,null],[17,"XKB_KEY_udoubleacute","","",null,null],[17,"XKB_KEY_tcedilla","","",null,null],[17,"XKB_KEY_abovedot","","",null,null],[17,"XKB_KEY_Hstroke","","",null,null],[17,"XKB_KEY_Hcircumflex","","",null,null],[17,"XKB_KEY_Iabovedot","","",null,null],[17,"XKB_KEY_Gbreve","","",null,null],[17,"XKB_KEY_Jcircumflex","","",null,null],[17,"XKB_KEY_hstroke","","",null,null],[17,"XKB_KEY_hcircumflex","","",null,null],[17,"XKB_KEY_idotless","","",null,null],[17,"XKB_KEY_gbreve","","",null,null],[17,"XKB_KEY_jcircumflex","","",null,null],[17,"XKB_KEY_Cabovedot","","",null,null],[17,"XKB_KEY_Ccircumflex","","",null,null],[17,"XKB_KEY_Gabovedot","","",null,null],[17,"XKB_KEY_Gcircumflex","","",null,null],[17,"XKB_KEY_Ubreve","","",null,null],[17,"XKB_KEY_Scircumflex","","",null,null],[17,"XKB_KEY_cabovedot","","",null,null],[17,"XKB_KEY_ccircumflex","","",null,null],[17,"XKB_KEY_gabovedot","","",null,null],[17,"XKB_KEY_gcircumflex","","",null,null],[17,"XKB_KEY_ubreve","","",null,null],[17,"XKB_KEY_scircumflex","","",null,null],[17,"XKB_KEY_kra","","",null,null],[17,"XKB_KEY_kappa","","",null,null],[17,"XKB_KEY_Rcedilla","","",null,null],[17,"XKB_KEY_Itilde","","",null,null],[17,"XKB_KEY_Lcedilla","","",null,null],[17,"XKB_KEY_Emacron","","",null,null],[17,"XKB_KEY_Gcedilla","","",null,null],[17,"XKB_KEY_Tslash","","",null,null],[17,"XKB_KEY_rcedilla","","",null,null],[17,"XKB_KEY_itilde","","",null,null],[17,"XKB_KEY_lcedilla","","",null,null],[17,"XKB_KEY_emacron","","",null,null],[17,"XKB_KEY_gcedilla","","",null,null],[17,"XKB_KEY_tslash","","",null,null],[17,"XKB_KEY_ENG","","",null,null],[17,"XKB_KEY_eng","","",null,null],[17,"XKB_KEY_Amacron","","",null,null],[17,"XKB_KEY_Iogonek","","",null,null],[17,"XKB_KEY_Eabovedot","","",null,null],[17,"XKB_KEY_Imacron","","",null,null],[17,"XKB_KEY_Ncedilla","","",null,null],[17,"XKB_KEY_Omacron","","",null,null],[17,"XKB_KEY_Kcedilla","","",null,null],[17,"XKB_KEY_Uogonek","","",null,null],[17,"XKB_KEY_Utilde","","",null,null],[17,"XKB_KEY_Umacron","","",null,null],[17,"XKB_KEY_amacron","","",null,null],[17,"XKB_KEY_iogonek","","",null,null],[17,"XKB_KEY_eabovedot","","",null,null],[17,"XKB_KEY_imacron","","",null,null],[17,"XKB_KEY_ncedilla","","",null,null],[17,"XKB_KEY_omacron","","",null,null],[17,"XKB_KEY_kcedilla","","",null,null],[17,"XKB_KEY_uogonek","","",null,null],[17,"XKB_KEY_utilde","","",null,null],[17,"XKB_KEY_umacron","","",null,null],[17,"XKB_KEY_Wcircumflex","","",null,null],[17,"XKB_KEY_wcircumflex","","",null,null],[17,"XKB_KEY_Ycircumflex","","",null,null],[17,"XKB_KEY_ycircumflex","","",null,null],[17,"XKB_KEY_Babovedot","","",null,null],[17,"XKB_KEY_babovedot","","",null,null],[17,"XKB_KEY_Dabovedot","","",null,null],[17,"XKB_KEY_dabovedot","","",null,null],[17,"XKB_KEY_Fabovedot","","",null,null],[17,"XKB_KEY_fabovedot","","",null,null],[17,"XKB_KEY_Mabovedot","","",null,null],[17,"XKB_KEY_mabovedot","","",null,null],[17,"XKB_KEY_Pabovedot","","",null,null],[17,"XKB_KEY_pabovedot","","",null,null],[17,"XKB_KEY_Sabovedot","","",null,null],[17,"XKB_KEY_sabovedot","","",null,null],[17,"XKB_KEY_Tabovedot","","",null,null],[17,"XKB_KEY_tabovedot","","",null,null],[17,"XKB_KEY_Wgrave","","",null,null],[17,"XKB_KEY_wgrave","","",null,null],[17,"XKB_KEY_Wacute","","",null,null],[17,"XKB_KEY_wacute","","",null,null],[17,"XKB_KEY_Wdiaeresis","","",null,null],[17,"XKB_KEY_wdiaeresis","","",null,null],[17,"XKB_KEY_Ygrave","","",null,null],[17,"XKB_KEY_ygrave","","",null,null],[17,"XKB_KEY_OE","","",null,null],[17,"XKB_KEY_oe","","",null,null],[17,"XKB_KEY_Ydiaeresis","","",null,null],[17,"XKB_KEY_overline","","",null,null],[17,"XKB_KEY_kana_fullstop","","",null,null],[17,"XKB_KEY_kana_openingbracket","","",null,null],[17,"XKB_KEY_kana_closingbracket","","",null,null],[17,"XKB_KEY_kana_comma","","",null,null],[17,"XKB_KEY_kana_conjunctive","","",null,null],[17,"XKB_KEY_kana_middledot","","",null,null],[17,"XKB_KEY_kana_WO","","",null,null],[17,"XKB_KEY_kana_a","","",null,null],[17,"XKB_KEY_kana_i","","",null,null],[17,"XKB_KEY_kana_u","","",null,null],[17,"XKB_KEY_kana_e","","",null,null],[17,"XKB_KEY_kana_o","","",null,null],[17,"XKB_KEY_kana_ya","","",null,null],[17,"XKB_KEY_kana_yu","","",null,null],[17,"XKB_KEY_kana_yo","","",null,null],[17,"XKB_KEY_kana_tsu","","",null,null],[17,"XKB_KEY_kana_tu","","",null,null],[17,"XKB_KEY_prolongedsound","","",null,null],[17,"XKB_KEY_kana_A","","",null,null],[17,"XKB_KEY_kana_I","","",null,null],[17,"XKB_KEY_kana_U","","",null,null],[17,"XKB_KEY_kana_E","","",null,null],[17,"XKB_KEY_kana_O","","",null,null],[17,"XKB_KEY_kana_KA","","",null,null],[17,"XKB_KEY_kana_KI","","",null,null],[17,"XKB_KEY_kana_KU","","",null,null],[17,"XKB_KEY_kana_KE","","",null,null],[17,"XKB_KEY_kana_KO","","",null,null],[17,"XKB_KEY_kana_SA","","",null,null],[17,"XKB_KEY_kana_SHI","","",null,null],[17,"XKB_KEY_kana_SU","","",null,null],[17,"XKB_KEY_kana_SE","","",null,null],[17,"XKB_KEY_kana_SO","","",null,null],[17,"XKB_KEY_kana_TA","","",null,null],[17,"XKB_KEY_kana_CHI","","",null,null],[17,"XKB_KEY_kana_TI","","",null,null],[17,"XKB_KEY_kana_TSU","","",null,null],[17,"XKB_KEY_kana_TU","","",null,null],[17,"XKB_KEY_kana_TE","","",null,null],[17,"XKB_KEY_kana_TO","","",null,null],[17,"XKB_KEY_kana_NA","","",null,null],[17,"XKB_KEY_kana_NI","","",null,null],[17,"XKB_KEY_kana_NU","","",null,null],[17,"XKB_KEY_kana_NE","","",null,null],[17,"XKB_KEY_kana_NO","","",null,null],[17,"XKB_KEY_kana_HA","","",null,null],[17,"XKB_KEY_kana_HI","","",null,null],[17,"XKB_KEY_kana_FU","","",null,null],[17,"XKB_KEY_kana_HU","","",null,null],[17,"XKB_KEY_kana_HE","","",null,null],[17,"XKB_KEY_kana_HO","","",null,null],[17,"XKB_KEY_kana_MA","","",null,null],[17,"XKB_KEY_kana_MI","","",null,null],[17,"XKB_KEY_kana_MU","","",null,null],[17,"XKB_KEY_kana_ME","","",null,null],[17,"XKB_KEY_kana_MO","","",null,null],[17,"XKB_KEY_kana_YA","","",null,null],[17,"XKB_KEY_kana_YU","","",null,null],[17,"XKB_KEY_kana_YO","","",null,null],[17,"XKB_KEY_kana_RA","","",null,null],[17,"XKB_KEY_kana_RI","","",null,null],[17,"XKB_KEY_kana_RU","","",null,null],[17,"XKB_KEY_kana_RE","","",null,null],[17,"XKB_KEY_kana_RO","","",null,null],[17,"XKB_KEY_kana_WA","","",null,null],[17,"XKB_KEY_kana_N","","",null,null],[17,"XKB_KEY_voicedsound","","",null,null],[17,"XKB_KEY_semivoicedsound","","",null,null],[17,"XKB_KEY_kana_switch","","",null,null],[17,"XKB_KEY_Farsi_0","","",null,null],[17,"XKB_KEY_Farsi_1","","",null,null],[17,"XKB_KEY_Farsi_2","","",null,null],[17,"XKB_KEY_Farsi_3","","",null,null],[17,"XKB_KEY_Farsi_4","","",null,null],[17,"XKB_KEY_Farsi_5","","",null,null],[17,"XKB_KEY_Farsi_6","","",null,null],[17,"XKB_KEY_Farsi_7","","",null,null],[17,"XKB_KEY_Farsi_8","","",null,null],[17,"XKB_KEY_Farsi_9","","",null,null],[17,"XKB_KEY_Arabic_percent","","",null,null],[17,"XKB_KEY_Arabic_superscript_alef","","",null,null],[17,"XKB_KEY_Arabic_tteh","","",null,null],[17,"XKB_KEY_Arabic_peh","","",null,null],[17,"XKB_KEY_Arabic_tcheh","","",null,null],[17,"XKB_KEY_Arabic_ddal","","",null,null],[17,"XKB_KEY_Arabic_rreh","","",null,null],[17,"XKB_KEY_Arabic_comma","","",null,null],[17,"XKB_KEY_Arabic_fullstop","","",null,null],[17,"XKB_KEY_Arabic_0","","",null,null],[17,"XKB_KEY_Arabic_1","","",null,null],[17,"XKB_KEY_Arabic_2","","",null,null],[17,"XKB_KEY_Arabic_3","","",null,null],[17,"XKB_KEY_Arabic_4","","",null,null],[17,"XKB_KEY_Arabic_5","","",null,null],[17,"XKB_KEY_Arabic_6","","",null,null],[17,"XKB_KEY_Arabic_7","","",null,null],[17,"XKB_KEY_Arabic_8","","",null,null],[17,"XKB_KEY_Arabic_9","","",null,null],[17,"XKB_KEY_Arabic_semicolon","","",null,null],[17,"XKB_KEY_Arabic_question_mark","","",null,null],[17,"XKB_KEY_Arabic_hamza","","",null,null],[17,"XKB_KEY_Arabic_maddaonalef","","",null,null],[17,"XKB_KEY_Arabic_hamzaonalef","","",null,null],[17,"XKB_KEY_Arabic_hamzaonwaw","","",null,null],[17,"XKB_KEY_Arabic_hamzaunderalef","","",null,null],[17,"XKB_KEY_Arabic_hamzaonyeh","","",null,null],[17,"XKB_KEY_Arabic_alef","","",null,null],[17,"XKB_KEY_Arabic_beh","","",null,null],[17,"XKB_KEY_Arabic_tehmarbuta","","",null,null],[17,"XKB_KEY_Arabic_teh","","",null,null],[17,"XKB_KEY_Arabic_theh","","",null,null],[17,"XKB_KEY_Arabic_jeem","","",null,null],[17,"XKB_KEY_Arabic_hah","","",null,null],[17,"XKB_KEY_Arabic_khah","","",null,null],[17,"XKB_KEY_Arabic_dal","","",null,null],[17,"XKB_KEY_Arabic_thal","","",null,null],[17,"XKB_KEY_Arabic_ra","","",null,null],[17,"XKB_KEY_Arabic_zain","","",null,null],[17,"XKB_KEY_Arabic_seen","","",null,null],[17,"XKB_KEY_Arabic_sheen","","",null,null],[17,"XKB_KEY_Arabic_sad","","",null,null],[17,"XKB_KEY_Arabic_dad","","",null,null],[17,"XKB_KEY_Arabic_tah","","",null,null],[17,"XKB_KEY_Arabic_zah","","",null,null],[17,"XKB_KEY_Arabic_ain","","",null,null],[17,"XKB_KEY_Arabic_ghain","","",null,null],[17,"XKB_KEY_Arabic_tatweel","","",null,null],[17,"XKB_KEY_Arabic_feh","","",null,null],[17,"XKB_KEY_Arabic_qaf","","",null,null],[17,"XKB_KEY_Arabic_kaf","","",null,null],[17,"XKB_KEY_Arabic_lam","","",null,null],[17,"XKB_KEY_Arabic_meem","","",null,null],[17,"XKB_KEY_Arabic_noon","","",null,null],[17,"XKB_KEY_Arabic_ha","","",null,null],[17,"XKB_KEY_Arabic_heh","","",null,null],[17,"XKB_KEY_Arabic_waw","","",null,null],[17,"XKB_KEY_Arabic_alefmaksura","","",null,null],[17,"XKB_KEY_Arabic_yeh","","",null,null],[17,"XKB_KEY_Arabic_fathatan","","",null,null],[17,"XKB_KEY_Arabic_dammatan","","",null,null],[17,"XKB_KEY_Arabic_kasratan","","",null,null],[17,"XKB_KEY_Arabic_fatha","","",null,null],[17,"XKB_KEY_Arabic_damma","","",null,null],[17,"XKB_KEY_Arabic_kasra","","",null,null],[17,"XKB_KEY_Arabic_shadda","","",null,null],[17,"XKB_KEY_Arabic_sukun","","",null,null],[17,"XKB_KEY_Arabic_madda_above","","",null,null],[17,"XKB_KEY_Arabic_hamza_above","","",null,null],[17,"XKB_KEY_Arabic_hamza_below","","",null,null],[17,"XKB_KEY_Arabic_jeh","","",null,null],[17,"XKB_KEY_Arabic_veh","","",null,null],[17,"XKB_KEY_Arabic_keheh","","",null,null],[17,"XKB_KEY_Arabic_gaf","","",null,null],[17,"XKB_KEY_Arabic_noon_ghunna","","",null,null],[17,"XKB_KEY_Arabic_heh_doachashmee","","",null,null],[17,"XKB_KEY_Farsi_yeh","","",null,null],[17,"XKB_KEY_Arabic_farsi_yeh","","",null,null],[17,"XKB_KEY_Arabic_yeh_baree","","",null,null],[17,"XKB_KEY_Arabic_heh_goal","","",null,null],[17,"XKB_KEY_Arabic_switch","","",null,null],[17,"XKB_KEY_Cyrillic_GHE_bar","","",null,null],[17,"XKB_KEY_Cyrillic_ghe_bar","","",null,null],[17,"XKB_KEY_Cyrillic_ZHE_descender","","",null,null],[17,"XKB_KEY_Cyrillic_zhe_descender","","",null,null],[17,"XKB_KEY_Cyrillic_KA_descender","","",null,null],[17,"XKB_KEY_Cyrillic_ka_descender","","",null,null],[17,"XKB_KEY_Cyrillic_KA_vertstroke","","",null,null],[17,"XKB_KEY_Cyrillic_ka_vertstroke","","",null,null],[17,"XKB_KEY_Cyrillic_EN_descender","","",null,null],[17,"XKB_KEY_Cyrillic_en_descender","","",null,null],[17,"XKB_KEY_Cyrillic_U_straight","","",null,null],[17,"XKB_KEY_Cyrillic_u_straight","","",null,null],[17,"XKB_KEY_Cyrillic_U_straight_bar","","",null,null],[17,"XKB_KEY_Cyrillic_u_straight_bar","","",null,null],[17,"XKB_KEY_Cyrillic_HA_descender","","",null,null],[17,"XKB_KEY_Cyrillic_ha_descender","","",null,null],[17,"XKB_KEY_Cyrillic_CHE_descender","","",null,null],[17,"XKB_KEY_Cyrillic_che_descender","","",null,null],[17,"XKB_KEY_Cyrillic_CHE_vertstroke","","",null,null],[17,"XKB_KEY_Cyrillic_che_vertstroke","","",null,null],[17,"XKB_KEY_Cyrillic_SHHA","","",null,null],[17,"XKB_KEY_Cyrillic_shha","","",null,null],[17,"XKB_KEY_Cyrillic_SCHWA","","",null,null],[17,"XKB_KEY_Cyrillic_schwa","","",null,null],[17,"XKB_KEY_Cyrillic_I_macron","","",null,null],[17,"XKB_KEY_Cyrillic_i_macron","","",null,null],[17,"XKB_KEY_Cyrillic_O_bar","","",null,null],[17,"XKB_KEY_Cyrillic_o_bar","","",null,null],[17,"XKB_KEY_Cyrillic_U_macron","","",null,null],[17,"XKB_KEY_Cyrillic_u_macron","","",null,null],[17,"XKB_KEY_Serbian_dje","","",null,null],[17,"XKB_KEY_Macedonia_gje","","",null,null],[17,"XKB_KEY_Cyrillic_io","","",null,null],[17,"XKB_KEY_Ukrainian_ie","","",null,null],[17,"XKB_KEY_Ukranian_je","","",null,null],[17,"XKB_KEY_Macedonia_dse","","",null,null],[17,"XKB_KEY_Ukrainian_i","","",null,null],[17,"XKB_KEY_Ukranian_i","","",null,null],[17,"XKB_KEY_Ukrainian_yi","","",null,null],[17,"XKB_KEY_Ukranian_yi","","",null,null],[17,"XKB_KEY_Cyrillic_je","","",null,null],[17,"XKB_KEY_Serbian_je","","",null,null],[17,"XKB_KEY_Cyrillic_lje","","",null,null],[17,"XKB_KEY_Serbian_lje","","",null,null],[17,"XKB_KEY_Cyrillic_nje","","",null,null],[17,"XKB_KEY_Serbian_nje","","",null,null],[17,"XKB_KEY_Serbian_tshe","","",null,null],[17,"XKB_KEY_Macedonia_kje","","",null,null],[17,"XKB_KEY_Ukrainian_ghe_with_upturn","","",null,null],[17,"XKB_KEY_Byelorussian_shortu","","",null,null],[17,"XKB_KEY_Cyrillic_dzhe","","",null,null],[17,"XKB_KEY_Serbian_dze","","",null,null],[17,"XKB_KEY_numerosign","","",null,null],[17,"XKB_KEY_Serbian_DJE","","",null,null],[17,"XKB_KEY_Macedonia_GJE","","",null,null],[17,"XKB_KEY_Cyrillic_IO","","",null,null],[17,"XKB_KEY_Ukrainian_IE","","",null,null],[17,"XKB_KEY_Ukranian_JE","","",null,null],[17,"XKB_KEY_Macedonia_DSE","","",null,null],[17,"XKB_KEY_Ukrainian_I","","",null,null],[17,"XKB_KEY_Ukranian_I","","",null,null],[17,"XKB_KEY_Ukrainian_YI","","",null,null],[17,"XKB_KEY_Ukranian_YI","","",null,null],[17,"XKB_KEY_Cyrillic_JE","","",null,null],[17,"XKB_KEY_Serbian_JE","","",null,null],[17,"XKB_KEY_Cyrillic_LJE","","",null,null],[17,"XKB_KEY_Serbian_LJE","","",null,null],[17,"XKB_KEY_Cyrillic_NJE","","",null,null],[17,"XKB_KEY_Serbian_NJE","","",null,null],[17,"XKB_KEY_Serbian_TSHE","","",null,null],[17,"XKB_KEY_Macedonia_KJE","","",null,null],[17,"XKB_KEY_Ukrainian_GHE_WITH_UPTURN","","",null,null],[17,"XKB_KEY_Byelorussian_SHORTU","","",null,null],[17,"XKB_KEY_Cyrillic_DZHE","","",null,null],[17,"XKB_KEY_Serbian_DZE","","",null,null],[17,"XKB_KEY_Cyrillic_yu","","",null,null],[17,"XKB_KEY_Cyrillic_a","","",null,null],[17,"XKB_KEY_Cyrillic_be","","",null,null],[17,"XKB_KEY_Cyrillic_tse","","",null,null],[17,"XKB_KEY_Cyrillic_de","","",null,null],[17,"XKB_KEY_Cyrillic_ie","","",null,null],[17,"XKB_KEY_Cyrillic_ef","","",null,null],[17,"XKB_KEY_Cyrillic_ghe","","",null,null],[17,"XKB_KEY_Cyrillic_ha","","",null,null],[17,"XKB_KEY_Cyrillic_i","","",null,null],[17,"XKB_KEY_Cyrillic_shorti","","",null,null],[17,"XKB_KEY_Cyrillic_ka","","",null,null],[17,"XKB_KEY_Cyrillic_el","","",null,null],[17,"XKB_KEY_Cyrillic_em","","",null,null],[17,"XKB_KEY_Cyrillic_en","","",null,null],[17,"XKB_KEY_Cyrillic_o","","",null,null],[17,"XKB_KEY_Cyrillic_pe","","",null,null],[17,"XKB_KEY_Cyrillic_ya","","",null,null],[17,"XKB_KEY_Cyrillic_er","","",null,null],[17,"XKB_KEY_Cyrillic_es","","",null,null],[17,"XKB_KEY_Cyrillic_te","","",null,null],[17,"XKB_KEY_Cyrillic_u","","",null,null],[17,"XKB_KEY_Cyrillic_zhe","","",null,null],[17,"XKB_KEY_Cyrillic_ve","","",null,null],[17,"XKB_KEY_Cyrillic_softsign","","",null,null],[17,"XKB_KEY_Cyrillic_yeru","","",null,null],[17,"XKB_KEY_Cyrillic_ze","","",null,null],[17,"XKB_KEY_Cyrillic_sha","","",null,null],[17,"XKB_KEY_Cyrillic_e","","",null,null],[17,"XKB_KEY_Cyrillic_shcha","","",null,null],[17,"XKB_KEY_Cyrillic_che","","",null,null],[17,"XKB_KEY_Cyrillic_hardsign","","",null,null],[17,"XKB_KEY_Cyrillic_YU","","",null,null],[17,"XKB_KEY_Cyrillic_A","","",null,null],[17,"XKB_KEY_Cyrillic_BE","","",null,null],[17,"XKB_KEY_Cyrillic_TSE","","",null,null],[17,"XKB_KEY_Cyrillic_DE","","",null,null],[17,"XKB_KEY_Cyrillic_IE","","",null,null],[17,"XKB_KEY_Cyrillic_EF","","",null,null],[17,"XKB_KEY_Cyrillic_GHE","","",null,null],[17,"XKB_KEY_Cyrillic_HA","","",null,null],[17,"XKB_KEY_Cyrillic_I","","",null,null],[17,"XKB_KEY_Cyrillic_SHORTI","","",null,null],[17,"XKB_KEY_Cyrillic_KA","","",null,null],[17,"XKB_KEY_Cyrillic_EL","","",null,null],[17,"XKB_KEY_Cyrillic_EM","","",null,null],[17,"XKB_KEY_Cyrillic_EN","","",null,null],[17,"XKB_KEY_Cyrillic_O","","",null,null],[17,"XKB_KEY_Cyrillic_PE","","",null,null],[17,"XKB_KEY_Cyrillic_YA","","",null,null],[17,"XKB_KEY_Cyrillic_ER","","",null,null],[17,"XKB_KEY_Cyrillic_ES","","",null,null],[17,"XKB_KEY_Cyrillic_TE","","",null,null],[17,"XKB_KEY_Cyrillic_U","","",null,null],[17,"XKB_KEY_Cyrillic_ZHE","","",null,null],[17,"XKB_KEY_Cyrillic_VE","","",null,null],[17,"XKB_KEY_Cyrillic_SOFTSIGN","","",null,null],[17,"XKB_KEY_Cyrillic_YERU","","",null,null],[17,"XKB_KEY_Cyrillic_ZE","","",null,null],[17,"XKB_KEY_Cyrillic_SHA","","",null,null],[17,"XKB_KEY_Cyrillic_E","","",null,null],[17,"XKB_KEY_Cyrillic_SHCHA","","",null,null],[17,"XKB_KEY_Cyrillic_CHE","","",null,null],[17,"XKB_KEY_Cyrillic_HARDSIGN","","",null,null],[17,"XKB_KEY_Greek_ALPHAaccent","","",null,null],[17,"XKB_KEY_Greek_EPSILONaccent","","",null,null],[17,"XKB_KEY_Greek_ETAaccent","","",null,null],[17,"XKB_KEY_Greek_IOTAaccent","","",null,null],[17,"XKB_KEY_Greek_IOTAdieresis","","",null,null],[17,"XKB_KEY_Greek_IOTAdiaeresis","","",null,null],[17,"XKB_KEY_Greek_OMICRONaccent","","",null,null],[17,"XKB_KEY_Greek_UPSILONaccent","","",null,null],[17,"XKB_KEY_Greek_UPSILONdieresis","","",null,null],[17,"XKB_KEY_Greek_OMEGAaccent","","",null,null],[17,"XKB_KEY_Greek_accentdieresis","","",null,null],[17,"XKB_KEY_Greek_horizbar","","",null,null],[17,"XKB_KEY_Greek_alphaaccent","","",null,null],[17,"XKB_KEY_Greek_epsilonaccent","","",null,null],[17,"XKB_KEY_Greek_etaaccent","","",null,null],[17,"XKB_KEY_Greek_iotaaccent","","",null,null],[17,"XKB_KEY_Greek_iotadieresis","","",null,null],[17,"XKB_KEY_Greek_iotaaccentdieresis","","",null,null],[17,"XKB_KEY_Greek_omicronaccent","","",null,null],[17,"XKB_KEY_Greek_upsilonaccent","","",null,null],[17,"XKB_KEY_Greek_upsilondieresis","","",null,null],[17,"XKB_KEY_Greek_upsilonaccentdieresis","","",null,null],[17,"XKB_KEY_Greek_omegaaccent","","",null,null],[17,"XKB_KEY_Greek_ALPHA","","",null,null],[17,"XKB_KEY_Greek_BETA","","",null,null],[17,"XKB_KEY_Greek_GAMMA","","",null,null],[17,"XKB_KEY_Greek_DELTA","","",null,null],[17,"XKB_KEY_Greek_EPSILON","","",null,null],[17,"XKB_KEY_Greek_ZETA","","",null,null],[17,"XKB_KEY_Greek_ETA","","",null,null],[17,"XKB_KEY_Greek_THETA","","",null,null],[17,"XKB_KEY_Greek_IOTA","","",null,null],[17,"XKB_KEY_Greek_KAPPA","","",null,null],[17,"XKB_KEY_Greek_LAMDA","","",null,null],[17,"XKB_KEY_Greek_LAMBDA","","",null,null],[17,"XKB_KEY_Greek_MU","","",null,null],[17,"XKB_KEY_Greek_NU","","",null,null],[17,"XKB_KEY_Greek_XI","","",null,null],[17,"XKB_KEY_Greek_OMICRON","","",null,null],[17,"XKB_KEY_Greek_PI","","",null,null],[17,"XKB_KEY_Greek_RHO","","",null,null],[17,"XKB_KEY_Greek_SIGMA","","",null,null],[17,"XKB_KEY_Greek_TAU","","",null,null],[17,"XKB_KEY_Greek_UPSILON","","",null,null],[17,"XKB_KEY_Greek_PHI","","",null,null],[17,"XKB_KEY_Greek_CHI","","",null,null],[17,"XKB_KEY_Greek_PSI","","",null,null],[17,"XKB_KEY_Greek_OMEGA","","",null,null],[17,"XKB_KEY_Greek_alpha","","",null,null],[17,"XKB_KEY_Greek_beta","","",null,null],[17,"XKB_KEY_Greek_gamma","","",null,null],[17,"XKB_KEY_Greek_delta","","",null,null],[17,"XKB_KEY_Greek_epsilon","","",null,null],[17,"XKB_KEY_Greek_zeta","","",null,null],[17,"XKB_KEY_Greek_eta","","",null,null],[17,"XKB_KEY_Greek_theta","","",null,null],[17,"XKB_KEY_Greek_iota","","",null,null],[17,"XKB_KEY_Greek_kappa","","",null,null],[17,"XKB_KEY_Greek_lamda","","",null,null],[17,"XKB_KEY_Greek_lambda","","",null,null],[17,"XKB_KEY_Greek_mu","","",null,null],[17,"XKB_KEY_Greek_nu","","",null,null],[17,"XKB_KEY_Greek_xi","","",null,null],[17,"XKB_KEY_Greek_omicron","","",null,null],[17,"XKB_KEY_Greek_pi","","",null,null],[17,"XKB_KEY_Greek_rho","","",null,null],[17,"XKB_KEY_Greek_sigma","","",null,null],[17,"XKB_KEY_Greek_finalsmallsigma","","",null,null],[17,"XKB_KEY_Greek_tau","","",null,null],[17,"XKB_KEY_Greek_upsilon","","",null,null],[17,"XKB_KEY_Greek_phi","","",null,null],[17,"XKB_KEY_Greek_chi","","",null,null],[17,"XKB_KEY_Greek_psi","","",null,null],[17,"XKB_KEY_Greek_omega","","",null,null],[17,"XKB_KEY_Greek_switch","","",null,null],[17,"XKB_KEY_leftradical","","",null,null],[17,"XKB_KEY_topleftradical","","",null,null],[17,"XKB_KEY_horizconnector","","",null,null],[17,"XKB_KEY_topintegral","","",null,null],[17,"XKB_KEY_botintegral","","",null,null],[17,"XKB_KEY_vertconnector","","",null,null],[17,"XKB_KEY_topleftsqbracket","","",null,null],[17,"XKB_KEY_botleftsqbracket","","",null,null],[17,"XKB_KEY_toprightsqbracket","","",null,null],[17,"XKB_KEY_botrightsqbracket","","",null,null],[17,"XKB_KEY_topleftparens","","",null,null],[17,"XKB_KEY_botleftparens","","",null,null],[17,"XKB_KEY_toprightparens","","",null,null],[17,"XKB_KEY_botrightparens","","",null,null],[17,"XKB_KEY_leftmiddlecurlybrace","","",null,null],[17,"XKB_KEY_rightmiddlecurlybrace","","",null,null],[17,"XKB_KEY_topleftsummation","","",null,null],[17,"XKB_KEY_botleftsummation","","",null,null],[17,"XKB_KEY_topvertsummationconnector","","",null,null],[17,"XKB_KEY_botvertsummationconnector","","",null,null],[17,"XKB_KEY_toprightsummation","","",null,null],[17,"XKB_KEY_botrightsummation","","",null,null],[17,"XKB_KEY_rightmiddlesummation","","",null,null],[17,"XKB_KEY_lessthanequal","","",null,null],[17,"XKB_KEY_notequal","","",null,null],[17,"XKB_KEY_greaterthanequal","","",null,null],[17,"XKB_KEY_integral","","",null,null],[17,"XKB_KEY_therefore","","",null,null],[17,"XKB_KEY_variation","","",null,null],[17,"XKB_KEY_infinity","","",null,null],[17,"XKB_KEY_nabla","","",null,null],[17,"XKB_KEY_approximate","","",null,null],[17,"XKB_KEY_similarequal","","",null,null],[17,"XKB_KEY_ifonlyif","","",null,null],[17,"XKB_KEY_implies","","",null,null],[17,"XKB_KEY_identical","","",null,null],[17,"XKB_KEY_radical","","",null,null],[17,"XKB_KEY_includedin","","",null,null],[17,"XKB_KEY_includes","","",null,null],[17,"XKB_KEY_intersection","","",null,null],[17,"XKB_KEY_union","","",null,null],[17,"XKB_KEY_logicaland","","",null,null],[17,"XKB_KEY_logicalor","","",null,null],[17,"XKB_KEY_partialderivative","","",null,null],[17,"XKB_KEY_function","","",null,null],[17,"XKB_KEY_leftarrow","","",null,null],[17,"XKB_KEY_uparrow","","",null,null],[17,"XKB_KEY_rightarrow","","",null,null],[17,"XKB_KEY_downarrow","","",null,null],[17,"XKB_KEY_blank","","",null,null],[17,"XKB_KEY_soliddiamond","","",null,null],[17,"XKB_KEY_checkerboard","","",null,null],[17,"XKB_KEY_ht","","",null,null],[17,"XKB_KEY_ff","","",null,null],[17,"XKB_KEY_cr","","",null,null],[17,"XKB_KEY_lf","","",null,null],[17,"XKB_KEY_nl","","",null,null],[17,"XKB_KEY_vt","","",null,null],[17,"XKB_KEY_lowrightcorner","","",null,null],[17,"XKB_KEY_uprightcorner","","",null,null],[17,"XKB_KEY_upleftcorner","","",null,null],[17,"XKB_KEY_lowleftcorner","","",null,null],[17,"XKB_KEY_crossinglines","","",null,null],[17,"XKB_KEY_horizlinescan1","","",null,null],[17,"XKB_KEY_horizlinescan3","","",null,null],[17,"XKB_KEY_horizlinescan5","","",null,null],[17,"XKB_KEY_horizlinescan7","","",null,null],[17,"XKB_KEY_horizlinescan9","","",null,null],[17,"XKB_KEY_leftt","","",null,null],[17,"XKB_KEY_rightt","","",null,null],[17,"XKB_KEY_bott","","",null,null],[17,"XKB_KEY_topt","","",null,null],[17,"XKB_KEY_vertbar","","",null,null],[17,"XKB_KEY_emspace","","",null,null],[17,"XKB_KEY_enspace","","",null,null],[17,"XKB_KEY_em3space","","",null,null],[17,"XKB_KEY_em4space","","",null,null],[17,"XKB_KEY_digitspace","","",null,null],[17,"XKB_KEY_punctspace","","",null,null],[17,"XKB_KEY_thinspace","","",null,null],[17,"XKB_KEY_hairspace","","",null,null],[17,"XKB_KEY_emdash","","",null,null],[17,"XKB_KEY_endash","","",null,null],[17,"XKB_KEY_signifblank","","",null,null],[17,"XKB_KEY_ellipsis","","",null,null],[17,"XKB_KEY_doubbaselinedot","","",null,null],[17,"XKB_KEY_onethird","","",null,null],[17,"XKB_KEY_twothirds","","",null,null],[17,"XKB_KEY_onefifth","","",null,null],[17,"XKB_KEY_twofifths","","",null,null],[17,"XKB_KEY_threefifths","","",null,null],[17,"XKB_KEY_fourfifths","","",null,null],[17,"XKB_KEY_onesixth","","",null,null],[17,"XKB_KEY_fivesixths","","",null,null],[17,"XKB_KEY_careof","","",null,null],[17,"XKB_KEY_figdash","","",null,null],[17,"XKB_KEY_leftanglebracket","","",null,null],[17,"XKB_KEY_decimalpoint","","",null,null],[17,"XKB_KEY_rightanglebracket","","",null,null],[17,"XKB_KEY_marker","","",null,null],[17,"XKB_KEY_oneeighth","","",null,null],[17,"XKB_KEY_threeeighths","","",null,null],[17,"XKB_KEY_fiveeighths","","",null,null],[17,"XKB_KEY_seveneighths","","",null,null],[17,"XKB_KEY_trademark","","",null,null],[17,"XKB_KEY_signaturemark","","",null,null],[17,"XKB_KEY_trademarkincircle","","",null,null],[17,"XKB_KEY_leftopentriangle","","",null,null],[17,"XKB_KEY_rightopentriangle","","",null,null],[17,"XKB_KEY_emopencircle","","",null,null],[17,"XKB_KEY_emopenrectangle","","",null,null],[17,"XKB_KEY_leftsinglequotemark","","",null,null],[17,"XKB_KEY_rightsinglequotemark","","",null,null],[17,"XKB_KEY_leftdoublequotemark","","",null,null],[17,"XKB_KEY_rightdoublequotemark","","",null,null],[17,"XKB_KEY_prescription","","",null,null],[17,"XKB_KEY_permille","","",null,null],[17,"XKB_KEY_minutes","","",null,null],[17,"XKB_KEY_seconds","","",null,null],[17,"XKB_KEY_latincross","","",null,null],[17,"XKB_KEY_hexagram","","",null,null],[17,"XKB_KEY_filledrectbullet","","",null,null],[17,"XKB_KEY_filledlefttribullet","","",null,null],[17,"XKB_KEY_filledrighttribullet","","",null,null],[17,"XKB_KEY_emfilledcircle","","",null,null],[17,"XKB_KEY_emfilledrect","","",null,null],[17,"XKB_KEY_enopencircbullet","","",null,null],[17,"XKB_KEY_enopensquarebullet","","",null,null],[17,"XKB_KEY_openrectbullet","","",null,null],[17,"XKB_KEY_opentribulletup","","",null,null],[17,"XKB_KEY_opentribulletdown","","",null,null],[17,"XKB_KEY_openstar","","",null,null],[17,"XKB_KEY_enfilledcircbullet","","",null,null],[17,"XKB_KEY_enfilledsqbullet","","",null,null],[17,"XKB_KEY_filledtribulletup","","",null,null],[17,"XKB_KEY_filledtribulletdown","","",null,null],[17,"XKB_KEY_leftpointer","","",null,null],[17,"XKB_KEY_rightpointer","","",null,null],[17,"XKB_KEY_club","","",null,null],[17,"XKB_KEY_diamond","","",null,null],[17,"XKB_KEY_heart","","",null,null],[17,"XKB_KEY_maltesecross","","",null,null],[17,"XKB_KEY_dagger","","",null,null],[17,"XKB_KEY_doubledagger","","",null,null],[17,"XKB_KEY_checkmark","","",null,null],[17,"XKB_KEY_ballotcross","","",null,null],[17,"XKB_KEY_musicalsharp","","",null,null],[17,"XKB_KEY_musicalflat","","",null,null],[17,"XKB_KEY_malesymbol","","",null,null],[17,"XKB_KEY_femalesymbol","","",null,null],[17,"XKB_KEY_telephone","","",null,null],[17,"XKB_KEY_telephonerecorder","","",null,null],[17,"XKB_KEY_phonographcopyright","","",null,null],[17,"XKB_KEY_caret","","",null,null],[17,"XKB_KEY_singlelowquotemark","","",null,null],[17,"XKB_KEY_doublelowquotemark","","",null,null],[17,"XKB_KEY_cursor","","",null,null],[17,"XKB_KEY_leftcaret","","",null,null],[17,"XKB_KEY_rightcaret","","",null,null],[17,"XKB_KEY_downcaret","","",null,null],[17,"XKB_KEY_upcaret","","",null,null],[17,"XKB_KEY_overbar","","",null,null],[17,"XKB_KEY_downtack","","",null,null],[17,"XKB_KEY_upshoe","","",null,null],[17,"XKB_KEY_downstile","","",null,null],[17,"XKB_KEY_underbar","","",null,null],[17,"XKB_KEY_jot","","",null,null],[17,"XKB_KEY_quad","","",null,null],[17,"XKB_KEY_uptack","","",null,null],[17,"XKB_KEY_circle","","",null,null],[17,"XKB_KEY_upstile","","",null,null],[17,"XKB_KEY_downshoe","","",null,null],[17,"XKB_KEY_rightshoe","","",null,null],[17,"XKB_KEY_leftshoe","","",null,null],[17,"XKB_KEY_lefttack","","",null,null],[17,"XKB_KEY_righttack","","",null,null],[17,"XKB_KEY_hebrew_doublelowline","","",null,null],[17,"XKB_KEY_hebrew_aleph","","",null,null],[17,"XKB_KEY_hebrew_bet","","",null,null],[17,"XKB_KEY_hebrew_beth","","",null,null],[17,"XKB_KEY_hebrew_gimel","","",null,null],[17,"XKB_KEY_hebrew_gimmel","","",null,null],[17,"XKB_KEY_hebrew_dalet","","",null,null],[17,"XKB_KEY_hebrew_daleth","","",null,null],[17,"XKB_KEY_hebrew_he","","",null,null],[17,"XKB_KEY_hebrew_waw","","",null,null],[17,"XKB_KEY_hebrew_zain","","",null,null],[17,"XKB_KEY_hebrew_zayin","","",null,null],[17,"XKB_KEY_hebrew_chet","","",null,null],[17,"XKB_KEY_hebrew_het","","",null,null],[17,"XKB_KEY_hebrew_tet","","",null,null],[17,"XKB_KEY_hebrew_teth","","",null,null],[17,"XKB_KEY_hebrew_yod","","",null,null],[17,"XKB_KEY_hebrew_finalkaph","","",null,null],[17,"XKB_KEY_hebrew_kaph","","",null,null],[17,"XKB_KEY_hebrew_lamed","","",null,null],[17,"XKB_KEY_hebrew_finalmem","","",null,null],[17,"XKB_KEY_hebrew_mem","","",null,null],[17,"XKB_KEY_hebrew_finalnun","","",null,null],[17,"XKB_KEY_hebrew_nun","","",null,null],[17,"XKB_KEY_hebrew_samech","","",null,null],[17,"XKB_KEY_hebrew_samekh","","",null,null],[17,"XKB_KEY_hebrew_ayin","","",null,null],[17,"XKB_KEY_hebrew_finalpe","","",null,null],[17,"XKB_KEY_hebrew_pe","","",null,null],[17,"XKB_KEY_hebrew_finalzade","","",null,null],[17,"XKB_KEY_hebrew_finalzadi","","",null,null],[17,"XKB_KEY_hebrew_zade","","",null,null],[17,"XKB_KEY_hebrew_zadi","","",null,null],[17,"XKB_KEY_hebrew_qoph","","",null,null],[17,"XKB_KEY_hebrew_kuf","","",null,null],[17,"XKB_KEY_hebrew_resh","","",null,null],[17,"XKB_KEY_hebrew_shin","","",null,null],[17,"XKB_KEY_hebrew_taw","","",null,null],[17,"XKB_KEY_hebrew_taf","","",null,null],[17,"XKB_KEY_Hebrew_switch","","",null,null],[17,"XKB_KEY_Thai_kokai","","",null,null],[17,"XKB_KEY_Thai_khokhai","","",null,null],[17,"XKB_KEY_Thai_khokhuat","","",null,null],[17,"XKB_KEY_Thai_khokhwai","","",null,null],[17,"XKB_KEY_Thai_khokhon","","",null,null],[17,"XKB_KEY_Thai_khorakhang","","",null,null],[17,"XKB_KEY_Thai_ngongu","","",null,null],[17,"XKB_KEY_Thai_chochan","","",null,null],[17,"XKB_KEY_Thai_choching","","",null,null],[17,"XKB_KEY_Thai_chochang","","",null,null],[17,"XKB_KEY_Thai_soso","","",null,null],[17,"XKB_KEY_Thai_chochoe","","",null,null],[17,"XKB_KEY_Thai_yoying","","",null,null],[17,"XKB_KEY_Thai_dochada","","",null,null],[17,"XKB_KEY_Thai_topatak","","",null,null],[17,"XKB_KEY_Thai_thothan","","",null,null],[17,"XKB_KEY_Thai_thonangmontho","","",null,null],[17,"XKB_KEY_Thai_thophuthao","","",null,null],[17,"XKB_KEY_Thai_nonen","","",null,null],[17,"XKB_KEY_Thai_dodek","","",null,null],[17,"XKB_KEY_Thai_totao","","",null,null],[17,"XKB_KEY_Thai_thothung","","",null,null],[17,"XKB_KEY_Thai_thothahan","","",null,null],[17,"XKB_KEY_Thai_thothong","","",null,null],[17,"XKB_KEY_Thai_nonu","","",null,null],[17,"XKB_KEY_Thai_bobaimai","","",null,null],[17,"XKB_KEY_Thai_popla","","",null,null],[17,"XKB_KEY_Thai_phophung","","",null,null],[17,"XKB_KEY_Thai_fofa","","",null,null],[17,"XKB_KEY_Thai_phophan","","",null,null],[17,"XKB_KEY_Thai_fofan","","",null,null],[17,"XKB_KEY_Thai_phosamphao","","",null,null],[17,"XKB_KEY_Thai_moma","","",null,null],[17,"XKB_KEY_Thai_yoyak","","",null,null],[17,"XKB_KEY_Thai_rorua","","",null,null],[17,"XKB_KEY_Thai_ru","","",null,null],[17,"XKB_KEY_Thai_loling","","",null,null],[17,"XKB_KEY_Thai_lu","","",null,null],[17,"XKB_KEY_Thai_wowaen","","",null,null],[17,"XKB_KEY_Thai_sosala","","",null,null],[17,"XKB_KEY_Thai_sorusi","","",null,null],[17,"XKB_KEY_Thai_sosua","","",null,null],[17,"XKB_KEY_Thai_hohip","","",null,null],[17,"XKB_KEY_Thai_lochula","","",null,null],[17,"XKB_KEY_Thai_oang","","",null,null],[17,"XKB_KEY_Thai_honokhuk","","",null,null],[17,"XKB_KEY_Thai_paiyannoi","","",null,null],[17,"XKB_KEY_Thai_saraa","","",null,null],[17,"XKB_KEY_Thai_maihanakat","","",null,null],[17,"XKB_KEY_Thai_saraaa","","",null,null],[17,"XKB_KEY_Thai_saraam","","",null,null],[17,"XKB_KEY_Thai_sarai","","",null,null],[17,"XKB_KEY_Thai_saraii","","",null,null],[17,"XKB_KEY_Thai_saraue","","",null,null],[17,"XKB_KEY_Thai_sarauee","","",null,null],[17,"XKB_KEY_Thai_sarau","","",null,null],[17,"XKB_KEY_Thai_sarauu","","",null,null],[17,"XKB_KEY_Thai_phinthu","","",null,null],[17,"XKB_KEY_Thai_maihanakat_maitho","","",null,null],[17,"XKB_KEY_Thai_baht","","",null,null],[17,"XKB_KEY_Thai_sarae","","",null,null],[17,"XKB_KEY_Thai_saraae","","",null,null],[17,"XKB_KEY_Thai_sarao","","",null,null],[17,"XKB_KEY_Thai_saraaimaimuan","","",null,null],[17,"XKB_KEY_Thai_saraaimaimalai","","",null,null],[17,"XKB_KEY_Thai_lakkhangyao","","",null,null],[17,"XKB_KEY_Thai_maiyamok","","",null,null],[17,"XKB_KEY_Thai_maitaikhu","","",null,null],[17,"XKB_KEY_Thai_maiek","","",null,null],[17,"XKB_KEY_Thai_maitho","","",null,null],[17,"XKB_KEY_Thai_maitri","","",null,null],[17,"XKB_KEY_Thai_maichattawa","","",null,null],[17,"XKB_KEY_Thai_thanthakhat","","",null,null],[17,"XKB_KEY_Thai_nikhahit","","",null,null],[17,"XKB_KEY_Thai_leksun","","",null,null],[17,"XKB_KEY_Thai_leknung","","",null,null],[17,"XKB_KEY_Thai_leksong","","",null,null],[17,"XKB_KEY_Thai_leksam","","",null,null],[17,"XKB_KEY_Thai_leksi","","",null,null],[17,"XKB_KEY_Thai_lekha","","",null,null],[17,"XKB_KEY_Thai_lekhok","","",null,null],[17,"XKB_KEY_Thai_lekchet","","",null,null],[17,"XKB_KEY_Thai_lekpaet","","",null,null],[17,"XKB_KEY_Thai_lekkao","","",null,null],[17,"XKB_KEY_Hangul","","",null,null],[17,"XKB_KEY_Hangul_Start","","",null,null],[17,"XKB_KEY_Hangul_End","","",null,null],[17,"XKB_KEY_Hangul_Hanja","","",null,null],[17,"XKB_KEY_Hangul_Jamo","","",null,null],[17,"XKB_KEY_Hangul_Romaja","","",null,null],[17,"XKB_KEY_Hangul_Codeinput","","",null,null],[17,"XKB_KEY_Hangul_Jeonja","","",null,null],[17,"XKB_KEY_Hangul_Banja","","",null,null],[17,"XKB_KEY_Hangul_PreHanja","","",null,null],[17,"XKB_KEY_Hangul_PostHanja","","",null,null],[17,"XKB_KEY_Hangul_SingleCandidate","","",null,null],[17,"XKB_KEY_Hangul_MultipleCandidate","","",null,null],[17,"XKB_KEY_Hangul_PreviousCandidate","","",null,null],[17,"XKB_KEY_Hangul_Special","","",null,null],[17,"XKB_KEY_Hangul_switch","","",null,null],[17,"XKB_KEY_Hangul_Kiyeog","","",null,null],[17,"XKB_KEY_Hangul_SsangKiyeog","","",null,null],[17,"XKB_KEY_Hangul_KiyeogSios","","",null,null],[17,"XKB_KEY_Hangul_Nieun","","",null,null],[17,"XKB_KEY_Hangul_NieunJieuj","","",null,null],[17,"XKB_KEY_Hangul_NieunHieuh","","",null,null],[17,"XKB_KEY_Hangul_Dikeud","","",null,null],[17,"XKB_KEY_Hangul_SsangDikeud","","",null,null],[17,"XKB_KEY_Hangul_Rieul","","",null,null],[17,"XKB_KEY_Hangul_RieulKiyeog","","",null,null],[17,"XKB_KEY_Hangul_RieulMieum","","",null,null],[17,"XKB_KEY_Hangul_RieulPieub","","",null,null],[17,"XKB_KEY_Hangul_RieulSios","","",null,null],[17,"XKB_KEY_Hangul_RieulTieut","","",null,null],[17,"XKB_KEY_Hangul_RieulPhieuf","","",null,null],[17,"XKB_KEY_Hangul_RieulHieuh","","",null,null],[17,"XKB_KEY_Hangul_Mieum","","",null,null],[17,"XKB_KEY_Hangul_Pieub","","",null,null],[17,"XKB_KEY_Hangul_SsangPieub","","",null,null],[17,"XKB_KEY_Hangul_PieubSios","","",null,null],[17,"XKB_KEY_Hangul_Sios","","",null,null],[17,"XKB_KEY_Hangul_SsangSios","","",null,null],[17,"XKB_KEY_Hangul_Ieung","","",null,null],[17,"XKB_KEY_Hangul_Jieuj","","",null,null],[17,"XKB_KEY_Hangul_SsangJieuj","","",null,null],[17,"XKB_KEY_Hangul_Cieuc","","",null,null],[17,"XKB_KEY_Hangul_Khieuq","","",null,null],[17,"XKB_KEY_Hangul_Tieut","","",null,null],[17,"XKB_KEY_Hangul_Phieuf","","",null,null],[17,"XKB_KEY_Hangul_Hieuh","","",null,null],[17,"XKB_KEY_Hangul_A","","",null,null],[17,"XKB_KEY_Hangul_AE","","",null,null],[17,"XKB_KEY_Hangul_YA","","",null,null],[17,"XKB_KEY_Hangul_YAE","","",null,null],[17,"XKB_KEY_Hangul_EO","","",null,null],[17,"XKB_KEY_Hangul_E","","",null,null],[17,"XKB_KEY_Hangul_YEO","","",null,null],[17,"XKB_KEY_Hangul_YE","","",null,null],[17,"XKB_KEY_Hangul_O","","",null,null],[17,"XKB_KEY_Hangul_WA","","",null,null],[17,"XKB_KEY_Hangul_WAE","","",null,null],[17,"XKB_KEY_Hangul_OE","","",null,null],[17,"XKB_KEY_Hangul_YO","","",null,null],[17,"XKB_KEY_Hangul_U","","",null,null],[17,"XKB_KEY_Hangul_WEO","","",null,null],[17,"XKB_KEY_Hangul_WE","","",null,null],[17,"XKB_KEY_Hangul_WI","","",null,null],[17,"XKB_KEY_Hangul_YU","","",null,null],[17,"XKB_KEY_Hangul_EU","","",null,null],[17,"XKB_KEY_Hangul_YI","","",null,null],[17,"XKB_KEY_Hangul_I","","",null,null],[17,"XKB_KEY_Hangul_J_Kiyeog","","",null,null],[17,"XKB_KEY_Hangul_J_SsangKiyeog","","",null,null],[17,"XKB_KEY_Hangul_J_KiyeogSios","","",null,null],[17,"XKB_KEY_Hangul_J_Nieun","","",null,null],[17,"XKB_KEY_Hangul_J_NieunJieuj","","",null,null],[17,"XKB_KEY_Hangul_J_NieunHieuh","","",null,null],[17,"XKB_KEY_Hangul_J_Dikeud","","",null,null],[17,"XKB_KEY_Hangul_J_Rieul","","",null,null],[17,"XKB_KEY_Hangul_J_RieulKiyeog","","",null,null],[17,"XKB_KEY_Hangul_J_RieulMieum","","",null,null],[17,"XKB_KEY_Hangul_J_RieulPieub","","",null,null],[17,"XKB_KEY_Hangul_J_RieulSios","","",null,null],[17,"XKB_KEY_Hangul_J_RieulTieut","","",null,null],[17,"XKB_KEY_Hangul_J_RieulPhieuf","","",null,null],[17,"XKB_KEY_Hangul_J_RieulHieuh","","",null,null],[17,"XKB_KEY_Hangul_J_Mieum","","",null,null],[17,"XKB_KEY_Hangul_J_Pieub","","",null,null],[17,"XKB_KEY_Hangul_J_PieubSios","","",null,null],[17,"XKB_KEY_Hangul_J_Sios","","",null,null],[17,"XKB_KEY_Hangul_J_SsangSios","","",null,null],[17,"XKB_KEY_Hangul_J_Ieung","","",null,null],[17,"XKB_KEY_Hangul_J_Jieuj","","",null,null],[17,"XKB_KEY_Hangul_J_Cieuc","","",null,null],[17,"XKB_KEY_Hangul_J_Khieuq","","",null,null],[17,"XKB_KEY_Hangul_J_Tieut","","",null,null],[17,"XKB_KEY_Hangul_J_Phieuf","","",null,null],[17,"XKB_KEY_Hangul_J_Hieuh","","",null,null],[17,"XKB_KEY_Hangul_RieulYeorinHieuh","","",null,null],[17,"XKB_KEY_Hangul_SunkyeongeumMieum","","",null,null],[17,"XKB_KEY_Hangul_SunkyeongeumPieub","","",null,null],[17,"XKB_KEY_Hangul_PanSios","","",null,null],[17,"XKB_KEY_Hangul_KkogjiDalrinIeung","","",null,null],[17,"XKB_KEY_Hangul_SunkyeongeumPhieuf","","",null,null],[17,"XKB_KEY_Hangul_YeorinHieuh","","",null,null],[17,"XKB_KEY_Hangul_AraeA","","",null,null],[17,"XKB_KEY_Hangul_AraeAE","","",null,null],[17,"XKB_KEY_Hangul_J_PanSios","","",null,null],[17,"XKB_KEY_Hangul_J_KkogjiDalrinIeung","","",null,null],[17,"XKB_KEY_Hangul_J_YeorinHieuh","","",null,null],[17,"XKB_KEY_Korean_Won","","",null,null],[17,"XKB_KEY_Armenian_ligature_ew","","",null,null],[17,"XKB_KEY_Armenian_full_stop","","",null,null],[17,"XKB_KEY_Armenian_verjaket","","",null,null],[17,"XKB_KEY_Armenian_separation_mark","","",null,null],[17,"XKB_KEY_Armenian_but","","",null,null],[17,"XKB_KEY_Armenian_hyphen","","",null,null],[17,"XKB_KEY_Armenian_yentamna","","",null,null],[17,"XKB_KEY_Armenian_exclam","","",null,null],[17,"XKB_KEY_Armenian_amanak","","",null,null],[17,"XKB_KEY_Armenian_accent","","",null,null],[17,"XKB_KEY_Armenian_shesht","","",null,null],[17,"XKB_KEY_Armenian_question","","",null,null],[17,"XKB_KEY_Armenian_paruyk","","",null,null],[17,"XKB_KEY_Armenian_AYB","","",null,null],[17,"XKB_KEY_Armenian_ayb","","",null,null],[17,"XKB_KEY_Armenian_BEN","","",null,null],[17,"XKB_KEY_Armenian_ben","","",null,null],[17,"XKB_KEY_Armenian_GIM","","",null,null],[17,"XKB_KEY_Armenian_gim","","",null,null],[17,"XKB_KEY_Armenian_DA","","",null,null],[17,"XKB_KEY_Armenian_da","","",null,null],[17,"XKB_KEY_Armenian_YECH","","",null,null],[17,"XKB_KEY_Armenian_yech","","",null,null],[17,"XKB_KEY_Armenian_ZA","","",null,null],[17,"XKB_KEY_Armenian_za","","",null,null],[17,"XKB_KEY_Armenian_E","","",null,null],[17,"XKB_KEY_Armenian_e","","",null,null],[17,"XKB_KEY_Armenian_AT","","",null,null],[17,"XKB_KEY_Armenian_at","","",null,null],[17,"XKB_KEY_Armenian_TO","","",null,null],[17,"XKB_KEY_Armenian_to","","",null,null],[17,"XKB_KEY_Armenian_ZHE","","",null,null],[17,"XKB_KEY_Armenian_zhe","","",null,null],[17,"XKB_KEY_Armenian_INI","","",null,null],[17,"XKB_KEY_Armenian_ini","","",null,null],[17,"XKB_KEY_Armenian_LYUN","","",null,null],[17,"XKB_KEY_Armenian_lyun","","",null,null],[17,"XKB_KEY_Armenian_KHE","","",null,null],[17,"XKB_KEY_Armenian_khe","","",null,null],[17,"XKB_KEY_Armenian_TSA","","",null,null],[17,"XKB_KEY_Armenian_tsa","","",null,null],[17,"XKB_KEY_Armenian_KEN","","",null,null],[17,"XKB_KEY_Armenian_ken","","",null,null],[17,"XKB_KEY_Armenian_HO","","",null,null],[17,"XKB_KEY_Armenian_ho","","",null,null],[17,"XKB_KEY_Armenian_DZA","","",null,null],[17,"XKB_KEY_Armenian_dza","","",null,null],[17,"XKB_KEY_Armenian_GHAT","","",null,null],[17,"XKB_KEY_Armenian_ghat","","",null,null],[17,"XKB_KEY_Armenian_TCHE","","",null,null],[17,"XKB_KEY_Armenian_tche","","",null,null],[17,"XKB_KEY_Armenian_MEN","","",null,null],[17,"XKB_KEY_Armenian_men","","",null,null],[17,"XKB_KEY_Armenian_HI","","",null,null],[17,"XKB_KEY_Armenian_hi","","",null,null],[17,"XKB_KEY_Armenian_NU","","",null,null],[17,"XKB_KEY_Armenian_nu","","",null,null],[17,"XKB_KEY_Armenian_SHA","","",null,null],[17,"XKB_KEY_Armenian_sha","","",null,null],[17,"XKB_KEY_Armenian_VO","","",null,null],[17,"XKB_KEY_Armenian_vo","","",null,null],[17,"XKB_KEY_Armenian_CHA","","",null,null],[17,"XKB_KEY_Armenian_cha","","",null,null],[17,"XKB_KEY_Armenian_PE","","",null,null],[17,"XKB_KEY_Armenian_pe","","",null,null],[17,"XKB_KEY_Armenian_JE","","",null,null],[17,"XKB_KEY_Armenian_je","","",null,null],[17,"XKB_KEY_Armenian_RA","","",null,null],[17,"XKB_KEY_Armenian_ra","","",null,null],[17,"XKB_KEY_Armenian_SE","","",null,null],[17,"XKB_KEY_Armenian_se","","",null,null],[17,"XKB_KEY_Armenian_VEV","","",null,null],[17,"XKB_KEY_Armenian_vev","","",null,null],[17,"XKB_KEY_Armenian_TYUN","","",null,null],[17,"XKB_KEY_Armenian_tyun","","",null,null],[17,"XKB_KEY_Armenian_RE","","",null,null],[17,"XKB_KEY_Armenian_re","","",null,null],[17,"XKB_KEY_Armenian_TSO","","",null,null],[17,"XKB_KEY_Armenian_tso","","",null,null],[17,"XKB_KEY_Armenian_VYUN","","",null,null],[17,"XKB_KEY_Armenian_vyun","","",null,null],[17,"XKB_KEY_Armenian_PYUR","","",null,null],[17,"XKB_KEY_Armenian_pyur","","",null,null],[17,"XKB_KEY_Armenian_KE","","",null,null],[17,"XKB_KEY_Armenian_ke","","",null,null],[17,"XKB_KEY_Armenian_O","","",null,null],[17,"XKB_KEY_Armenian_o","","",null,null],[17,"XKB_KEY_Armenian_FE","","",null,null],[17,"XKB_KEY_Armenian_fe","","",null,null],[17,"XKB_KEY_Armenian_apostrophe","","",null,null],[17,"XKB_KEY_Georgian_an","","",null,null],[17,"XKB_KEY_Georgian_ban","","",null,null],[17,"XKB_KEY_Georgian_gan","","",null,null],[17,"XKB_KEY_Georgian_don","","",null,null],[17,"XKB_KEY_Georgian_en","","",null,null],[17,"XKB_KEY_Georgian_vin","","",null,null],[17,"XKB_KEY_Georgian_zen","","",null,null],[17,"XKB_KEY_Georgian_tan","","",null,null],[17,"XKB_KEY_Georgian_in","","",null,null],[17,"XKB_KEY_Georgian_kan","","",null,null],[17,"XKB_KEY_Georgian_las","","",null,null],[17,"XKB_KEY_Georgian_man","","",null,null],[17,"XKB_KEY_Georgian_nar","","",null,null],[17,"XKB_KEY_Georgian_on","","",null,null],[17,"XKB_KEY_Georgian_par","","",null,null],[17,"XKB_KEY_Georgian_zhar","","",null,null],[17,"XKB_KEY_Georgian_rae","","",null,null],[17,"XKB_KEY_Georgian_san","","",null,null],[17,"XKB_KEY_Georgian_tar","","",null,null],[17,"XKB_KEY_Georgian_un","","",null,null],[17,"XKB_KEY_Georgian_phar","","",null,null],[17,"XKB_KEY_Georgian_khar","","",null,null],[17,"XKB_KEY_Georgian_ghan","","",null,null],[17,"XKB_KEY_Georgian_qar","","",null,null],[17,"XKB_KEY_Georgian_shin","","",null,null],[17,"XKB_KEY_Georgian_chin","","",null,null],[17,"XKB_KEY_Georgian_can","","",null,null],[17,"XKB_KEY_Georgian_jil","","",null,null],[17,"XKB_KEY_Georgian_cil","","",null,null],[17,"XKB_KEY_Georgian_char","","",null,null],[17,"XKB_KEY_Georgian_xan","","",null,null],[17,"XKB_KEY_Georgian_jhan","","",null,null],[17,"XKB_KEY_Georgian_hae","","",null,null],[17,"XKB_KEY_Georgian_he","","",null,null],[17,"XKB_KEY_Georgian_hie","","",null,null],[17,"XKB_KEY_Georgian_we","","",null,null],[17,"XKB_KEY_Georgian_har","","",null,null],[17,"XKB_KEY_Georgian_hoe","","",null,null],[17,"XKB_KEY_Georgian_fi","","",null,null],[17,"XKB_KEY_Xabovedot","","",null,null],[17,"XKB_KEY_Ibreve","","",null,null],[17,"XKB_KEY_Zstroke","","",null,null],[17,"XKB_KEY_Gcaron","","",null,null],[17,"XKB_KEY_Ocaron","","",null,null],[17,"XKB_KEY_Obarred","","",null,null],[17,"XKB_KEY_xabovedot","","",null,null],[17,"XKB_KEY_ibreve","","",null,null],[17,"XKB_KEY_zstroke","","",null,null],[17,"XKB_KEY_gcaron","","",null,null],[17,"XKB_KEY_ocaron","","",null,null],[17,"XKB_KEY_obarred","","",null,null],[17,"XKB_KEY_SCHWA","","",null,null],[17,"XKB_KEY_schwa","","",null,null],[17,"XKB_KEY_EZH","","",null,null],[17,"XKB_KEY_ezh","","",null,null],[17,"XKB_KEY_Lbelowdot","","",null,null],[17,"XKB_KEY_lbelowdot","","",null,null],[17,"XKB_KEY_Abelowdot","","",null,null],[17,"XKB_KEY_abelowdot","","",null,null],[17,"XKB_KEY_Ahook","","",null,null],[17,"XKB_KEY_ahook","","",null,null],[17,"XKB_KEY_Acircumflexacute","","",null,null],[17,"XKB_KEY_acircumflexacute","","",null,null],[17,"XKB_KEY_Acircumflexgrave","","",null,null],[17,"XKB_KEY_acircumflexgrave","","",null,null],[17,"XKB_KEY_Acircumflexhook","","",null,null],[17,"XKB_KEY_acircumflexhook","","",null,null],[17,"XKB_KEY_Acircumflextilde","","",null,null],[17,"XKB_KEY_acircumflextilde","","",null,null],[17,"XKB_KEY_Acircumflexbelowdot","","",null,null],[17,"XKB_KEY_acircumflexbelowdot","","",null,null],[17,"XKB_KEY_Abreveacute","","",null,null],[17,"XKB_KEY_abreveacute","","",null,null],[17,"XKB_KEY_Abrevegrave","","",null,null],[17,"XKB_KEY_abrevegrave","","",null,null],[17,"XKB_KEY_Abrevehook","","",null,null],[17,"XKB_KEY_abrevehook","","",null,null],[17,"XKB_KEY_Abrevetilde","","",null,null],[17,"XKB_KEY_abrevetilde","","",null,null],[17,"XKB_KEY_Abrevebelowdot","","",null,null],[17,"XKB_KEY_abrevebelowdot","","",null,null],[17,"XKB_KEY_Ebelowdot","","",null,null],[17,"XKB_KEY_ebelowdot","","",null,null],[17,"XKB_KEY_Ehook","","",null,null],[17,"XKB_KEY_ehook","","",null,null],[17,"XKB_KEY_Etilde","","",null,null],[17,"XKB_KEY_etilde","","",null,null],[17,"XKB_KEY_Ecircumflexacute","","",null,null],[17,"XKB_KEY_ecircumflexacute","","",null,null],[17,"XKB_KEY_Ecircumflexgrave","","",null,null],[17,"XKB_KEY_ecircumflexgrave","","",null,null],[17,"XKB_KEY_Ecircumflexhook","","",null,null],[17,"XKB_KEY_ecircumflexhook","","",null,null],[17,"XKB_KEY_Ecircumflextilde","","",null,null],[17,"XKB_KEY_ecircumflextilde","","",null,null],[17,"XKB_KEY_Ecircumflexbelowdot","","",null,null],[17,"XKB_KEY_ecircumflexbelowdot","","",null,null],[17,"XKB_KEY_Ihook","","",null,null],[17,"XKB_KEY_ihook","","",null,null],[17,"XKB_KEY_Ibelowdot","","",null,null],[17,"XKB_KEY_ibelowdot","","",null,null],[17,"XKB_KEY_Obelowdot","","",null,null],[17,"XKB_KEY_obelowdot","","",null,null],[17,"XKB_KEY_Ohook","","",null,null],[17,"XKB_KEY_ohook","","",null,null],[17,"XKB_KEY_Ocircumflexacute","","",null,null],[17,"XKB_KEY_ocircumflexacute","","",null,null],[17,"XKB_KEY_Ocircumflexgrave","","",null,null],[17,"XKB_KEY_ocircumflexgrave","","",null,null],[17,"XKB_KEY_Ocircumflexhook","","",null,null],[17,"XKB_KEY_ocircumflexhook","","",null,null],[17,"XKB_KEY_Ocircumflextilde","","",null,null],[17,"XKB_KEY_ocircumflextilde","","",null,null],[17,"XKB_KEY_Ocircumflexbelowdot","","",null,null],[17,"XKB_KEY_ocircumflexbelowdot","","",null,null],[17,"XKB_KEY_Ohornacute","","",null,null],[17,"XKB_KEY_ohornacute","","",null,null],[17,"XKB_KEY_Ohorngrave","","",null,null],[17,"XKB_KEY_ohorngrave","","",null,null],[17,"XKB_KEY_Ohornhook","","",null,null],[17,"XKB_KEY_ohornhook","","",null,null],[17,"XKB_KEY_Ohorntilde","","",null,null],[17,"XKB_KEY_ohorntilde","","",null,null],[17,"XKB_KEY_Ohornbelowdot","","",null,null],[17,"XKB_KEY_ohornbelowdot","","",null,null],[17,"XKB_KEY_Ubelowdot","","",null,null],[17,"XKB_KEY_ubelowdot","","",null,null],[17,"XKB_KEY_Uhook","","",null,null],[17,"XKB_KEY_uhook","","",null,null],[17,"XKB_KEY_Uhornacute","","",null,null],[17,"XKB_KEY_uhornacute","","",null,null],[17,"XKB_KEY_Uhorngrave","","",null,null],[17,"XKB_KEY_uhorngrave","","",null,null],[17,"XKB_KEY_Uhornhook","","",null,null],[17,"XKB_KEY_uhornhook","","",null,null],[17,"XKB_KEY_Uhorntilde","","",null,null],[17,"XKB_KEY_uhorntilde","","",null,null],[17,"XKB_KEY_Uhornbelowdot","","",null,null],[17,"XKB_KEY_uhornbelowdot","","",null,null],[17,"XKB_KEY_Ybelowdot","","",null,null],[17,"XKB_KEY_ybelowdot","","",null,null],[17,"XKB_KEY_Yhook","","",null,null],[17,"XKB_KEY_yhook","","",null,null],[17,"XKB_KEY_Ytilde","","",null,null],[17,"XKB_KEY_ytilde","","",null,null],[17,"XKB_KEY_Ohorn","","",null,null],[17,"XKB_KEY_ohorn","","",null,null],[17,"XKB_KEY_Uhorn","","",null,null],[17,"XKB_KEY_uhorn","","",null,null],[17,"XKB_KEY_EcuSign","","",null,null],[17,"XKB_KEY_ColonSign","","",null,null],[17,"XKB_KEY_CruzeiroSign","","",null,null],[17,"XKB_KEY_FFrancSign","","",null,null],[17,"XKB_KEY_LiraSign","","",null,null],[17,"XKB_KEY_MillSign","","",null,null],[17,"XKB_KEY_NairaSign","","",null,null],[17,"XKB_KEY_PesetaSign","","",null,null],[17,"XKB_KEY_RupeeSign","","",null,null],[17,"XKB_KEY_WonSign","","",null,null],[17,"XKB_KEY_NewSheqelSign","","",null,null],[17,"XKB_KEY_DongSign","","",null,null],[17,"XKB_KEY_EuroSign","","",null,null],[17,"XKB_KEY_zerosuperior","","",null,null],[17,"XKB_KEY_foursuperior","","",null,null],[17,"XKB_KEY_fivesuperior","","",null,null],[17,"XKB_KEY_sixsuperior","","",null,null],[17,"XKB_KEY_sevensuperior","","",null,null],[17,"XKB_KEY_eightsuperior","","",null,null],[17,"XKB_KEY_ninesuperior","","",null,null],[17,"XKB_KEY_zerosubscript","","",null,null],[17,"XKB_KEY_onesubscript","","",null,null],[17,"XKB_KEY_twosubscript","","",null,null],[17,"XKB_KEY_threesubscript","","",null,null],[17,"XKB_KEY_foursubscript","","",null,null],[17,"XKB_KEY_fivesubscript","","",null,null],[17,"XKB_KEY_sixsubscript","","",null,null],[17,"XKB_KEY_sevensubscript","","",null,null],[17,"XKB_KEY_eightsubscript","","",null,null],[17,"XKB_KEY_ninesubscript","","",null,null],[17,"XKB_KEY_partdifferential","","",null,null],[17,"XKB_KEY_emptyset","","",null,null],[17,"XKB_KEY_elementof","","",null,null],[17,"XKB_KEY_notelementof","","",null,null],[17,"XKB_KEY_containsas","","",null,null],[17,"XKB_KEY_squareroot","","",null,null],[17,"XKB_KEY_cuberoot","","",null,null],[17,"XKB_KEY_fourthroot","","",null,null],[17,"XKB_KEY_dintegral","","",null,null],[17,"XKB_KEY_tintegral","","",null,null],[17,"XKB_KEY_because","","",null,null],[17,"XKB_KEY_approxeq","","",null,null],[17,"XKB_KEY_notapproxeq","","",null,null],[17,"XKB_KEY_notidentical","","",null,null],[17,"XKB_KEY_stricteq","","",null,null],[17,"XKB_KEY_braille_dot_1","","",null,null],[17,"XKB_KEY_braille_dot_2","","",null,null],[17,"XKB_KEY_braille_dot_3","","",null,null],[17,"XKB_KEY_braille_dot_4","","",null,null],[17,"XKB_KEY_braille_dot_5","","",null,null],[17,"XKB_KEY_braille_dot_6","","",null,null],[17,"XKB_KEY_braille_dot_7","","",null,null],[17,"XKB_KEY_braille_dot_8","","",null,null],[17,"XKB_KEY_braille_dot_9","","",null,null],[17,"XKB_KEY_braille_dot_10","","",null,null],[17,"XKB_KEY_braille_blank","","",null,null],[17,"XKB_KEY_braille_dots_1","","",null,null],[17,"XKB_KEY_braille_dots_2","","",null,null],[17,"XKB_KEY_braille_dots_12","","",null,null],[17,"XKB_KEY_braille_dots_3","","",null,null],[17,"XKB_KEY_braille_dots_13","","",null,null],[17,"XKB_KEY_braille_dots_23","","",null,null],[17,"XKB_KEY_braille_dots_123","","",null,null],[17,"XKB_KEY_braille_dots_4","","",null,null],[17,"XKB_KEY_braille_dots_14","","",null,null],[17,"XKB_KEY_braille_dots_24","","",null,null],[17,"XKB_KEY_braille_dots_124","","",null,null],[17,"XKB_KEY_braille_dots_34","","",null,null],[17,"XKB_KEY_braille_dots_134","","",null,null],[17,"XKB_KEY_braille_dots_234","","",null,null],[17,"XKB_KEY_braille_dots_1234","","",null,null],[17,"XKB_KEY_braille_dots_5","","",null,null],[17,"XKB_KEY_braille_dots_15","","",null,null],[17,"XKB_KEY_braille_dots_25","","",null,null],[17,"XKB_KEY_braille_dots_125","","",null,null],[17,"XKB_KEY_braille_dots_35","","",null,null],[17,"XKB_KEY_braille_dots_135","","",null,null],[17,"XKB_KEY_braille_dots_235","","",null,null],[17,"XKB_KEY_braille_dots_1235","","",null,null],[17,"XKB_KEY_braille_dots_45","","",null,null],[17,"XKB_KEY_braille_dots_145","","",null,null],[17,"XKB_KEY_braille_dots_245","","",null,null],[17,"XKB_KEY_braille_dots_1245","","",null,null],[17,"XKB_KEY_braille_dots_345","","",null,null],[17,"XKB_KEY_braille_dots_1345","","",null,null],[17,"XKB_KEY_braille_dots_2345","","",null,null],[17,"XKB_KEY_braille_dots_12345","","",null,null],[17,"XKB_KEY_braille_dots_6","","",null,null],[17,"XKB_KEY_braille_dots_16","","",null,null],[17,"XKB_KEY_braille_dots_26","","",null,null],[17,"XKB_KEY_braille_dots_126","","",null,null],[17,"XKB_KEY_braille_dots_36","","",null,null],[17,"XKB_KEY_braille_dots_136","","",null,null],[17,"XKB_KEY_braille_dots_236","","",null,null],[17,"XKB_KEY_braille_dots_1236","","",null,null],[17,"XKB_KEY_braille_dots_46","","",null,null],[17,"XKB_KEY_braille_dots_146","","",null,null],[17,"XKB_KEY_braille_dots_246","","",null,null],[17,"XKB_KEY_braille_dots_1246","","",null,null],[17,"XKB_KEY_braille_dots_346","","",null,null],[17,"XKB_KEY_braille_dots_1346","","",null,null],[17,"XKB_KEY_braille_dots_2346","","",null,null],[17,"XKB_KEY_braille_dots_12346","","",null,null],[17,"XKB_KEY_braille_dots_56","","",null,null],[17,"XKB_KEY_braille_dots_156","","",null,null],[17,"XKB_KEY_braille_dots_256","","",null,null],[17,"XKB_KEY_braille_dots_1256","","",null,null],[17,"XKB_KEY_braille_dots_356","","",null,null],[17,"XKB_KEY_braille_dots_1356","","",null,null],[17,"XKB_KEY_braille_dots_2356","","",null,null],[17,"XKB_KEY_braille_dots_12356","","",null,null],[17,"XKB_KEY_braille_dots_456","","",null,null],[17,"XKB_KEY_braille_dots_1456","","",null,null],[17,"XKB_KEY_braille_dots_2456","","",null,null],[17,"XKB_KEY_braille_dots_12456","","",null,null],[17,"XKB_KEY_braille_dots_3456","","",null,null],[17,"XKB_KEY_braille_dots_13456","","",null,null],[17,"XKB_KEY_braille_dots_23456","","",null,null],[17,"XKB_KEY_braille_dots_123456","","",null,null],[17,"XKB_KEY_braille_dots_7","","",null,null],[17,"XKB_KEY_braille_dots_17","","",null,null],[17,"XKB_KEY_braille_dots_27","","",null,null],[17,"XKB_KEY_braille_dots_127","","",null,null],[17,"XKB_KEY_braille_dots_37","","",null,null],[17,"XKB_KEY_braille_dots_137","","",null,null],[17,"XKB_KEY_braille_dots_237","","",null,null],[17,"XKB_KEY_braille_dots_1237","","",null,null],[17,"XKB_KEY_braille_dots_47","","",null,null],[17,"XKB_KEY_braille_dots_147","","",null,null],[17,"XKB_KEY_braille_dots_247","","",null,null],[17,"XKB_KEY_braille_dots_1247","","",null,null],[17,"XKB_KEY_braille_dots_347","","",null,null],[17,"XKB_KEY_braille_dots_1347","","",null,null],[17,"XKB_KEY_braille_dots_2347","","",null,null],[17,"XKB_KEY_braille_dots_12347","","",null,null],[17,"XKB_KEY_braille_dots_57","","",null,null],[17,"XKB_KEY_braille_dots_157","","",null,null],[17,"XKB_KEY_braille_dots_257","","",null,null],[17,"XKB_KEY_braille_dots_1257","","",null,null],[17,"XKB_KEY_braille_dots_357","","",null,null],[17,"XKB_KEY_braille_dots_1357","","",null,null],[17,"XKB_KEY_braille_dots_2357","","",null,null],[17,"XKB_KEY_braille_dots_12357","","",null,null],[17,"XKB_KEY_braille_dots_457","","",null,null],[17,"XKB_KEY_braille_dots_1457","","",null,null],[17,"XKB_KEY_braille_dots_2457","","",null,null],[17,"XKB_KEY_braille_dots_12457","","",null,null],[17,"XKB_KEY_braille_dots_3457","","",null,null],[17,"XKB_KEY_braille_dots_13457","","",null,null],[17,"XKB_KEY_braille_dots_23457","","",null,null],[17,"XKB_KEY_braille_dots_123457","","",null,null],[17,"XKB_KEY_braille_dots_67","","",null,null],[17,"XKB_KEY_braille_dots_167","","",null,null],[17,"XKB_KEY_braille_dots_267","","",null,null],[17,"XKB_KEY_braille_dots_1267","","",null,null],[17,"XKB_KEY_braille_dots_367","","",null,null],[17,"XKB_KEY_braille_dots_1367","","",null,null],[17,"XKB_KEY_braille_dots_2367","","",null,null],[17,"XKB_KEY_braille_dots_12367","","",null,null],[17,"XKB_KEY_braille_dots_467","","",null,null],[17,"XKB_KEY_braille_dots_1467","","",null,null],[17,"XKB_KEY_braille_dots_2467","","",null,null],[17,"XKB_KEY_braille_dots_12467","","",null,null],[17,"XKB_KEY_braille_dots_3467","","",null,null],[17,"XKB_KEY_braille_dots_13467","","",null,null],[17,"XKB_KEY_braille_dots_23467","","",null,null],[17,"XKB_KEY_braille_dots_123467","","",null,null],[17,"XKB_KEY_braille_dots_567","","",null,null],[17,"XKB_KEY_braille_dots_1567","","",null,null],[17,"XKB_KEY_braille_dots_2567","","",null,null],[17,"XKB_KEY_braille_dots_12567","","",null,null],[17,"XKB_KEY_braille_dots_3567","","",null,null],[17,"XKB_KEY_braille_dots_13567","","",null,null],[17,"XKB_KEY_braille_dots_23567","","",null,null],[17,"XKB_KEY_braille_dots_123567","","",null,null],[17,"XKB_KEY_braille_dots_4567","","",null,null],[17,"XKB_KEY_braille_dots_14567","","",null,null],[17,"XKB_KEY_braille_dots_24567","","",null,null],[17,"XKB_KEY_braille_dots_124567","","",null,null],[17,"XKB_KEY_braille_dots_34567","","",null,null],[17,"XKB_KEY_braille_dots_134567","","",null,null],[17,"XKB_KEY_braille_dots_234567","","",null,null],[17,"XKB_KEY_braille_dots_1234567","","",null,null],[17,"XKB_KEY_braille_dots_8","","",null,null],[17,"XKB_KEY_braille_dots_18","","",null,null],[17,"XKB_KEY_braille_dots_28","","",null,null],[17,"XKB_KEY_braille_dots_128","","",null,null],[17,"XKB_KEY_braille_dots_38","","",null,null],[17,"XKB_KEY_braille_dots_138","","",null,null],[17,"XKB_KEY_braille_dots_238","","",null,null],[17,"XKB_KEY_braille_dots_1238","","",null,null],[17,"XKB_KEY_braille_dots_48","","",null,null],[17,"XKB_KEY_braille_dots_148","","",null,null],[17,"XKB_KEY_braille_dots_248","","",null,null],[17,"XKB_KEY_braille_dots_1248","","",null,null],[17,"XKB_KEY_braille_dots_348","","",null,null],[17,"XKB_KEY_braille_dots_1348","","",null,null],[17,"XKB_KEY_braille_dots_2348","","",null,null],[17,"XKB_KEY_braille_dots_12348","","",null,null],[17,"XKB_KEY_braille_dots_58","","",null,null],[17,"XKB_KEY_braille_dots_158","","",null,null],[17,"XKB_KEY_braille_dots_258","","",null,null],[17,"XKB_KEY_braille_dots_1258","","",null,null],[17,"XKB_KEY_braille_dots_358","","",null,null],[17,"XKB_KEY_braille_dots_1358","","",null,null],[17,"XKB_KEY_braille_dots_2358","","",null,null],[17,"XKB_KEY_braille_dots_12358","","",null,null],[17,"XKB_KEY_braille_dots_458","","",null,null],[17,"XKB_KEY_braille_dots_1458","","",null,null],[17,"XKB_KEY_braille_dots_2458","","",null,null],[17,"XKB_KEY_braille_dots_12458","","",null,null],[17,"XKB_KEY_braille_dots_3458","","",null,null],[17,"XKB_KEY_braille_dots_13458","","",null,null],[17,"XKB_KEY_braille_dots_23458","","",null,null],[17,"XKB_KEY_braille_dots_123458","","",null,null],[17,"XKB_KEY_braille_dots_68","","",null,null],[17,"XKB_KEY_braille_dots_168","","",null,null],[17,"XKB_KEY_braille_dots_268","","",null,null],[17,"XKB_KEY_braille_dots_1268","","",null,null],[17,"XKB_KEY_braille_dots_368","","",null,null],[17,"XKB_KEY_braille_dots_1368","","",null,null],[17,"XKB_KEY_braille_dots_2368","","",null,null],[17,"XKB_KEY_braille_dots_12368","","",null,null],[17,"XKB_KEY_braille_dots_468","","",null,null],[17,"XKB_KEY_braille_dots_1468","","",null,null],[17,"XKB_KEY_braille_dots_2468","","",null,null],[17,"XKB_KEY_braille_dots_12468","","",null,null],[17,"XKB_KEY_braille_dots_3468","","",null,null],[17,"XKB_KEY_braille_dots_13468","","",null,null],[17,"XKB_KEY_braille_dots_23468","","",null,null],[17,"XKB_KEY_braille_dots_123468","","",null,null],[17,"XKB_KEY_braille_dots_568","","",null,null],[17,"XKB_KEY_braille_dots_1568","","",null,null],[17,"XKB_KEY_braille_dots_2568","","",null,null],[17,"XKB_KEY_braille_dots_12568","","",null,null],[17,"XKB_KEY_braille_dots_3568","","",null,null],[17,"XKB_KEY_braille_dots_13568","","",null,null],[17,"XKB_KEY_braille_dots_23568","","",null,null],[17,"XKB_KEY_braille_dots_123568","","",null,null],[17,"XKB_KEY_braille_dots_4568","","",null,null],[17,"XKB_KEY_braille_dots_14568","","",null,null],[17,"XKB_KEY_braille_dots_24568","","",null,null],[17,"XKB_KEY_braille_dots_124568","","",null,null],[17,"XKB_KEY_braille_dots_34568","","",null,null],[17,"XKB_KEY_braille_dots_134568","","",null,null],[17,"XKB_KEY_braille_dots_234568","","",null,null],[17,"XKB_KEY_braille_dots_1234568","","",null,null],[17,"XKB_KEY_braille_dots_78","","",null,null],[17,"XKB_KEY_braille_dots_178","","",null,null],[17,"XKB_KEY_braille_dots_278","","",null,null],[17,"XKB_KEY_braille_dots_1278","","",null,null],[17,"XKB_KEY_braille_dots_378","","",null,null],[17,"XKB_KEY_braille_dots_1378","","",null,null],[17,"XKB_KEY_braille_dots_2378","","",null,null],[17,"XKB_KEY_braille_dots_12378","","",null,null],[17,"XKB_KEY_braille_dots_478","","",null,null],[17,"XKB_KEY_braille_dots_1478","","",null,null],[17,"XKB_KEY_braille_dots_2478","","",null,null],[17,"XKB_KEY_braille_dots_12478","","",null,null],[17,"XKB_KEY_braille_dots_3478","","",null,null],[17,"XKB_KEY_braille_dots_13478","","",null,null],[17,"XKB_KEY_braille_dots_23478","","",null,null],[17,"XKB_KEY_braille_dots_123478","","",null,null],[17,"XKB_KEY_braille_dots_578","","",null,null],[17,"XKB_KEY_braille_dots_1578","","",null,null],[17,"XKB_KEY_braille_dots_2578","","",null,null],[17,"XKB_KEY_braille_dots_12578","","",null,null],[17,"XKB_KEY_braille_dots_3578","","",null,null],[17,"XKB_KEY_braille_dots_13578","","",null,null],[17,"XKB_KEY_braille_dots_23578","","",null,null],[17,"XKB_KEY_braille_dots_123578","","",null,null],[17,"XKB_KEY_braille_dots_4578","","",null,null],[17,"XKB_KEY_braille_dots_14578","","",null,null],[17,"XKB_KEY_braille_dots_24578","","",null,null],[17,"XKB_KEY_braille_dots_124578","","",null,null],[17,"XKB_KEY_braille_dots_34578","","",null,null],[17,"XKB_KEY_braille_dots_134578","","",null,null],[17,"XKB_KEY_braille_dots_234578","","",null,null],[17,"XKB_KEY_braille_dots_1234578","","",null,null],[17,"XKB_KEY_braille_dots_678","","",null,null],[17,"XKB_KEY_braille_dots_1678","","",null,null],[17,"XKB_KEY_braille_dots_2678","","",null,null],[17,"XKB_KEY_braille_dots_12678","","",null,null],[17,"XKB_KEY_braille_dots_3678","","",null,null],[17,"XKB_KEY_braille_dots_13678","","",null,null],[17,"XKB_KEY_braille_dots_23678","","",null,null],[17,"XKB_KEY_braille_dots_123678","","",null,null],[17,"XKB_KEY_braille_dots_4678","","",null,null],[17,"XKB_KEY_braille_dots_14678","","",null,null],[17,"XKB_KEY_braille_dots_24678","","",null,null],[17,"XKB_KEY_braille_dots_124678","","",null,null],[17,"XKB_KEY_braille_dots_34678","","",null,null],[17,"XKB_KEY_braille_dots_134678","","",null,null],[17,"XKB_KEY_braille_dots_234678","","",null,null],[17,"XKB_KEY_braille_dots_1234678","","",null,null],[17,"XKB_KEY_braille_dots_5678","","",null,null],[17,"XKB_KEY_braille_dots_15678","","",null,null],[17,"XKB_KEY_braille_dots_25678","","",null,null],[17,"XKB_KEY_braille_dots_125678","","",null,null],[17,"XKB_KEY_braille_dots_35678","","",null,null],[17,"XKB_KEY_braille_dots_135678","","",null,null],[17,"XKB_KEY_braille_dots_235678","","",null,null],[17,"XKB_KEY_braille_dots_1235678","","",null,null],[17,"XKB_KEY_braille_dots_45678","","",null,null],[17,"XKB_KEY_braille_dots_145678","","",null,null],[17,"XKB_KEY_braille_dots_245678","","",null,null],[17,"XKB_KEY_braille_dots_1245678","","",null,null],[17,"XKB_KEY_braille_dots_345678","","",null,null],[17,"XKB_KEY_braille_dots_1345678","","",null,null],[17,"XKB_KEY_braille_dots_2345678","","",null,null],[17,"XKB_KEY_braille_dots_12345678","","",null,null],[17,"XKB_KEY_Sinh_ng","","",null,null],[17,"XKB_KEY_Sinh_h2","","",null,null],[17,"XKB_KEY_Sinh_a","","",null,null],[17,"XKB_KEY_Sinh_aa","","",null,null],[17,"XKB_KEY_Sinh_ae","","",null,null],[17,"XKB_KEY_Sinh_aee","","",null,null],[17,"XKB_KEY_Sinh_i","","",null,null],[17,"XKB_KEY_Sinh_ii","","",null,null],[17,"XKB_KEY_Sinh_u","","",null,null],[17,"XKB_KEY_Sinh_uu","","",null,null],[17,"XKB_KEY_Sinh_ri","","",null,null],[17,"XKB_KEY_Sinh_rii","","",null,null],[17,"XKB_KEY_Sinh_lu","","",null,null],[17,"XKB_KEY_Sinh_luu","","",null,null],[17,"XKB_KEY_Sinh_e","","",null,null],[17,"XKB_KEY_Sinh_ee","","",null,null],[17,"XKB_KEY_Sinh_ai","","",null,null],[17,"XKB_KEY_Sinh_o","","",null,null],[17,"XKB_KEY_Sinh_oo","","",null,null],[17,"XKB_KEY_Sinh_au","","",null,null],[17,"XKB_KEY_Sinh_ka","","",null,null],[17,"XKB_KEY_Sinh_kha","","",null,null],[17,"XKB_KEY_Sinh_ga","","",null,null],[17,"XKB_KEY_Sinh_gha","","",null,null],[17,"XKB_KEY_Sinh_ng2","","",null,null],[17,"XKB_KEY_Sinh_nga","","",null,null],[17,"XKB_KEY_Sinh_ca","","",null,null],[17,"XKB_KEY_Sinh_cha","","",null,null],[17,"XKB_KEY_Sinh_ja","","",null,null],[17,"XKB_KEY_Sinh_jha","","",null,null],[17,"XKB_KEY_Sinh_nya","","",null,null],[17,"XKB_KEY_Sinh_jnya","","",null,null],[17,"XKB_KEY_Sinh_nja","","",null,null],[17,"XKB_KEY_Sinh_tta","","",null,null],[17,"XKB_KEY_Sinh_ttha","","",null,null],[17,"XKB_KEY_Sinh_dda","","",null,null],[17,"XKB_KEY_Sinh_ddha","","",null,null],[17,"XKB_KEY_Sinh_nna","","",null,null],[17,"XKB_KEY_Sinh_ndda","","",null,null],[17,"XKB_KEY_Sinh_tha","","",null,null],[17,"XKB_KEY_Sinh_thha","","",null,null],[17,"XKB_KEY_Sinh_dha","","",null,null],[17,"XKB_KEY_Sinh_dhha","","",null,null],[17,"XKB_KEY_Sinh_na","","",null,null],[17,"XKB_KEY_Sinh_ndha","","",null,null],[17,"XKB_KEY_Sinh_pa","","",null,null],[17,"XKB_KEY_Sinh_pha","","",null,null],[17,"XKB_KEY_Sinh_ba","","",null,null],[17,"XKB_KEY_Sinh_bha","","",null,null],[17,"XKB_KEY_Sinh_ma","","",null,null],[17,"XKB_KEY_Sinh_mba","","",null,null],[17,"XKB_KEY_Sinh_ya","","",null,null],[17,"XKB_KEY_Sinh_ra","","",null,null],[17,"XKB_KEY_Sinh_la","","",null,null],[17,"XKB_KEY_Sinh_va","","",null,null],[17,"XKB_KEY_Sinh_sha","","",null,null],[17,"XKB_KEY_Sinh_ssha","","",null,null],[17,"XKB_KEY_Sinh_sa","","",null,null],[17,"XKB_KEY_Sinh_ha","","",null,null],[17,"XKB_KEY_Sinh_lla","","",null,null],[17,"XKB_KEY_Sinh_fa","","",null,null],[17,"XKB_KEY_Sinh_al","","",null,null],[17,"XKB_KEY_Sinh_aa2","","",null,null],[17,"XKB_KEY_Sinh_ae2","","",null,null],[17,"XKB_KEY_Sinh_aee2","","",null,null],[17,"XKB_KEY_Sinh_i2","","",null,null],[17,"XKB_KEY_Sinh_ii2","","",null,null],[17,"XKB_KEY_Sinh_u2","","",null,null],[17,"XKB_KEY_Sinh_uu2","","",null,null],[17,"XKB_KEY_Sinh_ru2","","",null,null],[17,"XKB_KEY_Sinh_e2","","",null,null],[17,"XKB_KEY_Sinh_ee2","","",null,null],[17,"XKB_KEY_Sinh_ai2","","",null,null],[17,"XKB_KEY_Sinh_o2","","",null,null],[17,"XKB_KEY_Sinh_oo2","","",null,null],[17,"XKB_KEY_Sinh_au2","","",null,null],[17,"XKB_KEY_Sinh_lu2","","",null,null],[17,"XKB_KEY_Sinh_ruu2","","",null,null],[17,"XKB_KEY_Sinh_luu2","","",null,null],[17,"XKB_KEY_Sinh_kunddaliya","","",null,null],[17,"XKB_KEY_XF86ModeLock","","",null,null],[17,"XKB_KEY_XF86MonBrightnessUp","","",null,null],[17,"XKB_KEY_XF86MonBrightnessDown","","",null,null],[17,"XKB_KEY_XF86KbdLightOnOff","","",null,null],[17,"XKB_KEY_XF86KbdBrightnessUp","","",null,null],[17,"XKB_KEY_XF86KbdBrightnessDown","","",null,null],[17,"XKB_KEY_XF86Standby","","",null,null],[17,"XKB_KEY_XF86AudioLowerVolume","","",null,null],[17,"XKB_KEY_XF86AudioMute","","",null,null],[17,"XKB_KEY_XF86AudioRaiseVolume","","",null,null],[17,"XKB_KEY_XF86AudioPlay","","",null,null],[17,"XKB_KEY_XF86AudioStop","","",null,null],[17,"XKB_KEY_XF86AudioPrev","","",null,null],[17,"XKB_KEY_XF86AudioNext","","",null,null],[17,"XKB_KEY_XF86HomePage","","",null,null],[17,"XKB_KEY_XF86Mail","","",null,null],[17,"XKB_KEY_XF86Start","","",null,null],[17,"XKB_KEY_XF86Search","","",null,null],[17,"XKB_KEY_XF86AudioRecord","","",null,null],[17,"XKB_KEY_XF86Calculator","","",null,null],[17,"XKB_KEY_XF86Memo","","",null,null],[17,"XKB_KEY_XF86ToDoList","","",null,null],[17,"XKB_KEY_XF86Calendar","","",null,null],[17,"XKB_KEY_XF86PowerDown","","",null,null],[17,"XKB_KEY_XF86ContrastAdjust","","",null,null],[17,"XKB_KEY_XF86RockerUp","","",null,null],[17,"XKB_KEY_XF86RockerDown","","",null,null],[17,"XKB_KEY_XF86RockerEnter","","",null,null],[17,"XKB_KEY_XF86Back","","",null,null],[17,"XKB_KEY_XF86Forward","","",null,null],[17,"XKB_KEY_XF86Stop","","",null,null],[17,"XKB_KEY_XF86Refresh","","",null,null],[17,"XKB_KEY_XF86PowerOff","","",null,null],[17,"XKB_KEY_XF86WakeUp","","",null,null],[17,"XKB_KEY_XF86Eject","","",null,null],[17,"XKB_KEY_XF86ScreenSaver","","",null,null],[17,"XKB_KEY_XF86WWW","","",null,null],[17,"XKB_KEY_XF86Sleep","","",null,null],[17,"XKB_KEY_XF86Favorites","","",null,null],[17,"XKB_KEY_XF86AudioPause","","",null,null],[17,"XKB_KEY_XF86AudioMedia","","",null,null],[17,"XKB_KEY_XF86MyComputer","","",null,null],[17,"XKB_KEY_XF86VendorHome","","",null,null],[17,"XKB_KEY_XF86LightBulb","","",null,null],[17,"XKB_KEY_XF86Shop","","",null,null],[17,"XKB_KEY_XF86History","","",null,null],[17,"XKB_KEY_XF86OpenURL","","",null,null],[17,"XKB_KEY_XF86AddFavorite","","",null,null],[17,"XKB_KEY_XF86HotLinks","","",null,null],[17,"XKB_KEY_XF86BrightnessAdjust","","",null,null],[17,"XKB_KEY_XF86Finance","","",null,null],[17,"XKB_KEY_XF86Community","","",null,null],[17,"XKB_KEY_XF86AudioRewind","","",null,null],[17,"XKB_KEY_XF86BackForward","","",null,null],[17,"XKB_KEY_XF86Launch0","","",null,null],[17,"XKB_KEY_XF86Launch1","","",null,null],[17,"XKB_KEY_XF86Launch2","","",null,null],[17,"XKB_KEY_XF86Launch3","","",null,null],[17,"XKB_KEY_XF86Launch4","","",null,null],[17,"XKB_KEY_XF86Launch5","","",null,null],[17,"XKB_KEY_XF86Launch6","","",null,null],[17,"XKB_KEY_XF86Launch7","","",null,null],[17,"XKB_KEY_XF86Launch8","","",null,null],[17,"XKB_KEY_XF86Launch9","","",null,null],[17,"XKB_KEY_XF86LaunchA","","",null,null],[17,"XKB_KEY_XF86LaunchB","","",null,null],[17,"XKB_KEY_XF86LaunchC","","",null,null],[17,"XKB_KEY_XF86LaunchD","","",null,null],[17,"XKB_KEY_XF86LaunchE","","",null,null],[17,"XKB_KEY_XF86LaunchF","","",null,null],[17,"XKB_KEY_XF86ApplicationLeft","","",null,null],[17,"XKB_KEY_XF86ApplicationRight","","",null,null],[17,"XKB_KEY_XF86Book","","",null,null],[17,"XKB_KEY_XF86CD","","",null,null],[17,"XKB_KEY_XF86Calculater","","",null,null],[17,"XKB_KEY_XF86Clear","","",null,null],[17,"XKB_KEY_XF86Close","","",null,null],[17,"XKB_KEY_XF86Copy","","",null,null],[17,"XKB_KEY_XF86Cut","","",null,null],[17,"XKB_KEY_XF86Display","","",null,null],[17,"XKB_KEY_XF86DOS","","",null,null],[17,"XKB_KEY_XF86Documents","","",null,null],[17,"XKB_KEY_XF86Excel","","",null,null],[17,"XKB_KEY_XF86Explorer","","",null,null],[17,"XKB_KEY_XF86Game","","",null,null],[17,"XKB_KEY_XF86Go","","",null,null],[17,"XKB_KEY_XF86iTouch","","",null,null],[17,"XKB_KEY_XF86LogOff","","",null,null],[17,"XKB_KEY_XF86Market","","",null,null],[17,"XKB_KEY_XF86Meeting","","",null,null],[17,"XKB_KEY_XF86MenuKB","","",null,null],[17,"XKB_KEY_XF86MenuPB","","",null,null],[17,"XKB_KEY_XF86MySites","","",null,null],[17,"XKB_KEY_XF86New","","",null,null],[17,"XKB_KEY_XF86News","","",null,null],[17,"XKB_KEY_XF86OfficeHome","","",null,null],[17,"XKB_KEY_XF86Open","","",null,null],[17,"XKB_KEY_XF86Option","","",null,null],[17,"XKB_KEY_XF86Paste","","",null,null],[17,"XKB_KEY_XF86Phone","","",null,null],[17,"XKB_KEY_XF86Q","","",null,null],[17,"XKB_KEY_XF86Reply","","",null,null],[17,"XKB_KEY_XF86Reload","","",null,null],[17,"XKB_KEY_XF86RotateWindows","","",null,null],[17,"XKB_KEY_XF86RotationPB","","",null,null],[17,"XKB_KEY_XF86RotationKB","","",null,null],[17,"XKB_KEY_XF86Save","","",null,null],[17,"XKB_KEY_XF86ScrollUp","","",null,null],[17,"XKB_KEY_XF86ScrollDown","","",null,null],[17,"XKB_KEY_XF86ScrollClick","","",null,null],[17,"XKB_KEY_XF86Send","","",null,null],[17,"XKB_KEY_XF86Spell","","",null,null],[17,"XKB_KEY_XF86SplitScreen","","",null,null],[17,"XKB_KEY_XF86Support","","",null,null],[17,"XKB_KEY_XF86TaskPane","","",null,null],[17,"XKB_KEY_XF86Terminal","","",null,null],[17,"XKB_KEY_XF86Tools","","",null,null],[17,"XKB_KEY_XF86Travel","","",null,null],[17,"XKB_KEY_XF86UserPB","","",null,null],[17,"XKB_KEY_XF86User1KB","","",null,null],[17,"XKB_KEY_XF86User2KB","","",null,null],[17,"XKB_KEY_XF86Video","","",null,null],[17,"XKB_KEY_XF86WheelButton","","",null,null],[17,"XKB_KEY_XF86Word","","",null,null],[17,"XKB_KEY_XF86Xfer","","",null,null],[17,"XKB_KEY_XF86ZoomIn","","",null,null],[17,"XKB_KEY_XF86ZoomOut","","",null,null],[17,"XKB_KEY_XF86Away","","",null,null],[17,"XKB_KEY_XF86Messenger","","",null,null],[17,"XKB_KEY_XF86WebCam","","",null,null],[17,"XKB_KEY_XF86MailForward","","",null,null],[17,"XKB_KEY_XF86Pictures","","",null,null],[17,"XKB_KEY_XF86Music","","",null,null],[17,"XKB_KEY_XF86Battery","","",null,null],[17,"XKB_KEY_XF86Bluetooth","","",null,null],[17,"XKB_KEY_XF86WLAN","","",null,null],[17,"XKB_KEY_XF86UWB","","",null,null],[17,"XKB_KEY_XF86AudioForward","","",null,null],[17,"XKB_KEY_XF86AudioRepeat","","",null,null],[17,"XKB_KEY_XF86AudioRandomPlay","","",null,null],[17,"XKB_KEY_XF86Subtitle","","",null,null],[17,"XKB_KEY_XF86AudioCycleTrack","","",null,null],[17,"XKB_KEY_XF86CycleAngle","","",null,null],[17,"XKB_KEY_XF86FrameBack","","",null,null],[17,"XKB_KEY_XF86FrameForward","","",null,null],[17,"XKB_KEY_XF86Time","","",null,null],[17,"XKB_KEY_XF86Select","","",null,null],[17,"XKB_KEY_XF86View","","",null,null],[17,"XKB_KEY_XF86TopMenu","","",null,null],[17,"XKB_KEY_XF86Red","","",null,null],[17,"XKB_KEY_XF86Green","","",null,null],[17,"XKB_KEY_XF86Yellow","","",null,null],[17,"XKB_KEY_XF86Blue","","",null,null],[17,"XKB_KEY_XF86Suspend","","",null,null],[17,"XKB_KEY_XF86Hibernate","","",null,null],[17,"XKB_KEY_XF86TouchpadToggle","","",null,null],[17,"XKB_KEY_XF86TouchpadOn","","",null,null],[17,"XKB_KEY_XF86TouchpadOff","","",null,null],[17,"XKB_KEY_XF86AudioMicMute","","",null,null],[17,"XKB_KEY_XF86Switch_VT_1","","",null,null],[17,"XKB_KEY_XF86Switch_VT_2","","",null,null],[17,"XKB_KEY_XF86Switch_VT_3","","",null,null],[17,"XKB_KEY_XF86Switch_VT_4","","",null,null],[17,"XKB_KEY_XF86Switch_VT_5","","",null,null],[17,"XKB_KEY_XF86Switch_VT_6","","",null,null],[17,"XKB_KEY_XF86Switch_VT_7","","",null,null],[17,"XKB_KEY_XF86Switch_VT_8","","",null,null],[17,"XKB_KEY_XF86Switch_VT_9","","",null,null],[17,"XKB_KEY_XF86Switch_VT_10","","",null,null],[17,"XKB_KEY_XF86Switch_VT_11","","",null,null],[17,"XKB_KEY_XF86Switch_VT_12","","",null,null],[17,"XKB_KEY_XF86Ungrab","","",null,null],[17,"XKB_KEY_XF86ClearGrab","","",null,null],[17,"XKB_KEY_XF86Next_VMode","","",null,null],[17,"XKB_KEY_XF86Prev_VMode","","",null,null],[17,"XKB_KEY_XF86LogWindowTree","","",null,null],[17,"XKB_KEY_XF86LogGrabInfo","","",null,null],[17,"XKB_KEY_SunFA_Grave","","",null,null],[17,"XKB_KEY_SunFA_Circum","","",null,null],[17,"XKB_KEY_SunFA_Tilde","","",null,null],[17,"XKB_KEY_SunFA_Acute","","",null,null],[17,"XKB_KEY_SunFA_Diaeresis","","",null,null],[17,"XKB_KEY_SunFA_Cedilla","","",null,null],[17,"XKB_KEY_SunF36","","",null,null],[17,"XKB_KEY_SunF37","","",null,null],[17,"XKB_KEY_SunSys_Req","","",null,null],[17,"XKB_KEY_SunPrint_Screen","","",null,null],[17,"XKB_KEY_SunCompose","","",null,null],[17,"XKB_KEY_SunAltGraph","","",null,null],[17,"XKB_KEY_SunPageUp","","",null,null],[17,"XKB_KEY_SunPageDown","","",null,null],[17,"XKB_KEY_SunUndo","","",null,null],[17,"XKB_KEY_SunAgain","","",null,null],[17,"XKB_KEY_SunFind","","",null,null],[17,"XKB_KEY_SunStop","","",null,null],[17,"XKB_KEY_SunProps","","",null,null],[17,"XKB_KEY_SunFront","","",null,null],[17,"XKB_KEY_SunCopy","","",null,null],[17,"XKB_KEY_SunOpen","","",null,null],[17,"XKB_KEY_SunPaste","","",null,null],[17,"XKB_KEY_SunCut","","",null,null],[17,"XKB_KEY_SunPowerSwitch","","",null,null],[17,"XKB_KEY_SunAudioLowerVolume","","",null,null],[17,"XKB_KEY_SunAudioMute","","",null,null],[17,"XKB_KEY_SunAudioRaiseVolume","","",null,null],[17,"XKB_KEY_SunVideoDegauss","","",null,null],[17,"XKB_KEY_SunVideoLowerBrightness","","",null,null],[17,"XKB_KEY_SunVideoRaiseBrightness","","",null,null],[17,"XKB_KEY_SunPowerSwitchShift","","",null,null],[17,"XKB_KEY_Dring_accent","","",null,null],[17,"XKB_KEY_Dcircumflex_accent","","",null,null],[17,"XKB_KEY_Dcedilla_accent","","",null,null],[17,"XKB_KEY_Dacute_accent","","",null,null],[17,"XKB_KEY_Dgrave_accent","","",null,null],[17,"XKB_KEY_Dtilde","","",null,null],[17,"XKB_KEY_Ddiaeresis","","",null,null],[17,"XKB_KEY_DRemove","","",null,null],[17,"XKB_KEY_hpClearLine","","",null,null],[17,"XKB_KEY_hpInsertLine","","",null,null],[17,"XKB_KEY_hpDeleteLine","","",null,null],[17,"XKB_KEY_hpInsertChar","","",null,null],[17,"XKB_KEY_hpDeleteChar","","",null,null],[17,"XKB_KEY_hpBackTab","","",null,null],[17,"XKB_KEY_hpKP_BackTab","","",null,null],[17,"XKB_KEY_hpModelock1","","",null,null],[17,"XKB_KEY_hpModelock2","","",null,null],[17,"XKB_KEY_hpReset","","",null,null],[17,"XKB_KEY_hpSystem","","",null,null],[17,"XKB_KEY_hpUser","","",null,null],[17,"XKB_KEY_hpmute_acute","","",null,null],[17,"XKB_KEY_hpmute_grave","","",null,null],[17,"XKB_KEY_hpmute_asciicircum","","",null,null],[17,"XKB_KEY_hpmute_diaeresis","","",null,null],[17,"XKB_KEY_hpmute_asciitilde","","",null,null],[17,"XKB_KEY_hplira","","",null,null],[17,"XKB_KEY_hpguilder","","",null,null],[17,"XKB_KEY_hpYdiaeresis","","",null,null],[17,"XKB_KEY_hpIO","","",null,null],[17,"XKB_KEY_hplongminus","","",null,null],[17,"XKB_KEY_hpblock","","",null,null],[17,"XKB_KEY_osfCopy","","",null,null],[17,"XKB_KEY_osfCut","","",null,null],[17,"XKB_KEY_osfPaste","","",null,null],[17,"XKB_KEY_osfBackTab","","",null,null],[17,"XKB_KEY_osfBackSpace","","",null,null],[17,"XKB_KEY_osfClear","","",null,null],[17,"XKB_KEY_osfEscape","","",null,null],[17,"XKB_KEY_osfAddMode","","",null,null],[17,"XKB_KEY_osfPrimaryPaste","","",null,null],[17,"XKB_KEY_osfQuickPaste","","",null,null],[17,"XKB_KEY_osfPageLeft","","",null,null],[17,"XKB_KEY_osfPageUp","","",null,null],[17,"XKB_KEY_osfPageDown","","",null,null],[17,"XKB_KEY_osfPageRight","","",null,null],[17,"XKB_KEY_osfActivate","","",null,null],[17,"XKB_KEY_osfMenuBar","","",null,null],[17,"XKB_KEY_osfLeft","","",null,null],[17,"XKB_KEY_osfUp","","",null,null],[17,"XKB_KEY_osfRight","","",null,null],[17,"XKB_KEY_osfDown","","",null,null],[17,"XKB_KEY_osfEndLine","","",null,null],[17,"XKB_KEY_osfBeginLine","","",null,null],[17,"XKB_KEY_osfEndData","","",null,null],[17,"XKB_KEY_osfBeginData","","",null,null],[17,"XKB_KEY_osfPrevMenu","","",null,null],[17,"XKB_KEY_osfNextMenu","","",null,null],[17,"XKB_KEY_osfPrevField","","",null,null],[17,"XKB_KEY_osfNextField","","",null,null],[17,"XKB_KEY_osfSelect","","",null,null],[17,"XKB_KEY_osfInsert","","",null,null],[17,"XKB_KEY_osfUndo","","",null,null],[17,"XKB_KEY_osfMenu","","",null,null],[17,"XKB_KEY_osfCancel","","",null,null],[17,"XKB_KEY_osfHelp","","",null,null],[17,"XKB_KEY_osfSelectAll","","",null,null],[17,"XKB_KEY_osfDeselectAll","","",null,null],[17,"XKB_KEY_osfReselect","","",null,null],[17,"XKB_KEY_osfExtend","","",null,null],[17,"XKB_KEY_osfRestore","","",null,null],[17,"XKB_KEY_osfDelete","","",null,null],[17,"XKB_KEY_Reset","","",null,null],[17,"XKB_KEY_System","","",null,null],[17,"XKB_KEY_User","","",null,null],[17,"XKB_KEY_ClearLine","","",null,null],[17,"XKB_KEY_InsertLine","","",null,null],[17,"XKB_KEY_DeleteLine","","",null,null],[17,"XKB_KEY_InsertChar","","",null,null],[17,"XKB_KEY_DeleteChar","","",null,null],[17,"XKB_KEY_BackTab","","",null,null],[17,"XKB_KEY_KP_BackTab","","",null,null],[17,"XKB_KEY_Ext16bit_L","","",null,null],[17,"XKB_KEY_Ext16bit_R","","",null,null],[17,"XKB_KEY_mute_acute","","",null,null],[17,"XKB_KEY_mute_grave","","",null,null],[17,"XKB_KEY_mute_asciicircum","","",null,null],[17,"XKB_KEY_mute_diaeresis","","",null,null],[17,"XKB_KEY_mute_asciitilde","","",null,null],[17,"XKB_KEY_lira","","",null,null],[17,"XKB_KEY_guilder","","",null,null],[17,"XKB_KEY_IO","","",null,null],[17,"XKB_KEY_longminus","","",null,null],[17,"XKB_KEY_block","","",null,null]],"paths":[[3,"KeyEvent"],[4,"MappedKeyboardEvent"],[4,"MappedKeyboardError"],[4,"Option"],[3,"Wrapping"],[3,"ParseFloatError"],[4,"FpCategory"],[3,"TryFromIntError"],[3,"ParseIntError"],[3,"NonZero"],[3,"Unique"],[3,"Shared"],[3,"PhantomData"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"RangeInclusive"],[3,"RangeToInclusive"],[4,"Ordering"],[8,"Any"],[3,"TypeId"],[3,"AtomicBool"],[3,"AtomicPtr"],[4,"Ordering"],[3,"AtomicI8"],[3,"AtomicU8"],[3,"AtomicI16"],[3,"AtomicU16"],[3,"AtomicI32"],[3,"AtomicU32"],[3,"AtomicI64"],[3,"AtomicU64"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"Ref"],[3,"RefMut"],[3,"UnsafeCell"],[3,"EscapeUnicode"],[3,"EscapeDefault"],[3,"EncodeUtf8"],[3,"EncodeUtf16"],[3,"StepBy"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[4,"SearchStep"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"SipHasher13"],[3,"SipHasher24"],[3,"SipHasher"],[3,"BuildHasherDefault"],[4,"Alignment"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Error"],[3,"Arguments"],[3,"Formatter"],[3,"MappedKeyboard"]]};
searchIndex["env_logger"] = {"doc":"A logger configured via an environment variable which writes to standard\nerror.","items":[[3,"LogBuilder","env_logger","LogBuilder acts as builder for initializing the Logger.\nIt can be used to customize the log format, change the enviromental variable used\nto provide the logging directives and also set the default log level filter.",null,null],[5,"init","","Initializes the global logger with an env logger.",null,{"inputs":[],"output":{"name":"result"}}],[11,"new","","Initializes the log builder with defaults",0,{"inputs":[],"output":{"name":"logbuilder"}}],[11,"filter","","Adds filters to the logger",0,null],[11,"format","","Sets the format function for formatting the log output.",0,null],[11,"parse","","Parses the directives string in the same form as the RUST_LOG\nenvironment variable.",0,null],[11,"init","","Initializes the global logger with an env logger.",0,null]],"paths":[[3,"LogBuilder"]]};
searchIndex["regex"] = {"doc":"This crate provides a native implementation of regular expressions that is\nheavily based on RE2 both in syntax and in implementation. Notably,\nbackreferences and arbitrary lookahead/lookbehind assertions are not\nprovided. In return, regular expression searching provided by this package\nhas excellent worst-case performance. The specific syntax supported is\ndocumented further down.","items":[[3,"RegexBuilder","regex","A configurable builder for a regular expression.",null,null],[3,"RegexSet","","Match multiple (possibly overlapping) regular expressions in a single scan.",null,null],[3,"SetMatches","","A set of matches returned by a regex set.",null,null],[3,"SetMatchesIntoIter","","An owned iterator over the set of matches from a regex set.",null,null],[3,"SetMatchesIter","","A borrowed iterator over the set of matches from a regex set.",null,null],[3,"Regex","","A compiled regular expression for matching Unicode strings.",null,null],[3,"Captures","","Captures represents a group of captured strings for a single match.",null,null],[3,"SubCaptures","","An iterator over capture groups for a particular match of a regular\nexpression.",null,null],[3,"SubCapturesPos","","An iterator over capture group positions for a particular match of a\nregular expression.",null,null],[3,"SubCapturesNamed","","An Iterator over named capture groups as a tuple with the group\nname and the value.",null,null],[3,"CaptureNames","","An iterator over the names of all possible captures.",null,null],[3,"FindCaptures","","An iterator that yields all non-overlapping capture groups matching a\nparticular regular expression.",null,null],[3,"FindMatches","","An iterator over all non-overlapping matches for a particular string.",null,null],[3,"NoExpand","","NoExpand indicates literal string replacement.",null,null],[12,"0","","",0,null],[3,"RegexSplits","","Yields all substrings delimited by a regular expression match.",null,null],[3,"RegexSplitsN","","Yields at most `N` substrings delimited by a regular expression match.",null,null],[4,"Error","","An error that occurred during parsing or compiling a regular expression.",null,null],[13,"Syntax","","A syntax error.",1,null],[13,"CompiledTooBig","","The compiled program exceeded the set size limit.\nThe argument is the size limit imposed.",1,null],[13,"InvalidSet","","**DEPRECATED:** Will be removed on next major version bump.",1,null],[5,"quote","","Escapes all regular expression meta characters in `text`.",null,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[5,"is_match","","Tests if the given regular expression matches somewhere in the text given.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[0,"bytes","","Match regular expressions on arbitrary bytes.",null,null],[3,"RegexBuilder","regex::bytes","A configurable builder for a regular expression.",null,null],[3,"RegexSet","","Match multiple (possibly overlapping) regular expressions in a single scan.",null,null],[3,"SetMatches","","A set of matches returned by a regex set.",null,null],[3,"SetMatchesIntoIter","","An owned iterator over the set of matches from a regex set.",null,null],[3,"SetMatchesIter","","A borrowed iterator over the set of matches from a regex set.",null,null],[3,"Regex","","A compiled regular expression for matching arbitrary bytes.",null,null],[3,"FindMatches","","An iterator over all non-overlapping matches for a particular string.",null,null],[3,"FindCaptures","","An iterator that yields all non-overlapping capture groups matching a\nparticular regular expression.",null,null],[3,"Splits","","Yields all substrings delimited by a regular expression match.",null,null],[3,"SplitsN","","Yields at most `N` substrings delimited by a regular expression match.",null,null],[3,"CaptureNames","","An iterator over the names of all possible captures.",null,null],[3,"Captures","","Captures represents a group of captured byte strings for a single match.",null,null],[3,"SubCaptures","","An iterator over capture groups for a particular match of a regular\nexpression.",null,null],[3,"SubCapturesPos","","An iterator over capture group positions for a particular match of a\nregular expression.",null,null],[3,"SubCapturesNamed","","An Iterator over named capture groups as a tuple with the group name and\nthe value.",null,null],[3,"NoExpand","","NoExpand indicates literal byte string replacement.",null,null],[12,"0","","",2,null],[8,"Replacer","","Replacer describes types that can be used to replace matches in a byte\nstring.",null,null],[10,"replace_append","","Appends text to `dst` to replace the current match.",3,null],[11,"no_expansion","","Return a fixed unchanging replacement byte string.",3,null],[11,"fmt","regex","",1,null],[11,"description","","",1,null],[11,"cause","","",1,null],[11,"fmt","","",1,null],[11,"from","","",1,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"new","regex::bytes","Create a new regular expression builder with the given pattern.",4,{"inputs":[{"name":"str"}],"output":{"name":"regexbuilder"}}],[11,"compile","","Consume the builder and compile the regular expression.",4,null],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",4,null],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",4,null],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in `.` matches\nanything when `s` is set and matches anything except for new line when\nit is not set (the default).",4,null],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",4,null],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",4,null],[11,"unicode","","Set the value for the Unicode (`u`) flag.",4,null],[11,"size_limit","","Set the approximate size limit of the compiled regular expression.",4,null],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",4,null],[11,"new","regex","Create a new regular expression builder with the given pattern.",5,{"inputs":[{"name":"str"}],"output":{"name":"regexbuilder"}}],[11,"compile","","Consume the builder and compile the regular expression.",5,null],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",5,null],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",5,null],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in `.` matches\nanything when `s` is set and matches anything except for new line when\nit is not set (the default).",5,null],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",5,null],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",5,null],[11,"unicode","","Set the value for the Unicode (`u`) flag.",5,null],[11,"size_limit","","Set the approximate size limit of the compiled regular expression.",5,null],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",5,null],[11,"no_expansion","regex::re_bytes","Return a fixed unchanging replacement byte string.",3,null],[11,"clone","regex::bytes","",6,null],[11,"fmt","","Shows the original regular expression.",6,null],[11,"fmt","","Shows the original regular expression.",6,null],[11,"from_str","","Attempts to parse a string into a regular expression",6,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"new","","Compiles a regular expression. Once compiled, it can be used repeatedly\nto search, split or replace text in a string.",6,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"with_size_limit","","Compiles a regular expression with the given size limit.",6,{"inputs":[{"name":"usize"},{"name":"str"}],"output":{"name":"result"}}],[11,"is_match","","Returns true if and only if the regex matches the string given.",6,null],[11,"find","","Returns the start and end byte range of the leftmost-first match in\n`text`. If no match exists, then `None` is returned.",6,null],[11,"find_iter","","Returns an iterator for each successive non-overlapping match in\n`text`, returning the start and end byte indices with respect to\n`text`.",6,null],[11,"captures","","Returns the capture groups corresponding to the leftmost-first\nmatch in `text`. Capture group `0` always corresponds to the entire\nmatch. If no match is found, then `None` is returned.",6,null],[11,"captures_iter","","Returns an iterator over all the non-overlapping capture groups matched\nin `text`. This is operationally the same as `find_iter`, except it\nyields information about submatches.",6,null],[11,"split","","Returns an iterator of substrings of `text` delimited by a match of the\nregular expression. Namely, each element of the iterator corresponds to\ntext that *isn&#39;t* matched by the regular expression.",6,null],[11,"splitn","","Returns an iterator of at most `limit` substrings of `text` delimited\nby a match of the regular expression. (A `limit` of `0` will return no\nsubstrings.) Namely, each element of the iterator corresponds to text\nthat *isn&#39;t* matched by the regular expression. The remainder of the\nstring that is not split will be the last element in the iterator.",6,null],[11,"replace","","Replaces the leftmost-first match with the replacement provided. The\nreplacement can be a regular byte string (where `$N` and `$name` are\nexpanded to match capture groups) or a function that takes the matches&#39;\n`Captures` and returns the replaced byte string.",6,null],[11,"replace_all","","Replaces all non-overlapping matches in `text` with the replacement\nprovided. This is the same as calling `replacen` with `limit` set to\n`0`.",6,null],[11,"replacen","","Replaces at most `limit` non-overlapping matches in `text` with the\nreplacement provided. If `limit` is 0, then all non-overlapping matches\nare replaced.",6,null],[11,"shortest_match","","Returns the end location of a match in the text given.",6,null],[11,"as_str","","Returns the original string of this regex.",6,null],[11,"capture_names","","Returns an iterator over the capture names.",6,null],[11,"captures_len","","Returns the number of captures.",6,null],[11,"next","","",7,null],[11,"next","","",8,null],[11,"next","","",9,null],[11,"next","","",10,null],[11,"next","","",11,null],[11,"size_hint","","",11,null],[11,"pos","","Returns the start and end positions of the Nth capture group. Returns\n`None` if `i` is not a valid capture group or if the capture group did\nnot match anything. The positions returned are *always* byte indices\nwith respect to the original byte string matched.",12,null],[11,"at","","Returns the matched string for the capture group `i`.  If `i` isn&#39;t\na valid capture group or didn&#39;t match anything, then `None` is\nreturned.",12,null],[11,"name","","Returns the matched string for the capture group named `name`.  If\n`name` isn&#39;t a valid capture group or didn&#39;t match anything, then\n`None` is returned.",12,null],[11,"iter","","Creates an iterator of all the capture groups in order of appearance\nin the regular expression.",12,null],[11,"iter_pos","","Creates an iterator of all the capture group positions in order of\nappearance in the regular expression. Positions are byte indices\nin terms of the original string matched.",12,null],[11,"iter_named","","Creates an iterator of all named groups as an tuple with the group\nname and the value. The iterator returns these values in arbitrary\norder.",12,null],[11,"expand","","Expands all instances of `$name` in `text` to the corresponding capture\ngroup `name`, and writes them to the `dst` buffer given.",12,null],[11,"len","","Returns the number of captured groups.",12,null],[11,"is_empty","","Returns true if and only if there are no captured groups.",12,null],[11,"fmt","","",12,null],[11,"index","","",12,null],[11,"index","","",12,null],[11,"next","","",13,null],[11,"next","","",14,null],[11,"next","","",15,null],[11,"replace_append","","",2,null],[11,"no_expansion","","",2,null],[11,"clone","regex","",16,null],[11,"new","","Create a new regex set with the given regular expressions.",16,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"is_match","","Returns true if and only if one of the regexes in this set matches\nthe text given.",16,null],[11,"matches","","Returns the set of regular expressions that match in the given text.",16,null],[11,"len","","Returns the total number of regular expressions in this set.",16,null],[11,"fmt","","",17,null],[11,"clone","","",17,null],[11,"matched_any","","Whether this set contains any matches.",17,null],[11,"matched","","Whether the regex at the given index matched.",17,null],[11,"len","","The total number of regexes in the set that created these matches.",17,null],[11,"iter","","Returns an iterator over indexes in the regex that matched.",17,null],[11,"into_iter","","",17,null],[11,"next","","",18,null],[11,"clone","","",19,null],[11,"next","","",19,null],[11,"fmt","","",16,null],[11,"clone","regex::bytes","",20,null],[11,"new","","Create a new regex set with the given regular expressions.",20,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"is_match","","Returns true if and only if one of the regexes in this set matches\nthe text given.",20,null],[11,"matches","","Returns the set of regular expressions that match in the given text.",20,null],[11,"len","","Returns the total number of regular expressions in this set.",20,null],[11,"fmt","","",21,null],[11,"clone","","",21,null],[11,"matched_any","","Whether this set contains any matches.",21,null],[11,"matched","","Whether the regex at the given index matched.",21,null],[11,"len","","The total number of regexes in the set that created these matches.",21,null],[11,"iter","","Returns an iterator over indexes in the regex that matched.",21,null],[11,"into_iter","","",21,null],[11,"next","","",22,null],[11,"clone","","",23,null],[11,"next","","",23,null],[11,"fmt","","",20,null],[11,"clone","regex","",24,null],[11,"fmt","","Shows the original regular expression.",24,null],[11,"fmt","","Shows the original regular expression.",24,null],[11,"eq","","",24,null],[11,"from_str","","Attempts to parse a string into a regular expression",24,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"new","","Compiles a regular expression. Once compiled, it can be used repeatedly\nto search, split or replace text in a string.",24,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"with_size_limit","","Compiles a regular expression with the given size limit.",24,{"inputs":[{"name":"usize"},{"name":"str"}],"output":{"name":"result"}}],[11,"is_match","","Returns true if and only if the regex matches the string given.",24,null],[11,"find","","Returns the start and end byte range of the leftmost-first match in\n`text`. If no match exists, then `None` is returned.",24,null],[11,"find_iter","","Returns an iterator for each successive non-overlapping match in\n`text`, returning the start and end byte indices with respect to\n`text`.",24,null],[11,"captures","","Returns the capture groups corresponding to the leftmost-first\nmatch in `text`. Capture group `0` always corresponds to the entire\nmatch. If no match is found, then `None` is returned.",24,null],[11,"captures_iter","","Returns an iterator over all the non-overlapping capture groups matched\nin `text`. This is operationally the same as `find_iter`, except it\nyields information about submatches.",24,null],[11,"split","","Returns an iterator of substrings of `text` delimited by a match of the\nregular expression. Namely, each element of the iterator corresponds to\ntext that *isn&#39;t* matched by the regular expression.",24,null],[11,"splitn","","Returns an iterator of at most `limit` substrings of `text` delimited\nby a match of the regular expression. (A `limit` of `0` will return no\nsubstrings.) Namely, each element of the iterator corresponds to text\nthat *isn&#39;t* matched by the regular expression. The remainder of the\nstring that is not split will be the last element in the iterator.",24,null],[11,"replace","","Replaces the leftmost-first match with the replacement provided.\nThe replacement can be a regular string (where `$N` and `$name` are\nexpanded to match capture groups) or a function that takes the matches&#39;\n`Captures` and returns the replaced string.",24,null],[11,"replace_all","","Replaces all non-overlapping matches in `text` with the replacement\nprovided. This is the same as calling `replacen` with `limit` set to\n`0`.",24,null],[11,"replacen","","Replaces at most `limit` non-overlapping matches in `text` with the\nreplacement provided. If `limit` is 0, then all non-overlapping matches\nare replaced.",24,null],[11,"shortest_match","","Returns the end location of a match in the text given.",24,null],[11,"as_str","","Returns the original string of this regex.",24,null],[11,"capture_names","","Returns an iterator over the capture names.",24,null],[11,"captures_len","","Returns the number of captures.",24,null],[11,"next","","",25,null],[11,"size_hint","","",25,null],[11,"reg_replace","","",0,null],[11,"no_expand","","",0,null],[11,"next","","",26,null],[11,"next","","",27,null],[11,"pos","","Returns the start and end positions of the Nth capture group. Returns\n`None` if `i` is not a valid capture group or if the capture group did\nnot match anything. The positions returned are *always* byte indices\nwith respect to the original string matched.",28,null],[11,"at","","Returns the matched string for the capture group `i`.  If `i` isn&#39;t\na valid capture group or didn&#39;t match anything, then `None` is\nreturned.",28,null],[11,"name","","Returns the matched string for the capture group named `name`.  If\n`name` isn&#39;t a valid capture group or didn&#39;t match anything, then\n`None` is returned.",28,null],[11,"iter","","Creates an iterator of all the capture groups in order of appearance\nin the regular expression.",28,null],[11,"iter_pos","","Creates an iterator of all the capture group positions in order of\nappearance in the regular expression. Positions are byte indices\nin terms of the original string matched.",28,null],[11,"iter_named","","Creates an iterator of all named groups as an tuple with the group\nname and the value. The iterator returns these values in arbitrary\norder.",28,null],[11,"expand","","Expands all instances of `$name` in `text` to the corresponding capture\ngroup `name`.",28,null],[11,"len","","Returns the number of captured groups.",28,null],[11,"is_empty","","Returns true if and only if there are no captured groups.",28,null],[11,"fmt","","",28,null],[11,"index","","",28,null],[11,"index","","",28,null],[11,"next","","",29,null],[11,"next","","",30,null],[11,"next","","",31,null],[11,"next","","",32,null],[11,"next","","",33,null],[8,"Replacer","","Replacer describes types that can be used to replace matches in a string.",null,null],[10,"reg_replace","","Returns a possibly owned string that is used to replace the match\ncorresponding to the `caps` capture group.",34,null],[11,"no_expand","","Returns a possibly owned string that never needs expansion.",34,null],[11,"no_expand","","Returns a possibly owned string that never needs expansion.",34,null]],"paths":[[3,"NoExpand"],[4,"Error"],[3,"NoExpand"],[8,"Replacer"],[3,"RegexBuilder"],[3,"RegexBuilder"],[3,"Regex"],[3,"FindMatches"],[3,"FindCaptures"],[3,"Splits"],[3,"SplitsN"],[3,"CaptureNames"],[3,"Captures"],[3,"SubCaptures"],[3,"SubCapturesPos"],[3,"SubCapturesNamed"],[3,"RegexSet"],[3,"SetMatches"],[3,"SetMatchesIntoIter"],[3,"SetMatchesIter"],[3,"RegexSet"],[3,"SetMatches"],[3,"SetMatchesIntoIter"],[3,"SetMatchesIter"],[3,"Regex"],[3,"CaptureNames"],[3,"RegexSplits"],[3,"RegexSplitsN"],[3,"Captures"],[3,"SubCaptures"],[3,"SubCapturesPos"],[3,"SubCapturesNamed"],[3,"FindCaptures"],[3,"FindMatches"],[8,"Replacer"]]};
searchIndex["clap"] = {"doc":"A simple to use, efficient, and full featured library for parsing command line arguments and subcommands when writing console, or terminal applications.","items":[[3,"Arg","clap","The abstract representation of a command line argument. Used to set all the options and\nrelationships that define a valid argument for the program.",null,null],[3,"ArgGroup","","`ArgGroup`s are a family of related arguments and way for you to express, &quot;Any of these\narguments&quot;. By placing arguments in a logical group, you can create easier requirement and\nexclusion rules instead of having to list each argument individually, or when you want a rule\nto apply &quot;any but not all&quot; arguments.",null,null],[3,"ArgMatches","","Used to get information about the arguments that where supplied to the program at runtime by\nthe user. New instances of this struct are obtained by using the [`App::get_matches`] family of\nmethods.",null,null],[3,"SubCommand","","The abstract representation of a command line subcommand.",null,null],[3,"Values","","An iterator for getting multiple values out of an argument via the [`ArgMatches::values_of`]\nmethod.",null,null],[3,"OsValues","","An iterator for getting multiple values out of an argument via the [`ArgMatches::values_of_os`]\nmethod. Usage of this iterator allows values which contain invalid UTF-8 code points unlike\n[`Values`].",null,null],[3,"App","","Used to create a representation of a command line program and all possible command line\narguments. Application settings are set using the &quot;builder pattern&quot; with the\n[`App::get_matches`] family of methods being the terminal methods that starts the\nruntime-parsing process. These methods then return information about the user supplied\narguments (or lack there of).",null,null],[3,"Error","","Command Line Argument Parser Error",null,null],[12,"message","","Formated error message",0,null],[12,"kind","","The type of error",0,null],[12,"info","","Any additional information passed along, such as the argument name that caused the error",0,null],[4,"ArgSettings","","Various settings that apply to arguments and may be set, unset, and checked via getter/setter\nmethods [`Arg::set`], [`Arg::unset`], and [`Arg::is_set`]\n[`Arg::set`]: ./struct.Arg.html#method.set\n[`Arg::unset`]: ./struct.Arg.html#method.unset\n[`Arg::is_set`]: ./struct.Arg.html#method.is_set",null,null],[13,"Required","","The argument must be used",1,null],[13,"Multiple","","The argument may be used multiple times such as `--flag --flag`",1,null],[13,"EmptyValues","","The argument allows empty values such as `--option &quot;&quot;`",1,null],[13,"Global","","The argument should be propagated down through all child [`SubCommands`]\n[`SubCommand`]: ./struct.SubCommand.html",1,null],[13,"Hidden","","The argument should **not** be shown in help text",1,null],[13,"TakesValue","","The argument accepts a value, such as `--option &lt;value&gt;`",1,null],[13,"UseValueDelimiter","","Determines if the argument allows values to be grouped via a delimter",1,null],[13,"NextLineHelp","","Prints the help text on the line after the argument",1,null],[4,"AppSettings","","Application level settings, which affect how [`App`] operates",null,null],[13,"SubcommandsNegateReqs","","Allows [`SubCommand`]s to override all requirements of the parent command. For example if you\nhad a subcommand or top level application which had a required argument that are only\nrequired as long as there is no subcommand present, using this setting would allow you set\nthose arguments to [`Arg::required(true)`] and yet receive no error so long as the user\nuses a valid subcommand instead.",2,null],[13,"SubcommandRequired","","Allows specifying that if no [`SubCommand`] is present at runtime, error and exit\ngracefully",2,null],[13,"ArgRequiredElseHelp","","Specifies that the help text should be displayed (and then exit gracefully), if no\narguments are present at runtime (i.e. an empty run such as, `$ myprog`.",2,null],[13,"GlobalVersion","","Specifies to use the version of the current command for all child [`SubCommand`]. (Defaults\nto `false`; subcommands have independant version strings from their parents)",2,null],[13,"VersionlessSubcommands","","Disables `-V` and `--version` for all [`SubCommand`]s (Defaults to `false`; subcommands\n*do* have version flags)",2,null],[13,"UnifiedHelpMessage","","Groups flags and options together presenting a more unified help message (a la `getopts` or\n`docopt` style).",2,null],[13,"WaitOnError","","Will display a message &quot;Press [ENTER]/[RETURN] to continue...&quot; and wait user before\nexiting",2,null],[13,"SubcommandRequiredElseHelp","","Specifies that the help text should be displayed (and then exit gracefully), if no\n[`SubCommand`]s are present at runtime (i.e. an empty run such as, `$ myprog`.",2,null],[13,"Hidden","","Specifies that this [`SubCommand`] should be hidden from help messages",2,null],[13,"TrailingVarArg","","Specifies that the final positional argument is a &quot;VarArg&quot; and that `clap` should not\nattempt to parse any further args.",2,null],[13,"NoBinaryName","","Specifies that the parser should not assume the first argument passed is the binary name.\nThis is normally the case when using a &quot;daemon&quot; style mode, or an interactive CLI where one\none would not normally type the binary or program name for each command.",2,null],[13,"AllowExternalSubcommands","","Specifies that an unexpected positional argument, which would otherwise cause a\n[`ErrorKind::UnknownArgument`] error, should instead be treated as a [`SubCommand`] within\nthe [`ArgMatches`] struct.",2,null],[13,"StrictUtf8","","Specifies that any invalid UTF-8 code points should be treated as an error and fail\nwith a [`ErrorKind::InvalidUtf8`] error.",2,null],[13,"AllowInvalidUtf8","","Specifies that any invalid UTF-8 code points should *not* be treated as an error. This is\nthe default behavior of `clap`",2,null],[13,"AllowLeadingHyphen","","Specifies that leading hyphens are allowed in argument *values*, such as negative numbers\n`-10` (which would otherwise be parsed as another flag or option)",2,null],[13,"HidePossibleValuesInHelp","","Tells `clap` *not* to print possible values when displaying help information. This can be\nuseful if there are many values, or they are explained elsewhere.",2,null],[13,"NextLineHelp","","Places the help string for all arguments on the line after the argument",2,null],[13,"DeriveDisplayOrder","","Displays the arguments and [`SubCommand`]s in the help message in the order that they were\ndeclared in, vice alphabetically which is the default.",2,null],[13,"ColoredHelp","","Uses colorized help messages.",2,null],[4,"ErrorKind","","Command line argument parser kind of error",null,null],[13,"InvalidValue","","Occurs when an [`Arg`] has a set of possible values, and the user provides a value which\nisn&#39;t in that set.",3,null],[13,"UnknownArgument","","Occurs when a user provides a flag, option, or argument which wasn&#39;t defined.",3,null],[13,"InvalidSubcommand","","Occurs when the user provids an unrecognized [`SubCommand`] which meets the threshold for\nbeing similar enough to an existing subcommand so as to not cause the more general\n[`UnknownArgument`] error.",3,null],[13,"UnrecognizedSubcommand","","Occurs when the user provids an unrecognized [`SubCommand`] which does not meet the\nthreshold for being similar enough to an existing subcommand so as to not cause the more\ndetailed [`InvalidSubcommand`] error.",3,null],[13,"EmptyValue","","Occurs when the user provides an empty value for an option that does not allow empty\nvalues.",3,null],[13,"ValueValidation","","Occurs when the user provides a value for an argument with a custom validation and the\nvalue fails that validation.",3,null],[13,"TooManyValues","","Occurs when a user provides more values for an argument than were defined by setting\n[`Arg::max_values`].",3,null],[13,"TooFewValues","","Occurs when the user provides fewer values for an argument than were defined by setting\n[`Arg::min_values`].",3,null],[13,"WrongNumberOfValues","","Occurs when the user provides a different number of values for an argument than what&#39;s\nbeen defined by setting [`Arg::number_of_values`] or than was implicitly set by\n[`Arg::value_names`].",3,null],[13,"ArgumentConflict","","Occurs when the user provides two values which conflict with each other and can&#39;t be used\ntogether.",3,null],[13,"MissingRequiredArgument","","Occurs when the user does not provide one or more required arguments.",3,null],[13,"MissingSubcommand","","Occurs when a subcommand is required (as defined by [`AppSettings::SubcommandRequired`]),\nbut the user does not provide one.",3,null],[13,"MissingArgumentOrSubcommand","","Occurs when either an argument or [`SubCommand`] is required, as defined by\n[`AppSettings::ArgRequiredElseHelp`] but the user did not provide one.",3,null],[13,"UnexpectedMultipleUsage","","Occurs when the user provides an argument multiple times which has not been set to allow\nmultiple uses.",3,null],[13,"InvalidUtf8","","Occurs when the user provides a value containing invalid UTF-8 for an argument and\n[`AppSettings::StrictUtf8`] is set.",3,null],[13,"HelpDisplayed","","Not a true &quot;error&quot; as it means `--help` or similar was used. The help message will be sent\nto `stdout`.",3,null],[13,"VersionDisplayed","","Not a true &quot;error&quot; as it means `--version` or similar was used. The message will be sent\nto `stdout`.",3,null],[13,"ArgumentNotFound","","Occurs when using the [`value_t!`] and [`values_t!`] macros to convert an argument value\ninto type `T`, but the argument you requested wasn&#39;t used. I.e. you asked for an argument\nwith name `config` to be converted, but `config` wasn&#39;t used by the user.\n[`value_t!`]: ./macro.value_t!.html\n[`values_t!`]: ./macro.values_t!.html",3,null],[13,"Io","","Represents an [I/O error], typically while writing to `stderr` or `stdout`.\n[I/O error]: https://doc.rust-lang.org/std/io/struct.Error.html",3,null],[13,"Format","","Represents an Rust&#39;s [Format error] as part of [`Display`] , typically while writing to\n`stderr` or `stdout`.\n[`Display`]: https://doc.rust-lang.org/std/fmt/trait.Display.html\n[Format error]: https://doc.rust-lang.org/std/fmt/struct.Error.html",3,null],[11,"clone","","",2,null],[11,"eq","","",2,null],[11,"fmt","","",2,null],[11,"from_str","","",2,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"new","","Creates a new instance of an application requiring a name. The name may be, but doesn&#39;t\nhave to be same as the binary. The name will be displayed to the user when they request to\nprint version or help and usage information.",4,{"inputs":[{"name":"s"}],"output":{"name":"self"}}],[11,"author","","Sets a string of author(s) that will be displayed to the user when they\nrequest the help information with `--help` or `-h`.",4,null],[11,"bin_name","","Overrides the system-determined binary name. This should only be used when absolutely\nneccessary, such as when the binary name for your application is misleading, or perhaps\n*not* how the user should invoke your program.",4,null],[11,"about","","Sets a string describing what the program does. This will be displayed when displaying help\ninformation.",4,null],[11,"after_help","","Adds additional help information to be displayed in addition to auto-generated help. This\ninformation is displayed **after** the auto-generated help information. This is often used\nto describe how to use the arguments, or caveats to be noted.",4,null],[11,"before_help","","Adds additional help information to be displayed in addition to auto-generated help. This\ninformation is displayed **before** the auto-generated help information. This is often used\nfor header information.",4,null],[11,"version","","Sets a string of the version number to be displayed when displaying version or help\ninformation.",4,null],[11,"usage","","Sets a custom usage string to override the auto-generated usage string.",4,null],[11,"help","","Sets a custom help message and overrides the auto-generated one. This should only be used\nwhen the auto-generated message does not suffice.",4,null],[11,"help_short","","Sets the [`short`] for the auto-generated `help` argument.",4,null],[11,"version_short","","Sets the [`short`] for the auto-generated `version` argument.",4,null],[11,"template","","Sets the help template to be used, overriding the default format.",4,null],[11,"setting","","Enables a single command, or [`SubCommand`], level settings.",4,null],[11,"settings","","Enables multiple command, or [`SubCommand`], level settings",4,null],[11,"arg","","Adds an [argument] to the list of valid possibilties.",4,null],[11,"args","","Adds multiple [arguments] to the list of valid possibilties",4,null],[11,"arg_from_usage","","A convienience method for adding a single [argument] from a usage type string. The string\nused follows the same rules and syntax as [`Arg::from_usage`]",4,null],[11,"args_from_usage","","Adds multiple [arguments] at once from a usage string, one per line. See\n[`Arg::from_usage`] for details on the syntax and rules supported.",4,null],[11,"alias","","Allows adding a [`SubCommand`] alias, which function as &quot;hidden&quot; subcommands that\nautomatically dispatch as if this subcommand was used. This is more efficient, and easier\nthan creating multiple hidden subcommands as one only needs to check for the existing of\nthis command, and not all vairants.",4,null],[11,"aliases","","Allows adding [`SubCommand`] aliases, which function as &quot;hidden&quot; subcommands that\nautomatically dispatch as if this subcommand was used. This is more efficient, and easier\nthan creating multiple hidden subcommands as one only needs to check for the existing of\nthis command, and not all vairants.",4,null],[11,"group","","Adds an [`ArgGroup`] to the application. [`ArgGroup`]s are a family of related arguments.\nBy placing them in a logical group, you can build easier requirement and exclusion rules.\nFor instance, you can make an entire [`ArgGroup`] required, meaning that one (and *only*\none) argument from that group must be present at runtime.",4,null],[11,"groups","","Adds multiple [`ArgGroup`]s to the [`App`] at once.",4,null],[11,"subcommand","","Adds a [`SubCommand`] to the list of valid possibilties. Subcommands are effectively\nsub-[`App`]s, because they can contain their own arguments, subcommands, version, usage,\netc. They also function just like [`App`]s, in that they get their own auto generated help,\nversion, and usage.",4,null],[11,"subcommands","","Adds multiple subcommands to the list of valid possibilties by iterating over an\n[`IntoIterator`] of [`SubCommand`]s",4,null],[11,"display_order","","Allows custom ordering of [`SubCommand`]s within the help message. Subcommands with a lower\nvalue will be displayed first in the help message. This is helpful when one would like to\nemphasise frequently used subcommands, or prioritize those towards the top of the list.\nDuplicate values **are** allowed. Subcommands with duplicate display orders will be\ndisplayed in alphabetical order.",4,null],[11,"print_help","","Prints the full help message to [`io::stdout()`] using a [`BufWriter`]",4,null],[11,"write_help","","Writes the full help message to the user to a [`io::Write`] object",4,null],[11,"write_version","","Writes the version message to the user to a [`io::Write`] object",4,null],[11,"get_matches","","Starts the parsing process, upon a failed parse an error will be displayed to the user and\nthe process with exit with the appropriate error code. By default this method gets all user\nprovided arguments from [`env::args_os`] in order to allow for invalid UTF-8 code points,\nwhich are legal on many platforms.",4,null],[11,"get_matches_safe","","Starts the parsing process. This method will return a [`clap::Result`] type instead of exiting\nthe the process on failed parse. By default this method gets matches from [`env::args_os`]",4,null],[11,"get_matches_from","","Starts the parsing process. Like [`App::get_matches`] this method does not return a [`clap::Result`]\nand will automatically exit with an error message. This method, however, lets you specify\nwhat iterator to use when performing matches, such as a [`Vec`] of your making.",4,null],[11,"get_matches_from_safe","","Starts the parsing process. A combination of [`App::get_matches_from`], and\n[`App::get_matches_safe`]",4,null],[11,"get_matches_from_safe_borrow","","Starts the parsing process without consuming the [`App`] struct `self`. This is normally not\nthe desired functionality, instead prefer [`App::get_matches_from_safe`] which *does*\nconsume `self`.",4,null],[11,"clone","","",4,null],[11,"fmt","","",4,null],[11,"default","","",5,{"inputs":[],"output":{"name":"self"}}],[11,"with_name","","Creates a new instance of [`Arg`] using a unique string name. The name will be used to get\ninformation about whether or not the argument was used at runtime, get values, set\nrelationships with other args, etc..",5,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from_usage","","Creates a new instance of [`Arg`] from a usage string. Allows creation of basic settings\nfor the [`Arg`]. The syntax is flexible, but there are some rules to follow.",5,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"short","","Sets the short version of the argument without the preceding `-`.",5,null],[11,"long","","Sets the long version of the argument without the preceding `--`.",5,null],[11,"help","","Sets the help text of the argument that will be displayed to the user when they print the\nusage/help information.",5,null],[11,"required","","Sets whether or not the argument is required by default. Required by default means it is\nrequired, when no other conflicting rules have been evaluated. Conflicting rules take\nprecedence over being required. **Default:** `false`",5,null],[11,"required_unless","","Sets an arg that override this arg&#39;s required setting. (i.e. this arg will be required\nunless this other argument is present).",5,null],[11,"required_unless_all","","Sets args that override this arg&#39;s required setting. (i.e. this arg will be required unless\nall these other argument are present).",5,null],[11,"required_unless_one","","Sets args that override this arg&#39;s [required] setting. (i.e. this arg will be required\nunless *at least one of* these other argument are present).",5,null],[11,"conflicts_with","","Sets a conflicting argument by name. I.e. when using this argument,\nthe following argument can&#39;t be present and vice versa.",5,null],[11,"conflicts_with_all","","The same as [`Arg::conflicts_with`] but allows specifying multiple two-way conlicts per\nargument.",5,null],[11,"overrides_with","","Sets a overridable argument by name. I.e. this argument and the following argument\nwill override each other in POSIX style (whichever argument was specified at runtime\n**last** &quot;wins&quot;)",5,null],[11,"overrides_with_all","","Sets multiple mutually overridable arguments by name. I.e. this argument and the following\nargument will override each other in POSIX style (whichever argument was specified at\nruntime **last** &quot;wins&quot;)",5,null],[11,"requires","","Sets an argument by name that is required when this one is present I.e. when\nusing this argument, the following argument *must* be present.",5,null],[11,"requires_all","","Sets multiple arguments by names that are required when this one is present I.e. when\nusing this argument, the following arguments *must* be present.",5,null],[11,"takes_value","","Specifies that the argument takes a value at run time.",5,null],[11,"index","","Specifies the index of a positional argument **starting at** 1.",5,null],[11,"multiple","","Specifies that the argument may appear more than once. For flags, this results\nin the number of occurrences of the flag being recorded. For example `-ddd` or `-d -d -d`\nwould count as three occurrences. For options there is a distinct difference in multiple\noccurrences vs multiple values.",5,null],[11,"global","","Specifies that an argument can be matched to all child [`SubCommand`]s.",5,null],[11,"empty_values","","Allows an argument to accept explicitly empty values. An empty value must be specified at\nthe command line with an explicit `&quot;&quot;`, or `&#39;&#39;`",5,null],[11,"hidden","","Hides an argument from help message output.",5,null],[11,"possible_values","","Specifies a list of possible values for this argument. At runtime, `clap` verifies that\nonly one of the specified values was used, or fails with an error message.",5,null],[11,"possible_value","","Specifies a possible value for this argument, one at a time. At runtime, `clap` verifies\nthat only one of the specified values was used, or fails with error message.",5,null],[11,"group","","Specifies the name of the [`ArgGroup`] the argument belongs to.",5,null],[11,"number_of_values","","Specifies how many values are required to satisfy this argument. For example, if you had a\n`-f &lt;file&gt;` argument where you wanted exactly 3 &#39;files&#39; you would set\n`.number_of_values(3)`, and this argument wouldn&#39;t be satisfied unless the user provided\n3 and only 3 values.",5,null],[11,"validator","","Allows one to perform a custom validation on the argument value. You provide a closure\nwhich accepts a [`String`] value, and return a [`Result`] where the [`Err(String)`] is a\nmessage displayed to the user.",5,null],[11,"max_values","","Specifies the *maximum* number of values are for this argument. For example, if you had a\n`-f &lt;file&gt;` argument where you wanted up to 3 &#39;files&#39; you would set `.max_values(3)`, and\nthis argument would be satisfied if the user provided, 1, 2, or 3 values.",5,null],[11,"min_values","","Specifies the *minimum* number of values are for this argument. For example, if you had a\n`-f &lt;file&gt;` argument where you wanted at least 2 &#39;files&#39; you would set\n`.min_values(2)`, and this argument would be satisfied if the user provided, 2 or more\nvalues.",5,null],[11,"use_delimiter","","Specifies whether or not an arugment should allow grouping of multiple values via a\ndelimter. I.e. shoulde `--option=val1,val2,val3` be parsed as three values (`val1`, `val2`,\nand `val3`) or as a single value (`val1,val2,val3`). Defaults to using `,` (comma) as the\nvalue delimiter for all arguments that accept values (options and positional arguments)",5,null],[11,"value_delimiter","","Specifies the separator to use when values are clumped together, defaults to `,` (comma).",5,null],[11,"value_names","","Specify multiple names for values of option arguments. These names are cosmetic only, used\nfor help and usage strings only. The names are **not** used to access arguments. The values\nof the arguments are accessed in numeric order (i.e. if you specify two names `one` and\n`two` `one` will be the first matched value, `two` will be the second).",5,null],[11,"value_name","","Specifies the name for value of [option] or [positional] arguments inside of help\ndocumenation. This name is cosmetic only, the name is **not** used to access arguments.\nThis setting can be very helpful when describing the type of input the user should be\nusing, such as `FILE`, `INTERFACE`, etc. Although not required, it&#39;s somewhat convention to\nuse all capital letters for the value name.",5,null],[11,"default_value","","Specifies the value of the argument when *not* specified at runtime.",5,null],[11,"next_line_help","","When set to `true` the help string will be displayed on the line after the argument and\nindented once. This can be helpful for arguments with very long or complex help messages.\nThis can also be helpful for arguments with very long flag names, or many/long value names.",5,null],[11,"display_order","","Allows custom ordering of args within the help message. Args with a lower value will be\ndisplayed first in the help message. This is helpful when one would like to emphasise\nfrequently used args, or prioritize those towards the top of the list. Duplicate values\n**are** allowed. Args with duplicate display orders will be displayed in alphabetical\norder.",5,null],[11,"is_set","","Checks if one of the [`ArgSettings`] settings is set for the argument\n[`ArgSettings`]: ./enum.ArgSettings.html",5,null],[11,"set","","Sets one of the [`ArgSettings`] settings for the argument\n[`ArgSettings`]: ./enum.ArgSettings.html",5,null],[11,"unset","","Unsets one of the [`ArgSettings`] settings for the argument\n[`ArgSettings`]: ./enum.ArgSettings.html",5,null],[11,"from","","",5,{"inputs":[{"name":"arg"}],"output":{"name":"self"}}],[11,"clone","","",5,null],[11,"clone","","",6,null],[11,"fmt","","",6,null],[11,"default","","",6,{"inputs":[],"output":{"name":"self"}}],[11,"value_of","","Gets the value of a specific [option] or [positional] argument (i.e. an argument that takes\nan additional value at runtime). If the option wasn&#39;t present at runtime\nit returns `None`.",6,null],[11,"value_of_lossy","","Gets the lossy value of a specific argument. If the argument wasn&#39;t present at runtime\nit returns `None`. A lossy value is one which contains invalid UTF-8 code points, those\ninvalid points will be replaced with `\\u{FFFD}`",6,null],[11,"value_of_os","","Gets the OS version of a string value of a specific argument. If the option wasn&#39;t present\nat runtime it returns `None`. An OS value on Unix-like systems is any series of bytes,\nregardless of whether or not they contain valid UTF-8 code points. Since [`String`]s in\nRust are guaranteed to be valid UTF-8, a valid filename on a Unix system as an argument\nvalue may contain invalid UTF-8 code points.",6,null],[11,"values_of","","Gets a [`Values`] struct which implements [`Iterator`] for values of a specific argument\n(i.e. an argument that takes multiple values at runtime). If the option wasn&#39;t present at\nruntime it returns `None`",6,null],[11,"values_of_lossy","","Gets the lossy values of a specific argument. If the option wasn&#39;t present at runtime\nit returns `None`. A lossy value is one where if it contains invalid UTF-8 code points,\nthose invalid points will be replaced with `\\u{FFFD}`",6,null],[11,"values_of_os","","Gets a [`OsValues`] struct which is implements [`Iterator`] for [`OsString`] values of a\nspecific argument. If the option wasn&#39;t present at runtime it returns `None`. An OS value\non Unix-like systems is any series of bytes, regardless of whether or not they contain\nvalid UTF-8 code points. Since [`String`]s in Rust are guaranteed to be valid UTF-8, a valid\nfilename as an argument value on Linux (for example) may contain invalid UTF-8 code points.",6,null],[11,"is_present","","Returns `true` if an argument was present at runtime, otherwise `false`.",6,null],[11,"occurrences_of","","Returns the number of times an argument was used at runtime. If an argument isn&#39;t present\nit will return `0`.",6,null],[11,"subcommand_matches","","Because [`Subcommand`]s are essentially &quot;sub-[`App`]s&quot; they have their own [`ArgMatches`]\nas well. This method returns the [`ArgMatches`] for a particular subcommand or `None` if\nthe subcommand wasn&#39;t present at runtime.",6,null],[11,"subcommand_name","","Because [`Subcommand`]s are essentially &quot;sub-[`App`]s&quot; they have their own [`ArgMatches`]\nas well.But simply getting the sub-[`ArgMatches`] doesn&#39;t help much if we don&#39;t also know\nwhich subcommand was actually used. This method returns the name of the subcommand that was\nused at runtime, or `None` if one wasn&#39;t.",6,null],[11,"subcommand","","This brings together [`ArgMatches::subcommand_matches`] and [`ArgMatches::subcommand_name`]\nby returning a tuple with both pieces of information.",6,null],[11,"usage","","Returns a string slice of the usage statement for the [`App`] or [`SubCommand`]",6,null],[11,"clone","","",7,null],[11,"next","","",7,null],[11,"size_hint","","",7,null],[11,"next_back","","",7,null],[11,"clone","","",8,null],[11,"next","","",8,null],[11,"size_hint","","",8,null],[11,"next_back","","",8,null],[11,"clone","","",9,null],[11,"fmt","","",9,null],[11,"with_name","","Creates a new instance of a subcommand requiring a name. The name will be displayed\nto the user when they print version or help and usage information.",9,{"inputs":[{"name":"str"}],"output":{"name":"app"}}],[11,"default","","",10,{"inputs":[],"output":{"name":"arggroup"}}],[11,"with_name","","Creates a new instance of `ArgGroup` using a unique string name. The name will be used to\nget values from the group or refer to the group inside of conflict and requirement rules.",10,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"arg","","Adds an [argument] to this group by name",10,null],[11,"args","","Adds multiple [arguments] to this group by name",10,null],[11,"required","","Sets the group as required or not. A required group will be displayed in the usage string\nof the application in the format `[arg|arg2|arg3]`. A required `ArgGroup` simply states\nthat one, and only one argument from this group *must* be present at runtime (unless\nconflicting with another argument).",10,null],[11,"requires","","Sets the requirement rules of this group. This is not to be confused with a required group.\nRequirement rules function just like argument requirement rules, you can name other\narguments or groups that must be present when one of the arguments from this group is used.",10,null],[11,"requires_all","","Sets the requirement rules of this group. This is not to be confused with a required group.\nRequirement rules function just like argument requirement rules, you can name other\narguments or groups that must be present when one of the arguments from this group is used.",10,null],[11,"conflicts_with","","Sets the exclusion rules of this group. Exclusion (aka conflict) rules function just like\nargument exclusion rules, you can name other arguments or groups that must not be present\nwhen one of the arguments from this group are used.",10,null],[11,"conflicts_with_all","","Sets the exclusion rules of this group. Exclusion rules function just like argument\nexclusion rules, you can name other arguments or groups that must not be present when one\nof the arguments from this group are used.",10,null],[11,"fmt","","",10,null],[11,"from","","",10,{"inputs":[{"name":"arggroup"}],"output":{"name":"self"}}],[11,"clone","","",10,null],[11,"clone","","",1,null],[11,"eq","","",1,null],[11,"fmt","","",1,null],[11,"from_str","","",1,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","","",3,null],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"fmt","","",0,null],[11,"use_stderr","","Should the message be written to `stdout` or not",0,null],[11,"exit","","Prints the error to `stderr` and exits with a status of `1`",0,null],[11,"description","","",0,null],[11,"fmt","","",0,null],[11,"from","","",0,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[6,"Result","","Short hand for [`Result`] type\n[`Result`]: https://doc.rust-lang.org/std/result/enum.Result.html",null,null],[14,"value_t!","","Convenience macro getting a typed value `T` where `T` implements [`std::str::FromStr`] from an\nargument value. This macro returns a `Result&lt;T,String&gt;` which allows you as the developer to\ndecide what you&#39;d like to do on a failed parse. There are two types of errors, parse failures\nand those where the argument wasn&#39;t present (such as a non-required argument). You can use\nit to get a single value, or a iterator as with the [`ArgMatches::values_of`]",null,null],[14,"value_t_or_exit!","","Convenience macro getting a typed value `T` where `T` implements [`std::str::FromStr`] or\nexiting upon error, instead of returning a [`Result`] type.",null,null],[14,"values_t!","","Convenience macro getting a typed value [`Vec&lt;T&gt;`] where `T` implements [`std::str::FromStr`]\nThis macro returns a [`clap::Result&lt;Vec&lt;T&gt;&gt;`] which allows you as the developer to decide\nwhat you&#39;d like to do on a failed parse.",null,null],[14,"values_t_or_exit!","","Convenience macro getting a typed value [`Vec&lt;T&gt;`] where `T` implements [`std::str::FromStr`]\nor exiting upon error.",null,null],[14,"_clap_count_exprs!","","Counts the number of comma-delimited expressions passed to it.  The result is a compile-time\nevaluable expression, suitable for use as a static array size, or the value of a `const`.",null,null],[14,"arg_enum!","","Convenience macro to generate more complete enums with variants to be used as a type when\nparsing arguments. This enum also provides a `variants()` function which can be used to\nretrieve a `Vec&lt;&amp;&#39;static str&gt;` of the variant names, as well as implementing [`FromStr`] and\n[`Display`] automatically.",null,null],[14,"crate_version!","","Allows you to pull the version from your Cargo.toml at compile time as\nMAJOR.MINOR.PATCH_PKGVERSION_PRE",null,null]],"paths":[[3,"Error"],[4,"ArgSettings"],[4,"AppSettings"],[4,"ErrorKind"],[3,"App"],[3,"Arg"],[3,"ArgMatches"],[3,"Values"],[3,"OsValues"],[3,"SubCommand"],[3,"ArgGroup"]]};
searchIndex["wayland_window"] = {"doc":"Wayland Window, a minimalistic decoration-drawing library for\nwayland applications.","items":[[3,"DecoratedSurface","wayland_window","A wrapper for a decorated surface.",null,null],[5,"substract_borders","","Substracts the border dimensions from the given dimensions.",null,null],[5,"add_borders","","Adds the border dimensions to the given dimensions.",null,null],[11,"resize","","Resizes the borders to given width and height.",0,null],[11,"new","","Creates a new decorated window around given surface.",0,{"inputs":[{"name":"wlsurface"},{"name":"i32"},{"name":"i32"},{"name":"wlcompositor"},{"name":"wlsubcompositor"},{"name":"wlshm"},{"name":"wlshell"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_title","","Set a short title for the surface.",0,null],[11,"set_class","","Set a class for the surface.",0,null],[11,"next","","",0,null],[11,"set_cursor","wayland_client::sys::wayland::client","set the pointer surface",1,null],[11,"release","","release the pointer object",1,null],[11,"fmt","wayland_client::events","",2,null],[11,"new","","",3,{"inputs":[],"output":{"name":"eventiterator"}}],[11,"drop","","",3,null],[11,"next","","",3,null],[11,"fmt","wayland_client::sys::wayland::client","",4,null],[11,"ptr","","",5,null],[11,"interface","","",5,null],[11,"interface_name","","",5,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",5,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",5,null],[11,"from_ptr","","",5,null],[11,"from_ptr_no_own","","",5,null],[11,"set_evt_iterator","","",5,null],[11,"fmt","","",5,null],[11,"fmt","","",6,null],[11,"sync","","asynchronous roundtrip",5,null],[11,"get_registry","","get global registry object",5,null],[11,"ptr","","",7,null],[11,"interface","","",7,null],[11,"interface_name","","",7,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",7,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",7,null],[11,"from_ptr","","",7,null],[11,"from_ptr_no_own","","",7,null],[11,"set_evt_iterator","","",7,null],[11,"fmt","","",7,null],[11,"fmt","","",8,null],[11,"bind","","bind an object to the display",7,null],[11,"drop","","",7,null],[11,"ptr","","",9,null],[11,"interface","","",9,null],[11,"interface_name","","",9,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",9,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",9,null],[11,"from_ptr","","",9,null],[11,"from_ptr_no_own","","",9,null],[11,"set_evt_iterator","","",9,null],[11,"fmt","","",9,null],[11,"fmt","","",10,null],[11,"drop","","",9,null],[11,"ptr","","",11,null],[11,"interface","","",11,null],[11,"interface_name","","",11,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",11,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",11,null],[11,"from_ptr","","",11,null],[11,"from_ptr_no_own","","",11,null],[11,"set_evt_iterator","","",11,null],[11,"fmt","","",11,null],[11,"create_surface","","create new surface",11,null],[11,"create_region","","create new region",11,null],[11,"drop","","",11,null],[11,"ptr","","",12,null],[11,"interface","","",12,null],[11,"interface_name","","",12,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",12,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",12,null],[11,"from_ptr","","",12,null],[11,"from_ptr_no_own","","",12,null],[11,"set_evt_iterator","","",12,null],[11,"fmt","","",12,null],[11,"create_buffer","","create a buffer from the pool",12,null],[11,"destroy","","destroy the pool",12,null],[11,"resize","","change the size of the pool mapping",12,null],[11,"drop","","",12,null],[11,"ptr","","",13,null],[11,"interface","","",13,null],[11,"interface_name","","",13,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",13,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",13,null],[11,"from_ptr","","",13,null],[11,"from_ptr_no_own","","",13,null],[11,"set_evt_iterator","","",13,null],[11,"fmt","","",13,null],[11,"fmt","","",14,null],[11,"fmt","","",15,null],[11,"create_pool","","create a shm pool",13,null],[11,"drop","","",13,null],[11,"ptr","","",16,null],[11,"interface","","",16,null],[11,"interface_name","","",16,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",16,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",16,null],[11,"from_ptr","","",16,null],[11,"from_ptr_no_own","","",16,null],[11,"set_evt_iterator","","",16,null],[11,"fmt","","",16,null],[11,"fmt","","",17,null],[11,"destroy","","destroy a buffer",16,null],[11,"drop","","",16,null],[11,"ptr","","",18,null],[11,"interface","","",18,null],[11,"interface_name","","",18,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",18,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",18,null],[11,"from_ptr","","",18,null],[11,"from_ptr_no_own","","",18,null],[11,"set_evt_iterator","","",18,null],[11,"fmt","","",18,null],[11,"fmt","","",19,null],[11,"accept","","accept one of the offered mime types",18,null],[11,"receive","","request that the data is transferred",18,null],[11,"destroy","","destroy data offer",18,null],[11,"drop","","",18,null],[11,"ptr","","",20,null],[11,"interface","","",20,null],[11,"interface_name","","",20,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",20,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",20,null],[11,"from_ptr","","",20,null],[11,"from_ptr_no_own","","",20,null],[11,"set_evt_iterator","","",20,null],[11,"fmt","","",20,null],[11,"fmt","","",21,null],[11,"offer","","add an offered mime type",20,null],[11,"destroy","","destroy the data source",20,null],[11,"drop","","",20,null],[11,"ptr","","",22,null],[11,"interface","","",22,null],[11,"interface_name","","",22,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",22,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",22,null],[11,"from_ptr","","",22,null],[11,"from_ptr_no_own","","",22,null],[11,"set_evt_iterator","","",22,null],[11,"fmt","","",22,null],[11,"fmt","","",23,null],[11,"start_drag","","start drag-and-drop operation",22,null],[11,"set_selection","","copy data to the selection",22,null],[11,"release","","destroy data device",22,null],[11,"drop","","",22,null],[11,"ptr","","",24,null],[11,"interface","","",24,null],[11,"interface_name","","",24,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",24,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",24,null],[11,"from_ptr","","",24,null],[11,"from_ptr_no_own","","",24,null],[11,"set_evt_iterator","","",24,null],[11,"fmt","","",24,null],[11,"create_data_source","","create a new data source",24,null],[11,"get_data_device","","create a new data device",24,null],[11,"drop","","",24,null],[11,"ptr","","",25,null],[11,"interface","","",25,null],[11,"interface_name","","",25,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",25,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",25,null],[11,"from_ptr","","",25,null],[11,"from_ptr_no_own","","",25,null],[11,"set_evt_iterator","","",25,null],[11,"fmt","","",25,null],[11,"get_shell_surface","","create a shell surface from a surface",25,null],[11,"drop","","",25,null],[11,"ptr","","",26,null],[11,"interface","","",26,null],[11,"interface_name","","",26,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",26,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",26,null],[11,"from_ptr","","",26,null],[11,"from_ptr_no_own","","",26,null],[11,"set_evt_iterator","","",26,null],[11,"fmt","","",26,null],[11,"hash","wayland_client::sys::wayland::client::WlShellSurfaceResize","",27,null],[11,"cmp","","",27,null],[11,"partial_cmp","","",27,null],[11,"lt","","",27,null],[11,"le","","",27,null],[11,"gt","","",27,null],[11,"ge","","",27,null],[11,"clone","","",27,null],[11,"eq","","",27,null],[11,"ne","","",27,null],[11,"fmt","","",27,null],[11,"empty","","Returns an empty set of flags.",27,{"inputs":[],"output":{"name":"wlshellsurfaceresize"}}],[11,"all","","Returns the set containing all flags.",27,{"inputs":[],"output":{"name":"wlshellsurfaceresize"}}],[11,"bits","","Returns the raw value of the flags currently stored.",27,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",27,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",27,{"inputs":[{"name":"u32"}],"output":{"name":"wlshellsurfaceresize"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",27,null],[11,"is_all","","Returns `true` if all flags are currently set.",27,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",27,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",27,null],[11,"insert","","Inserts the specified flags in-place.",27,null],[11,"remove","","Removes the specified flags in-place.",27,null],[11,"toggle","","Toggles the specified flags in-place.",27,null],[11,"bitor","","Returns the union of the two sets of flags.",27,null],[11,"bitor_assign","","Adds the set of flags.",27,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",27,null],[11,"bitxor_assign","","Toggles the set of flags.",27,null],[11,"bitand","","Returns the intersection between the two sets of flags.",27,null],[11,"bitand_assign","","Disables all flags disabled in the set.",27,null],[11,"sub","","Returns the set difference of the two sets of flags.",27,null],[11,"sub_assign","","Disables all flags enabled in the set.",27,null],[11,"not","","Returns the complement of this set of flags.",27,null],[11,"extend","","",27,null],[11,"from_iter","","",27,{"inputs":[{"name":"t"}],"output":{"name":"wlshellsurfaceresize"}}],[11,"hash","wayland_client::sys::wayland::client::WlShellSurfaceTransient","",28,null],[11,"cmp","","",28,null],[11,"partial_cmp","","",28,null],[11,"lt","","",28,null],[11,"le","","",28,null],[11,"gt","","",28,null],[11,"ge","","",28,null],[11,"clone","","",28,null],[11,"eq","","",28,null],[11,"ne","","",28,null],[11,"fmt","","",28,null],[11,"empty","","Returns an empty set of flags.",28,{"inputs":[],"output":{"name":"wlshellsurfacetransient"}}],[11,"all","","Returns the set containing all flags.",28,{"inputs":[],"output":{"name":"wlshellsurfacetransient"}}],[11,"bits","","Returns the raw value of the flags currently stored.",28,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",28,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",28,{"inputs":[{"name":"u32"}],"output":{"name":"wlshellsurfacetransient"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",28,null],[11,"is_all","","Returns `true` if all flags are currently set.",28,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",28,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",28,null],[11,"insert","","Inserts the specified flags in-place.",28,null],[11,"remove","","Removes the specified flags in-place.",28,null],[11,"toggle","","Toggles the specified flags in-place.",28,null],[11,"bitor","","Returns the union of the two sets of flags.",28,null],[11,"bitor_assign","","Adds the set of flags.",28,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",28,null],[11,"bitxor_assign","","Toggles the set of flags.",28,null],[11,"bitand","","Returns the intersection between the two sets of flags.",28,null],[11,"bitand_assign","","Disables all flags disabled in the set.",28,null],[11,"sub","","Returns the set difference of the two sets of flags.",28,null],[11,"sub_assign","","Disables all flags enabled in the set.",28,null],[11,"not","","Returns the complement of this set of flags.",28,null],[11,"extend","","",28,null],[11,"from_iter","","",28,{"inputs":[{"name":"t"}],"output":{"name":"wlshellsurfacetransient"}}],[11,"fmt","wayland_client::sys::wayland::client","",29,null],[11,"fmt","","",30,null],[11,"pong","","respond to a ping event",26,null],[11,"move_","","start an interactive move",26,null],[11,"resize","","start an interactive resize",26,null],[11,"set_toplevel","","make the surface a toplevel surface",26,null],[11,"set_transient","","make the surface a transient surface",26,null],[11,"set_fullscreen","","make the surface a fullscreen surface",26,null],[11,"set_popup","","make the surface a popup surface",26,null],[11,"set_maximized","","make the surface a maximized surface",26,null],[11,"set_title","","set surface title",26,null],[11,"set_class","","set surface class",26,null],[11,"drop","","",26,null],[11,"ptr","","",31,null],[11,"interface","","",31,null],[11,"interface_name","","",31,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",31,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",31,null],[11,"from_ptr","","",31,null],[11,"from_ptr_no_own","","",31,null],[11,"set_evt_iterator","","",31,null],[11,"fmt","","",31,null],[11,"fmt","","",32,null],[11,"destroy","","delete surface",31,null],[11,"attach","","set the surface contents",31,null],[11,"damage","","mark part of the surface damaged",31,null],[11,"frame","","request a frame throttling hint",31,null],[11,"set_opaque_region","","set opaque region",31,null],[11,"set_input_region","","set input region",31,null],[11,"commit","","commit pending surface state",31,null],[11,"set_buffer_transform","","sets the buffer transformation",31,null],[11,"set_buffer_scale","","sets the buffer scaling factor",31,null],[11,"drop","","",31,null],[11,"ptr","","",33,null],[11,"interface","","",33,null],[11,"interface_name","","",33,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",33,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",33,null],[11,"from_ptr","","",33,null],[11,"from_ptr_no_own","","",33,null],[11,"set_evt_iterator","","",33,null],[11,"fmt","","",33,null],[11,"hash","wayland_client::sys::wayland::client::WlSeatCapability","",34,null],[11,"cmp","","",34,null],[11,"partial_cmp","","",34,null],[11,"lt","","",34,null],[11,"le","","",34,null],[11,"gt","","",34,null],[11,"ge","","",34,null],[11,"clone","","",34,null],[11,"eq","","",34,null],[11,"ne","","",34,null],[11,"fmt","","",34,null],[11,"empty","","Returns an empty set of flags.",34,{"inputs":[],"output":{"name":"wlseatcapability"}}],[11,"all","","Returns the set containing all flags.",34,{"inputs":[],"output":{"name":"wlseatcapability"}}],[11,"bits","","Returns the raw value of the flags currently stored.",34,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",34,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",34,{"inputs":[{"name":"u32"}],"output":{"name":"wlseatcapability"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",34,null],[11,"is_all","","Returns `true` if all flags are currently set.",34,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",34,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",34,null],[11,"insert","","Inserts the specified flags in-place.",34,null],[11,"remove","","Removes the specified flags in-place.",34,null],[11,"toggle","","Toggles the specified flags in-place.",34,null],[11,"bitor","","Returns the union of the two sets of flags.",34,null],[11,"bitor_assign","","Adds the set of flags.",34,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",34,null],[11,"bitxor_assign","","Toggles the set of flags.",34,null],[11,"bitand","","Returns the intersection between the two sets of flags.",34,null],[11,"bitand_assign","","Disables all flags disabled in the set.",34,null],[11,"sub","","Returns the set difference of the two sets of flags.",34,null],[11,"sub_assign","","Disables all flags enabled in the set.",34,null],[11,"not","","Returns the complement of this set of flags.",34,null],[11,"extend","","",34,null],[11,"from_iter","","",34,{"inputs":[{"name":"t"}],"output":{"name":"wlseatcapability"}}],[11,"fmt","wayland_client::sys::wayland::client","",35,null],[11,"get_pointer","","return pointer object",33,null],[11,"get_keyboard","","return keyboard object",33,null],[11,"get_touch","","return touch object",33,null],[11,"release","","release the seat object",33,null],[11,"drop","","",33,null],[11,"ptr","","",1,null],[11,"interface","","",1,null],[11,"interface_name","","",1,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",1,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",1,null],[11,"from_ptr","","",1,null],[11,"from_ptr_no_own","","",1,null],[11,"set_evt_iterator","","",1,null],[11,"fmt","","",1,null],[11,"fmt","","",36,null],[11,"fmt","","",37,null],[11,"fmt","","",38,null],[11,"drop","","",1,null],[11,"ptr","","",39,null],[11,"interface","","",39,null],[11,"interface_name","","",39,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",39,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",39,null],[11,"from_ptr","","",39,null],[11,"from_ptr_no_own","","",39,null],[11,"set_evt_iterator","","",39,null],[11,"fmt","","",39,null],[11,"fmt","","",40,null],[11,"fmt","","",41,null],[11,"fmt","","",42,null],[11,"release","","release the keyboard object",39,null],[11,"drop","","",39,null],[11,"ptr","","",43,null],[11,"interface","","",43,null],[11,"interface_name","","",43,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",43,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",43,null],[11,"from_ptr","","",43,null],[11,"from_ptr_no_own","","",43,null],[11,"set_evt_iterator","","",43,null],[11,"fmt","","",43,null],[11,"fmt","","",44,null],[11,"release","","release the touch object",43,null],[11,"drop","","",43,null],[11,"ptr","","",45,null],[11,"interface","","",45,null],[11,"interface_name","","",45,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",45,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",45,null],[11,"from_ptr","","",45,null],[11,"from_ptr_no_own","","",45,null],[11,"set_evt_iterator","","",45,null],[11,"fmt","","",45,null],[11,"fmt","","",46,null],[11,"fmt","","",47,null],[11,"hash","wayland_client::sys::wayland::client::WlOutputMode","",48,null],[11,"cmp","","",48,null],[11,"partial_cmp","","",48,null],[11,"lt","","",48,null],[11,"le","","",48,null],[11,"gt","","",48,null],[11,"ge","","",48,null],[11,"clone","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"fmt","","",48,null],[11,"empty","","Returns an empty set of flags.",48,{"inputs":[],"output":{"name":"wloutputmode"}}],[11,"all","","Returns the set containing all flags.",48,{"inputs":[],"output":{"name":"wloutputmode"}}],[11,"bits","","Returns the raw value of the flags currently stored.",48,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",48,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",48,{"inputs":[{"name":"u32"}],"output":{"name":"wloutputmode"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",48,null],[11,"is_all","","Returns `true` if all flags are currently set.",48,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",48,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",48,null],[11,"insert","","Inserts the specified flags in-place.",48,null],[11,"remove","","Removes the specified flags in-place.",48,null],[11,"toggle","","Toggles the specified flags in-place.",48,null],[11,"bitor","","Returns the union of the two sets of flags.",48,null],[11,"bitor_assign","","Adds the set of flags.",48,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",48,null],[11,"bitxor_assign","","Toggles the set of flags.",48,null],[11,"bitand","","Returns the intersection between the two sets of flags.",48,null],[11,"bitand_assign","","Disables all flags disabled in the set.",48,null],[11,"sub","","Returns the set difference of the two sets of flags.",48,null],[11,"sub_assign","","Disables all flags enabled in the set.",48,null],[11,"not","","Returns the complement of this set of flags.",48,null],[11,"extend","","",48,null],[11,"from_iter","","",48,{"inputs":[{"name":"t"}],"output":{"name":"wloutputmode"}}],[11,"fmt","wayland_client::sys::wayland::client","",49,null],[11,"drop","","",45,null],[11,"ptr","","",50,null],[11,"interface","","",50,null],[11,"interface_name","","",50,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",50,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",50,null],[11,"from_ptr","","",50,null],[11,"from_ptr_no_own","","",50,null],[11,"set_evt_iterator","","",50,null],[11,"fmt","","",50,null],[11,"destroy","","destroy region",50,null],[11,"add","","add rectangle to region",50,null],[11,"subtract","","subtract rectangle from region",50,null],[11,"drop","","",50,null],[11,"ptr","","",51,null],[11,"interface","","",51,null],[11,"interface_name","","",51,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",51,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",51,null],[11,"from_ptr","","",51,null],[11,"from_ptr_no_own","","",51,null],[11,"set_evt_iterator","","",51,null],[11,"fmt","","",51,null],[11,"destroy","","unbind from the subcompositor interface",51,null],[11,"get_subsurface","","give a surface the role sub-surface",51,null],[11,"drop","","",51,null],[11,"ptr","","",52,null],[11,"interface","","",52,null],[11,"interface_name","","",52,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",52,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",52,null],[11,"from_ptr","","",52,null],[11,"from_ptr_no_own","","",52,null],[11,"set_evt_iterator","","",52,null],[11,"fmt","","",52,null],[11,"destroy","","remove sub-surface interface",52,null],[11,"set_position","","reposition the sub-surface",52,null],[11,"place_above","","restack the sub-surface",52,null],[11,"place_below","","restack the sub-surface",52,null],[11,"set_sync","","set sub-surface to synchronized mode",52,null],[11,"set_desync","","set sub-surface to desynchronized mode",52,null],[11,"drop","","",52,null],[11,"new","wayland_client::egl","",53,{"inputs":[{"name":"wlsurface"},{"name":"i32"},{"name":"i32"}],"output":{"name":"wleglsurface"}}],[11,"destroy","","",53,null],[11,"get_size","","",53,null],[11,"resize","","",53,null],[11,"egl_surface_ptr","","",53,null],[11,"egl_surfaceptr","","DEPRECATED",53,null],[11,"drop","","",53,null],[11,"deref","","",53,null],[11,"get_cursor","wayland_client::cursor","Retrieve a cursor from the theme.",54,null],[11,"drop","","",54,null],[11,"name","","Retrieve the name of this cursor.",55,null],[11,"image_count","","Retrieve the number of images contained in this\nanimated cursor",55,null],[11,"frame","","Retrieve the image number of cursor animation.",55,null],[11,"frame_and_duration","","Retrieve the image number and its duration.",55,null],[11,"frame_buffer","","Retrieve a `CursorImageBuffer` containing the given image of an animation.",55,null],[11,"frame_info","","Retrive the metadate associated with given frame of the animation.",55,null],[11,"deref","","",56,null],[11,"drop","","",56,null],[11,"sync_roundtrip","wayland_client::sys::wayland::client","Synchronous roundtrip",5,null],[11,"dispatch","","Blocking dispatch",5,null],[11,"dispatch_pending","","Non-blocking dispatch",5,null],[11,"prepare_read","","Prepare an conccurent read",5,null],[11,"flush","","Non-blocking write to the server",5,null],[11,"drop","","",5,null],[11,"read_events","wayland_client::wayland","Read events",57,null],[11,"cancel","","Cancel the read",57,null],[11,"drop","","",57,null],[11,"hash","wayland_client","",58,null],[11,"fmt","","",58,null],[11,"eq","","",58,null],[11,"ne","","",58,null],[11,"clone","","",58,null]],"paths":[[3,"DecoratedSurface"],[3,"WlPointer"],[4,"Event"],[3,"EventIterator"],[4,"WaylandProtocolEvent"],[3,"WlDisplay"],[4,"WlDisplayEvent"],[3,"WlRegistry"],[4,"WlRegistryEvent"],[3,"WlCallback"],[4,"WlCallbackEvent"],[3,"WlCompositor"],[3,"WlShmPool"],[3,"WlShm"],[4,"WlShmFormat"],[4,"WlShmEvent"],[3,"WlBuffer"],[4,"WlBufferEvent"],[3,"WlDataOffer"],[4,"WlDataOfferEvent"],[3,"WlDataSource"],[4,"WlDataSourceEvent"],[3,"WlDataDevice"],[4,"WlDataDeviceEvent"],[3,"WlDataDeviceManager"],[3,"WlShell"],[3,"WlShellSurface"],[3,"WlShellSurfaceResize"],[3,"WlShellSurfaceTransient"],[4,"WlShellSurfaceFullscreenMethod"],[4,"WlShellSurfaceEvent"],[3,"WlSurface"],[4,"WlSurfaceEvent"],[3,"WlSeat"],[3,"WlSeatCapability"],[4,"WlSeatEvent"],[4,"WlPointerButtonState"],[4,"WlPointerAxis"],[4,"WlPointerEvent"],[3,"WlKeyboard"],[4,"WlKeyboardKeymapFormat"],[4,"WlKeyboardKeyState"],[4,"WlKeyboardEvent"],[3,"WlTouch"],[4,"WlTouchEvent"],[3,"WlOutput"],[4,"WlOutputSubpixel"],[4,"WlOutputTransform"],[3,"WlOutputMode"],[4,"WlOutputEvent"],[3,"WlRegion"],[3,"WlSubcompositor"],[3,"WlSubsurface"],[3,"WlEglSurface"],[3,"CursorTheme"],[3,"Cursor"],[3,"CursorImageBuffer"],[3,"ReadEventsGuard"],[3,"ProxyId"]]};
searchIndex["protobuf"] = {"doc":"","items":[[3,"UnknownFields","protobuf","",null,null],[12,"fields","","",0,null],[3,"UnknownValues","","",null,null],[12,"fixed32","","",1,null],[12,"fixed64","","",1,null],[12,"varint","","",1,null],[12,"length_delimited","","",1,null],[3,"UnknownValuesIter","","",null,null],[3,"UnknownFieldIter","","",null,null],[4,"UnknownValue","","",null,null],[13,"Fixed32","","",2,null],[13,"Fixed64","","",2,null],[13,"Varint","","",2,null],[13,"LengthDelimited","","",2,null],[4,"UnknownValueRef","","",null,null],[13,"Fixed32","","",3,null],[13,"Fixed64","","",3,null],[13,"Varint","","",3,null],[13,"LengthDelimited","","",3,null],[5,"proto_path_to_rust_mod","","",null,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[0,"descriptor","","",null,null],[3,"FileDescriptorSet","protobuf::descriptor","",null,null],[3,"FileDescriptorProto","","",null,null],[3,"DescriptorProto","","",null,null],[3,"DescriptorProto_ExtensionRange","","",null,null],[3,"FieldDescriptorProto","","",null,null],[3,"OneofDescriptorProto","","",null,null],[3,"EnumDescriptorProto","","",null,null],[3,"EnumValueDescriptorProto","","",null,null],[3,"ServiceDescriptorProto","","",null,null],[3,"MethodDescriptorProto","","",null,null],[3,"FileOptions","","",null,null],[3,"MessageOptions","","",null,null],[3,"FieldOptions","","",null,null],[3,"EnumOptions","","",null,null],[3,"EnumValueOptions","","",null,null],[3,"ServiceOptions","","",null,null],[3,"MethodOptions","","",null,null],[3,"UninterpretedOption","","",null,null],[3,"UninterpretedOption_NamePart","","",null,null],[3,"SourceCodeInfo","","",null,null],[3,"SourceCodeInfo_Location","","",null,null],[4,"FieldDescriptorProto_Type","","",null,null],[13,"TYPE_DOUBLE","","",4,null],[13,"TYPE_FLOAT","","",4,null],[13,"TYPE_INT64","","",4,null],[13,"TYPE_UINT64","","",4,null],[13,"TYPE_INT32","","",4,null],[13,"TYPE_FIXED64","","",4,null],[13,"TYPE_FIXED32","","",4,null],[13,"TYPE_BOOL","","",4,null],[13,"TYPE_STRING","","",4,null],[13,"TYPE_GROUP","","",4,null],[13,"TYPE_MESSAGE","","",4,null],[13,"TYPE_BYTES","","",4,null],[13,"TYPE_UINT32","","",4,null],[13,"TYPE_ENUM","","",4,null],[13,"TYPE_SFIXED32","","",4,null],[13,"TYPE_SFIXED64","","",4,null],[13,"TYPE_SINT32","","",4,null],[13,"TYPE_SINT64","","",4,null],[4,"FieldDescriptorProto_Label","","",null,null],[13,"LABEL_OPTIONAL","","",5,null],[13,"LABEL_REQUIRED","","",5,null],[13,"LABEL_REPEATED","","",5,null],[4,"FileOptions_OptimizeMode","","",null,null],[13,"SPEED","","",6,null],[13,"CODE_SIZE","","",6,null],[13,"LITE_RUNTIME","","",6,null],[4,"FieldOptions_CType","","",null,null],[13,"STRING","","",7,null],[13,"CORD","","",7,null],[13,"STRING_PIECE","","",7,null],[5,"file_descriptor_proto","","",null,{"inputs":[],"output":{"name":"filedescriptorproto"}}],[11,"default","","",8,{"inputs":[],"output":{"name":"filedescriptorset"}}],[11,"clone","","",8,null],[11,"new","","",8,{"inputs":[],"output":{"name":"filedescriptorset"}}],[11,"default_instance","","",8,{"inputs":[],"output":{"name":"filedescriptorset"}}],[11,"clear_file","","",8,null],[11,"set_file","","",8,null],[11,"mut_file","","",8,null],[11,"take_file","","",8,null],[11,"get_file","","",8,null],[11,"is_initialized","","",8,null],[11,"merge_from","","",8,null],[11,"compute_size","","",8,null],[11,"write_to_with_cached_sizes","","",8,null],[11,"get_cached_size","","",8,null],[11,"get_unknown_fields","","",8,null],[11,"mut_unknown_fields","","",8,null],[11,"type_id","","",8,null],[11,"as_any","","",8,null],[11,"descriptor","","",8,null],[11,"new","","",8,{"inputs":[],"output":{"name":"filedescriptorset"}}],[11,"descriptor_static","","",8,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",8,null],[11,"eq","","",8,null],[11,"fmt","","",8,null],[11,"default","","",9,{"inputs":[],"output":{"name":"filedescriptorproto"}}],[11,"clone","","",9,null],[11,"new","","",9,{"inputs":[],"output":{"name":"filedescriptorproto"}}],[11,"default_instance","","",9,{"inputs":[],"output":{"name":"filedescriptorproto"}}],[11,"clear_name","","",9,null],[11,"has_name","","",9,null],[11,"set_name","","",9,null],[11,"mut_name","","",9,null],[11,"take_name","","",9,null],[11,"get_name","","",9,null],[11,"clear_package","","",9,null],[11,"has_package","","",9,null],[11,"set_package","","",9,null],[11,"mut_package","","",9,null],[11,"take_package","","",9,null],[11,"get_package","","",9,null],[11,"clear_dependency","","",9,null],[11,"set_dependency","","",9,null],[11,"mut_dependency","","",9,null],[11,"take_dependency","","",9,null],[11,"get_dependency","","",9,null],[11,"clear_public_dependency","","",9,null],[11,"set_public_dependency","","",9,null],[11,"mut_public_dependency","","",9,null],[11,"take_public_dependency","","",9,null],[11,"get_public_dependency","","",9,null],[11,"clear_weak_dependency","","",9,null],[11,"set_weak_dependency","","",9,null],[11,"mut_weak_dependency","","",9,null],[11,"take_weak_dependency","","",9,null],[11,"get_weak_dependency","","",9,null],[11,"clear_message_type","","",9,null],[11,"set_message_type","","",9,null],[11,"mut_message_type","","",9,null],[11,"take_message_type","","",9,null],[11,"get_message_type","","",9,null],[11,"clear_enum_type","","",9,null],[11,"set_enum_type","","",9,null],[11,"mut_enum_type","","",9,null],[11,"take_enum_type","","",9,null],[11,"get_enum_type","","",9,null],[11,"clear_service","","",9,null],[11,"set_service","","",9,null],[11,"mut_service","","",9,null],[11,"take_service","","",9,null],[11,"get_service","","",9,null],[11,"clear_extension","","",9,null],[11,"set_extension","","",9,null],[11,"mut_extension","","",9,null],[11,"take_extension","","",9,null],[11,"get_extension","","",9,null],[11,"clear_options","","",9,null],[11,"has_options","","",9,null],[11,"set_options","","",9,null],[11,"mut_options","","",9,null],[11,"take_options","","",9,null],[11,"get_options","","",9,null],[11,"clear_source_code_info","","",9,null],[11,"has_source_code_info","","",9,null],[11,"set_source_code_info","","",9,null],[11,"mut_source_code_info","","",9,null],[11,"take_source_code_info","","",9,null],[11,"get_source_code_info","","",9,null],[11,"is_initialized","","",9,null],[11,"merge_from","","",9,null],[11,"compute_size","","",9,null],[11,"write_to_with_cached_sizes","","",9,null],[11,"get_cached_size","","",9,null],[11,"get_unknown_fields","","",9,null],[11,"mut_unknown_fields","","",9,null],[11,"type_id","","",9,null],[11,"as_any","","",9,null],[11,"descriptor","","",9,null],[11,"new","","",9,{"inputs":[],"output":{"name":"filedescriptorproto"}}],[11,"descriptor_static","","",9,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",9,null],[11,"eq","","",9,null],[11,"fmt","","",9,null],[11,"default","","",10,{"inputs":[],"output":{"name":"descriptorproto"}}],[11,"clone","","",10,null],[11,"new","","",10,{"inputs":[],"output":{"name":"descriptorproto"}}],[11,"default_instance","","",10,{"inputs":[],"output":{"name":"descriptorproto"}}],[11,"clear_name","","",10,null],[11,"has_name","","",10,null],[11,"set_name","","",10,null],[11,"mut_name","","",10,null],[11,"take_name","","",10,null],[11,"get_name","","",10,null],[11,"clear_field","","",10,null],[11,"set_field","","",10,null],[11,"mut_field","","",10,null],[11,"take_field","","",10,null],[11,"get_field","","",10,null],[11,"clear_extension","","",10,null],[11,"set_extension","","",10,null],[11,"mut_extension","","",10,null],[11,"take_extension","","",10,null],[11,"get_extension","","",10,null],[11,"clear_nested_type","","",10,null],[11,"set_nested_type","","",10,null],[11,"mut_nested_type","","",10,null],[11,"take_nested_type","","",10,null],[11,"get_nested_type","","",10,null],[11,"clear_enum_type","","",10,null],[11,"set_enum_type","","",10,null],[11,"mut_enum_type","","",10,null],[11,"take_enum_type","","",10,null],[11,"get_enum_type","","",10,null],[11,"clear_extension_range","","",10,null],[11,"set_extension_range","","",10,null],[11,"mut_extension_range","","",10,null],[11,"take_extension_range","","",10,null],[11,"get_extension_range","","",10,null],[11,"clear_oneof_decl","","",10,null],[11,"set_oneof_decl","","",10,null],[11,"mut_oneof_decl","","",10,null],[11,"take_oneof_decl","","",10,null],[11,"get_oneof_decl","","",10,null],[11,"clear_options","","",10,null],[11,"has_options","","",10,null],[11,"set_options","","",10,null],[11,"mut_options","","",10,null],[11,"take_options","","",10,null],[11,"get_options","","",10,null],[11,"is_initialized","","",10,null],[11,"merge_from","","",10,null],[11,"compute_size","","",10,null],[11,"write_to_with_cached_sizes","","",10,null],[11,"get_cached_size","","",10,null],[11,"get_unknown_fields","","",10,null],[11,"mut_unknown_fields","","",10,null],[11,"type_id","","",10,null],[11,"as_any","","",10,null],[11,"descriptor","","",10,null],[11,"new","","",10,{"inputs":[],"output":{"name":"descriptorproto"}}],[11,"descriptor_static","","",10,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",10,null],[11,"eq","","",10,null],[11,"fmt","","",10,null],[11,"default","","",11,{"inputs":[],"output":{"name":"descriptorproto_extensionrange"}}],[11,"clone","","",11,null],[11,"new","","",11,{"inputs":[],"output":{"name":"descriptorproto_extensionrange"}}],[11,"default_instance","","",11,{"inputs":[],"output":{"name":"descriptorproto_extensionrange"}}],[11,"clear_start","","",11,null],[11,"has_start","","",11,null],[11,"set_start","","",11,null],[11,"get_start","","",11,null],[11,"clear_end","","",11,null],[11,"has_end","","",11,null],[11,"set_end","","",11,null],[11,"get_end","","",11,null],[11,"is_initialized","","",11,null],[11,"merge_from","","",11,null],[11,"compute_size","","",11,null],[11,"write_to_with_cached_sizes","","",11,null],[11,"get_cached_size","","",11,null],[11,"get_unknown_fields","","",11,null],[11,"mut_unknown_fields","","",11,null],[11,"type_id","","",11,null],[11,"as_any","","",11,null],[11,"descriptor","","",11,null],[11,"new","","",11,{"inputs":[],"output":{"name":"descriptorproto_extensionrange"}}],[11,"descriptor_static","","",11,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",11,null],[11,"eq","","",11,null],[11,"fmt","","",11,null],[11,"default","","",12,{"inputs":[],"output":{"name":"fielddescriptorproto"}}],[11,"clone","","",12,null],[11,"new","","",12,{"inputs":[],"output":{"name":"fielddescriptorproto"}}],[11,"default_instance","","",12,{"inputs":[],"output":{"name":"fielddescriptorproto"}}],[11,"clear_name","","",12,null],[11,"has_name","","",12,null],[11,"set_name","","",12,null],[11,"mut_name","","",12,null],[11,"take_name","","",12,null],[11,"get_name","","",12,null],[11,"clear_number","","",12,null],[11,"has_number","","",12,null],[11,"set_number","","",12,null],[11,"get_number","","",12,null],[11,"clear_label","","",12,null],[11,"has_label","","",12,null],[11,"set_label","","",12,null],[11,"get_label","","",12,null],[11,"clear_field_type","","",12,null],[11,"has_field_type","","",12,null],[11,"set_field_type","","",12,null],[11,"get_field_type","","",12,null],[11,"clear_type_name","","",12,null],[11,"has_type_name","","",12,null],[11,"set_type_name","","",12,null],[11,"mut_type_name","","",12,null],[11,"take_type_name","","",12,null],[11,"get_type_name","","",12,null],[11,"clear_extendee","","",12,null],[11,"has_extendee","","",12,null],[11,"set_extendee","","",12,null],[11,"mut_extendee","","",12,null],[11,"take_extendee","","",12,null],[11,"get_extendee","","",12,null],[11,"clear_default_value","","",12,null],[11,"has_default_value","","",12,null],[11,"set_default_value","","",12,null],[11,"mut_default_value","","",12,null],[11,"take_default_value","","",12,null],[11,"get_default_value","","",12,null],[11,"clear_oneof_index","","",12,null],[11,"has_oneof_index","","",12,null],[11,"set_oneof_index","","",12,null],[11,"get_oneof_index","","",12,null],[11,"clear_options","","",12,null],[11,"has_options","","",12,null],[11,"set_options","","",12,null],[11,"mut_options","","",12,null],[11,"take_options","","",12,null],[11,"get_options","","",12,null],[11,"is_initialized","","",12,null],[11,"merge_from","","",12,null],[11,"compute_size","","",12,null],[11,"write_to_with_cached_sizes","","",12,null],[11,"get_cached_size","","",12,null],[11,"get_unknown_fields","","",12,null],[11,"mut_unknown_fields","","",12,null],[11,"type_id","","",12,null],[11,"as_any","","",12,null],[11,"descriptor","","",12,null],[11,"new","","",12,{"inputs":[],"output":{"name":"fielddescriptorproto"}}],[11,"descriptor_static","","",12,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",12,null],[11,"eq","","",12,null],[11,"fmt","","",12,null],[11,"hash","","",4,null],[11,"fmt","","",4,null],[11,"eq","","",4,null],[11,"clone","","",4,null],[11,"value","","",4,null],[11,"from_i32","","",4,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"values","","",4,null],[11,"enum_descriptor_static","","",4,{"inputs":[{"name":"option"}],"output":{"name":"enumdescriptor"}}],[11,"hash","","",5,null],[11,"fmt","","",5,null],[11,"eq","","",5,null],[11,"clone","","",5,null],[11,"value","","",5,null],[11,"from_i32","","",5,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"values","","",5,null],[11,"enum_descriptor_static","","",5,{"inputs":[{"name":"option"}],"output":{"name":"enumdescriptor"}}],[11,"default","","",13,{"inputs":[],"output":{"name":"oneofdescriptorproto"}}],[11,"clone","","",13,null],[11,"new","","",13,{"inputs":[],"output":{"name":"oneofdescriptorproto"}}],[11,"default_instance","","",13,{"inputs":[],"output":{"name":"oneofdescriptorproto"}}],[11,"clear_name","","",13,null],[11,"has_name","","",13,null],[11,"set_name","","",13,null],[11,"mut_name","","",13,null],[11,"take_name","","",13,null],[11,"get_name","","",13,null],[11,"is_initialized","","",13,null],[11,"merge_from","","",13,null],[11,"compute_size","","",13,null],[11,"write_to_with_cached_sizes","","",13,null],[11,"get_cached_size","","",13,null],[11,"get_unknown_fields","","",13,null],[11,"mut_unknown_fields","","",13,null],[11,"type_id","","",13,null],[11,"as_any","","",13,null],[11,"descriptor","","",13,null],[11,"new","","",13,{"inputs":[],"output":{"name":"oneofdescriptorproto"}}],[11,"descriptor_static","","",13,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",13,null],[11,"eq","","",13,null],[11,"fmt","","",13,null],[11,"default","","",14,{"inputs":[],"output":{"name":"enumdescriptorproto"}}],[11,"clone","","",14,null],[11,"new","","",14,{"inputs":[],"output":{"name":"enumdescriptorproto"}}],[11,"default_instance","","",14,{"inputs":[],"output":{"name":"enumdescriptorproto"}}],[11,"clear_name","","",14,null],[11,"has_name","","",14,null],[11,"set_name","","",14,null],[11,"mut_name","","",14,null],[11,"take_name","","",14,null],[11,"get_name","","",14,null],[11,"clear_value","","",14,null],[11,"set_value","","",14,null],[11,"mut_value","","",14,null],[11,"take_value","","",14,null],[11,"get_value","","",14,null],[11,"clear_options","","",14,null],[11,"has_options","","",14,null],[11,"set_options","","",14,null],[11,"mut_options","","",14,null],[11,"take_options","","",14,null],[11,"get_options","","",14,null],[11,"is_initialized","","",14,null],[11,"merge_from","","",14,null],[11,"compute_size","","",14,null],[11,"write_to_with_cached_sizes","","",14,null],[11,"get_cached_size","","",14,null],[11,"get_unknown_fields","","",14,null],[11,"mut_unknown_fields","","",14,null],[11,"type_id","","",14,null],[11,"as_any","","",14,null],[11,"descriptor","","",14,null],[11,"new","","",14,{"inputs":[],"output":{"name":"enumdescriptorproto"}}],[11,"descriptor_static","","",14,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",14,null],[11,"eq","","",14,null],[11,"fmt","","",14,null],[11,"default","","",15,{"inputs":[],"output":{"name":"enumvaluedescriptorproto"}}],[11,"clone","","",15,null],[11,"new","","",15,{"inputs":[],"output":{"name":"enumvaluedescriptorproto"}}],[11,"default_instance","","",15,{"inputs":[],"output":{"name":"enumvaluedescriptorproto"}}],[11,"clear_name","","",15,null],[11,"has_name","","",15,null],[11,"set_name","","",15,null],[11,"mut_name","","",15,null],[11,"take_name","","",15,null],[11,"get_name","","",15,null],[11,"clear_number","","",15,null],[11,"has_number","","",15,null],[11,"set_number","","",15,null],[11,"get_number","","",15,null],[11,"clear_options","","",15,null],[11,"has_options","","",15,null],[11,"set_options","","",15,null],[11,"mut_options","","",15,null],[11,"take_options","","",15,null],[11,"get_options","","",15,null],[11,"is_initialized","","",15,null],[11,"merge_from","","",15,null],[11,"compute_size","","",15,null],[11,"write_to_with_cached_sizes","","",15,null],[11,"get_cached_size","","",15,null],[11,"get_unknown_fields","","",15,null],[11,"mut_unknown_fields","","",15,null],[11,"type_id","","",15,null],[11,"as_any","","",15,null],[11,"descriptor","","",15,null],[11,"new","","",15,{"inputs":[],"output":{"name":"enumvaluedescriptorproto"}}],[11,"descriptor_static","","",15,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",15,null],[11,"eq","","",15,null],[11,"fmt","","",15,null],[11,"default","","",16,{"inputs":[],"output":{"name":"servicedescriptorproto"}}],[11,"clone","","",16,null],[11,"new","","",16,{"inputs":[],"output":{"name":"servicedescriptorproto"}}],[11,"default_instance","","",16,{"inputs":[],"output":{"name":"servicedescriptorproto"}}],[11,"clear_name","","",16,null],[11,"has_name","","",16,null],[11,"set_name","","",16,null],[11,"mut_name","","",16,null],[11,"take_name","","",16,null],[11,"get_name","","",16,null],[11,"clear_method","","",16,null],[11,"set_method","","",16,null],[11,"mut_method","","",16,null],[11,"take_method","","",16,null],[11,"get_method","","",16,null],[11,"clear_options","","",16,null],[11,"has_options","","",16,null],[11,"set_options","","",16,null],[11,"mut_options","","",16,null],[11,"take_options","","",16,null],[11,"get_options","","",16,null],[11,"is_initialized","","",16,null],[11,"merge_from","","",16,null],[11,"compute_size","","",16,null],[11,"write_to_with_cached_sizes","","",16,null],[11,"get_cached_size","","",16,null],[11,"get_unknown_fields","","",16,null],[11,"mut_unknown_fields","","",16,null],[11,"type_id","","",16,null],[11,"as_any","","",16,null],[11,"descriptor","","",16,null],[11,"new","","",16,{"inputs":[],"output":{"name":"servicedescriptorproto"}}],[11,"descriptor_static","","",16,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",16,null],[11,"eq","","",16,null],[11,"fmt","","",16,null],[11,"default","","",17,{"inputs":[],"output":{"name":"methoddescriptorproto"}}],[11,"clone","","",17,null],[11,"new","","",17,{"inputs":[],"output":{"name":"methoddescriptorproto"}}],[11,"default_instance","","",17,{"inputs":[],"output":{"name":"methoddescriptorproto"}}],[11,"clear_name","","",17,null],[11,"has_name","","",17,null],[11,"set_name","","",17,null],[11,"mut_name","","",17,null],[11,"take_name","","",17,null],[11,"get_name","","",17,null],[11,"clear_input_type","","",17,null],[11,"has_input_type","","",17,null],[11,"set_input_type","","",17,null],[11,"mut_input_type","","",17,null],[11,"take_input_type","","",17,null],[11,"get_input_type","","",17,null],[11,"clear_output_type","","",17,null],[11,"has_output_type","","",17,null],[11,"set_output_type","","",17,null],[11,"mut_output_type","","",17,null],[11,"take_output_type","","",17,null],[11,"get_output_type","","",17,null],[11,"clear_options","","",17,null],[11,"has_options","","",17,null],[11,"set_options","","",17,null],[11,"mut_options","","",17,null],[11,"take_options","","",17,null],[11,"get_options","","",17,null],[11,"is_initialized","","",17,null],[11,"merge_from","","",17,null],[11,"compute_size","","",17,null],[11,"write_to_with_cached_sizes","","",17,null],[11,"get_cached_size","","",17,null],[11,"get_unknown_fields","","",17,null],[11,"mut_unknown_fields","","",17,null],[11,"type_id","","",17,null],[11,"as_any","","",17,null],[11,"descriptor","","",17,null],[11,"new","","",17,{"inputs":[],"output":{"name":"methoddescriptorproto"}}],[11,"descriptor_static","","",17,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",17,null],[11,"eq","","",17,null],[11,"fmt","","",17,null],[11,"default","","",18,{"inputs":[],"output":{"name":"fileoptions"}}],[11,"clone","","",18,null],[11,"new","","",18,{"inputs":[],"output":{"name":"fileoptions"}}],[11,"default_instance","","",18,{"inputs":[],"output":{"name":"fileoptions"}}],[11,"clear_java_package","","",18,null],[11,"has_java_package","","",18,null],[11,"set_java_package","","",18,null],[11,"mut_java_package","","",18,null],[11,"take_java_package","","",18,null],[11,"get_java_package","","",18,null],[11,"clear_java_outer_classname","","",18,null],[11,"has_java_outer_classname","","",18,null],[11,"set_java_outer_classname","","",18,null],[11,"mut_java_outer_classname","","",18,null],[11,"take_java_outer_classname","","",18,null],[11,"get_java_outer_classname","","",18,null],[11,"clear_java_multiple_files","","",18,null],[11,"has_java_multiple_files","","",18,null],[11,"set_java_multiple_files","","",18,null],[11,"get_java_multiple_files","","",18,null],[11,"clear_java_generate_equals_and_hash","","",18,null],[11,"has_java_generate_equals_and_hash","","",18,null],[11,"set_java_generate_equals_and_hash","","",18,null],[11,"get_java_generate_equals_and_hash","","",18,null],[11,"clear_java_string_check_utf8","","",18,null],[11,"has_java_string_check_utf8","","",18,null],[11,"set_java_string_check_utf8","","",18,null],[11,"get_java_string_check_utf8","","",18,null],[11,"clear_optimize_for","","",18,null],[11,"has_optimize_for","","",18,null],[11,"set_optimize_for","","",18,null],[11,"get_optimize_for","","",18,null],[11,"clear_go_package","","",18,null],[11,"has_go_package","","",18,null],[11,"set_go_package","","",18,null],[11,"mut_go_package","","",18,null],[11,"take_go_package","","",18,null],[11,"get_go_package","","",18,null],[11,"clear_cc_generic_services","","",18,null],[11,"has_cc_generic_services","","",18,null],[11,"set_cc_generic_services","","",18,null],[11,"get_cc_generic_services","","",18,null],[11,"clear_java_generic_services","","",18,null],[11,"has_java_generic_services","","",18,null],[11,"set_java_generic_services","","",18,null],[11,"get_java_generic_services","","",18,null],[11,"clear_py_generic_services","","",18,null],[11,"has_py_generic_services","","",18,null],[11,"set_py_generic_services","","",18,null],[11,"get_py_generic_services","","",18,null],[11,"clear_deprecated","","",18,null],[11,"has_deprecated","","",18,null],[11,"set_deprecated","","",18,null],[11,"get_deprecated","","",18,null],[11,"clear_uninterpreted_option","","",18,null],[11,"set_uninterpreted_option","","",18,null],[11,"mut_uninterpreted_option","","",18,null],[11,"take_uninterpreted_option","","",18,null],[11,"get_uninterpreted_option","","",18,null],[11,"is_initialized","","",18,null],[11,"merge_from","","",18,null],[11,"compute_size","","",18,null],[11,"write_to_with_cached_sizes","","",18,null],[11,"get_cached_size","","",18,null],[11,"get_unknown_fields","","",18,null],[11,"mut_unknown_fields","","",18,null],[11,"type_id","","",18,null],[11,"as_any","","",18,null],[11,"descriptor","","",18,null],[11,"new","","",18,{"inputs":[],"output":{"name":"fileoptions"}}],[11,"descriptor_static","","",18,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",18,null],[11,"eq","","",18,null],[11,"fmt","","",18,null],[11,"hash","","",6,null],[11,"fmt","","",6,null],[11,"eq","","",6,null],[11,"clone","","",6,null],[11,"value","","",6,null],[11,"from_i32","","",6,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"values","","",6,null],[11,"enum_descriptor_static","","",6,{"inputs":[{"name":"option"}],"output":{"name":"enumdescriptor"}}],[11,"default","","",19,{"inputs":[],"output":{"name":"messageoptions"}}],[11,"clone","","",19,null],[11,"new","","",19,{"inputs":[],"output":{"name":"messageoptions"}}],[11,"default_instance","","",19,{"inputs":[],"output":{"name":"messageoptions"}}],[11,"clear_message_set_wire_format","","",19,null],[11,"has_message_set_wire_format","","",19,null],[11,"set_message_set_wire_format","","",19,null],[11,"get_message_set_wire_format","","",19,null],[11,"clear_no_standard_descriptor_accessor","","",19,null],[11,"has_no_standard_descriptor_accessor","","",19,null],[11,"set_no_standard_descriptor_accessor","","",19,null],[11,"get_no_standard_descriptor_accessor","","",19,null],[11,"clear_deprecated","","",19,null],[11,"has_deprecated","","",19,null],[11,"set_deprecated","","",19,null],[11,"get_deprecated","","",19,null],[11,"clear_uninterpreted_option","","",19,null],[11,"set_uninterpreted_option","","",19,null],[11,"mut_uninterpreted_option","","",19,null],[11,"take_uninterpreted_option","","",19,null],[11,"get_uninterpreted_option","","",19,null],[11,"is_initialized","","",19,null],[11,"merge_from","","",19,null],[11,"compute_size","","",19,null],[11,"write_to_with_cached_sizes","","",19,null],[11,"get_cached_size","","",19,null],[11,"get_unknown_fields","","",19,null],[11,"mut_unknown_fields","","",19,null],[11,"type_id","","",19,null],[11,"as_any","","",19,null],[11,"descriptor","","",19,null],[11,"new","","",19,{"inputs":[],"output":{"name":"messageoptions"}}],[11,"descriptor_static","","",19,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",19,null],[11,"eq","","",19,null],[11,"fmt","","",19,null],[11,"default","","",20,{"inputs":[],"output":{"name":"fieldoptions"}}],[11,"clone","","",20,null],[11,"new","","",20,{"inputs":[],"output":{"name":"fieldoptions"}}],[11,"default_instance","","",20,{"inputs":[],"output":{"name":"fieldoptions"}}],[11,"clear_ctype","","",20,null],[11,"has_ctype","","",20,null],[11,"set_ctype","","",20,null],[11,"get_ctype","","",20,null],[11,"clear_packed","","",20,null],[11,"has_packed","","",20,null],[11,"set_packed","","",20,null],[11,"get_packed","","",20,null],[11,"clear_lazy","","",20,null],[11,"has_lazy","","",20,null],[11,"set_lazy","","",20,null],[11,"get_lazy","","",20,null],[11,"clear_deprecated","","",20,null],[11,"has_deprecated","","",20,null],[11,"set_deprecated","","",20,null],[11,"get_deprecated","","",20,null],[11,"clear_experimental_map_key","","",20,null],[11,"has_experimental_map_key","","",20,null],[11,"set_experimental_map_key","","",20,null],[11,"mut_experimental_map_key","","",20,null],[11,"take_experimental_map_key","","",20,null],[11,"get_experimental_map_key","","",20,null],[11,"clear_weak","","",20,null],[11,"has_weak","","",20,null],[11,"set_weak","","",20,null],[11,"get_weak","","",20,null],[11,"clear_uninterpreted_option","","",20,null],[11,"set_uninterpreted_option","","",20,null],[11,"mut_uninterpreted_option","","",20,null],[11,"take_uninterpreted_option","","",20,null],[11,"get_uninterpreted_option","","",20,null],[11,"is_initialized","","",20,null],[11,"merge_from","","",20,null],[11,"compute_size","","",20,null],[11,"write_to_with_cached_sizes","","",20,null],[11,"get_cached_size","","",20,null],[11,"get_unknown_fields","","",20,null],[11,"mut_unknown_fields","","",20,null],[11,"type_id","","",20,null],[11,"as_any","","",20,null],[11,"descriptor","","",20,null],[11,"new","","",20,{"inputs":[],"output":{"name":"fieldoptions"}}],[11,"descriptor_static","","",20,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",20,null],[11,"eq","","",20,null],[11,"fmt","","",20,null],[11,"hash","","",7,null],[11,"fmt","","",7,null],[11,"eq","","",7,null],[11,"clone","","",7,null],[11,"value","","",7,null],[11,"from_i32","","",7,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"values","","",7,null],[11,"enum_descriptor_static","","",7,{"inputs":[{"name":"option"}],"output":{"name":"enumdescriptor"}}],[11,"default","","",21,{"inputs":[],"output":{"name":"enumoptions"}}],[11,"clone","","",21,null],[11,"new","","",21,{"inputs":[],"output":{"name":"enumoptions"}}],[11,"default_instance","","",21,{"inputs":[],"output":{"name":"enumoptions"}}],[11,"clear_allow_alias","","",21,null],[11,"has_allow_alias","","",21,null],[11,"set_allow_alias","","",21,null],[11,"get_allow_alias","","",21,null],[11,"clear_deprecated","","",21,null],[11,"has_deprecated","","",21,null],[11,"set_deprecated","","",21,null],[11,"get_deprecated","","",21,null],[11,"clear_uninterpreted_option","","",21,null],[11,"set_uninterpreted_option","","",21,null],[11,"mut_uninterpreted_option","","",21,null],[11,"take_uninterpreted_option","","",21,null],[11,"get_uninterpreted_option","","",21,null],[11,"is_initialized","","",21,null],[11,"merge_from","","",21,null],[11,"compute_size","","",21,null],[11,"write_to_with_cached_sizes","","",21,null],[11,"get_cached_size","","",21,null],[11,"get_unknown_fields","","",21,null],[11,"mut_unknown_fields","","",21,null],[11,"type_id","","",21,null],[11,"as_any","","",21,null],[11,"descriptor","","",21,null],[11,"new","","",21,{"inputs":[],"output":{"name":"enumoptions"}}],[11,"descriptor_static","","",21,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",21,null],[11,"eq","","",21,null],[11,"fmt","","",21,null],[11,"default","","",22,{"inputs":[],"output":{"name":"enumvalueoptions"}}],[11,"clone","","",22,null],[11,"new","","",22,{"inputs":[],"output":{"name":"enumvalueoptions"}}],[11,"default_instance","","",22,{"inputs":[],"output":{"name":"enumvalueoptions"}}],[11,"clear_deprecated","","",22,null],[11,"has_deprecated","","",22,null],[11,"set_deprecated","","",22,null],[11,"get_deprecated","","",22,null],[11,"clear_uninterpreted_option","","",22,null],[11,"set_uninterpreted_option","","",22,null],[11,"mut_uninterpreted_option","","",22,null],[11,"take_uninterpreted_option","","",22,null],[11,"get_uninterpreted_option","","",22,null],[11,"is_initialized","","",22,null],[11,"merge_from","","",22,null],[11,"compute_size","","",22,null],[11,"write_to_with_cached_sizes","","",22,null],[11,"get_cached_size","","",22,null],[11,"get_unknown_fields","","",22,null],[11,"mut_unknown_fields","","",22,null],[11,"type_id","","",22,null],[11,"as_any","","",22,null],[11,"descriptor","","",22,null],[11,"new","","",22,{"inputs":[],"output":{"name":"enumvalueoptions"}}],[11,"descriptor_static","","",22,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",22,null],[11,"eq","","",22,null],[11,"fmt","","",22,null],[11,"default","","",23,{"inputs":[],"output":{"name":"serviceoptions"}}],[11,"clone","","",23,null],[11,"new","","",23,{"inputs":[],"output":{"name":"serviceoptions"}}],[11,"default_instance","","",23,{"inputs":[],"output":{"name":"serviceoptions"}}],[11,"clear_deprecated","","",23,null],[11,"has_deprecated","","",23,null],[11,"set_deprecated","","",23,null],[11,"get_deprecated","","",23,null],[11,"clear_uninterpreted_option","","",23,null],[11,"set_uninterpreted_option","","",23,null],[11,"mut_uninterpreted_option","","",23,null],[11,"take_uninterpreted_option","","",23,null],[11,"get_uninterpreted_option","","",23,null],[11,"is_initialized","","",23,null],[11,"merge_from","","",23,null],[11,"compute_size","","",23,null],[11,"write_to_with_cached_sizes","","",23,null],[11,"get_cached_size","","",23,null],[11,"get_unknown_fields","","",23,null],[11,"mut_unknown_fields","","",23,null],[11,"type_id","","",23,null],[11,"as_any","","",23,null],[11,"descriptor","","",23,null],[11,"new","","",23,{"inputs":[],"output":{"name":"serviceoptions"}}],[11,"descriptor_static","","",23,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",23,null],[11,"eq","","",23,null],[11,"fmt","","",23,null],[11,"default","","",24,{"inputs":[],"output":{"name":"methodoptions"}}],[11,"clone","","",24,null],[11,"new","","",24,{"inputs":[],"output":{"name":"methodoptions"}}],[11,"default_instance","","",24,{"inputs":[],"output":{"name":"methodoptions"}}],[11,"clear_deprecated","","",24,null],[11,"has_deprecated","","",24,null],[11,"set_deprecated","","",24,null],[11,"get_deprecated","","",24,null],[11,"clear_uninterpreted_option","","",24,null],[11,"set_uninterpreted_option","","",24,null],[11,"mut_uninterpreted_option","","",24,null],[11,"take_uninterpreted_option","","",24,null],[11,"get_uninterpreted_option","","",24,null],[11,"is_initialized","","",24,null],[11,"merge_from","","",24,null],[11,"compute_size","","",24,null],[11,"write_to_with_cached_sizes","","",24,null],[11,"get_cached_size","","",24,null],[11,"get_unknown_fields","","",24,null],[11,"mut_unknown_fields","","",24,null],[11,"type_id","","",24,null],[11,"as_any","","",24,null],[11,"descriptor","","",24,null],[11,"new","","",24,{"inputs":[],"output":{"name":"methodoptions"}}],[11,"descriptor_static","","",24,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",24,null],[11,"eq","","",24,null],[11,"fmt","","",24,null],[11,"default","","",25,{"inputs":[],"output":{"name":"uninterpretedoption"}}],[11,"clone","","",25,null],[11,"new","","",25,{"inputs":[],"output":{"name":"uninterpretedoption"}}],[11,"default_instance","","",25,{"inputs":[],"output":{"name":"uninterpretedoption"}}],[11,"clear_name","","",25,null],[11,"set_name","","",25,null],[11,"mut_name","","",25,null],[11,"take_name","","",25,null],[11,"get_name","","",25,null],[11,"clear_identifier_value","","",25,null],[11,"has_identifier_value","","",25,null],[11,"set_identifier_value","","",25,null],[11,"mut_identifier_value","","",25,null],[11,"take_identifier_value","","",25,null],[11,"get_identifier_value","","",25,null],[11,"clear_positive_int_value","","",25,null],[11,"has_positive_int_value","","",25,null],[11,"set_positive_int_value","","",25,null],[11,"get_positive_int_value","","",25,null],[11,"clear_negative_int_value","","",25,null],[11,"has_negative_int_value","","",25,null],[11,"set_negative_int_value","","",25,null],[11,"get_negative_int_value","","",25,null],[11,"clear_double_value","","",25,null],[11,"has_double_value","","",25,null],[11,"set_double_value","","",25,null],[11,"get_double_value","","",25,null],[11,"clear_string_value","","",25,null],[11,"has_string_value","","",25,null],[11,"set_string_value","","",25,null],[11,"mut_string_value","","",25,null],[11,"take_string_value","","",25,null],[11,"get_string_value","","",25,null],[11,"clear_aggregate_value","","",25,null],[11,"has_aggregate_value","","",25,null],[11,"set_aggregate_value","","",25,null],[11,"mut_aggregate_value","","",25,null],[11,"take_aggregate_value","","",25,null],[11,"get_aggregate_value","","",25,null],[11,"is_initialized","","",25,null],[11,"merge_from","","",25,null],[11,"compute_size","","",25,null],[11,"write_to_with_cached_sizes","","",25,null],[11,"get_cached_size","","",25,null],[11,"get_unknown_fields","","",25,null],[11,"mut_unknown_fields","","",25,null],[11,"type_id","","",25,null],[11,"as_any","","",25,null],[11,"descriptor","","",25,null],[11,"new","","",25,{"inputs":[],"output":{"name":"uninterpretedoption"}}],[11,"descriptor_static","","",25,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",25,null],[11,"eq","","",25,null],[11,"fmt","","",25,null],[11,"default","","",26,{"inputs":[],"output":{"name":"uninterpretedoption_namepart"}}],[11,"clone","","",26,null],[11,"new","","",26,{"inputs":[],"output":{"name":"uninterpretedoption_namepart"}}],[11,"default_instance","","",26,{"inputs":[],"output":{"name":"uninterpretedoption_namepart"}}],[11,"clear_name_part","","",26,null],[11,"has_name_part","","",26,null],[11,"set_name_part","","",26,null],[11,"mut_name_part","","",26,null],[11,"take_name_part","","",26,null],[11,"get_name_part","","",26,null],[11,"clear_is_extension","","",26,null],[11,"has_is_extension","","",26,null],[11,"set_is_extension","","",26,null],[11,"get_is_extension","","",26,null],[11,"is_initialized","","",26,null],[11,"merge_from","","",26,null],[11,"compute_size","","",26,null],[11,"write_to_with_cached_sizes","","",26,null],[11,"get_cached_size","","",26,null],[11,"get_unknown_fields","","",26,null],[11,"mut_unknown_fields","","",26,null],[11,"type_id","","",26,null],[11,"as_any","","",26,null],[11,"descriptor","","",26,null],[11,"new","","",26,{"inputs":[],"output":{"name":"uninterpretedoption_namepart"}}],[11,"descriptor_static","","",26,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",26,null],[11,"eq","","",26,null],[11,"fmt","","",26,null],[11,"default","","",27,{"inputs":[],"output":{"name":"sourcecodeinfo"}}],[11,"clone","","",27,null],[11,"new","","",27,{"inputs":[],"output":{"name":"sourcecodeinfo"}}],[11,"default_instance","","",27,{"inputs":[],"output":{"name":"sourcecodeinfo"}}],[11,"clear_location","","",27,null],[11,"set_location","","",27,null],[11,"mut_location","","",27,null],[11,"take_location","","",27,null],[11,"get_location","","",27,null],[11,"is_initialized","","",27,null],[11,"merge_from","","",27,null],[11,"compute_size","","",27,null],[11,"write_to_with_cached_sizes","","",27,null],[11,"get_cached_size","","",27,null],[11,"get_unknown_fields","","",27,null],[11,"mut_unknown_fields","","",27,null],[11,"type_id","","",27,null],[11,"as_any","","",27,null],[11,"descriptor","","",27,null],[11,"new","","",27,{"inputs":[],"output":{"name":"sourcecodeinfo"}}],[11,"descriptor_static","","",27,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",27,null],[11,"eq","","",27,null],[11,"fmt","","",27,null],[11,"default","","",28,{"inputs":[],"output":{"name":"sourcecodeinfo_location"}}],[11,"clone","","",28,null],[11,"new","","",28,{"inputs":[],"output":{"name":"sourcecodeinfo_location"}}],[11,"default_instance","","",28,{"inputs":[],"output":{"name":"sourcecodeinfo_location"}}],[11,"clear_path","","",28,null],[11,"set_path","","",28,null],[11,"mut_path","","",28,null],[11,"take_path","","",28,null],[11,"get_path","","",28,null],[11,"clear_span","","",28,null],[11,"set_span","","",28,null],[11,"mut_span","","",28,null],[11,"take_span","","",28,null],[11,"get_span","","",28,null],[11,"clear_leading_comments","","",28,null],[11,"has_leading_comments","","",28,null],[11,"set_leading_comments","","",28,null],[11,"mut_leading_comments","","",28,null],[11,"take_leading_comments","","",28,null],[11,"get_leading_comments","","",28,null],[11,"clear_trailing_comments","","",28,null],[11,"has_trailing_comments","","",28,null],[11,"set_trailing_comments","","",28,null],[11,"mut_trailing_comments","","",28,null],[11,"take_trailing_comments","","",28,null],[11,"get_trailing_comments","","",28,null],[11,"is_initialized","","",28,null],[11,"merge_from","","",28,null],[11,"compute_size","","",28,null],[11,"write_to_with_cached_sizes","","",28,null],[11,"get_cached_size","","",28,null],[11,"get_unknown_fields","","",28,null],[11,"mut_unknown_fields","","",28,null],[11,"type_id","","",28,null],[11,"as_any","","",28,null],[11,"descriptor","","",28,null],[11,"new","","",28,{"inputs":[],"output":{"name":"sourcecodeinfo_location"}}],[11,"descriptor_static","","",28,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",28,null],[11,"eq","","",28,null],[11,"fmt","","",28,null],[0,"plugin","protobuf","",null,null],[3,"CodeGeneratorRequest","protobuf::plugin","",null,null],[3,"CodeGeneratorResponse","","",null,null],[3,"CodeGeneratorResponse_File","","",null,null],[5,"file_descriptor_proto","","",null,{"inputs":[],"output":{"name":"filedescriptorproto"}}],[11,"default","","",29,{"inputs":[],"output":{"name":"codegeneratorrequest"}}],[11,"clone","","",29,null],[11,"new","","",29,{"inputs":[],"output":{"name":"codegeneratorrequest"}}],[11,"default_instance","","",29,{"inputs":[],"output":{"name":"codegeneratorrequest"}}],[11,"clear_file_to_generate","","",29,null],[11,"set_file_to_generate","","",29,null],[11,"mut_file_to_generate","","",29,null],[11,"take_file_to_generate","","",29,null],[11,"get_file_to_generate","","",29,null],[11,"clear_parameter","","",29,null],[11,"has_parameter","","",29,null],[11,"set_parameter","","",29,null],[11,"mut_parameter","","",29,null],[11,"take_parameter","","",29,null],[11,"get_parameter","","",29,null],[11,"clear_proto_file","","",29,null],[11,"set_proto_file","","",29,null],[11,"mut_proto_file","","",29,null],[11,"take_proto_file","","",29,null],[11,"get_proto_file","","",29,null],[11,"is_initialized","","",29,null],[11,"merge_from","","",29,null],[11,"compute_size","","",29,null],[11,"write_to_with_cached_sizes","","",29,null],[11,"get_cached_size","","",29,null],[11,"get_unknown_fields","","",29,null],[11,"mut_unknown_fields","","",29,null],[11,"type_id","","",29,null],[11,"as_any","","",29,null],[11,"descriptor","","",29,null],[11,"new","","",29,{"inputs":[],"output":{"name":"codegeneratorrequest"}}],[11,"descriptor_static","","",29,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",29,null],[11,"eq","","",29,null],[11,"fmt","","",29,null],[11,"default","","",30,{"inputs":[],"output":{"name":"codegeneratorresponse"}}],[11,"clone","","",30,null],[11,"new","","",30,{"inputs":[],"output":{"name":"codegeneratorresponse"}}],[11,"default_instance","","",30,{"inputs":[],"output":{"name":"codegeneratorresponse"}}],[11,"clear_error","","",30,null],[11,"has_error","","",30,null],[11,"set_error","","",30,null],[11,"mut_error","","",30,null],[11,"take_error","","",30,null],[11,"get_error","","",30,null],[11,"clear_file","","",30,null],[11,"set_file","","",30,null],[11,"mut_file","","",30,null],[11,"take_file","","",30,null],[11,"get_file","","",30,null],[11,"is_initialized","","",30,null],[11,"merge_from","","",30,null],[11,"compute_size","","",30,null],[11,"write_to_with_cached_sizes","","",30,null],[11,"get_cached_size","","",30,null],[11,"get_unknown_fields","","",30,null],[11,"mut_unknown_fields","","",30,null],[11,"type_id","","",30,null],[11,"as_any","","",30,null],[11,"descriptor","","",30,null],[11,"new","","",30,{"inputs":[],"output":{"name":"codegeneratorresponse"}}],[11,"descriptor_static","","",30,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",30,null],[11,"eq","","",30,null],[11,"fmt","","",30,null],[11,"default","","",31,{"inputs":[],"output":{"name":"codegeneratorresponse_file"}}],[11,"clone","","",31,null],[11,"new","","",31,{"inputs":[],"output":{"name":"codegeneratorresponse_file"}}],[11,"default_instance","","",31,{"inputs":[],"output":{"name":"codegeneratorresponse_file"}}],[11,"clear_name","","",31,null],[11,"has_name","","",31,null],[11,"set_name","","",31,null],[11,"mut_name","","",31,null],[11,"take_name","","",31,null],[11,"get_name","","",31,null],[11,"clear_insertion_point","","",31,null],[11,"has_insertion_point","","",31,null],[11,"set_insertion_point","","",31,null],[11,"mut_insertion_point","","",31,null],[11,"take_insertion_point","","",31,null],[11,"get_insertion_point","","",31,null],[11,"clear_content","","",31,null],[11,"has_content","","",31,null],[11,"set_content","","",31,null],[11,"mut_content","","",31,null],[11,"take_content","","",31,null],[11,"get_content","","",31,null],[11,"is_initialized","","",31,null],[11,"merge_from","","",31,null],[11,"compute_size","","",31,null],[11,"write_to_with_cached_sizes","","",31,null],[11,"get_cached_size","","",31,null],[11,"get_unknown_fields","","",31,null],[11,"mut_unknown_fields","","",31,null],[11,"type_id","","",31,null],[11,"as_any","","",31,null],[11,"descriptor","","",31,null],[11,"new","","",31,{"inputs":[],"output":{"name":"codegeneratorresponse_file"}}],[11,"descriptor_static","","",31,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",31,null],[11,"eq","","",31,null],[11,"fmt","","",31,null],[0,"core","protobuf","",null,null],[5,"message_is","protobuf::core","",null,{"inputs":[{"name":"message"}],"output":{"name":"bool"}}],[5,"message_down_cast","","",null,{"inputs":[{"name":"message"}],"output":{"name":"m"}}],[5,"parse_from","","",null,{"inputs":[{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[5,"parse_from_reader","","",null,{"inputs":[{"name":"read"}],"output":{"name":"protobufresult"}}],[5,"parse_from_bytes","","",null,null],[5,"parse_length_delimited_from","","",null,{"inputs":[{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[5,"parse_length_delimited_from_reader","","",null,{"inputs":[{"name":"read"}],"output":{"name":"protobufresult"}}],[5,"parse_length_delimited_from_bytes","","",null,null],[8,"MessageStatic","","",null,null],[10,"new","","",32,{"inputs":[],"output":{"name":"self"}}],[11,"descriptor_static","","",32,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[8,"Message","","",null,null],[10,"descriptor","","",33,null],[10,"is_initialized","","",33,null],[10,"merge_from","","",33,null],[10,"write_to_with_cached_sizes","","",33,null],[10,"compute_size","","",33,null],[10,"get_cached_size","","",33,null],[11,"write_to","","",33,null],[11,"write_length_delimited_to","","",33,null],[11,"merge_from_bytes","","",33,null],[11,"check_initialized","","",33,null],[11,"write_to_writer","","",33,null],[11,"write_to_vec","","",33,null],[11,"write_to_bytes","","",33,null],[11,"write_length_delimited_to_writer","","",33,null],[11,"write_length_delimited_to_bytes","","",33,null],[10,"get_unknown_fields","","",33,null],[10,"mut_unknown_fields","","",33,null],[10,"type_id","","",33,null],[10,"as_any","","",33,null],[8,"ProtobufEnum","","",null,null],[10,"value","","",34,null],[10,"from_i32","","",34,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"values","","",34,null],[11,"descriptor","","",34,null],[11,"enum_descriptor","","",34,null],[11,"enum_descriptor_static","","",34,{"inputs":[{"name":"option"}],"output":{"name":"enumdescriptor"}}],[0,"rt","protobuf","",null,null],[5,"compute_raw_varint64_size","protobuf::rt","",null,{"inputs":[{"name":"u64"}],"output":{"name":"u32"}}],[5,"compute_raw_varint32_size","","",null,{"inputs":[{"name":"u32"}],"output":{"name":"u32"}}],[5,"vec_packed_varint_data_size","","",null,null],[5,"vec_packed_varint_zigzag_data_size","","",null,null],[5,"vec_packed_enum_data_size","","",null,null],[5,"vec_packed_varint_size","","",null,null],[5,"vec_packed_varint_zigzag_size","","",null,null],[5,"vec_packed_enum_size","","",null,null],[5,"tag_size","","",null,{"inputs":[{"name":"u32"}],"output":{"name":"u32"}}],[5,"value_size_no_tag","","",null,{"inputs":[{"name":"t"},{"name":"wiretype"}],"output":{"name":"u32"}}],[5,"value_size","","",null,{"inputs":[{"name":"u32"},{"name":"t"},{"name":"wiretype"}],"output":{"name":"u32"}}],[5,"enum_size","","",null,{"inputs":[{"name":"u32"},{"name":"e"}],"output":{"name":"u32"}}],[5,"bytes_size","","",null,null],[5,"string_size","","",null,{"inputs":[{"name":"u32"},{"name":"str"}],"output":{"name":"u32"}}],[5,"unknown_fields_size","","",null,{"inputs":[{"name":"unknownfields"}],"output":{"name":"u32"}}],[5,"read_repeated_int32_into","","",null,{"inputs":[{"name":"wiretype"},{"name":"codedinputstream"},{"name":"vec"}],"output":{"name":"protobufresult"}}],[5,"read_repeated_int64_into","","",null,{"inputs":[{"name":"wiretype"},{"name":"codedinputstream"},{"name":"vec"}],"output":{"name":"protobufresult"}}],[5,"read_repeated_uint32_into","","",null,{"inputs":[{"name":"wiretype"},{"name":"codedinputstream"},{"name":"vec"}],"output":{"name":"protobufresult"}}],[5,"read_repeated_uint64_into","","",null,{"inputs":[{"name":"wiretype"},{"name":"codedinputstream"},{"name":"vec"}],"output":{"name":"protobufresult"}}],[5,"read_repeated_sint32_into","","",null,{"inputs":[{"name":"wiretype"},{"name":"codedinputstream"},{"name":"vec"}],"output":{"name":"protobufresult"}}],[5,"read_repeated_sint64_into","","",null,{"inputs":[{"name":"wiretype"},{"name":"codedinputstream"},{"name":"vec"}],"output":{"name":"protobufresult"}}],[5,"read_repeated_fixed32_into","","",null,{"inputs":[{"name":"wiretype"},{"name":"codedinputstream"},{"name":"vec"}],"output":{"name":"protobufresult"}}],[5,"read_repeated_fixed64_into","","",null,{"inputs":[{"name":"wiretype"},{"name":"codedinputstream"},{"name":"vec"}],"output":{"name":"protobufresult"}}],[5,"read_repeated_sfixed32_into","","",null,{"inputs":[{"name":"wiretype"},{"name":"codedinputstream"},{"name":"vec"}],"output":{"name":"protobufresult"}}],[5,"read_repeated_sfixed64_into","","",null,{"inputs":[{"name":"wiretype"},{"name":"codedinputstream"},{"name":"vec"}],"output":{"name":"protobufresult"}}],[5,"read_repeated_double_into","","",null,{"inputs":[{"name":"wiretype"},{"name":"codedinputstream"},{"name":"vec"}],"output":{"name":"protobufresult"}}],[5,"read_repeated_float_into","","",null,{"inputs":[{"name":"wiretype"},{"name":"codedinputstream"},{"name":"vec"}],"output":{"name":"protobufresult"}}],[5,"read_repeated_bool_into","","",null,{"inputs":[{"name":"wiretype"},{"name":"codedinputstream"},{"name":"vec"}],"output":{"name":"protobufresult"}}],[5,"read_repeated_enum_into","","",null,{"inputs":[{"name":"wiretype"},{"name":"codedinputstream"},{"name":"vec"}],"output":{"name":"protobufresult"}}],[5,"read_repeated_string_into","","",null,{"inputs":[{"name":"wiretype"},{"name":"codedinputstream"},{"name":"repeatedfield"}],"output":{"name":"protobufresult"}}],[5,"read_singular_string_into","","",null,{"inputs":[{"name":"wiretype"},{"name":"codedinputstream"},{"name":"singularfield"}],"output":{"name":"protobufresult"}}],[5,"read_repeated_bytes_into","","",null,{"inputs":[{"name":"wiretype"},{"name":"codedinputstream"},{"name":"repeatedfield"}],"output":{"name":"protobufresult"}}],[5,"read_singular_bytes_into","","",null,{"inputs":[{"name":"wiretype"},{"name":"codedinputstream"},{"name":"singularfield"}],"output":{"name":"protobufresult"}}],[5,"read_repeated_message_into","","",null,{"inputs":[{"name":"wiretype"},{"name":"codedinputstream"},{"name":"repeatedfield"}],"output":{"name":"protobufresult"}}],[5,"read_singular_message_into","","",null,{"inputs":[{"name":"wiretype"},{"name":"codedinputstream"},{"name":"singularptrfield"}],"output":{"name":"protobufresult"}}],[5,"read_unknown_or_skip_group","","",null,{"inputs":[{"name":"u32"},{"name":"wiretype"},{"name":"codedinputstream"},{"name":"unknownfields"}],"output":{"name":"protobufresult"}}],[5,"unexpected_wire_type","","Create an error for unexpected wire type.",null,{"inputs":[{"name":"wiretype"}],"output":{"name":"protobuferror"}}],[8,"ProtobufVarint","","",null,null],[10,"len_varint","","",35,null],[8,"ProtobufVarintZigzag","","",null,null],[10,"len_varint_zigzag","","",36,null],[0,"lazy","protobuf","",null,null],[3,"Lazy","protobuf::lazy","",null,null],[12,"lock","","",37,null],[12,"ptr","","",37,null],[17,"ONCE_INIT","","",null,null],[11,"get","","",37,null],[0,"code_writer","protobuf","",null,null],[3,"CodeWriter","protobuf::code_writer","",null,null],[11,"new","","",38,{"inputs":[{"name":"write"}],"output":{"name":"codewriter"}}],[11,"write_line","","",38,null],[11,"todo","","",38,null],[11,"indented","","",38,null],[11,"commented","","",38,null],[11,"lazy_static","","",38,null],[11,"lazy_static_decl_get","","",38,null],[11,"block","","",38,null],[11,"expr_block","","",38,null],[11,"stmt_block","","",38,null],[11,"unsafe_expr","","",38,null],[11,"impl_self_block","","",38,null],[11,"impl_for_block","","",38,null],[11,"unsafe_impl","","",38,null],[11,"pub_struct","","",38,null],[11,"pub_enum","","",38,null],[11,"field_entry","","",38,null],[11,"field_decl","","",38,null],[11,"derive","","",38,null],[11,"allow","","",38,null],[11,"comment","","",38,null],[11,"pub_fn","","",38,null],[11,"def_fn","","",38,null],[11,"while_block","","",38,null],[11,"if_stmt","","",38,null],[11,"if_else_stmt","","",38,null],[11,"if_let_stmt","","",38,null],[11,"if_let_else_stmt","","",38,null],[11,"for_stmt","","",38,null],[11,"match_block","","",38,null],[11,"match_expr","","",38,null],[11,"case_block","","",38,null],[11,"case_expr","","",38,null],[11,"error_unexpected_wire_type","","",38,null],[11,"assert_wire_type","","",38,null],[0,"codegen","protobuf","",null,null],[4,"RustType","protobuf::codegen","",null,null],[13,"Int","","",39,null],[13,"Float","","",39,null],[13,"Bool","","",39,null],[13,"Vec","","",39,null],[13,"String","","",39,null],[13,"Slice","","",39,null],[13,"Str","","",39,null],[13,"Option","","",39,null],[13,"SingularField","","",39,null],[13,"SingularPtrField","","",39,null],[13,"RepeatedField","","",39,null],[13,"Uniq","","",39,null],[13,"Ref","","",39,null],[13,"Message","","",39,null],[13,"Enum","","",39,null],[13,"Oneof","","",39,null],[13,"Group","","",39,null],[5,"gen","","",null,null],[5,"protoc_gen_rust_main","","",null,{"inputs":[],"output":null}],[11,"eq","","",39,null],[11,"ne","","",39,null],[11,"clone","","",39,null],[11,"fmt","","",39,null],[0,"compiler_plugin","protobuf","",null,null],[3,"GenResult","protobuf::compiler_plugin","",null,null],[12,"name","","",40,null],[12,"content","","",40,null],[5,"plugin_main","","",null,null],[0,"repeated","protobuf","",null,null],[3,"RepeatedField","protobuf::repeated","",null,null],[11,"clear","","",41,null],[11,"clear","","",41,null],[11,"default","","",41,{"inputs":[],"output":{"name":"repeatedfield"}}],[11,"new","","",41,{"inputs":[],"output":{"name":"repeatedfield"}}],[11,"from_vec","","",41,{"inputs":[{"name":"vec"}],"output":{"name":"repeatedfield"}}],[11,"into_vec","","",41,null],[11,"capacity","","",41,null],[11,"as_mut_slice","","",41,null],[11,"slice","","",41,null],[11,"slice_mut","","",41,null],[11,"slice_from","","",41,null],[11,"slice_from_mut","","",41,null],[11,"slice_to","","",41,null],[11,"slice_to_mut","","",41,null],[11,"split_at","","",41,null],[11,"split_at_mut","","",41,null],[11,"tail","","",41,null],[11,"last","","",41,null],[11,"last_mut","","",41,null],[11,"init","","",41,null],[11,"push","","",41,null],[11,"pop","","",41,null],[11,"insert","","",41,null],[11,"remove","","",41,null],[11,"truncate","","",41,null],[11,"reverse","","",41,null],[11,"into_iter","","",41,null],[11,"iter","","",41,null],[11,"iter_mut","","",41,null],[11,"sort_by","","",41,null],[11,"as_ptr","","",41,null],[11,"as_mut_ptr","","",41,null],[11,"push_default","","",41,null],[11,"from_slice","","",41,null],[11,"clone","","",41,null],[11,"from_iter","","",41,{"inputs":[{"name":"i"}],"output":{"name":"repeatedfield"}}],[11,"eq","","",41,null],[11,"contains","","",41,null],[11,"hash","","",41,null],[11,"as_ref","","",41,null],[11,"borrow","","",41,null],[11,"deref","","",41,null],[11,"deref_mut","","",41,null],[11,"index","","",41,null],[11,"index_mut","","",41,null],[11,"fmt","","",41,null],[0,"singular","protobuf","",null,null],[3,"SingularField","protobuf::singular","",null,null],[3,"SingularPtrField","","",null,null],[11,"some","","",42,{"inputs":[{"name":"t"}],"output":{"name":"singularfield"}}],[11,"is_some","","",42,null],[11,"is_none","","",42,null],[11,"into_option","","",42,null],[11,"as_ref","","",42,null],[11,"as_mut","","",42,null],[11,"get_ref","","",42,null],[11,"get_mut_ref","","",42,null],[11,"unwrap","","",42,null],[11,"unwrap_or","","",42,null],[11,"unwrap_or_else","","",42,null],[11,"map","","",42,null],[11,"iter","","",42,null],[11,"mut_iter","","",42,null],[11,"clear","","",42,null],[11,"none","","",42,{"inputs":[],"output":{"name":"singularfield"}}],[11,"from_option","","",42,{"inputs":[{"name":"option"}],"output":{"name":"singularfield"}}],[11,"take","","",42,null],[11,"some","","",43,{"inputs":[{"name":"t"}],"output":{"name":"singularptrfield"}}],[11,"none","","",43,{"inputs":[],"output":{"name":"singularptrfield"}}],[11,"from_option","","",43,{"inputs":[{"name":"option"}],"output":{"name":"singularptrfield"}}],[11,"is_some","","",43,null],[11,"is_none","","",43,null],[11,"into_option","","",43,null],[11,"as_ref","","",43,null],[11,"as_mut","","",43,null],[11,"get_ref","","",43,null],[11,"get_mut_ref","","",43,null],[11,"unwrap","","",43,null],[11,"unwrap_or","","",43,null],[11,"unwrap_or_else","","",43,null],[11,"map","","",43,null],[11,"iter","","",43,null],[11,"mut_iter","","",43,null],[11,"take","","",43,null],[11,"clear","","",43,null],[11,"unwrap_or_default","","",42,null],[11,"set_default","","",42,null],[11,"unwrap_or_default","","",43,null],[11,"set_default","","",43,null],[11,"default","","",42,{"inputs":[],"output":{"name":"singularfield"}}],[11,"default","","",43,{"inputs":[],"output":{"name":"singularptrfield"}}],[11,"clone","","",42,null],[11,"clone","","",43,null],[11,"fmt","","",42,null],[11,"fmt","","",43,null],[11,"eq","","",42,null],[11,"eq","","",43,null],[11,"hash","","",42,null],[11,"hash","","",43,null],[0,"clear","protobuf","",null,null],[8,"Clear","protobuf::clear","anything that can be cleared",null,null],[10,"clear","","",44,null],[11,"clear","core::option","",45,null],[11,"clear","collections::string","",46,null],[11,"clear","collections::vec","",47,null],[0,"reflect","protobuf","",null,null],[3,"FieldDescriptor","protobuf::reflect","",null,null],[3,"MessageDescriptor","","",null,null],[3,"EnumValueDescriptor","","",null,null],[3,"EnumDescriptor","","",null,null],[0,"accessor","","",null,null],[5,"make_singular_u32_accessor","protobuf::reflect::accessor","",null,null],[5,"make_singular_i32_accessor","","",null,null],[5,"make_singular_u64_accessor","","",null,null],[5,"make_singular_i64_accessor","","",null,null],[5,"make_singular_f32_accessor","","",null,null],[5,"make_singular_f64_accessor","","",null,null],[5,"make_singular_bool_accessor","","",null,null],[5,"make_singular_string_accessor","","",null,null],[5,"make_singular_bytes_accessor","","",null,null],[5,"make_singular_enum_accessor","","",null,null],[5,"make_singular_message_accessor","","",null,null],[5,"make_repeated_u32_accessor","","",null,null],[5,"make_repeated_i32_accessor","","",null,null],[5,"make_repeated_u64_accessor","","",null,null],[5,"make_repeated_i64_accessor","","",null,null],[5,"make_repeated_f32_accessor","","",null,null],[5,"make_repeated_f64_accessor","","",null,null],[5,"make_repeated_bool_accessor","","",null,null],[5,"make_repeated_string_accessor","","",null,null],[5,"make_repeated_bytes_accessor","","",null,null],[5,"make_repeated_enum_accessor","","",null,null],[5,"make_repeated_message_accessor","","",null,null],[8,"FieldAccessor","","this trait should not be used directly, use `FieldDescriptor` instead",null,null],[10,"name_generic","","",48,null],[10,"has_field_generic","","",48,null],[10,"len_field_generic","","",48,null],[10,"get_message_generic","","",48,null],[10,"get_rep_message_item_generic","","",48,null],[10,"get_enum_generic","","",48,null],[10,"get_rep_enum_item_generic","","",48,null],[10,"get_str_generic","","",48,null],[10,"get_rep_str_generic","","",48,null],[10,"get_bytes_generic","","",48,null],[10,"get_rep_bytes_generic","","",48,null],[10,"get_u32_generic","","",48,null],[10,"get_rep_u32_generic","","",48,null],[10,"get_u64_generic","","",48,null],[10,"get_rep_u64_generic","","",48,null],[10,"get_i32_generic","","",48,null],[10,"get_rep_i32_generic","","",48,null],[10,"get_i64_generic","","",48,null],[10,"get_rep_i64_generic","","",48,null],[10,"get_bool_generic","","",48,null],[10,"get_rep_bool_generic","","",48,null],[10,"get_f32_generic","","",48,null],[10,"get_rep_f32_generic","","",48,null],[10,"get_f64_generic","","",48,null],[10,"get_rep_f64_generic","","",48,null],[11,"proto","protobuf::reflect","",49,null],[11,"name","","",49,null],[11,"is_repeated","","",49,null],[11,"has_field","","",49,null],[11,"len_field","","",49,null],[11,"get_message","","",49,null],[11,"get_rep_message_item","","",49,null],[11,"get_enum","","",49,null],[11,"get_rep_enum_item","","",49,null],[11,"get_str","","",49,null],[11,"get_rep_str","","",49,null],[11,"get_rep_str_item","","",49,null],[11,"get_bytes","","",49,null],[11,"get_rep_bytes","","",49,null],[11,"get_rep_bytes_item","","",49,null],[11,"get_u32","","",49,null],[11,"get_rep_u32","","",49,null],[11,"get_u64","","",49,null],[11,"get_rep_u64","","",49,null],[11,"get_i32","","",49,null],[11,"get_rep_i32","","",49,null],[11,"get_i64","","",49,null],[11,"get_rep_i64","","",49,null],[11,"get_bool","","",49,null],[11,"get_rep_bool","","",49,null],[11,"get_f32","","",49,null],[11,"get_rep_f32","","",49,null],[11,"get_f64","","",49,null],[11,"get_rep_f64","","",49,null],[11,"for_type","","",50,{"inputs":[],"output":{"name":"messagedescriptor"}}],[11,"new","","",50,{"inputs":[{"name":"str"},{"name":"vec"},{"name":"filedescriptorproto"}],"output":{"name":"messagedescriptor"}}],[11,"new_instance","","",50,null],[11,"name","","",50,null],[11,"full_name","","",50,null],[11,"fields","","",50,null],[11,"field_by_name","","",50,null],[11,"field_by_number","","",50,null],[11,"clone","","",51,null],[11,"name","","",51,null],[11,"value","","",51,null],[11,"name","","",52,null],[11,"for_type","","",52,{"inputs":[],"output":{"name":"enumdescriptor"}}],[11,"new","","",52,{"inputs":[{"name":"str"},{"name":"filedescriptorproto"}],"output":{"name":"enumdescriptor"}}],[11,"value_by_name","","",52,null],[11,"value_by_number","","",52,null],[0,"text_format","protobuf","",null,null],[5,"print_to","protobuf::text_format","",null,{"inputs":[{"name":"message"},{"name":"string"}],"output":null}],[5,"print_to_string","","",null,{"inputs":[{"name":"message"}],"output":{"name":"string"}}],[5,"fmt","","",null,{"inputs":[{"name":"message"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"stream","protobuf","",null,null],[3,"CodedInputStream","protobuf::stream","",null,null],[3,"CodedOutputStream","","",null,null],[5,"with_coded_output_stream_to_bytes","","",null,{"inputs":[{"name":"f"}],"output":{"name":"protobufresult"}}],[0,"wire_format","","",null,null],[3,"Tag","protobuf::stream::wire_format","",null,null],[4,"WireType","","",null,null],[13,"WireTypeVarint","","",53,null],[13,"WireTypeFixed64","","",53,null],[13,"WireTypeLengthDelimited","","",53,null],[13,"WireTypeStartGroup","","",53,null],[13,"WireTypeEndGroup","","",53,null],[13,"WireTypeFixed32","","",53,null],[17,"TAG_TYPE_BITS","","",null,null],[17,"TAG_TYPE_MASK","","",null,null],[17,"FIELD_NUMBER_MAX","","",null,null],[11,"fmt","","",53,null],[11,"clone","","",53,null],[11,"eq","","",53,null],[11,"new","","",53,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"clone","","",54,null],[11,"value","","",54,null],[11,"new","","",54,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"make","","",54,{"inputs":[{"name":"u32"},{"name":"wiretype"}],"output":{"name":"tag"}}],[11,"unpack","","",54,null],[11,"field_number","","",54,null],[8,"WithCodedOutputStream","protobuf::stream","",null,null],[10,"with_coded_output_stream","","",55,null],[8,"WithCodedInputStream","","",null,null],[10,"with_coded_input_stream","","",56,null],[11,"new","","",57,{"inputs":[{"name":"read"}],"output":{"name":"codedinputstream"}}],[11,"from_buffered_reader","","",57,{"inputs":[{"name":"bufread"}],"output":{"name":"codedinputstream"}}],[11,"from_bytes","","",57,null],[11,"pos","","",57,null],[11,"bytes_until_limit","","",57,null],[11,"read","","",57,null],[11,"read_raw_byte","","",57,null],[11,"push_limit","","",57,null],[11,"pop_limit","","",57,null],[11,"eof","","",57,null],[11,"check_eof","","",57,null],[11,"read_raw_varint64","","",57,null],[11,"read_raw_varint32","","",57,null],[11,"read_raw_little_endian32","","",57,null],[11,"read_raw_little_endian64","","",57,null],[11,"read_tag","","",57,null],[11,"read_tag_unpack","","",57,null],[11,"read_double","","",57,null],[11,"read_float","","",57,null],[11,"read_int64","","",57,null],[11,"read_int32","","",57,null],[11,"read_uint64","","",57,null],[11,"read_uint32","","",57,null],[11,"read_sint64","","",57,null],[11,"read_sint32","","",57,null],[11,"read_fixed64","","",57,null],[11,"read_fixed32","","",57,null],[11,"read_sfixed64","","",57,null],[11,"read_sfixed32","","",57,null],[11,"read_bool","","",57,null],[11,"read_enum","","",57,null],[11,"read_repeated_packed_double_into","","",57,null],[11,"read_repeated_packed_float_into","","",57,null],[11,"read_repeated_packed_int64_into","","",57,null],[11,"read_repeated_packed_int32_into","","",57,null],[11,"read_repeated_packed_uint64_into","","",57,null],[11,"read_repeated_packed_uint32_into","","",57,null],[11,"read_repeated_packed_sint64_into","","",57,null],[11,"read_repeated_packed_sint32_into","","",57,null],[11,"read_repeated_packed_fixed64_into","","",57,null],[11,"read_repeated_packed_fixed32_into","","",57,null],[11,"read_repeated_packed_sfixed64_into","","",57,null],[11,"read_repeated_packed_sfixed32_into","","",57,null],[11,"read_repeated_packed_bool_into","","",57,null],[11,"read_repeated_packed_enum_into","","",57,null],[11,"read_unknown","","",57,null],[11,"skip_field","","",57,null],[11,"read_raw_bytes_into","","Read raw bytes into the supplied vector.  The vector will be resized as needed and\noverwritten.",57,null],[11,"read_raw_bytes","","Read exact number of bytes",57,null],[11,"skip_raw_bytes","","",57,null],[11,"read_bytes","","",57,null],[11,"read_bytes_into","","",57,null],[11,"read_string","","",57,null],[11,"read_string_into","","",57,null],[11,"merge_message","","",57,null],[11,"read_message","","",57,null],[11,"new","","",58,{"inputs":[{"name":"write"}],"output":{"name":"codedoutputstream"}}],[11,"flush","","",58,null],[11,"write_raw_byte","","",58,null],[11,"write_raw_bytes","","",58,null],[11,"write_tag","","",58,null],[11,"write_raw_varint32","","",58,null],[11,"write_raw_varint64","","",58,null],[11,"write_raw_little_endian32","","",58,null],[11,"write_raw_little_endian64","","",58,null],[11,"write_float_no_tag","","",58,null],[11,"write_double_no_tag","","",58,null],[11,"write_float","","",58,null],[11,"write_double","","",58,null],[11,"write_uint64_no_tag","","",58,null],[11,"write_uint32_no_tag","","",58,null],[11,"write_int64_no_tag","","",58,null],[11,"write_int32_no_tag","","",58,null],[11,"write_sint64_no_tag","","",58,null],[11,"write_sint32_no_tag","","",58,null],[11,"write_fixed64_no_tag","","",58,null],[11,"write_fixed32_no_tag","","",58,null],[11,"write_sfixed64_no_tag","","",58,null],[11,"write_sfixed32_no_tag","","",58,null],[11,"write_bool_no_tag","","",58,null],[11,"write_enum_no_tag","","",58,null],[11,"write_enum_obj_no_tag","","",58,null],[11,"write_unknown_no_tag","","",58,null],[11,"write_uint64","","",58,null],[11,"write_uint32","","",58,null],[11,"write_int64","","",58,null],[11,"write_int32","","",58,null],[11,"write_sint64","","",58,null],[11,"write_sint32","","",58,null],[11,"write_fixed64","","",58,null],[11,"write_fixed32","","",58,null],[11,"write_sfixed64","","",58,null],[11,"write_sfixed32","","",58,null],[11,"write_bool","","",58,null],[11,"write_enum","","",58,null],[11,"write_enum_obj","","",58,null],[11,"write_unknown","","",58,null],[11,"write_unknown_fields","","",58,null],[11,"write_bytes_no_tag","","",58,null],[11,"write_string_no_tag","","",58,null],[11,"write_message_no_tag","","",58,null],[11,"write_bytes","","",58,null],[11,"write_string","","",58,null],[11,"write_message","","",58,null],[0,"error","protobuf","",null,null],[4,"ProtobufError","protobuf::error","",null,null],[13,"IoError","","",59,null],[13,"WireError","","",59,null],[13,"MessageNotInitialized","","",59,null],[12,"message","protobuf::error::ProtobufError","",59,null],[6,"ProtobufResult","protobuf::error","",null,null],[11,"fmt","","",59,null],[11,"message_not_initialized","","",59,{"inputs":[{"name":"str"}],"output":{"name":"protobuferror"}}],[11,"fmt","","",59,null],[11,"description","","",59,null],[11,"cause","","",59,null],[0,"hex","protobuf","",null,null],[5,"decode_hex","protobuf::hex","",null,{"inputs":[{"name":"str"}],"output":{"name":"vec"}}],[5,"encode_hex","","",null,null],[11,"fmt","protobuf","",2,null],[11,"wire_type","","",2,null],[11,"get_ref","","",2,null],[11,"wire_type","","",3,null],[11,"default","","",1,{"inputs":[],"output":{"name":"unknownvalues"}}],[11,"fmt","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"clone","","",1,null],[11,"add_value","","",1,null],[11,"iter","","",1,null],[11,"next","","",60,null],[11,"default","","",0,{"inputs":[],"output":{"name":"unknownfields"}}],[11,"fmt","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"clone","","",0,null],[11,"new","","",0,{"inputs":[],"output":{"name":"unknownfields"}}],[11,"add_fixed32","","",0,null],[11,"add_fixed64","","",0,null],[11,"add_varint","","",0,null],[11,"add_length_delimited","","",0,null],[11,"add_value","","",0,null],[11,"iter","","",0,null],[11,"clear","","",0,null],[11,"next","","",61,null]],"paths":[[3,"UnknownFields"],[3,"UnknownValues"],[4,"UnknownValue"],[4,"UnknownValueRef"],[4,"FieldDescriptorProto_Type"],[4,"FieldDescriptorProto_Label"],[4,"FileOptions_OptimizeMode"],[4,"FieldOptions_CType"],[3,"FileDescriptorSet"],[3,"FileDescriptorProto"],[3,"DescriptorProto"],[3,"DescriptorProto_ExtensionRange"],[3,"FieldDescriptorProto"],[3,"OneofDescriptorProto"],[3,"EnumDescriptorProto"],[3,"EnumValueDescriptorProto"],[3,"ServiceDescriptorProto"],[3,"MethodDescriptorProto"],[3,"FileOptions"],[3,"MessageOptions"],[3,"FieldOptions"],[3,"EnumOptions"],[3,"EnumValueOptions"],[3,"ServiceOptions"],[3,"MethodOptions"],[3,"UninterpretedOption"],[3,"UninterpretedOption_NamePart"],[3,"SourceCodeInfo"],[3,"SourceCodeInfo_Location"],[3,"CodeGeneratorRequest"],[3,"CodeGeneratorResponse"],[3,"CodeGeneratorResponse_File"],[8,"MessageStatic"],[8,"Message"],[8,"ProtobufEnum"],[8,"ProtobufVarint"],[8,"ProtobufVarintZigzag"],[3,"Lazy"],[3,"CodeWriter"],[4,"RustType"],[3,"GenResult"],[3,"RepeatedField"],[3,"SingularField"],[3,"SingularPtrField"],[8,"Clear"],[4,"Option"],[3,"String"],[3,"Vec"],[8,"FieldAccessor"],[3,"FieldDescriptor"],[3,"MessageDescriptor"],[3,"EnumValueDescriptor"],[3,"EnumDescriptor"],[4,"WireType"],[3,"Tag"],[8,"WithCodedOutputStream"],[8,"WithCodedInputStream"],[3,"CodedInputStream"],[3,"CodedOutputStream"],[4,"ProtobufError"],[3,"UnknownValuesIter"],[3,"UnknownFieldIter"]]};
searchIndex["tempfile"] = {"doc":"Securely create and manage temporary files. Temporary files created by this create are\nautomatically deleted.","items":[[3,"NamedTempFile","tempfile","A named temporary file.",null,null],[3,"NamedTempFileOptions","","Create a new temporary file with custom parameters.",null,null],[3,"PersistError","","Error returned when persisting a temporary file fails",null,null],[12,"error","","The underlying IO error.",0,null],[12,"file","","The temporary file that couldn&#39;t be persisted.",0,null],[5,"tempfile","","Create an unnamed temporary file.",null,{"inputs":[],"output":{"name":"result"}}],[5,"tempfile_in","","Create an unnamed temporary file in the specified directory.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"fmt","","",1,null],[11,"open","std::fs","Attempts to open a file in read-only mode.",2,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"create","","Opens a file in write-only mode.",2,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"sync_all","","Attempts to sync all OS-internal metadata to disk.",2,null],[11,"sync_data","","This function is similar to `sync_all`, except that it may not\nsynchronize file metadata to the filesystem.",2,null],[11,"set_len","","Truncates or extends the underlying file, updating the size of\nthis file to become `size`.",2,null],[11,"metadata","","Queries metadata about the underlying file.",2,null],[11,"try_clone","","Creates a new independently owned handle to the underlying file.",2,null],[11,"from","alloc::boxed","",3,{"inputs":[{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",3,{"inputs":[{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",3,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",3,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",3,{"inputs":[{"name":"str"}],"output":{"name":"box"}}],[11,"from","","",3,{"inputs":[{"name":"str"}],"output":{"name":"box"}}],[11,"description","core::str","",4,null],[11,"description","","",5,null],[11,"description","core::num","",6,null],[11,"description","","",7,null],[11,"description","core::num::dec2flt","",8,null],[11,"description","collections::string","",9,null],[11,"description","","",10,null],[11,"description","","",11,null],[11,"description","rustc_unicode::char","",12,null],[11,"description","alloc::boxed","",3,null],[11,"cause","","",3,null],[11,"description","core::fmt","",13,null],[11,"is","tempfile","Returns true if the boxed type is the same as `T`",14,null],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",14,null],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",14,null],[11,"is","","Forwards to the method defined on the type `Any`.",14,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",14,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",14,null],[11,"is","","Forwards to the method defined on the type `Any`.",14,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",14,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",14,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",14,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",14,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",14,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"next","std::ascii","",15,null],[11,"size_hint","","",15,null],[11,"next_back","","",15,null],[11,"clone","std::thread::local","",16,null],[11,"eq","","",16,null],[11,"with","","Acquires a reference to the value in this TLS key.",17,null],[11,"state","","Query the current state of this key.",17,null],[11,"new","std::thread::local::elf","",18,{"inputs":[],"output":{"name":"key"}}],[11,"get","","",18,null],[11,"new","std::thread::local::os","",19,{"inputs":[],"output":{"name":"key"}}],[11,"get","","",19,null],[11,"new","std::thread","Generates the base configuration for spawning a thread, from which\nconfiguration methods can be chained.",20,{"inputs":[],"output":{"name":"builder"}}],[11,"name","","Names the thread-to-be. Currently the name is used for identification\nonly in panic messages.",20,null],[11,"stack_size","","Sets the size of the stack for the new thread.",20,null],[11,"spawn","","Spawns a new thread, and returns a join handle for it.",20,null],[11,"clone","","",21,null],[11,"unpark","","Atomically makes the handle&#39;s token available if it is not already.",21,null],[11,"name","","Gets the thread&#39;s name.",21,null],[11,"fmt","","",21,null],[11,"thread","","Extracts a handle to the underlying thread",22,null],[11,"join","","Waits for the associated thread to finish.",22,null],[11,"clone","std::collections::hash::map","",23,null],[11,"new","","Creates an empty HashMap.",23,{"inputs":[],"output":{"name":"hashmap"}}],[11,"with_capacity","","Creates an empty hash map with the given initial capacity.",23,{"inputs":[{"name":"usize"}],"output":{"name":"hashmap"}}],[11,"with_hasher","","Creates an empty hashmap which will use the given hash builder to hash\nkeys.",23,{"inputs":[{"name":"s"}],"output":{"name":"hashmap"}}],[11,"with_capacity_and_hasher","","Creates an empty HashMap with space for at least `capacity`\nelements, using `hasher` to hash the keys.",23,{"inputs":[{"name":"usize"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"hasher","","Returns a reference to the map&#39;s hasher.",23,null],[11,"capacity","","Returns the number of elements the map can hold without reallocating.",23,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashMap`. The collection may reserve more space to avoid\nfrequent reallocations.",23,null],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",23,null],[11,"keys","","An iterator visiting all keys in arbitrary order.\nIterator element type is `&amp;&#39;a K`.",23,null],[11,"values","","An iterator visiting all values in arbitrary order.\nIterator element type is `&amp;&#39;a V`.",23,null],[11,"values_mut","","An iterator visiting all values mutably in arbitrary order.\nIterator element type is `&amp;&#39;a mut V`.",23,null],[11,"iter","","An iterator visiting all key-value pairs in arbitrary order.\nIterator element type is `(&amp;&#39;a K, &amp;&#39;a V)`.",23,null],[11,"iter_mut","","An iterator visiting all key-value pairs in arbitrary order,\nwith mutable references to the values.\nIterator element type is `(&amp;&#39;a K, &amp;&#39;a mut V)`.",23,null],[11,"entry","","Gets the given key&#39;s corresponding entry in the map for in-place manipulation.",23,null],[11,"len","","Returns the number of elements in the map.",23,null],[11,"is_empty","","Returns true if the map contains no elements.",23,null],[11,"drain","","Clears the map, returning all key-value pairs as an iterator. Keeps the\nallocated memory for reuse.",23,null],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the allocated memory\nfor reuse.",23,null],[11,"get","","Returns a reference to the value corresponding to the key.",23,null],[11,"contains_key","","Returns true if the map contains a value for the specified key.",23,null],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",23,null],[11,"insert","","Inserts a key-value pair into the map.",23,null],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",23,null],[11,"eq","","",23,null],[11,"fmt","","",23,null],[11,"default","","",23,{"inputs":[],"output":{"name":"hashmap"}}],[11,"index","","",23,null],[11,"clone","","",24,null],[11,"clone","","",25,null],[11,"clone","","",26,null],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each key-value\npair out of the map in arbitrary order. The map cannot be used after\ncalling this.",23,null],[11,"next","","",24,null],[11,"size_hint","","",24,null],[11,"len","","",24,null],[11,"next","","",27,null],[11,"size_hint","","",27,null],[11,"len","","",27,null],[11,"next","","",28,null],[11,"size_hint","","",28,null],[11,"len","","",28,null],[11,"next","","",25,null],[11,"size_hint","","",25,null],[11,"len","","",25,null],[11,"next","","",26,null],[11,"size_hint","","",26,null],[11,"len","","",26,null],[11,"next","","",29,null],[11,"size_hint","","",29,null],[11,"len","","",29,null],[11,"next","","",30,null],[11,"size_hint","","",30,null],[11,"len","","",30,null],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",31,null],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",31,null],[11,"key","","Returns a reference to this entry&#39;s key.",31,null],[11,"key","","Gets a reference to the key in the entry.",32,null],[11,"remove_pair","","Take the ownership of the key and value from the map.",32,null],[11,"get","","Gets a reference to the value in the entry.",32,null],[11,"get_mut","","Gets a mutable reference to the value in the entry.",32,null],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to the value in the entry\nwith a lifetime bound to the map itself",32,null],[11,"insert","","Sets the value of the entry, and returns the entry&#39;s old value",32,null],[11,"remove","","Takes the value out of the entry, and returns it",32,null],[11,"key","","Gets a reference to the key that would be used when inserting a value\nthrough the VacantEntry.",33,null],[11,"into_key","","Take ownership of the key.",33,null],[11,"insert","","Sets the value of the entry with the VacantEntry&#39;s key,\nand returns a mutable reference to it",33,null],[11,"from_iter","","",23,{"inputs":[{"name":"t"}],"output":{"name":"hashmap"}}],[11,"extend","","",23,null],[11,"extend","","",23,null],[11,"clone","","",34,null],[11,"new","","Constructs a new `RandomState` that is initialized with random keys.",34,{"inputs":[],"output":{"name":"randomstate"}}],[11,"build_hasher","","",34,null],[11,"write","","",35,null],[11,"finish","","",35,null],[11,"default","","",34,{"inputs":[],"output":{"name":"randomstate"}}],[11,"clone","std::collections::hash::set","",36,null],[11,"new","","Creates an empty HashSet.",36,{"inputs":[],"output":{"name":"hashset"}}],[11,"with_capacity","","Creates an empty HashSet with space for at least `n` elements in\nthe hash table.",36,{"inputs":[{"name":"usize"}],"output":{"name":"hashset"}}],[11,"with_hasher","","Creates a new empty hash set which will use the given hasher to hash\nkeys.",36,{"inputs":[{"name":"s"}],"output":{"name":"hashset"}}],[11,"with_capacity_and_hasher","","Creates an empty HashSet with space for at least `capacity`\nelements in the hash table, using `hasher` to hash the keys.",36,{"inputs":[{"name":"usize"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"hasher","","Returns a reference to the set&#39;s hasher.",36,null],[11,"capacity","","Returns the number of elements the set can hold without reallocating.",36,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashSet`. The collection may reserve more space to avoid\nfrequent reallocations.",36,null],[11,"shrink_to_fit","","Shrinks the capacity of the set as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",36,null],[11,"iter","","An iterator visiting all elements in arbitrary order.\nIterator element type is &amp;&#39;a T.",36,null],[11,"difference","","Visit the values representing the difference.",36,null],[11,"symmetric_difference","","Visit the values representing the symmetric difference.",36,null],[11,"intersection","","Visit the values representing the intersection.",36,null],[11,"union","","Visit the values representing the union.",36,null],[11,"len","","Returns the number of elements in the set.",36,null],[11,"is_empty","","Returns true if the set contains no elements.",36,null],[11,"drain","","Clears the set, returning all elements in an iterator.",36,null],[11,"clear","","Clears the set, removing all values.",36,null],[11,"contains","","Returns `true` if the set contains a value.",36,null],[11,"get","","Returns a reference to the value in the set, if any, that is equal to the given value.",36,null],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",36,null],[11,"is_subset","","Returns `true` if the set is a subset of another.",36,null],[11,"is_superset","","Returns `true` if the set is a superset of another.",36,null],[11,"insert","","Adds a value to the set.",36,null],[11,"replace","","Adds a value to the set, replacing the existing value, if any, that is equal to the given\none. Returns the replaced value.",36,null],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",36,null],[11,"take","","Removes and returns the value in the set, if any, that is equal to the given one.",36,null],[11,"eq","","",36,null],[11,"fmt","","",36,null],[11,"from_iter","","",36,{"inputs":[{"name":"i"}],"output":{"name":"hashset"}}],[11,"extend","","",36,null],[11,"extend","","",36,null],[11,"default","","",36,{"inputs":[],"output":{"name":"hashset"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out\nof the set in arbitrary order. The set cannot be used after calling\nthis.",36,null],[11,"clone","","",37,null],[11,"next","","",37,null],[11,"size_hint","","",37,null],[11,"len","","",37,null],[11,"next","","",38,null],[11,"size_hint","","",38,null],[11,"len","","",38,null],[11,"next","","",39,null],[11,"size_hint","","",39,null],[11,"len","","",39,null],[11,"clone","","",40,null],[11,"next","","",40,null],[11,"size_hint","","",40,null],[11,"clone","","",41,null],[11,"next","","",41,null],[11,"size_hint","","",41,null],[11,"clone","","",42,null],[11,"next","","",42,null],[11,"size_hint","","",42,null],[11,"clone","","",43,null],[11,"next","","",43,null],[11,"size_hint","","",43,null],[11,"drop","collections::binary_heap","",44,null],[11,"deref","","",44,null],[11,"deref_mut","","",44,null],[11,"clone","","",45,null],[11,"clone_from","","",45,null],[11,"default","","",45,{"inputs":[],"output":{"name":"binaryheap"}}],[11,"fmt","","",45,null],[11,"new","","Creates an empty `BinaryHeap` as a max-heap.",45,{"inputs":[],"output":{"name":"binaryheap"}}],[11,"with_capacity","","Creates an empty `BinaryHeap` with a specific capacity.\nThis preallocates enough memory for `capacity` elements,\nso that the `BinaryHeap` does not have to be reallocated\nuntil it contains at least that many values.",45,{"inputs":[{"name":"usize"}],"output":{"name":"binaryheap"}}],[11,"iter","","Returns an iterator visiting all values in the underlying vector, in\narbitrary order.",45,null],[11,"peek","","Returns the greatest item in the binary heap, or `None` if it is empty.",45,null],[11,"peek_mut","","Returns a mutable reference to the greatest item in the binary heap, or\n`None` if it is empty.",45,null],[11,"capacity","","Returns the number of elements the binary heap can hold without reallocating.",45,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `BinaryHeap`. Does nothing if the capacity is already sufficient.",45,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the\n`BinaryHeap`. The collection may reserve more space to avoid frequent reallocations.",45,null],[11,"shrink_to_fit","","Discards as much additional capacity as possible.",45,null],[11,"pop","","Removes the greatest item from the binary heap and returns it, or `None` if it\nis empty.",45,null],[11,"push","","Pushes an item onto the binary heap.",45,null],[11,"push_pop","","Pushes an item onto the binary heap, then pops the greatest item off the queue in\nan optimized fashion.",45,null],[11,"replace","","Pops the greatest item off the binary heap, then pushes an item onto the queue in\nan optimized fashion. The push is done regardless of whether the binary heap\nwas empty.",45,null],[11,"into_vec","","Consumes the `BinaryHeap` and returns the underlying vector\nin arbitrary order.",45,null],[11,"into_sorted_vec","","Consumes the `BinaryHeap` and returns a vector in sorted\n(ascending) order.",45,null],[11,"len","","Returns the length of the binary heap.",45,null],[11,"is_empty","","Checks if the binary heap is empty.",45,null],[11,"drain","","Clears the binary heap, returning an iterator over the removed elements.",45,null],[11,"clear","","Drops all items from the binary heap.",45,null],[11,"append","","Moves all the elements of `other` into `self`, leaving `other` empty.",45,null],[11,"clone","","",46,null],[11,"next","","",46,null],[11,"size_hint","","",46,null],[11,"next_back","","",46,null],[11,"clone","","",47,null],[11,"next","","",47,null],[11,"size_hint","","",47,null],[11,"next_back","","",47,null],[11,"next","","",48,null],[11,"size_hint","","",48,null],[11,"next_back","","",48,null],[11,"from","","",45,{"inputs":[{"name":"vec"}],"output":{"name":"binaryheap"}}],[11,"from","collections::vec","",49,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"from_iter","collections::binary_heap","",45,{"inputs":[{"name":"i"}],"output":{"name":"binaryheap"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe binary heap in arbitrary order. The binary heap cannot be used\nafter calling this.",45,null],[11,"extend","","",45,null],[11,"extend","","",45,null],[11,"clone","collections::vec_deque","",50,null],[11,"drop","","",50,null],[11,"default","","",50,{"inputs":[],"output":{"name":"vecdeque"}}],[11,"new","","Creates an empty `VecDeque`.",50,{"inputs":[],"output":{"name":"vecdeque"}}],[11,"with_capacity","","Creates an empty `VecDeque` with space for at least `n` elements.",50,{"inputs":[{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"get","","Retrieves an element in the `VecDeque` by index.",50,null],[11,"get_mut","","Retrieves an element in the `VecDeque` mutably by index.",50,null],[11,"swap","","Swaps elements at indices `i` and `j`.",50,null],[11,"capacity","","Returns the number of elements the `VecDeque` can hold without\nreallocating.",50,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `VecDeque`. Does nothing if the capacity is already sufficient.",50,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the given\n`VecDeque`. The collection may reserve more space to avoid frequent reallocations.",50,null],[11,"shrink_to_fit","","Shrinks the capacity of the `VecDeque` as much as possible.",50,null],[11,"truncate","","Shortens a `VecDeque`, dropping excess elements from the back.",50,null],[11,"iter","","Returns a front-to-back iterator.",50,null],[11,"iter_mut","","Returns a front-to-back iterator that returns mutable references.",50,null],[11,"as_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",50,null],[11,"as_mut_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",50,null],[11,"len","","Returns the number of elements in the `VecDeque`.",50,null],[11,"is_empty","","Returns true if the buffer contains no elements",50,null],[11,"drain","","Create a draining iterator that removes the specified range in the\n`VecDeque` and yields the removed items.",50,null],[11,"clear","","Clears the buffer, removing all values.",50,null],[11,"contains","","Returns `true` if the `VecDeque` contains an element equal to the\ngiven value.",50,null],[11,"front","","Provides a reference to the front element, or `None` if the sequence is\nempty.",50,null],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the\nsequence is empty.",50,null],[11,"back","","Provides a reference to the back element, or `None` if the sequence is\nempty.",50,null],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the\nsequence is empty.",50,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the sequence is\nempty.",50,null],[11,"push_front","","Inserts an element first in the sequence.",50,null],[11,"push_back","","Appends an element to the back of a buffer",50,null],[11,"pop_back","","Removes the last element from a buffer and returns it, or `None` if\nit is empty.",50,null],[11,"swap_remove_back","","Removes an element from anywhere in the `VecDeque` and returns it, replacing it with the\nlast element.",50,null],[11,"swap_remove_front","","Removes an element from anywhere in the `VecDeque` and returns it,\nreplacing it with the first element.",50,null],[11,"insert","","Inserts an element at `index` within the `VecDeque`. Whichever\nend is closer to the insertion point will be moved to make room,\nand all the affected elements will be moved to new positions.",50,null],[11,"remove","","Removes and returns the element at `index` from the `VecDeque`.\nWhichever end is closer to the removal point will be moved to make\nroom, and all the affected elements will be moved to new positions.\nReturns `None` if `index` is out of bounds.",50,null],[11,"split_off","","Splits the collection into two at the given index.",50,null],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",50,null],[11,"retain","","Retains only the elements specified by the predicate.",50,null],[11,"resize","","Modifies the `VecDeque` in-place so that `len()` is equal to new_len,\neither by removing excess elements or by appending copies of a value to the back.",50,null],[11,"clone","","",51,null],[11,"next","","",51,null],[11,"size_hint","","",51,null],[11,"next_back","","",51,null],[11,"next","","",52,null],[11,"size_hint","","",52,null],[11,"next_back","","",52,null],[11,"clone","","",53,null],[11,"next","","",53,null],[11,"size_hint","","",53,null],[11,"next_back","","",53,null],[11,"drop","","",54,null],[11,"next","","",54,null],[11,"size_hint","","",54,null],[11,"next_back","","",54,null],[11,"eq","","",50,null],[11,"partial_cmp","","",50,null],[11,"cmp","","",50,null],[11,"hash","","",50,null],[11,"index","","",50,null],[11,"index_mut","","",50,null],[11,"from_iter","","",50,{"inputs":[{"name":"t"}],"output":{"name":"vecdeque"}}],[11,"into_iter","","Consumes the list into a front-to-back iterator yielding elements by\nvalue.",50,null],[11,"extend","","",50,null],[11,"extend","","",50,null],[11,"fmt","","",50,null],[11,"from","","",50,{"inputs":[{"name":"vec"}],"output":{"name":"vecdeque"}}],[11,"from","collections::vec","",49,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vec"}}],[11,"clone","collections::linked_list","",55,null],[11,"clone","","",56,null],[11,"default","","",57,{"inputs":[],"output":{"name":"linkedlist"}}],[11,"new","","Creates an empty `LinkedList`.",57,{"inputs":[],"output":{"name":"linkedlist"}}],[11,"append","","Moves all elements from `other` to the end of the list.",57,null],[11,"iter","","Provides a forward iterator.",57,null],[11,"iter_mut","","Provides a forward iterator with mutable references.",57,null],[11,"is_empty","","Returns `true` if the `LinkedList` is empty.",57,null],[11,"len","","Returns the length of the `LinkedList`.",57,null],[11,"clear","","Removes all elements from the `LinkedList`.",57,null],[11,"contains","","Returns `true` if the `LinkedList` contains an element equal to the\ngiven value.",57,null],[11,"front","","Provides a reference to the front element, or `None` if the list is\nempty.",57,null],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the list\nis empty.",57,null],[11,"back","","Provides a reference to the back element, or `None` if the list is\nempty.",57,null],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the list\nis empty.",57,null],[11,"push_front","","Adds an element first in the list.",57,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the list is\nempty.",57,null],[11,"push_back","","Appends an element to the back of a list",57,null],[11,"pop_back","","Removes the last element from a list and returns it, or `None` if\nit is empty.",57,null],[11,"split_off","","Splits the list into two at the given index. Returns everything after the given index,\nincluding the index.",57,null],[11,"front_place","","Returns a place for insertion at the front of the list.",57,null],[11,"back_place","","Returns a place for insertion at the back of the list.",57,null],[11,"drop","","",57,null],[11,"next","","",55,null],[11,"size_hint","","",55,null],[11,"next_back","","",55,null],[11,"next","","",58,null],[11,"size_hint","","",58,null],[11,"next_back","","",58,null],[11,"insert_next","","Inserts `elt` just after the element most recently returned by `.next()`.\nThe inserted element does not appear in the iteration.",58,null],[11,"peek_next","","Provides a reference to the next element, without changing the iterator.",58,null],[11,"next","","",56,null],[11,"size_hint","","",56,null],[11,"next_back","","",56,null],[11,"from_iter","","",57,{"inputs":[{"name":"t"}],"output":{"name":"linkedlist"}}],[11,"into_iter","","Consumes the list into an iterator yielding elements by value.",57,null],[11,"extend","","",57,null],[11,"extend","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"partial_cmp","","",57,null],[11,"cmp","","",57,null],[11,"clone","","",57,null],[11,"fmt","","",57,null],[11,"hash","","",57,null],[11,"make_place","","",59,null],[11,"pointer","","",59,null],[11,"finalize","","",59,null],[11,"make_place","","",60,null],[11,"pointer","","",60,null],[11,"finalize","","",60,null],[11,"next","std::env","",61,null],[11,"size_hint","","",61,null],[11,"next","","",62,null],[11,"size_hint","","",62,null],[11,"clone","","",63,null],[11,"eq","","",63,null],[11,"ne","","",63,null],[11,"fmt","","",63,null],[11,"fmt","","",63,null],[11,"description","","",63,null],[11,"next","","",64,null],[11,"size_hint","","",64,null],[11,"fmt","","",65,null],[11,"fmt","","",65,null],[11,"description","","",65,null],[11,"next","","",66,null],[11,"size_hint","","",66,null],[11,"len","","",66,null],[11,"next","","",67,null],[11,"size_hint","","",67,null],[11,"len","","",67,null],[11,"clone","std::ffi::c_str","",68,null],[11,"hash","","",68,null],[11,"cmp","","",68,null],[11,"partial_cmp","","",68,null],[11,"lt","","",68,null],[11,"le","","",68,null],[11,"gt","","",68,null],[11,"ge","","",68,null],[11,"eq","","",68,null],[11,"ne","","",68,null],[11,"hash","","",69,null],[11,"fmt","","",70,null],[11,"eq","","",70,null],[11,"ne","","",70,null],[11,"clone","","",70,null],[11,"fmt","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"clone","","",71,null],[11,"fmt","","",72,null],[11,"eq","","",72,null],[11,"ne","","",72,null],[11,"clone","","",72,null],[11,"new","","Creates a new C-compatible string from a container of bytes.",68,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[11,"from_vec_unchecked","","Creates a C-compatible string from a byte vector without checking for\ninterior 0 bytes.",68,{"inputs":[{"name":"vec"}],"output":{"name":"cstring"}}],[11,"from_raw","","Retakes ownership of a `CString` that was transferred to C.",68,null],[11,"into_raw","","Transfers ownership of the string to a C caller.",68,null],[11,"into_string","","Converts the `CString` into a `String` if it contains valid Unicode data.",68,null],[11,"into_bytes","","Returns the underlying byte buffer.",68,null],[11,"into_bytes_with_nul","","Equivalent to the `into_bytes` function except that the returned vector\nincludes the trailing nul byte.",68,null],[11,"as_bytes","","Returns the contents of this `CString` as a slice of bytes.",68,null],[11,"as_bytes_with_nul","","Equivalent to the `as_bytes` function except that the returned slice\nincludes the trailing nul byte.",68,null],[11,"from_ptr","","Casts a raw C string to a safe C string wrapper.",69,null],[11,"from_bytes_with_nul","","Creates a C string wrapper from a byte slice.",69,null],[11,"from_bytes_with_nul_unchecked","","Unsafely creates a C string wrapper from a byte slice.",69,null],[11,"as_ptr","","Returns the inner pointer to this C string.",69,null],[11,"to_bytes","","Converts this C string to a byte slice.",69,null],[11,"to_bytes_with_nul","","Converts this C string to a byte slice containing the trailing 0 byte.",69,null],[11,"to_str","","Yields a `&amp;str` slice if the `CStr` contains valid UTF-8.",69,null],[11,"to_string_lossy","","Converts a `CStr` into a `Cow&lt;str&gt;`.",69,null],[11,"deref","","",68,null],[11,"fmt","","",68,null],[11,"from","collections::vec","",49,{"inputs":[{"name":"cstring"}],"output":{"name":"vec"}}],[11,"fmt","std::ffi::c_str","",69,null],[11,"default","","",68,{"inputs":[],"output":{"name":"cstring"}}],[11,"borrow","","",68,null],[11,"nul_position","","Returns the position of the nul byte in the slice that was provided to\n`CString::new`.",70,null],[11,"into_vec","","Consumes this error, returning the underlying vector of bytes which\ngenerated the error in the first place.",70,null],[11,"description","","",70,null],[11,"fmt","","",70,null],[11,"from","std::io::error","",73,{"inputs":[{"name":"nulerror"}],"output":{"name":"error"}}],[11,"into_cstring","std::ffi::c_str","Consumes this error, returning original `CString` which generated the\nerror.",72,null],[11,"utf8_error","","Access the underlying UTF-8 error that was the cause of this error.",72,null],[11,"description","","",72,null],[11,"cause","","",72,null],[11,"fmt","","",72,null],[11,"eq","","",69,null],[11,"partial_cmp","","",69,null],[11,"cmp","","",69,null],[11,"to_owned","","",69,null],[11,"from","","",68,{"inputs":[{"name":"cstr"}],"output":{"name":"cstring"}}],[11,"index","","",68,null],[11,"as_ref","","",69,null],[11,"as_ref","","",68,null],[11,"clone","std::ffi::os_str","",74,null],[11,"new","","Constructs a new empty `OsString`.",74,{"inputs":[],"output":{"name":"osstring"}}],[11,"as_os_str","","Converts to an `OsStr` slice.",74,null],[11,"into_string","","Converts the `OsString` into a `String` if it contains valid Unicode data.",74,null],[11,"push","","Extends the string with the given `&amp;OsStr` slice.",74,null],[11,"with_capacity","","Creates a new `OsString` with the given capacity.",74,{"inputs":[{"name":"usize"}],"output":{"name":"osstring"}}],[11,"clear","","Truncates the `OsString` to zero length.",74,null],[11,"capacity","","Returns the capacity this `OsString` can hold without reallocating.",74,null],[11,"reserve","","Reserves capacity for at least `additional` more capacity to be inserted\nin the given `OsString`.",74,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more capacity to\nbe inserted in the given `OsString`. Does nothing if the capacity is\nalready sufficient.",74,null],[11,"from","","",74,{"inputs":[{"name":"string"}],"output":{"name":"osstring"}}],[11,"from","","",74,{"inputs":[{"name":"t"}],"output":{"name":"osstring"}}],[11,"index","","",74,null],[11,"new","","Coerces into an `OsStr` slice.",75,{"inputs":[{"name":"s"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&amp;str` slice if the `OsStr` is valid Unicode.",75,null],[11,"to_string_lossy","","Converts an `OsStr` to a `Cow&lt;str&gt;`.",75,null],[11,"to_os_string","","Copies the slice into an owned `OsString`.",75,null],[11,"is_empty","","Checks whether the `OsStr` is empty.",75,null],[11,"len","","Returns the length of this `OsStr`.",75,null],[11,"deref","","",74,null],[11,"default","","",74,{"inputs":[],"output":{"name":"osstring"}}],[11,"fmt","","",74,null],[11,"eq","","",74,null],[11,"eq","","",74,null],[11,"partial_cmp","","",74,null],[11,"lt","","",74,null],[11,"le","","",74,null],[11,"gt","","",74,null],[11,"ge","","",74,null],[11,"partial_cmp","","",74,null],[11,"cmp","","",74,null],[11,"hash","","",74,null],[11,"eq","","",75,null],[11,"eq","","",75,null],[11,"partial_cmp","","",75,null],[11,"lt","","",75,null],[11,"le","","",75,null],[11,"gt","","",75,null],[11,"ge","","",75,null],[11,"partial_cmp","","",75,null],[11,"cmp","","",75,null],[11,"eq","","",74,null],[11,"eq","","",75,null],[11,"partial_cmp","","",74,null],[11,"partial_cmp","","",75,null],[11,"eq","","",74,null],[11,"partial_cmp","","",74,null],[11,"eq","collections::borrow","",76,null],[11,"eq","std::ffi::os_str","",75,null],[11,"partial_cmp","collections::borrow","",76,null],[11,"partial_cmp","std::ffi::os_str","",75,null],[11,"eq","collections::borrow","",76,null],[11,"partial_cmp","","",76,null],[11,"eq","","",76,null],[11,"eq","std::ffi::os_str","",74,null],[11,"partial_cmp","collections::borrow","",76,null],[11,"partial_cmp","std::ffi::os_str","",74,null],[11,"hash","","",75,null],[11,"fmt","","",75,null],[11,"borrow","","",74,null],[11,"to_owned","","",75,null],[11,"as_ref","","",75,null],[11,"as_ref","","",74,null],[11,"as_ref","collections::string","",77,null],[11,"clone","std::fs","",78,null],[11,"clone","","",79,null],[11,"fmt","","",80,null],[11,"eq","","",80,null],[11,"ne","","",80,null],[11,"clone","","",80,null],[11,"hash","","",81,null],[11,"eq","","",81,null],[11,"ne","","",81,null],[11,"clone","","",81,null],[11,"fmt","","",2,null],[11,"read","","",2,null],[11,"read_to_end","","",2,null],[11,"write","","",2,null],[11,"flush","","",2,null],[11,"seek","","",2,null],[11,"new","","Creates a blank new set of options ready for configuration.",79,{"inputs":[],"output":{"name":"openoptions"}}],[11,"read","","Sets the option for read access.",79,null],[11,"write","","Sets the option for write access.",79,null],[11,"append","","Sets the option for the append mode.",79,null],[11,"truncate","","Sets the option for truncating a previous file.",79,null],[11,"create","","Sets the option for creating a new file.",79,null],[11,"create_new","","Sets the option to always create a new file.",79,null],[11,"open","","Opens a file at `path` with the options specified by `self`.",79,null],[11,"file_type","","Returns the file type for this metadata.",78,null],[11,"is_dir","","Returns whether this metadata is for a directory.",78,null],[11,"is_file","","Returns whether this metadata is for a regular file.",78,null],[11,"len","","Returns the size of the file, in bytes, this metadata is for.",78,null],[11,"permissions","","Returns the permissions of the file this metadata is for.",78,null],[11,"modified","","Returns the last modification time listed in this metadata.",78,null],[11,"accessed","","Returns the last access time of this metadata.",78,null],[11,"created","","Returns the creation time listed in the this metadata.",78,null],[11,"readonly","","Returns whether these permissions describe a readonly file.",80,null],[11,"set_readonly","","Modifies the readonly flag for this set of permissions.",80,null],[11,"is_dir","","Test whether this file type represents a directory.",81,null],[11,"is_file","","Test whether this file type represents a regular file.",81,null],[11,"is_symlink","","Test whether this file type represents a symbolic link.",81,null],[11,"next","","",82,null],[11,"path","","Returns the full path to the file that this entry represents.",83,null],[11,"metadata","","Return the metadata for the file that this entry points at.",83,null],[11,"file_type","","Return the file type for the file that this entry points at.",83,null],[11,"file_name","","Returns the bare file name of this directory entry without any other\nleading path component.",83,null],[11,"new","","Creates a new set of options with default mode/security settings for all\nplatforms and also non-recursive.",84,{"inputs":[],"output":{"name":"dirbuilder"}}],[11,"recursive","","Indicate that directories create should be created recursively, creating\nall parent directories if they do not exist with the same security and\npermissions settings.",84,null],[11,"create","","Create the specified directory with the options configured in this\nbuilder.",84,null],[11,"new","std::io::buffered","Creates a new `BufReader` with a default buffer capacity.",85,{"inputs":[{"name":"r"}],"output":{"name":"bufreader"}}],[11,"with_capacity","","Creates a new `BufReader` with the specified buffer capacity.",85,{"inputs":[{"name":"usize"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"get_ref","","Gets a reference to the underlying reader.",85,null],[11,"get_mut","","Gets a mutable reference to the underlying reader.",85,null],[11,"into_inner","","Unwraps this `BufReader`, returning the underlying reader.",85,null],[11,"read","","",85,null],[11,"fill_buf","","",85,null],[11,"consume","","",85,null],[11,"fmt","","",85,null],[11,"seek","","Seek to an offset, in bytes, in the underlying reader.",85,null],[11,"fmt","","",86,null],[11,"new","","Creates a new `BufWriter` with a default buffer capacity.",87,{"inputs":[{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"with_capacity","","Creates a new `BufWriter` with the specified buffer capacity.",87,{"inputs":[{"name":"usize"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",87,null],[11,"get_mut","","Gets a mutable reference to the underlying writer.",87,null],[11,"into_inner","","Unwraps this `BufWriter`, returning the underlying writer.",87,null],[11,"write","","",87,null],[11,"flush","","",87,null],[11,"fmt","","",87,null],[11,"seek","","Seek to the offset, in bytes, in the underlying writer.",87,null],[11,"drop","","",87,null],[11,"error","","Returns the error which caused the call to `into_inner()` to fail.",86,null],[11,"into_inner","","Returns the buffered writer instance which generated the error.",86,null],[11,"from","std::io::error","",73,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"description","std::io::buffered","",86,null],[11,"fmt","","",86,null],[11,"new","","Creates a new `LineWriter`.",88,{"inputs":[{"name":"w"}],"output":{"name":"linewriter"}}],[11,"with_capacity","","Creates a new `LineWriter` with a specified capacity for the internal\nbuffer.",88,{"inputs":[{"name":"usize"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",88,null],[11,"get_mut","","Gets a mutable reference to the underlying writer.",88,null],[11,"into_inner","","Unwraps this `LineWriter`, returning the underlying writer.",88,null],[11,"write","","",88,null],[11,"flush","","",88,null],[11,"fmt","","",88,null],[11,"fmt","std::io::cursor","",89,null],[11,"clone","","",89,null],[11,"new","","Creates a new cursor wrapping the provided underlying I/O object.",89,{"inputs":[{"name":"t"}],"output":{"name":"cursor"}}],[11,"into_inner","","Consumes this cursor, returning the underlying value.",89,null],[11,"get_ref","","Gets a reference to the underlying value in this cursor.",89,null],[11,"get_mut","","Gets a mutable reference to the underlying value in this cursor.",89,null],[11,"position","","Returns the current position of this cursor.",89,null],[11,"set_position","","Sets the position of this cursor.",89,null],[11,"seek","","",89,null],[11,"read","","",89,null],[11,"fill_buf","","",89,null],[11,"consume","","",89,null],[11,"write","","",89,null],[11,"flush","","",89,null],[11,"write","","",89,null],[11,"flush","","",89,null],[11,"write","","",89,null],[11,"flush","","",89,null],[11,"fmt","std::io::error","",73,null],[11,"fmt","","",90,null],[11,"clone","","",90,null],[11,"eq","","",90,null],[11,"new","","Creates a new I/O error from a known kind of error as well as an\narbitrary error payload.",73,{"inputs":[{"name":"errorkind"},{"name":"e"}],"output":{"name":"error"}}],[11,"last_os_error","","Returns an error representing the last OS error which occurred.",73,{"inputs":[],"output":{"name":"error"}}],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS error code.",73,{"inputs":[{"name":"i32"}],"output":{"name":"error"}}],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",73,null],[11,"get_ref","","Returns a reference to the inner error wrapped by this error (if any).",73,null],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by this error\n(if any).",73,null],[11,"into_inner","","Consumes the `Error`, returning its inner error (if any).",73,null],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",73,null],[11,"fmt","","",73,null],[11,"description","","",73,null],[11,"cause","","",73,null],[11,"read","alloc::boxed","",3,null],[11,"read_to_end","","",3,null],[11,"read_to_string","","",3,null],[11,"read_exact","","",3,null],[11,"write","","",3,null],[11,"flush","","",3,null],[11,"write_all","","",3,null],[11,"write_fmt","","",3,null],[11,"seek","","",3,null],[11,"fill_buf","","",3,null],[11,"consume","","",3,null],[11,"read_until","","",3,null],[11,"read_line","","",3,null],[11,"write","collections::vec","",49,null],[11,"write_all","","",49,null],[11,"flush","","",49,null],[11,"read","std::io::util","",91,null],[11,"fill_buf","","",91,null],[11,"consume","","",91,null],[11,"read","","",92,null],[11,"write","","",93,null],[11,"flush","","",93,null],[11,"lock","std::io::stdio","Locks this handle to the standard input stream, returning a readable\nguard.",94,null],[11,"read_line","","Locks this handle and reads a line of input into the specified buffer.",94,null],[11,"read","","",94,null],[11,"read_to_end","","",94,null],[11,"read_to_string","","",94,null],[11,"read_exact","","",94,null],[11,"read","","",95,null],[11,"read_to_end","","",95,null],[11,"fill_buf","","",95,null],[11,"consume","","",95,null],[11,"lock","","Locks this handle to the standard output stream, returning a writable\nguard.",96,null],[11,"write","","",96,null],[11,"flush","","",96,null],[11,"write_all","","",96,null],[11,"write_fmt","","",96,null],[11,"write","","",97,null],[11,"flush","","",97,null],[11,"lock","","Locks this handle to the standard error stream, returning a writable\nguard.",98,null],[11,"write","","",98,null],[11,"flush","","",98,null],[11,"write_all","","",98,null],[11,"write_fmt","","",98,null],[11,"write","","",99,null],[11,"flush","","",99,null],[11,"fmt","std::io","",100,null],[11,"clone","","",100,null],[11,"eq","","",100,null],[11,"ne","","",100,null],[11,"read","","",101,null],[11,"fill_buf","","",101,null],[11,"consume","","",101,null],[11,"limit","","Returns the number of bytes that can be read before this instance will\nreturn EOF.",102,null],[11,"read","","",102,null],[11,"fill_buf","","",102,null],[11,"consume","","",102,null],[11,"next","","",103,null],[11,"fmt","","",104,null],[11,"next","","",105,null],[11,"description","","",104,null],[11,"cause","","",104,null],[11,"fmt","","",104,null],[11,"next","","",106,null],[11,"next","","",107,null],[11,"cmp","std::net::ip","",108,null],[11,"partial_cmp","","",108,null],[11,"lt","","",108,null],[11,"le","","",108,null],[11,"gt","","",108,null],[11,"ge","","",108,null],[11,"hash","","",108,null],[11,"fmt","","",108,null],[11,"eq","","",108,null],[11,"ne","","",108,null],[11,"clone","","",108,null],[11,"fmt","","",109,null],[11,"hash","","",109,null],[11,"clone","","",109,null],[11,"eq","","",109,null],[11,"new","","Creates a new IPv4 address from four eight-bit octets.",110,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"ipv4addr"}}],[11,"octets","","Returns the four eight-bit integers that make up this address.",110,null],[11,"is_unspecified","","Returns true for the special &#39;unspecified&#39; address (0.0.0.0).",110,null],[11,"is_loopback","","Returns true if this is a loopback address (127.0.0.0/8).",110,null],[11,"is_private","","Returns true if this is a private address.",110,null],[11,"is_link_local","","Returns true if the address is link-local (169.254.0.0/16).",110,null],[11,"is_global","","Returns true if the address appears to be globally routable.\nSee [iana-ipv4-special-registry][ipv4-sr].\n[ipv4-sr]: http://goo.gl/RaZ7lg",110,null],[11,"is_multicast","","Returns true if this is a multicast address (224.0.0.0/4).",110,null],[11,"is_broadcast","","Returns true if this is a broadcast address (255.255.255.255).",110,null],[11,"is_documentation","","Returns true if this address is in a range designated for documentation.",110,null],[11,"to_ipv6_compatible","","Converts this address to an IPv4-compatible IPv6 address.",110,null],[11,"to_ipv6_mapped","","Converts this address to an IPv4-mapped IPv6 address.",110,null],[11,"fmt","","",108,null],[11,"fmt","","",110,null],[11,"fmt","","",110,null],[11,"clone","","",110,null],[11,"eq","","",110,null],[11,"hash","","",110,null],[11,"partial_cmp","","",110,null],[11,"cmp","","",110,null],[11,"from","","",110,{"inputs":[{"name":"u32"}],"output":{"name":"ipv4addr"}}],[11,"from","","",110,null],[11,"new","","Creates a new IPv6 address from eight 16-bit segments.",111,{"inputs":[{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ipv6addr"}}],[11,"segments","","Returns the eight 16-bit segments that make up this address.",111,null],[11,"is_unspecified","","Returns true for the special &#39;unspecified&#39; address (::).",111,null],[11,"is_loopback","","Returns true if this is a loopback address (::1).",111,null],[11,"is_global","","Returns true if the address appears to be globally routable.",111,null],[11,"is_unique_local","","Returns true if this is a unique local address (fc00::/7).",111,null],[11,"is_unicast_link_local","","Returns true if the address is unicast and link-local (fe80::/10).",111,null],[11,"is_unicast_site_local","","Returns true if this is a deprecated unicast site-local address\n(fec0::/10).",111,null],[11,"is_documentation","","Returns true if this is an address reserved for documentation\n(2001:db8::/32).",111,null],[11,"is_unicast_global","","Returns true if the address is a globally routable unicast address.",111,null],[11,"multicast_scope","","Returns the address&#39;s multicast scope if the address is multicast.",111,null],[11,"is_multicast","","Returns true if this is a multicast address (ff00::/8).",111,null],[11,"to_ipv4","","Converts this address to an IPv4 address. Returns None if this address is\nneither IPv4-compatible or IPv4-mapped.",111,null],[11,"octets","","Returns the sixteen eight-bit integers the IPv6 address consists of.",111,null],[11,"fmt","","",111,null],[11,"fmt","","",111,null],[11,"clone","","",111,null],[11,"eq","","",111,null],[11,"hash","","",111,null],[11,"partial_cmp","","",111,null],[11,"cmp","","",111,null],[11,"from","","",111,null],[11,"fmt","std::net::addr","",112,null],[11,"hash","","",112,null],[11,"eq","","",112,null],[11,"ne","","",112,null],[11,"clone","","",112,null],[11,"new","","Creates a new socket address from the (ip, port) pair.",112,{"inputs":[{"name":"ipaddr"},{"name":"u16"}],"output":{"name":"socketaddr"}}],[11,"ip","","Returns the IP address associated with this socket address.",112,null],[11,"set_ip","","Change the IP address associated with this socket address.",112,null],[11,"port","","Returns the port number associated with this socket address.",112,null],[11,"set_port","","Change the port number associated with this socket address.",112,null],[11,"new","","Creates a new socket address from the (ip, port) pair.",113,{"inputs":[{"name":"ipv4addr"},{"name":"u16"}],"output":{"name":"socketaddrv4"}}],[11,"ip","","Returns the IP address associated with this socket address.",113,null],[11,"set_ip","","Change the IP address associated with this socket address.",113,null],[11,"port","","Returns the port number associated with this socket address.",113,null],[11,"set_port","","Change the port number associated with this socket address.",113,null],[11,"new","","Creates a new socket address from the ip/port/flowinfo/scope_id\ncomponents.",114,{"inputs":[{"name":"ipv6addr"},{"name":"u16"},{"name":"u32"},{"name":"u32"}],"output":{"name":"socketaddrv6"}}],[11,"ip","","Returns the IP address associated with this socket address.",114,null],[11,"set_ip","","Change the IP address associated with this socket address.",114,null],[11,"port","","Returns the port number associated with this socket address.",114,null],[11,"set_port","","Change the port number associated with this socket address.",114,null],[11,"flowinfo","","Returns the flow information associated with this address,\ncorresponding to the `sin6_flowinfo` field in C.",114,null],[11,"set_flowinfo","","Change the flow information associated with this socket address.",114,null],[11,"scope_id","","Returns the scope ID associated with this address,\ncorresponding to the `sin6_scope_id` field in C.",114,null],[11,"set_scope_id","","Change the scope ID associated with this socket address.",114,null],[11,"fmt","","",112,null],[11,"fmt","","",113,null],[11,"fmt","","",113,null],[11,"fmt","","",114,null],[11,"fmt","","",114,null],[11,"clone","","",113,null],[11,"clone","","",114,null],[11,"eq","","",113,null],[11,"eq","","",114,null],[11,"hash","","",113,null],[11,"hash","","",114,null],[11,"to_socket_addrs","","",112,null],[11,"to_socket_addrs","","",113,null],[11,"to_socket_addrs","","",114,null],[11,"connect","std::net::tcp","Opens a TCP connection to a remote host.",115,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP connection.",115,null],[11,"local_addr","","Returns the socket address of the local half of this TCP connection.",115,null],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",115,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",115,null],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",115,null],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",115,null],[11,"read_timeout","","Returns the read timeout of this socket.",115,null],[11,"write_timeout","","Returns the write timeout of this socket.",115,null],[11,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",115,null],[11,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",115,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",115,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",115,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",115,null],[11,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",115,null],[11,"read","","",115,null],[11,"read_to_end","","",115,null],[11,"write","","",115,null],[11,"flush","","",115,null],[11,"fmt","","",115,null],[11,"bind","","Creates a new `TcpListener` which will be bound to the specified\naddress.",116,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the local socket address of this listener.",116,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",116,null],[11,"accept","","Accept a new incoming connection from this listener.",116,null],[11,"incoming","","Returns an iterator over the connections being received on this\nlistener.",116,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",116,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",116,null],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",116,null],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",116,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",116,null],[11,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",116,null],[11,"next","","",117,null],[11,"fmt","","",116,null],[11,"bind","std::net::udp","Creates a UDP socket from the given address.",118,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"recv_from","","Receives data from the socket. On success, returns the number of bytes\nread and the address from whence the data came.",118,null],[11,"send_to","","Sends data on the socket to the given address. On success, returns the\nnumber of bytes written.",118,null],[11,"local_addr","","Returns the socket address that this socket was created from.",118,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",118,null],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",118,null],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",118,null],[11,"read_timeout","","Returns the read timeout of this socket.",118,null],[11,"write_timeout","","Returns the write timeout of this socket.",118,null],[11,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",118,null],[11,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",118,null],[11,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this socket.",118,null],[11,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this socket.",118,null],[11,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this socket.",118,null],[11,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this socket.",118,null],[11,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",118,null],[11,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",118,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",118,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",118,null],[11,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",118,null],[11,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",118,null],[11,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",118,null],[11,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",118,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",118,null],[11,"connect","","Connects this UDP socket to a remote address, allowing the `send` and\n`recv` syscalls to be used to send data and also applies filters to only\nreceive data from the specified address.",118,null],[11,"send","","Sends data on the socket to the remote address to which it is connected.",118,null],[11,"recv","","Receives data on the socket from the remote address to which it is\nconnected.",118,null],[11,"set_nonblocking","","Moves this UDP socket into or out of nonblocking mode.",118,null],[11,"fmt","","",118,null],[11,"from_str","std::net::ip","",108,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",110,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",111,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","std::net::addr","",113,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",114,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",112,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","std::net::parser","",119,null],[11,"ne","","",119,null],[11,"clone","","",119,null],[11,"fmt","","",119,null],[11,"fmt","","",119,null],[11,"description","","",119,null],[11,"fmt","std::net","",120,null],[11,"eq","","",120,null],[11,"clone","","",120,null],[11,"next","","",121,null],[11,"clone","std::os::linux::raw::arch","",122,null],[11,"as_raw_stat","std::fs","",78,null],[11,"st_dev","","",78,null],[11,"st_ino","","",78,null],[11,"st_mode","","",78,null],[11,"st_nlink","","",78,null],[11,"st_uid","","",78,null],[11,"st_gid","","",78,null],[11,"st_rdev","","",78,null],[11,"st_size","","",78,null],[11,"st_atime","","",78,null],[11,"st_atime_nsec","","",78,null],[11,"st_mtime","","",78,null],[11,"st_mtime_nsec","","",78,null],[11,"st_ctime","","",78,null],[11,"st_ctime_nsec","","",78,null],[11,"st_blksize","","",78,null],[11,"st_blocks","","",78,null],[11,"as_raw_fd","","",2,null],[11,"from_raw_fd","","",2,{"inputs":[{"name":"i32"}],"output":{"name":"file"}}],[11,"into_raw_fd","","",2,null],[11,"as_raw_fd","std::net::tcp","",115,null],[11,"as_raw_fd","","",116,null],[11,"as_raw_fd","std::net::udp","",118,null],[11,"from_raw_fd","std::net::tcp","",115,{"inputs":[{"name":"i32"}],"output":{"name":"tcpstream"}}],[11,"from_raw_fd","","",116,{"inputs":[{"name":"i32"}],"output":{"name":"tcplistener"}}],[11,"from_raw_fd","std::net::udp","",118,{"inputs":[{"name":"i32"}],"output":{"name":"udpsocket"}}],[11,"into_raw_fd","std::net::tcp","",115,null],[11,"into_raw_fd","","",116,null],[11,"into_raw_fd","std::net::udp","",118,null],[11,"from_vec","std::ffi::os_str","",74,{"inputs":[{"name":"vec"}],"output":{"name":"osstring"}}],[11,"into_vec","","",74,null],[11,"from_bytes","","",75,null],[11,"as_bytes","","",75,null],[11,"mode","std::fs","",80,null],[11,"set_mode","","",80,null],[11,"from_mode","","",80,{"inputs":[{"name":"u32"}],"output":{"name":"permissions"}}],[11,"mode","","",79,null],[11,"custom_flags","","",79,null],[11,"dev","","",78,null],[11,"ino","","",78,null],[11,"mode","","",78,null],[11,"nlink","","",78,null],[11,"uid","","",78,null],[11,"gid","","",78,null],[11,"rdev","","",78,null],[11,"size","","",78,null],[11,"atime","","",78,null],[11,"atime_nsec","","",78,null],[11,"mtime","","",78,null],[11,"mtime_nsec","","",78,null],[11,"ctime","","",78,null],[11,"ctime_nsec","","",78,null],[11,"blksize","","",78,null],[11,"blocks","","",78,null],[11,"is_block_device","","",81,null],[11,"is_char_device","","",81,null],[11,"is_fifo","","",81,null],[11,"is_socket","","",81,null],[11,"ino","","",83,null],[11,"mode","","",84,null],[11,"uid","std::process","",123,null],[11,"gid","","",123,null],[11,"before_exec","","",123,null],[11,"exec","","",123,null],[11,"from_raw","","",124,{"inputs":[{"name":"i32"}],"output":{"name":"exitstatus"}}],[11,"signal","","",124,null],[11,"from_raw_fd","","",125,{"inputs":[{"name":"i32"}],"output":{"name":"stdio"}}],[11,"as_raw_fd","","",126,null],[11,"as_raw_fd","","",127,null],[11,"as_raw_fd","","",128,null],[11,"into_raw_fd","","",126,null],[11,"into_raw_fd","","",127,null],[11,"into_raw_fd","","",128,null],[11,"as_pthread_t","std::thread","",22,null],[11,"into_pthread_t","","",22,null],[11,"clone","std::sys::ext::net","",129,null],[11,"is_unnamed","","Returns true iff the address is unnamed.",129,null],[11,"as_pathname","","Returns the contents of this address if it is a `pathname` address.",129,null],[11,"fmt","","",129,null],[11,"fmt","","",130,null],[11,"connect","","Connects to the socket named by `path`.",130,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"pair","","Creates an unnamed pair of connected sockets.",130,{"inputs":[],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",130,null],[11,"local_addr","","Returns the socket address of the local half of this connection.",130,null],[11,"peer_addr","","Returns the socket address of the remote half of this connection.",130,null],[11,"set_read_timeout","","Sets the read timeout for the socket.",130,null],[11,"set_write_timeout","","Sets the write timeout for the socket.",130,null],[11,"read_timeout","","Returns the read timeout of this socket.",130,null],[11,"write_timeout","","Returns the write timeout of this socket.",130,null],[11,"set_nonblocking","","Moves the socket into or out of nonblocking mode.",130,null],[11,"take_error","","Returns the value of the `SO_ERROR` option.",130,null],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",130,null],[11,"read","","",130,null],[11,"read_to_end","","",130,null],[11,"write","","",130,null],[11,"flush","","",130,null],[11,"as_raw_fd","","",130,null],[11,"from_raw_fd","","",130,{"inputs":[{"name":"i32"}],"output":{"name":"unixstream"}}],[11,"into_raw_fd","","",130,null],[11,"fmt","","",131,null],[11,"bind","","Creates a new `UnixListener` bound to the specified socket.",131,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"accept","","Accepts a new incoming connection to this listener.",131,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",131,null],[11,"local_addr","","Returns the local socket address of this listener.",131,null],[11,"set_nonblocking","","Moves the socket into or out of nonblocking mode.",131,null],[11,"take_error","","Returns the value of the `SO_ERROR` option.",131,null],[11,"incoming","","Returns an iterator over incoming connections.",131,null],[11,"as_raw_fd","","",131,null],[11,"from_raw_fd","","",131,{"inputs":[{"name":"i32"}],"output":{"name":"unixlistener"}}],[11,"into_raw_fd","","",131,null],[11,"fmt","","",132,null],[11,"next","","",132,null],[11,"size_hint","","",132,null],[11,"fmt","","",133,null],[11,"bind","","Creates a Unix datagram socket bound to the given path.",133,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"unbound","","Creates a Unix Datagram socket which is not bound to any address.",133,{"inputs":[],"output":{"name":"result"}}],[11,"pair","","Create an unnamed pair of connected sockets.",133,{"inputs":[],"output":{"name":"result"}}],[11,"connect","","Connects the socket to the specified address.",133,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",133,null],[11,"local_addr","","Returns the address of this socket.",133,null],[11,"peer_addr","","Returns the address of this socket&#39;s peer.",133,null],[11,"recv_from","","Receives data from the socket.",133,null],[11,"recv","","Receives data from the socket.",133,null],[11,"send_to","","Sends data on the socket to the specified address.",133,null],[11,"send","","Sends data on the socket to the socket&#39;s peer.",133,null],[11,"set_read_timeout","","Sets the read timeout for the socket.",133,null],[11,"set_write_timeout","","Sets the write timeout for the socket.",133,null],[11,"read_timeout","","Returns the read timeout of this socket.",133,null],[11,"write_timeout","","Returns the write timeout of this socket.",133,null],[11,"set_nonblocking","","Moves the socket into or out of nonblocking mode.",133,null],[11,"take_error","","Returns the value of the `SO_ERROR` option.",133,null],[11,"shutdown","","Shut down the read, write, or both halves of this connection.",133,null],[11,"as_raw_fd","","",133,null],[11,"from_raw_fd","","",133,{"inputs":[{"name":"i32"}],"output":{"name":"unixdatagram"}}],[11,"into_raw_fd","","",133,null],[11,"deref","std::panic","",134,null],[11,"deref_mut","","",134,null],[11,"call_once","","",134,null],[11,"eq","std::path","",135,null],[11,"ne","","",135,null],[11,"cmp","","",135,null],[11,"partial_cmp","","",135,null],[11,"lt","","",135,null],[11,"le","","",135,null],[11,"gt","","",135,null],[11,"ge","","",135,null],[11,"hash","","",135,null],[11,"fmt","","",135,null],[11,"clone","","",135,null],[11,"is_verbatim","","Determines if the prefix is verbatim, i.e. begins with `\\\\?\\`.",135,null],[11,"fmt","","",136,null],[11,"clone","","",136,null],[11,"kind","","The parsed prefix data.",136,null],[11,"as_os_str","","The raw `OsStr` slice for this prefix.",136,null],[11,"eq","","",136,null],[11,"partial_cmp","","",136,null],[11,"cmp","","",136,null],[11,"hash","","",136,null],[11,"fmt","","",137,null],[11,"hash","","",137,null],[11,"cmp","","",137,null],[11,"partial_cmp","","",137,null],[11,"lt","","",137,null],[11,"le","","",137,null],[11,"gt","","",137,null],[11,"ge","","",137,null],[11,"eq","","",137,null],[11,"ne","","",137,null],[11,"clone","","",137,null],[11,"as_os_str","","Extracts the underlying `OsStr` slice",137,null],[11,"as_ref","","",137,null],[11,"clone","","",138,null],[11,"clone","","",139,null],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",138,null],[11,"as_ref","","",138,null],[11,"as_ref","","",138,null],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",139,null],[11,"as_ref","","",139,null],[11,"as_ref","","",139,null],[11,"next","","",139,null],[11,"next_back","","",139,null],[11,"next","","",138,null],[11,"next_back","","",138,null],[11,"eq","","",138,null],[11,"partial_cmp","","",138,null],[11,"cmp","","",138,null],[11,"clone","","",140,null],[11,"new","","Allocates an empty `PathBuf`.",140,{"inputs":[],"output":{"name":"pathbuf"}}],[11,"as_path","","Coerces to a `Path` slice.",140,null],[11,"push","","Extends `self` with `path`.",140,null],[11,"pop","","Truncate `self` to `self.parent()`.",140,null],[11,"set_file_name","","Updates `self.file_name()` to `file_name`.",140,null],[11,"set_extension","","Updates `self.extension()` to `extension`.",140,null],[11,"into_os_string","","Consumes the `PathBuf`, yielding its internal `OsString` storage.",140,null],[11,"from","","",140,{"inputs":[{"name":"t"}],"output":{"name":"pathbuf"}}],[11,"from","","",140,{"inputs":[{"name":"osstring"}],"output":{"name":"pathbuf"}}],[11,"from","","",140,{"inputs":[{"name":"string"}],"output":{"name":"pathbuf"}}],[11,"from_iter","","",140,{"inputs":[{"name":"i"}],"output":{"name":"pathbuf"}}],[11,"extend","","",140,null],[11,"fmt","","",140,null],[11,"new","","Directly wrap a string slice as a `Path` slice.",141,{"inputs":[{"name":"s"}],"output":{"name":"path"}}],[11,"as_os_str","","Yields the underlying `OsStr` slice.",141,null],[11,"to_str","","Yields a `&amp;str` slice if the `Path` is valid unicode.",141,null],[11,"to_string_lossy","","Converts a `Path` to a `Cow&lt;str&gt;`.",141,null],[11,"to_path_buf","","Converts a `Path` to an owned `PathBuf`.",141,null],[11,"is_absolute","","A path is *absolute* if it is independent of the current directory.",141,null],[11,"is_relative","","A path is *relative* if it is not absolute.",141,null],[11,"has_root","","A path has a root if the body of the path begins with the directory separator.",141,null],[11,"parent","","The path without its final component, if any.",141,null],[11,"file_name","","The final component of the path, if it is a normal file.",141,null],[11,"strip_prefix","","Returns a path that, when joined onto `base`, yields `self`.",141,null],[11,"starts_with","","Determines whether `base` is a prefix of `self`.",141,null],[11,"ends_with","","Determines whether `child` is a suffix of `self`.",141,null],[11,"file_stem","","Extracts the stem (non-extension) portion of `self.file_name()`.",141,null],[11,"extension","","Extracts the extension of `self.file_name()`, if possible.",141,null],[11,"join","","Creates an owned `PathBuf` with `path` adjoined to `self`.",141,null],[11,"with_file_name","","Creates an owned `PathBuf` like `self` but with the given file name.",141,null],[11,"with_extension","","Creates an owned `PathBuf` like `self` but with the given extension.",141,null],[11,"components","","Produce an iterator over the components of the path.",141,null],[11,"iter","","Produce an iterator over the path&#39;s components viewed as `OsStr` slices.",141,null],[11,"display","","Returns an object that implements `Display` for safely printing paths\nthat may contain non-Unicode data.",141,null],[11,"metadata","","Query the file system to get information about a file, directory, etc.",141,null],[11,"symlink_metadata","","Query the metadata about a file without following symlinks.",141,null],[11,"canonicalize","","Returns the canonical form of the path with all intermediate components\nnormalized and symbolic links resolved.",141,null],[11,"read_link","","Reads a symbolic link, returning the file that the link points to.",141,null],[11,"read_dir","","Returns an iterator over the entries within a directory.",141,null],[11,"exists","","Returns whether the path points at an existing entity.",141,null],[11,"is_file","","Returns whether the path is pointing at a regular file.",141,null],[11,"is_dir","","Returns whether the path is pointing at a directory.",141,null],[11,"deref","","",140,null],[11,"borrow","","",140,null],[11,"from","collections::borrow","",76,{"inputs":[{"name":"path"}],"output":{"name":"cow"}}],[11,"from","","",76,{"inputs":[{"name":"pathbuf"}],"output":{"name":"cow"}}],[11,"to_owned","std::path","",141,null],[11,"eq","","",140,null],[11,"hash","","",140,null],[11,"partial_cmp","","",140,null],[11,"cmp","","",140,null],[11,"as_ref","","",140,null],[11,"into","","",140,null],[11,"eq","","",142,null],[11,"ne","","",142,null],[11,"clone","","",142,null],[11,"fmt","","",142,null],[11,"as_ref","","",141,null],[11,"fmt","","",141,null],[11,"fmt","","",143,null],[11,"fmt","","",143,null],[11,"eq","","",141,null],[11,"hash","","",141,null],[11,"partial_cmp","","",141,null],[11,"cmp","","",141,null],[11,"as_ref","","",141,null],[11,"as_ref","std::ffi::os_str","",75,null],[11,"as_ref","collections::borrow","",76,null],[11,"as_ref","std::ffi::os_str","",74,null],[11,"as_ref","collections::string","",77,null],[11,"as_ref","std::path","",140,null],[11,"eq","","",140,null],[11,"eq","","",141,null],[11,"partial_cmp","","",140,null],[11,"partial_cmp","","",141,null],[11,"eq","","",140,null],[11,"partial_cmp","","",140,null],[11,"eq","collections::borrow","",76,null],[11,"eq","std::path","",141,null],[11,"partial_cmp","collections::borrow","",76,null],[11,"partial_cmp","std::path","",141,null],[11,"eq","collections::borrow","",76,null],[11,"partial_cmp","","",76,null],[11,"eq","","",76,null],[11,"eq","std::path","",140,null],[11,"partial_cmp","collections::borrow","",76,null],[11,"partial_cmp","std::path","",140,null],[11,"eq","","",140,null],[11,"eq","std::ffi::os_str","",75,null],[11,"partial_cmp","std::path","",140,null],[11,"partial_cmp","std::ffi::os_str","",75,null],[11,"eq","std::path","",140,null],[11,"partial_cmp","","",140,null],[11,"eq","","",140,null],[11,"eq","collections::borrow","",76,null],[11,"partial_cmp","std::path","",140,null],[11,"partial_cmp","collections::borrow","",76,null],[11,"eq","std::path","",140,null],[11,"eq","std::ffi::os_str","",74,null],[11,"partial_cmp","std::path","",140,null],[11,"partial_cmp","std::ffi::os_str","",74,null],[11,"eq","std::path","",141,null],[11,"eq","std::ffi::os_str","",75,null],[11,"partial_cmp","std::path","",141,null],[11,"partial_cmp","std::ffi::os_str","",75,null],[11,"eq","std::path","",141,null],[11,"partial_cmp","","",141,null],[11,"eq","","",141,null],[11,"eq","collections::borrow","",76,null],[11,"partial_cmp","std::path","",141,null],[11,"partial_cmp","collections::borrow","",76,null],[11,"eq","std::path","",141,null],[11,"eq","std::ffi::os_str","",74,null],[11,"partial_cmp","std::path","",141,null],[11,"partial_cmp","std::ffi::os_str","",74,null],[11,"eq","","",75,null],[11,"partial_cmp","","",75,null],[11,"eq","collections::borrow","",76,null],[11,"partial_cmp","","",76,null],[11,"eq","std::ffi::os_str","",74,null],[11,"partial_cmp","","",74,null],[11,"eq","collections::borrow","",76,null],[11,"eq","std::ffi::os_str","",75,null],[11,"partial_cmp","collections::borrow","",76,null],[11,"partial_cmp","std::ffi::os_str","",75,null],[11,"eq","collections::borrow","",76,null],[11,"partial_cmp","","",76,null],[11,"eq","","",76,null],[11,"eq","std::ffi::os_str","",74,null],[11,"partial_cmp","collections::borrow","",76,null],[11,"partial_cmp","std::ffi::os_str","",74,null],[11,"fmt","std::path","",142,null],[11,"description","","",142,null],[11,"write","std::process","",126,null],[11,"flush","","",126,null],[11,"read","","",127,null],[11,"read_to_end","","",127,null],[11,"read","","",128,null],[11,"read_to_end","","",128,null],[11,"new","","Constructs a new `Command` for launching the program at\npath `program`, with the following default configuration:",123,{"inputs":[{"name":"s"}],"output":{"name":"command"}}],[11,"arg","","Add an argument to pass to the program.",123,null],[11,"args","","Add multiple arguments to pass to the program.",123,null],[11,"env","","Inserts or updates an environment variable mapping.",123,null],[11,"env_remove","","Removes an environment variable mapping.",123,null],[11,"env_clear","","Clears the entire environment map for the child process.",123,null],[11,"current_dir","","Sets the working directory for the child process.",123,null],[11,"stdin","","Configuration for the child process&#39;s stdin handle (file descriptor 0).",123,null],[11,"stdout","","Configuration for the child process&#39;s stdout handle (file descriptor 1).",123,null],[11,"stderr","","Configuration for the child process&#39;s stderr handle (file descriptor 2).",123,null],[11,"spawn","","Executes the command as a child process, returning a handle to it.",123,null],[11,"output","","Executes the command as a child process, waiting for it to finish and\ncollecting all of its output.",123,null],[11,"status","","Executes a command as a child process, waiting for it to finish and\ncollecting its exit status.",123,null],[11,"fmt","","Format the program and arguments of a Command for display. Any\nnon-utf8 data is lossily converted using the utf8 replacement\ncharacter.",123,null],[11,"clone","","",144,null],[11,"eq","","",144,null],[11,"ne","","",144,null],[11,"fmt","","",144,null],[11,"piped","","A new pipe should be arranged to connect the parent and child processes.",125,{"inputs":[],"output":{"name":"stdio"}}],[11,"inherit","","The child inherits from the corresponding parent descriptor.",125,{"inputs":[],"output":{"name":"stdio"}}],[11,"null","","This stream will be ignored. This is the equivalent of attaching the\nstream to `/dev/null`",125,{"inputs":[],"output":{"name":"stdio"}}],[11,"fmt","","",124,null],[11,"clone","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"success","","Was termination successful? Signal termination not considered a success,\nand success is defined as a zero exit status.",124,null],[11,"code","","Returns the exit code of the process, if any.",124,null],[11,"fmt","","",124,null],[11,"kill","","Forces the child to exit. This is equivalent to sending a\nSIGKILL on unix platforms.",145,null],[11,"id","","Returns the OS-assigned process identifier associated with this child.",145,null],[11,"wait","","Waits for the child to exit completely, returning the status that it\nexited with. This function will continue to have the same return value\nafter it has been called at least once.",145,null],[11,"wait_with_output","","Simultaneously waits for the child to exit and collect all remaining\noutput on the stdout/stderr handles, returning an `Output`\ninstance.",145,null],[11,"new","std::sync::mpsc::select","Creates a new selection structure. This set is initially empty.",146,{"inputs":[],"output":{"name":"select"}}],[11,"handle","","Creates a new handle into this receiver set for a new receiver. Note\nthat this does *not* add the receiver to the receiver set, for that you\nmust call the `add` method on the handle itself.",146,null],[11,"wait","","Waits for an event on this receiver set. The returned value is *not* an\nindex, but rather an id. This id can be queried against any active\n`Handle` structures (each one has an `id` method). The handle with\nthe matching `id` will have some sort of event available on it. The\nevent could either be that data is available or the corresponding\nchannel has been closed.",146,null],[11,"id","","Retrieves the id of this handle.",147,null],[11,"recv","","Blocks to receive a value on the underlying receiver, returning `Some` on\nsuccess or `None` if the channel disconnects. This function has the same\nsemantics as `Receiver.recv`",147,null],[11,"add","","Adds this handle to the receiver set that the handle was created from. This\nmethod can be called multiple times, but it has no effect if `add` was\ncalled previously.",147,null],[11,"remove","","Removes this handle from the `Select` set. This method is unsafe because\nit has no guarantee that the `Handle` was not moved since `add` was\ncalled.",147,null],[11,"drop","","",146,null],[11,"drop","","",147,null],[11,"fmt","","",146,null],[11,"fmt","","",147,null],[11,"clone","std::sync::mpsc","",148,null],[11,"eq","","",148,null],[11,"ne","","",148,null],[11,"fmt","","",149,null],[11,"clone","","",149,null],[11,"eq","","",149,null],[11,"fmt","","",150,null],[11,"clone","","",150,null],[11,"eq","","",150,null],[11,"fmt","","",151,null],[11,"clone","","",151,null],[11,"eq","","",151,null],[11,"clone","","",152,null],[11,"eq","","",152,null],[11,"ne","","",152,null],[11,"send","","Attempts to send a value on this channel, returning it back if it could\nnot be sent.",153,null],[11,"clone","","",153,null],[11,"drop","","",153,null],[11,"fmt","","",153,null],[11,"send","","Sends a value on this synchronous channel.",154,null],[11,"try_send","","Attempts to send a value on this channel without blocking.",154,null],[11,"clone","","",154,null],[11,"drop","","",154,null],[11,"fmt","","",154,null],[11,"try_recv","","Attempts to return a pending value on this receiver without blocking",155,null],[11,"recv","","Attempts to wait for a value on this receiver, returning an error if the\ncorresponding channel has hung up.",155,null],[11,"recv_timeout","","Attempts to wait for a value on this receiver, returning an error if the\ncorresponding channel has hung up, or if it waits more than `timeout`.",155,null],[11,"iter","","Returns an iterator that will block waiting for messages, but never\n`panic!`. It will return `None` when the channel has hung up.",155,null],[11,"next","","",156,null],[11,"next","","",157,null],[11,"into_iter","","",155,null],[11,"drop","","",155,null],[11,"fmt","","",155,null],[11,"fmt","","",148,null],[11,"fmt","","",148,null],[11,"description","","",148,null],[11,"cause","","",148,null],[11,"fmt","","",152,null],[11,"fmt","","",152,null],[11,"description","","",152,null],[11,"cause","","",152,null],[11,"fmt","","",149,null],[11,"description","","",149,null],[11,"cause","","",149,null],[11,"fmt","","",150,null],[11,"description","","",150,null],[11,"cause","","",150,null],[11,"new","std::sync::barrier","Creates a new barrier that can block a given number of threads.",158,{"inputs":[{"name":"usize"}],"output":{"name":"barrier"}}],[11,"wait","","Blocks the current thread until all threads have rendezvoused here.",158,null],[11,"is_leader","","Returns whether this thread from `wait` is the &quot;leader thread&quot;.",159,null],[11,"clone","std::sync::condvar","",160,null],[11,"eq","","",160,null],[11,"ne","","",160,null],[11,"fmt","","",160,null],[11,"timed_out","","Returns whether the wait was known to have timed out.",160,null],[11,"new","","Creates a new condition variable which is ready to be waited on and\nnotified.",161,{"inputs":[],"output":{"name":"condvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",161,null],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",161,null],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",161,null],[11,"notify_one","","Wakes up one blocked thread on this condvar.",161,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",161,null],[11,"default","","",161,{"inputs":[],"output":{"name":"condvar"}}],[11,"drop","","",161,null],[11,"new","","Creates a new condition variable",162,{"inputs":[],"output":{"name":"staticcondvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",162,null],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",162,null],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",162,null],[11,"notify_one","","Wakes up one blocked thread on this condvar.",162,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",162,null],[11,"destroy","","Deallocates all resources associated with this static condvar.",162,null],[11,"new","std::sync::mutex","Creates a new mutex in an unlocked state ready for use.",163,{"inputs":[{"name":"t"}],"output":{"name":"mutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",163,null],[11,"try_lock","","Attempts to acquire this lock.",163,null],[11,"is_poisoned","","Determines whether the lock is poisoned.",163,null],[11,"into_inner","","Consumes this mutex, returning the underlying data.",163,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",163,null],[11,"drop","","",163,null],[11,"default","","",163,{"inputs":[],"output":{"name":"mutex"}}],[11,"fmt","","",163,null],[11,"new","","Creates a new mutex in an unlocked state ready for use.",164,{"inputs":[],"output":{"name":"staticmutex"}}],[11,"lock","","Acquires this lock, see `Mutex::lock`",164,null],[11,"try_lock","","Attempts to grab this lock, see `Mutex::try_lock`",164,null],[11,"destroy","","Deallocates resources associated with this static mutex.",164,null],[11,"deref","","",165,null],[11,"deref_mut","","",165,null],[11,"drop","","",165,null],[11,"new","std::sync::once","Creates a new `Once` value.",166,{"inputs":[],"output":{"name":"once"}}],[11,"call_once","","Performs an initialization routine once and only once. The given closure\nwill be executed if this is the first time `call_once` has been called,\nand otherwise the routine will *not* be invoked.",166,null],[11,"call_once_force","","Performs the same function as `call_once` except ignores poisoning.",166,null],[11,"poisoned","","Returns whether the associated `Once` has been poisoned.",167,null],[11,"new","std::sync::rwlock","Creates a new instance of an `RwLock&lt;T&gt;` which is unlocked.",168,{"inputs":[{"name":"t"}],"output":{"name":"rwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",168,null],[11,"try_read","","Attempts to acquire this rwlock with shared read access.",168,null],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",168,null],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",168,null],[11,"is_poisoned","","Determines whether the lock is poisoned.",168,null],[11,"into_inner","","Consumes this `RwLock`, returning the underlying data.",168,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",168,null],[11,"drop","","",168,null],[11,"fmt","","",168,null],[11,"default","","",168,{"inputs":[],"output":{"name":"rwlock"}}],[11,"new","","Creates a new rwlock.",169,{"inputs":[],"output":{"name":"staticrwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",169,null],[11,"try_read","","Attempts to acquire this lock with shared read access.",169,null],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",169,null],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",169,null],[11,"destroy","","Deallocates all resources associated with this static lock.",169,null],[11,"deref","","",170,null],[11,"deref","","",171,null],[11,"deref_mut","","",171,null],[11,"drop","","",170,null],[11,"drop","","",171,null],[11,"default","core::sync::atomic","",172,{"inputs":[],"output":{"name":"atomicbool"}}],[11,"default","","",173,{"inputs":[],"output":{"name":"atomicptr"}}],[11,"fmt","","",174,null],[11,"clone","","",174,null],[11,"new","","Creates a new `AtomicBool`.",172,{"inputs":[{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",172,null],[11,"store","","Stores a value into the bool.",172,null],[11,"swap","","Stores a value into the bool, returning the old value.",172,null],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",172,null],[11,"compare_exchange","","Stores a value into the `bool` if the current value is the same as the `current` value.",172,null],[11,"compare_exchange_weak","","Stores a value into the `bool` if the current value is the same as the `current` value.",172,null],[11,"fetch_and","","Logical &quot;and&quot; with a boolean value.",172,null],[11,"fetch_nand","","Logical &quot;nand&quot; with a boolean value.",172,null],[11,"fetch_or","","Logical &quot;or&quot; with a boolean value.",172,null],[11,"fetch_xor","","Logical &quot;xor&quot; with a boolean value.",172,null],[11,"new","","Creates a new `AtomicPtr`.",173,null],[11,"load","","Loads a value from the pointer.",173,null],[11,"store","","Stores a value into the pointer.",173,null],[11,"swap","","Stores a value into the pointer, returning the old value.",173,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",173,null],[11,"compare_exchange","","Stores a value into the pointer if the current value is the same as the `current` value.",173,null],[11,"compare_exchange_weak","","Stores a value into the pointer if the current value is the same as the `current` value.",173,null],[11,"default","","",175,{"inputs":[],"output":{"name":"atomici8"}}],[11,"fmt","","",175,null],[11,"new","","Creates a new atomic integer.",175,{"inputs":[{"name":"i8"}],"output":{"name":"atomici8"}}],[11,"load","","Loads a value from the atomic integer.",175,null],[11,"store","","Stores a value into the atomic integer.",175,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",175,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",175,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",175,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",175,null],[11,"fetch_add","","Add to the current value, returning the previous value.",175,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",175,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",175,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",175,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",175,null],[11,"default","","",176,{"inputs":[],"output":{"name":"atomicu8"}}],[11,"fmt","","",176,null],[11,"new","","Creates a new atomic integer.",176,{"inputs":[{"name":"u8"}],"output":{"name":"atomicu8"}}],[11,"load","","Loads a value from the atomic integer.",176,null],[11,"store","","Stores a value into the atomic integer.",176,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",176,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",176,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",176,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",176,null],[11,"fetch_add","","Add to the current value, returning the previous value.",176,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",176,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",176,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",176,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",176,null],[11,"default","","",177,{"inputs":[],"output":{"name":"atomici16"}}],[11,"fmt","","",177,null],[11,"new","","Creates a new atomic integer.",177,{"inputs":[{"name":"i16"}],"output":{"name":"atomici16"}}],[11,"load","","Loads a value from the atomic integer.",177,null],[11,"store","","Stores a value into the atomic integer.",177,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",177,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",177,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",177,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",177,null],[11,"fetch_add","","Add to the current value, returning the previous value.",177,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",177,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",177,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",177,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",177,null],[11,"default","","",178,{"inputs":[],"output":{"name":"atomicu16"}}],[11,"fmt","","",178,null],[11,"new","","Creates a new atomic integer.",178,{"inputs":[{"name":"u16"}],"output":{"name":"atomicu16"}}],[11,"load","","Loads a value from the atomic integer.",178,null],[11,"store","","Stores a value into the atomic integer.",178,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",178,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",178,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",178,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",178,null],[11,"fetch_add","","Add to the current value, returning the previous value.",178,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",178,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",178,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",178,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",178,null],[11,"default","","",179,{"inputs":[],"output":{"name":"atomici32"}}],[11,"fmt","","",179,null],[11,"new","","Creates a new atomic integer.",179,{"inputs":[{"name":"i32"}],"output":{"name":"atomici32"}}],[11,"load","","Loads a value from the atomic integer.",179,null],[11,"store","","Stores a value into the atomic integer.",179,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",179,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",179,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",179,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",179,null],[11,"fetch_add","","Add to the current value, returning the previous value.",179,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",179,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",179,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",179,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",179,null],[11,"default","","",180,{"inputs":[],"output":{"name":"atomicu32"}}],[11,"fmt","","",180,null],[11,"new","","Creates a new atomic integer.",180,{"inputs":[{"name":"u32"}],"output":{"name":"atomicu32"}}],[11,"load","","Loads a value from the atomic integer.",180,null],[11,"store","","Stores a value into the atomic integer.",180,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",180,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",180,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",180,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",180,null],[11,"fetch_add","","Add to the current value, returning the previous value.",180,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",180,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",180,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",180,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",180,null],[11,"default","","",181,{"inputs":[],"output":{"name":"atomici64"}}],[11,"fmt","","",181,null],[11,"new","","Creates a new atomic integer.",181,{"inputs":[{"name":"i64"}],"output":{"name":"atomici64"}}],[11,"load","","Loads a value from the atomic integer.",181,null],[11,"store","","Stores a value into the atomic integer.",181,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",181,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",181,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",181,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",181,null],[11,"fetch_add","","Add to the current value, returning the previous value.",181,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",181,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",181,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",181,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",181,null],[11,"default","","",182,{"inputs":[],"output":{"name":"atomicu64"}}],[11,"fmt","","",182,null],[11,"new","","Creates a new atomic integer.",182,{"inputs":[{"name":"u64"}],"output":{"name":"atomicu64"}}],[11,"load","","Loads a value from the atomic integer.",182,null],[11,"store","","Stores a value into the atomic integer.",182,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",182,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",182,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",182,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",182,null],[11,"fetch_add","","Add to the current value, returning the previous value.",182,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",182,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",182,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",182,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",182,null],[11,"default","","",183,{"inputs":[],"output":{"name":"atomicisize"}}],[11,"fmt","","",183,null],[11,"new","","Creates a new atomic integer.",183,{"inputs":[{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the atomic integer.",183,null],[11,"store","","Stores a value into the atomic integer.",183,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",183,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",183,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",183,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",183,null],[11,"fetch_add","","Add to the current value, returning the previous value.",183,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",183,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",183,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",183,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",183,null],[11,"default","","",184,{"inputs":[],"output":{"name":"atomicusize"}}],[11,"fmt","","",184,null],[11,"new","","Creates a new atomic integer.",184,{"inputs":[{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the atomic integer.",184,null],[11,"store","","Stores a value into the atomic integer.",184,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",184,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",184,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",184,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",184,null],[11,"fetch_add","","Add to the current value, returning the previous value.",184,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",184,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",184,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",184,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",184,null],[11,"fmt","","",172,null],[11,"fmt","","",173,null],[11,"hash","std::time::duration","",185,null],[11,"fmt","","",185,null],[11,"cmp","","",185,null],[11,"partial_cmp","","",185,null],[11,"lt","","",185,null],[11,"le","","",185,null],[11,"gt","","",185,null],[11,"ge","","",185,null],[11,"eq","","",185,null],[11,"ne","","",185,null],[11,"clone","","",185,null],[11,"new","","Creates a new `Duration` from the specified number of seconds and\nadditional nanosecond precision.",185,{"inputs":[{"name":"u64"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"from_secs","","Creates a new `Duration` from the specified number of seconds.",185,{"inputs":[{"name":"u64"}],"output":{"name":"duration"}}],[11,"from_millis","","Creates a new `Duration` from the specified number of milliseconds.",185,{"inputs":[{"name":"u64"}],"output":{"name":"duration"}}],[11,"as_secs","","Returns the number of whole seconds represented by this duration.",185,null],[11,"subsec_nanos","","Returns the nanosecond precision represented by this duration.",185,null],[11,"add","","",185,null],[11,"add_assign","","",185,null],[11,"sub","","",185,null],[11,"sub_assign","","",185,null],[11,"mul","","",185,null],[11,"mul_assign","","",185,null],[11,"div","","",185,null],[11,"div_assign","","",185,null],[11,"cmp","std::time","",186,null],[11,"partial_cmp","","",186,null],[11,"lt","","",186,null],[11,"le","","",186,null],[11,"gt","","",186,null],[11,"ge","","",186,null],[11,"eq","","",186,null],[11,"ne","","",186,null],[11,"clone","","",186,null],[11,"cmp","","",187,null],[11,"partial_cmp","","",187,null],[11,"lt","","",187,null],[11,"le","","",187,null],[11,"gt","","",187,null],[11,"ge","","",187,null],[11,"eq","","",187,null],[11,"ne","","",187,null],[11,"clone","","",187,null],[11,"fmt","","",188,null],[11,"clone","","",188,null],[11,"now","","Returns an instant corresponding to &quot;now&quot;.",186,{"inputs":[],"output":{"name":"instant"}}],[11,"duration_since","","Returns the amount of time elapsed from another instant to this one.",186,null],[11,"elapsed","","Returns the amount of time elapsed since this instant was created.",186,null],[11,"add","","",186,null],[11,"add_assign","","",186,null],[11,"sub","","",186,null],[11,"sub_assign","","",186,null],[11,"sub","","",186,null],[11,"fmt","","",186,null],[11,"now","","Returns the system time corresponding to &quot;now&quot;.",187,{"inputs":[],"output":{"name":"systemtime"}}],[11,"duration_since","","Returns the amount of time elapsed from an earlier point in time.",187,null],[11,"elapsed","","Returns the amount of time elapsed since this system time was created.",187,null],[11,"add","","",187,null],[11,"add_assign","","",187,null],[11,"sub","","",187,null],[11,"sub_assign","","",187,null],[11,"fmt","","",187,null],[11,"duration","","Returns the positive duration which represents how far forward the\nsecond system time was from the first.",188,null],[11,"description","","",188,null],[11,"fmt","","",188,null],[11,"fmt","std::sys_common::poison","",189,null],[11,"fmt","","",189,null],[11,"description","","",189,null],[11,"new","","Creates a `PoisonError`.",189,{"inputs":[{"name":"t"}],"output":{"name":"poisonerror"}}],[11,"into_inner","","Consumes this error indicating that a lock is poisoned, returning the\nunderlying guard to allow access regardless.",189,null],[11,"get_ref","","Reaches into this error indicating that a lock is poisoned, returning a\nreference to the underlying guard to allow access regardless.",189,null],[11,"get_mut","","Reaches into this error indicating that a lock is poisoned, returning a\nmutable reference to the underlying guard to allow access regardless.",189,null],[11,"from","","",190,{"inputs":[{"name":"poisonerror"}],"output":{"name":"trylockerror"}}],[11,"fmt","","",190,null],[11,"fmt","","",190,null],[11,"description","","",190,null],[11,"cause","","",190,null],[11,"clone","libc::unix","",191,null],[11,"clone","","",192,null],[11,"clone","","",193,null],[11,"clone","","",194,null],[11,"clone","","",195,null],[11,"clone","","",196,null],[11,"clone","","",197,null],[11,"clone","","",198,null],[11,"clone","","",199,null],[11,"clone","","",200,null],[11,"clone","","",201,null],[11,"clone","","",202,null],[11,"clone","","",203,null],[11,"clone","libc::unix::notbsd","",204,null],[11,"clone","","",205,null],[11,"clone","","",206,null],[11,"clone","","",207,null],[11,"clone","","",208,null],[11,"clone","","",209,null],[11,"clone","","",210,null],[11,"clone","","",211,null],[11,"clone","","",212,null],[11,"clone","","",213,null],[11,"clone","","",214,null],[11,"clone","","",215,null],[11,"clone","","",216,null],[11,"clone","","",217,null],[11,"clone","","",218,null],[11,"clone","libc::unix::notbsd::linux","",219,null],[11,"clone","","",220,null],[11,"clone","","",221,null],[11,"clone","","",222,null],[11,"clone","","",223,null],[11,"clone","","",224,null],[11,"clone","","",225,null],[11,"clone","","",226,null],[11,"clone","","",227,null],[11,"clone","","",228,null],[11,"clone","","",229,null],[11,"clone","","",230,null],[11,"clone","","",231,null],[11,"clone","","",232,null],[11,"clone","","",233,null],[11,"clone","","",234,null],[11,"clone","libc::unix::notbsd::linux::other","",235,null],[11,"clone","","",236,null],[11,"clone","","",237,null],[11,"clone","","",238,null],[11,"clone","","",239,null],[11,"clone","","",240,null],[11,"clone","","",241,null],[11,"clone","","",242,null],[11,"clone","","",243,null],[11,"clone","","",244,null],[11,"clone","","",245,null],[11,"clone","libc::unix::notbsd::linux::other::b64","",246,null],[11,"clone","","",247,null],[11,"clone","libc::unix::notbsd::linux::other::b64::x86_64","",248,null],[11,"clone","","",249,null],[11,"clone","","",250,null],[11,"clone","","",251,null],[11,"clone","","",252,null],[11,"clone","","",253,null],[11,"clone","","",254,null],[11,"clone","","",255,null],[11,"payload","std::panicking","Returns the payload associated with the panic.",256,null],[11,"location","","Returns information about the location from which the panic originated,\nif available.",256,null],[11,"file","","Returns the name of the source file from which the panic originated.",257,null],[11,"line","","Returns the line number from which the panic originated.",257,null],[11,"next","rustc_unicode::char","",258,null],[11,"next","","",259,null],[11,"clone","","",260,null],[11,"eq","","",12,null],[11,"ne","","",12,null],[11,"clone","","",12,null],[11,"fmt","","",12,null],[11,"next","","",260,null],[11,"size_hint","","",260,null],[11,"unpaired_surrogate","","Returns the unpaired surrogate which caused this error.",12,null],[11,"fmt","","",12,null],[11,"new","core::ptr","Creates a new `Unique`.",261,null],[11,"get","","Dereferences the content.",261,null],[11,"get_mut","","Mutably dereferences the content.",261,null],[11,"deref","","",261,null],[11,"fmt","","",261,null],[11,"new","","Creates a new `Shared`.",262,null],[11,"clone","","",262,null],[11,"deref","","",262,null],[11,"fmt","","",262,null],[11,"borrow","collections::borrow","",76,null],[11,"clone","","",76,null],[11,"to_mut","","Acquires a mutable reference to the owned form of the data.",76,null],[11,"into_owned","","Extracts the owned data.",76,null],[11,"deref","","",76,null],[11,"cmp","","",76,null],[11,"eq","","",76,null],[11,"partial_cmp","","",76,null],[11,"fmt","","",76,null],[11,"fmt","","",76,null],[11,"default","","",76,{"inputs":[],"output":{"name":"cow"}}],[11,"hash","","",76,null],[11,"as_ref","","",76,null],[11,"hash","core::option","",263,null],[11,"fmt","","",263,null],[11,"cmp","","",263,null],[11,"partial_cmp","","",263,null],[11,"lt","","",263,null],[11,"le","","",263,null],[11,"gt","","",263,null],[11,"ge","","",263,null],[11,"eq","","",263,null],[11,"ne","","",263,null],[11,"clone","","",263,null],[11,"is_some","","Returns `true` if the option is a `Some` value",263,null],[11,"is_none","","Returns `true` if the option is a `None` value",263,null],[11,"as_ref","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`",263,null],[11,"as_mut","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;mut T&gt;`",263,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",263,null],[11,"unwrap","","Moves the value `v` out of the `Option&lt;T&gt;` if it is `Some(v)`.",263,null],[11,"unwrap_or","","Returns the contained value or a default.",263,null],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",263,null],[11,"map","","Maps an `Option&lt;T&gt;` to `Option&lt;U&gt;` by applying a function to a contained value",263,null],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",263,null],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",263,null],[11,"ok_or","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",263,null],[11,"ok_or_else","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",263,null],[11,"iter","","Returns an iterator over the possibly contained value.",263,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",263,null],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",263,null],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",263,null],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",263,null],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",263,null],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",263,null],[11,"cloned","","Maps an `Option&lt;&amp;T&gt;` to an `Option&lt;T&gt;` by cloning the contents of the\noption.",263,null],[11,"unwrap_or_default","","Returns the contained value or a default",263,null],[11,"default","","",263,{"inputs":[],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",263,null],[11,"fmt","","",264,null],[11,"next","","",264,null],[11,"size_hint","","",264,null],[11,"next_back","","",264,null],[11,"clone","","",264,null],[11,"fmt","","",265,null],[11,"next","","",265,null],[11,"size_hint","","",265,null],[11,"next_back","","",265,null],[11,"fmt","","",266,null],[11,"clone","","",266,null],[11,"next","","",266,null],[11,"size_hint","","",266,null],[11,"next_back","","",266,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",263,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[11,"new","alloc::rc","Constructs a new `Rc&lt;T&gt;`.",267,{"inputs":[{"name":"t"}],"output":{"name":"rc"}}],[11,"try_unwrap","","Unwraps the contained value if the `Rc&lt;T&gt;` has exactly one strong reference.",267,{"inputs":[{"name":"rc"}],"output":{"name":"result"}}],[11,"would_unwrap","","Checks if `Rc::try_unwrap` would return `Ok`.",267,{"inputs":[{"name":"rc"}],"output":{"name":"bool"}}],[11,"downgrade","","Creates a new `Weak&lt;T&gt;` reference from this value.",267,{"inputs":[{"name":"rc"}],"output":{"name":"weak"}}],[11,"weak_count","","Get the number of weak references to this value.",267,{"inputs":[{"name":"rc"}],"output":{"name":"usize"}}],[11,"strong_count","","Get the number of strong references to this value.",267,{"inputs":[{"name":"rc"}],"output":{"name":"usize"}}],[11,"is_unique","","Returns true if there are no other `Rc` or `Weak&lt;T&gt;` values that share\nthe same inner value.",267,{"inputs":[{"name":"rc"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the contained value if the `Rc&lt;T&gt;` has\none strong reference and no weak references.",267,{"inputs":[{"name":"rc"}],"output":{"name":"option"}}],[11,"make_mut","","Make a mutable reference into the given `Rc&lt;T&gt;` by cloning the inner\ndata if the `Rc&lt;T&gt;` doesn&#39;t have one strong reference and no weak\nreferences.",267,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"deref","","",267,null],[11,"drop","","Drops the `Rc&lt;T&gt;`.",267,null],[11,"clone","","Makes a clone of the `Rc&lt;T&gt;`.",267,null],[11,"default","","Creates a new `Rc&lt;T&gt;`, with the `Default` value for `T`.",267,{"inputs":[],"output":{"name":"rc"}}],[11,"eq","","Equality for two `Rc&lt;T&gt;`s.",267,null],[11,"ne","","Inequality for two `Rc&lt;T&gt;`s.",267,null],[11,"partial_cmp","","Partial comparison for two `Rc&lt;T&gt;`s.",267,null],[11,"lt","","Less-than comparison for two `Rc&lt;T&gt;`s.",267,null],[11,"le","","&#39;Less-than or equal to&#39; comparison for two `Rc&lt;T&gt;`s.",267,null],[11,"gt","","Greater-than comparison for two `Rc&lt;T&gt;`s.",267,null],[11,"ge","","&#39;Greater-than or equal to&#39; comparison for two `Rc&lt;T&gt;`s.",267,null],[11,"cmp","","Comparison for two `Rc&lt;T&gt;`s.",267,null],[11,"hash","","",267,null],[11,"fmt","","",267,null],[11,"fmt","","",267,null],[11,"fmt","","",267,null],[11,"from","","",267,{"inputs":[{"name":"t"}],"output":{"name":"rc"}}],[11,"new","","Constructs a new `Weak&lt;T&gt;` without an accompanying instance of T.",268,{"inputs":[],"output":{"name":"weak"}}],[11,"upgrade","","Upgrades a weak reference to a strong reference.",268,null],[11,"drop","","Drops the `Weak&lt;T&gt;`.",268,null],[11,"clone","","Makes a clone of the `Weak&lt;T&gt;`.",268,null],[11,"fmt","","",268,null],[11,"default","","",268,{"inputs":[],"output":{"name":"weak"}}],[11,"borrow","","",267,null],[11,"as_ref","","",267,null],[11,"new","core::cell","Creates a new `Cell` containing the given value.",269,{"inputs":[{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",269,null],[11,"set","","Sets the contained value.",269,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",269,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",269,null],[11,"clone","","",269,null],[11,"default","","",269,{"inputs":[],"output":{"name":"cell"}}],[11,"eq","","",269,null],[11,"partial_cmp","","",269,null],[11,"lt","","",269,null],[11,"le","","",269,null],[11,"gt","","",269,null],[11,"ge","","",269,null],[11,"cmp","","",269,null],[11,"fmt","","",270,null],[11,"eq","","",270,null],[11,"clone","","",270,null],[11,"new","","Creates a new `RefCell` containing `value`.",271,{"inputs":[{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",271,null],[11,"borrow_state","","Query the current state of this `RefCell`",271,null],[11,"borrow","","Immutably borrows the wrapped value.",271,null],[11,"borrow_mut","","Mutably borrows the wrapped value.",271,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",271,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",271,null],[11,"clone","","",271,null],[11,"default","","",271,{"inputs":[],"output":{"name":"refcell"}}],[11,"eq","","",271,null],[11,"partial_cmp","","",271,null],[11,"lt","","",271,null],[11,"le","","",271,null],[11,"gt","","",271,null],[11,"ge","","",271,null],[11,"cmp","","",271,null],[11,"deref","","",272,null],[11,"clone","","Copies a `Ref`.",272,{"inputs":[{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",272,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",273,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"deref","","",273,null],[11,"deref_mut","","",273,null],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",274,{"inputs":[{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",274,null],[11,"get","","Gets a mutable pointer to the wrapped value.",274,null],[11,"default","","",274,{"inputs":[],"output":{"name":"unsafecell"}}],[11,"hash","core::cmp","",275,null],[11,"fmt","","",275,null],[11,"eq","","",275,null],[11,"clone","","",275,null],[11,"reverse","","Reverse the `Ordering`.",275,null],[11,"cmp","","",275,null],[11,"partial_cmp","","",275,null],[11,"clone","alloc::boxed","",276,null],[11,"pointer","","",277,null],[11,"make_place","","",277,{"inputs":[],"output":{"name":"intermediatebox"}}],[11,"finalize","","",277,null],[11,"finalize","","",3,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"make_place","","",276,null],[11,"drop","","",277,null],[11,"new","","Allocates memory on the heap and then places `x` into it.",3,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"from_raw","","Constructs a box from a raw pointer.",3,null],[11,"into_raw","","Consumes the `Box`, returning the wrapped raw pointer.",3,null],[11,"default","","",3,{"inputs":[],"output":{"name":"box"}}],[11,"default","","",3,{"inputs":[],"output":{"name":"box"}}],[11,"clone","","Returns a new box with a `clone()` of this box&#39;s contents.",3,null],[11,"clone_from","","Copies `source`&#39;s contents into `self` without creating a new allocation.",3,null],[11,"clone","","",3,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"partial_cmp","","",3,null],[11,"lt","","",3,null],[11,"le","","",3,null],[11,"ge","","",3,null],[11,"gt","","",3,null],[11,"cmp","","",3,null],[11,"hash","","",3,null],[11,"from","","",3,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",3,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",3,null],[11,"fmt","","",3,null],[11,"fmt","","",3,null],[11,"fmt","","",3,null],[11,"deref","","",3,null],[11,"deref_mut","","",3,null],[11,"next","","",3,null],[11,"size_hint","","",3,null],[11,"next_back","","",3,null],[11,"call_once","","",3,null],[11,"call_once","","",3,null],[11,"clone","","",3,null],[11,"borrow","","",3,null],[11,"borrow_mut","","",3,null],[11,"as_ref","","",3,null],[11,"as_mut","","",3,null],[11,"clone","collections::str","",278,null],[11,"next","","",278,null],[11,"size_hint","","",278,null],[11,"borrow","collections::string","",77,null],[11,"fmt","core::str::pattern","",279,null],[11,"eq","","",279,null],[11,"ne","","",279,null],[11,"clone","","",279,null],[11,"fmt","","",280,null],[11,"clone","","",280,null],[11,"haystack","","",280,null],[11,"next","","",280,null],[11,"next_match","","",280,null],[11,"next_reject","","",280,null],[11,"next_back","","",280,null],[11,"next_match_back","","",280,null],[11,"next_reject_back","","",280,null],[11,"fmt","","",281,null],[11,"clone","","",281,null],[11,"haystack","","",281,null],[11,"next","","",281,null],[11,"next_match","","",281,null],[11,"next_reject","","",281,null],[11,"next_back","","",281,null],[11,"next_match_back","","",281,null],[11,"next_reject_back","","",281,null],[11,"clone","","",282,null],[11,"fmt","","",282,null],[11,"haystack","","",282,null],[11,"next","","",282,null],[11,"next_match","","",282,null],[11,"next_reject","","",282,null],[11,"next_back","","",282,null],[11,"next_match_back","","",282,null],[11,"next_reject_back","","",282,null],[11,"fmt","","",283,null],[11,"clone","","",283,null],[11,"haystack","","",283,null],[11,"next","","",283,null],[11,"next_match","","",283,null],[11,"next_back","","",283,null],[11,"next_match_back","","",283,null],[11,"hash","core::ops","",284,null],[11,"eq","","",284,null],[11,"clone","","",284,null],[11,"fmt","","",284,null],[11,"hash","","",285,null],[11,"eq","","",285,null],[11,"ne","","",285,null],[11,"clone","","",285,null],[11,"fmt","","",285,null],[11,"contains","","# Examples",285,null],[11,"hash","","",286,null],[11,"eq","","",286,null],[11,"ne","","",286,null],[11,"clone","","",286,null],[11,"fmt","","",286,null],[11,"contains","","# Examples",286,null],[11,"hash","","",287,null],[11,"eq","","",287,null],[11,"ne","","",287,null],[11,"clone","","",287,null],[11,"fmt","","",287,null],[11,"contains","","# Examples",287,null],[11,"hash","","",288,null],[11,"eq","","",288,null],[11,"ne","","",288,null],[11,"clone","","",288,null],[11,"fmt","","",288,null],[11,"contains","","# Examples",288,null],[11,"hash","","",289,null],[11,"eq","","",289,null],[11,"ne","","",289,null],[11,"clone","","",289,null],[11,"fmt","","",289,null],[11,"contains","","# Examples",289,null],[11,"fmt","core::iter::range","",290,null],[11,"clone","","",290,null],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",286,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",285,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",288,null],[11,"next","core::iter::range","",290,null],[11,"size_hint","","",290,null],[11,"next","","",290,null],[11,"size_hint","","",290,null],[11,"next","","",290,null],[11,"size_hint","","",290,null],[11,"next","core::ops","",285,null],[11,"size_hint","","",285,null],[11,"next_back","","",285,null],[11,"next","","",286,null],[11,"next","","",288,null],[11,"size_hint","","",288,null],[11,"next_back","","",288,null],[11,"fmt","core::iter::sources","",291,null],[11,"clone","","",291,null],[11,"next","","",291,null],[11,"size_hint","","",291,null],[11,"next_back","","",291,null],[11,"fmt","","",292,null],[11,"next","","",292,null],[11,"size_hint","","",292,null],[11,"next_back","","",292,null],[11,"len","","",292,null],[11,"clone","","",292,null],[11,"default","","",292,{"inputs":[],"output":{"name":"empty"}}],[11,"fmt","","",293,null],[11,"clone","","",293,null],[11,"next","","",293,null],[11,"size_hint","","",293,null],[11,"next_back","","",293,null],[11,"len","","",293,null],[11,"fmt","core::iter","",294,null],[11,"clone","","",294,null],[11,"next","","",294,null],[11,"size_hint","","",294,null],[11,"next_back","","",294,null],[11,"fmt","","",295,null],[11,"clone","","",295,null],[11,"next","","",295,null],[11,"size_hint","","",295,null],[11,"next_back","","",295,null],[11,"fmt","","",296,null],[11,"clone","","",296,null],[11,"next","","",296,null],[11,"size_hint","","",296,null],[11,"fmt","","",297,null],[11,"clone","","",297,null],[11,"next","","",297,null],[11,"count","","",297,null],[11,"nth","","",297,null],[11,"find","","",297,null],[11,"last","","",297,null],[11,"size_hint","","",297,null],[11,"next_back","","",297,null],[11,"fmt","","",298,null],[11,"clone","","",298,null],[11,"next","","",298,null],[11,"size_hint","","",298,null],[11,"next_back","","",298,null],[11,"clone","","",299,null],[11,"fmt","","",299,null],[11,"next","","",299,null],[11,"size_hint","","",299,null],[11,"next_back","","",299,null],[11,"clone","","",300,null],[11,"fmt","","",300,null],[11,"next","","",300,null],[11,"size_hint","","",300,null],[11,"next_back","","",300,null],[11,"clone","","",301,null],[11,"fmt","","",301,null],[11,"next","","",301,null],[11,"size_hint","","",301,null],[11,"next_back","","",301,null],[11,"fmt","","",302,null],[11,"clone","","",302,null],[11,"next","","# Overflow Behavior",302,null],[11,"size_hint","","",302,null],[11,"nth","","",302,null],[11,"count","","",302,null],[11,"next_back","","",302,null],[11,"fmt","","",303,null],[11,"clone","","",303,null],[11,"next","","",303,null],[11,"count","","",303,null],[11,"nth","","",303,null],[11,"last","","",303,null],[11,"size_hint","","",303,null],[11,"peek","","Returns a reference to the next() value without advancing the iterator.",303,null],[11,"is_empty","","Checks if the iterator has finished iterating.",303,null],[11,"clone","","",304,null],[11,"fmt","","",304,null],[11,"next","","",304,null],[11,"size_hint","","",304,null],[11,"clone","","",305,null],[11,"fmt","","",305,null],[11,"next","","",305,null],[11,"size_hint","","",305,null],[11,"fmt","","",306,null],[11,"clone","","",306,null],[11,"next","","",306,null],[11,"nth","","",306,null],[11,"count","","",306,null],[11,"last","","",306,null],[11,"size_hint","","",306,null],[11,"next_back","","",306,null],[11,"fmt","","",307,null],[11,"clone","","",307,null],[11,"next","","",307,null],[11,"nth","","",307,null],[11,"size_hint","","",307,null],[11,"clone","","",308,null],[11,"fmt","","",308,null],[11,"next","","",308,null],[11,"size_hint","","",308,null],[11,"clone","","",309,null],[11,"fmt","","",309,null],[11,"next","","",309,null],[11,"size_hint","","",309,null],[11,"next_back","","",309,null],[11,"fmt","","",310,null],[11,"clone","","",310,null],[11,"next","","",310,null],[11,"nth","","",310,null],[11,"last","","",310,null],[11,"count","","",310,null],[11,"size_hint","","",310,null],[11,"next_back","","",310,null],[11,"clone","","",311,null],[11,"fmt","","",311,null],[11,"next","","",311,null],[11,"size_hint","","",311,null],[11,"next_back","","",311,null],[11,"borrow","collections::vec","",49,null],[11,"borrow_mut","","",49,null],[11,"hash","core::result","",312,null],[11,"fmt","","",312,null],[11,"cmp","","",312,null],[11,"partial_cmp","","",312,null],[11,"lt","","",312,null],[11,"le","","",312,null],[11,"gt","","",312,null],[11,"ge","","",312,null],[11,"eq","","",312,null],[11,"ne","","",312,null],[11,"clone","","",312,null],[11,"is_ok","","Returns true if the result is `Ok`",312,null],[11,"is_err","","Returns true if the result is `Err`",312,null],[11,"ok","","Converts from `Result&lt;T, E&gt;` to `Option&lt;T&gt;`",312,null],[11,"err","","Converts from `Result&lt;T, E&gt;` to `Option&lt;E&gt;`",312,null],[11,"as_ref","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;T, &amp;E&gt;`",312,null],[11,"as_mut","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;mut T, &amp;mut E&gt;`",312,null],[11,"map","","Maps a `Result&lt;T, E&gt;` to `Result&lt;U, E&gt;` by applying a function to a\ncontained `Ok` value, leaving an `Err` value untouched.",312,null],[11,"map_err","","Maps a `Result&lt;T, E&gt;` to `Result&lt;T, F&gt;` by applying a function to a\ncontained `Err` value, leaving an `Ok` value untouched.",312,null],[11,"iter","","Returns an iterator over the possibly contained value.",312,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",312,null],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",312,null],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",312,null],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",312,null],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",312,null],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",312,null],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",312,null],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",312,null],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",312,null],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",312,null],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",312,null],[11,"fmt","","",313,null],[11,"next","","",313,null],[11,"size_hint","","",313,null],[11,"next_back","","",313,null],[11,"clone","","",313,null],[11,"fmt","","",314,null],[11,"next","","",314,null],[11,"size_hint","","",314,null],[11,"next_back","","",314,null],[11,"fmt","","",315,null],[11,"next","","",315,null],[11,"size_hint","","",315,null],[11,"next_back","","",315,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",312,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","tempfile","",316,null],[11,"fmt","","",316,null],[11,"is","","Returns true if the boxed type is the same as `T`",316,null],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",316,null],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",316,null],[11,"is","","Forwards to the method defined on the type `Any`.",316,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",316,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",316,null],[11,"hash","core::any","",317,null],[11,"fmt","","",317,null],[11,"eq","","",317,null],[11,"ne","","",317,null],[11,"clone","","",317,null],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",317,{"inputs":[],"output":{"name":"typeid"}}],[11,"clone","core::raw","",318,null],[11,"cmp","collections::string","",77,null],[11,"partial_cmp","","",77,null],[11,"lt","","",77,null],[11,"le","","",77,null],[11,"gt","","",77,null],[11,"ge","","",77,null],[11,"fmt","","",9,null],[11,"fmt","","",10,null],[11,"new","","Creates a new empty `String`.",77,{"inputs":[],"output":{"name":"string"}}],[11,"with_capacity","","Creates a new empty `String` with a particular capacity.",77,{"inputs":[{"name":"usize"}],"output":{"name":"string"}}],[11,"from_utf8","","Converts a vector of bytes to a `String`.",77,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[11,"from_utf8_lossy","","Converts a slice of bytes to a string, including invalid characters.",77,null],[11,"from_utf16","","Decode a UTF-16 encoded vector `v` into a `String`, returning `Err`\nif `v` contains any invalid data.",77,null],[11,"from_utf16_lossy","","Decode a UTF-16 encoded vector `v` into a string, replacing\ninvalid data with the replacement character (U+FFFD).",77,null],[11,"from_raw_parts","","Creates a new `String` from a length, capacity, and pointer.",77,null],[11,"from_utf8_unchecked","","Converts a vector of bytes to a `String` without checking that the\nstring contains valid UTF-8.",77,{"inputs":[{"name":"vec"}],"output":{"name":"string"}}],[11,"into_bytes","","Converts a `String` into a byte vector.",77,null],[11,"as_str","","Extracts a string slice containing the entire string.",77,null],[11,"as_mut_str","","Extracts a string slice containing the entire string.",77,null],[11,"push_str","","Appends a given string slice onto the end of this `String`.",77,null],[11,"capacity","","Returns this `String`&#39;s capacity, in bytes.",77,null],[11,"reserve","","Ensures that this `String`&#39;s capacity is at least `additional` bytes\nlarger than its length.",77,null],[11,"reserve_exact","","Ensures that this `String`&#39;s capacity is `additional` bytes\nlarger than its length.",77,null],[11,"shrink_to_fit","","Shrinks the capacity of this `String` to match its length.",77,null],[11,"push","","Appends the given `char` to the end of this `String`.",77,null],[11,"as_bytes","","Returns a byte slice of this `String`&#39;s contents.",77,null],[11,"truncate","","Shortens this `String` to the specified length.",77,null],[11,"pop","","Removes the last character from the string buffer and returns it.",77,null],[11,"remove","","Removes a `char` from this `String` at a byte position and returns it.",77,null],[11,"insert","","Inserts a character into this `String` at a byte position.",77,null],[11,"as_mut_vec","","Returns a mutable reference to the contents of this `String`.",77,null],[11,"len","","Returns the length of this `String`, in bytes.",77,null],[11,"is_empty","","Returns `true` if this `String` has a length of zero.",77,null],[11,"clear","","Truncates this `String`, removing all contents.",77,null],[11,"drain","","Create a draining iterator that removes the specified range in the string\nand yields the removed chars.",77,null],[11,"into_boxed_str","","Converts this `String` into a `Box&lt;str&gt;`.",77,null],[11,"into_bytes","","Returns the bytes that were attempted to convert to a `String`.",9,null],[11,"utf8_error","","Fetch a `Utf8Error` to get more details about the conversion failure.",9,null],[11,"fmt","","",9,null],[11,"fmt","","",10,null],[11,"clone","","",77,null],[11,"clone_from","","",77,null],[11,"from_iter","","",77,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",77,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",77,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"extend","","",77,null],[11,"extend","","",77,null],[11,"extend","","",77,null],[11,"extend","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","collections::borrow","",76,null],[11,"ne","","",76,null],[11,"eq","","",76,null],[11,"ne","","",76,null],[11,"eq","","",76,null],[11,"ne","","",76,null],[11,"eq","collections::string","",77,null],[11,"ne","","",77,null],[11,"default","","",77,{"inputs":[],"output":{"name":"string"}}],[11,"fmt","","",77,null],[11,"fmt","","",77,null],[11,"hash","","",77,null],[11,"add","","",77,null],[11,"index","","",77,null],[11,"index","","",77,null],[11,"index","","",77,null],[11,"index","","",77,null],[11,"index","","",77,null],[11,"index","","",77,null],[11,"index_mut","","",77,null],[11,"index_mut","","",77,null],[11,"index_mut","","",77,null],[11,"index_mut","","",77,null],[11,"index_mut","","",77,null],[11,"index_mut","","",77,null],[11,"deref","","",77,null],[11,"deref_mut","","",77,null],[11,"from_str","","",77,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",11,null],[11,"fmt","","",11,null],[11,"fmt","","",11,null],[11,"eq","","",11,null],[11,"as_ref","","",77,null],[11,"as_ref","","",77,null],[11,"from","","",77,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[11,"from","collections::borrow","",76,{"inputs":[{"name":"str"}],"output":{"name":"cow"}}],[11,"from","","",76,{"inputs":[{"name":"string"}],"output":{"name":"cow"}}],[11,"into","collections::string","",77,null],[11,"write_str","","",77,null],[11,"write_char","","",77,null],[11,"drop","","",319,null],[11,"next","","",319,null],[11,"size_hint","","",319,null],[11,"next_back","","",319,null],[11,"new","collections::vec","Constructs a new, empty `Vec&lt;T&gt;`.",49,{"inputs":[],"output":{"name":"vec"}}],[11,"with_capacity","","Constructs a new, empty `Vec&lt;T&gt;` with the specified capacity.",49,{"inputs":[{"name":"usize"}],"output":{"name":"vec"}}],[11,"from_raw_parts","","Creates a `Vec&lt;T&gt;` directly from the raw components of another vector.",49,null],[11,"capacity","","Returns the number of elements the vector can hold without\nreallocating.",49,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the given `Vec&lt;T&gt;`. The collection may reserve more space to avoid\nfrequent reallocations.",49,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to\nbe inserted in the given `Vec&lt;T&gt;`. Does nothing if the capacity is already\nsufficient.",49,null],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",49,null],[11,"into_boxed_slice","","Converts the vector into Box&lt;[T]&gt;.",49,null],[11,"truncate","","Shorten a vector to be `len` elements long, dropping excess elements.",49,null],[11,"as_slice","","Extracts a slice containing the entire vector.",49,null],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",49,null],[11,"set_len","","Sets the length of a vector.",49,null],[11,"swap_remove","","Removes an element from anywhere in the vector and return it, replacing\nit with the last element.",49,null],[11,"insert","","Inserts an element at position `index` within the vector, shifting all\nelements after it to the right.",49,null],[11,"remove","","Removes and returns the element at position `index` within the vector,\nshifting all elements after it to the left.",49,null],[11,"retain","","Retains only the elements specified by the predicate.",49,null],[11,"push","","Appends an element to the back of a collection.",49,null],[11,"pop","","Removes the last element from a vector and returns it, or `None` if it\nis empty.",49,null],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",49,null],[11,"drain","","Create a draining iterator that removes the specified range in the vector\nand yields the removed items.",49,null],[11,"clear","","Clears the vector, removing all values.",49,null],[11,"len","","Returns the number of elements in the vector.",49,null],[11,"is_empty","","Returns `true` if the vector contains no elements.",49,null],[11,"split_off","","Splits the collection into two at the given index.",49,null],[11,"resize","","Resizes the `Vec` in-place so that `len()` is equal to `new_len`.",49,null],[11,"extend_from_slice","","Clones and appends all elements in a slice to the `Vec`.",49,null],[11,"dedup","","Removes consecutive repeated elements in the vector.",49,null],[11,"clone","","",49,null],[11,"clone_from","","",49,null],[11,"hash","","",49,null],[11,"index","","",49,null],[11,"index_mut","","",49,null],[11,"index","","",49,null],[11,"index","","",49,null],[11,"index","","",49,null],[11,"index","","",49,null],[11,"index","","",49,null],[11,"index","","",49,null],[11,"index_mut","","",49,null],[11,"index_mut","","",49,null],[11,"index_mut","","",49,null],[11,"index_mut","","",49,null],[11,"index_mut","","",49,null],[11,"index_mut","","",49,null],[11,"deref","","",49,null],[11,"deref_mut","","",49,null],[11,"from_iter","","",49,{"inputs":[{"name":"i"}],"output":{"name":"vec"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe vector (from start to end). The vector cannot be used after calling\nthis.",49,null],[11,"extend","","",49,null],[11,"extend","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","collections::borrow","",76,null],[11,"ne","","",76,null],[11,"eq","","",76,null],[11,"ne","","",76,null],[11,"eq","","",76,null],[11,"ne","","",76,null],[11,"eq","collections::vec","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"partial_cmp","","",49,null],[11,"cmp","","",49,null],[11,"drop","","",49,null],[11,"default","","",49,{"inputs":[],"output":{"name":"vec"}}],[11,"fmt","","",49,null],[11,"as_ref","","",49,null],[11,"as_mut","","",49,null],[11,"as_ref","","",49,null],[11,"as_mut","","",49,null],[11,"from","","",49,null],[11,"from","","",49,{"inputs":[{"name":"str"}],"output":{"name":"vec"}}],[11,"from","collections::borrow","",76,null],[11,"from","","",76,{"inputs":[{"name":"vec"}],"output":{"name":"cow"}}],[11,"from_iter","","",76,{"inputs":[{"name":"i"}],"output":{"name":"cow"}}],[11,"next","collections::vec","",320,null],[11,"size_hint","","",320,null],[11,"count","","",320,null],[11,"next_back","","",320,null],[11,"clone","","",320,null],[11,"drop","","",320,null],[11,"next","","",321,null],[11,"size_hint","","",321,null],[11,"next_back","","",321,null],[11,"drop","","",321,null],[11,"hash","core::marker","",322,null],[11,"eq","","",322,null],[11,"partial_cmp","","",322,null],[11,"cmp","","",322,null],[11,"clone","","",322,null],[11,"default","","",322,{"inputs":[],"output":{"name":"phantomdata"}}],[11,"default","core::hash::sip","",323,{"inputs":[],"output":{"name":"siphasher13"}}],[11,"clone","","",323,null],[11,"fmt","","",323,null],[11,"default","","",324,{"inputs":[],"output":{"name":"siphasher24"}}],[11,"clone","","",324,null],[11,"fmt","","",324,null],[11,"default","","",325,{"inputs":[],"output":{"name":"siphasher"}}],[11,"clone","","",325,null],[11,"fmt","","",325,null],[11,"new","","Creates a new `SipHasher` with the two initial keys set to 0.",325,{"inputs":[],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",325,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"new","","Creates a new `SipHasher13` with the two initial keys set to 0.",323,{"inputs":[],"output":{"name":"siphasher13"}}],[11,"new_with_keys","","Creates a `SipHasher13` that is keyed off the provided keys.",323,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher13"}}],[11,"new","","Creates a new `SipHasher24` with the two initial keys set to 0.",324,{"inputs":[],"output":{"name":"siphasher24"}}],[11,"new_with_keys","","Creates a `SipHasher24` that is keyed off the provided keys.",324,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher24"}}],[11,"write","","",325,null],[11,"finish","","",325,null],[11,"write","","",323,null],[11,"finish","","",323,null],[11,"write","","",324,null],[11,"finish","","",324,null],[11,"fmt","core::hash","",326,null],[11,"build_hasher","","",326,null],[11,"clone","","",326,null],[11,"default","","",326,{"inputs":[],"output":{"name":"buildhasherdefault"}}],[11,"deref","tempfile","",1,null],[11,"deref_mut","","",1,null],[11,"fmt","","",0,null],[11,"from","std::io::error","",73,{"inputs":[{"name":"persisterror"}],"output":{"name":"error"}}],[11,"from","tempfile","",1,{"inputs":[{"name":"persisterror"}],"output":{"name":"namedtempfile"}}],[11,"fmt","","",0,null],[11,"description","","",0,null],[11,"cause","","",0,null],[11,"new","","Create a new temporary file.",1,{"inputs":[],"output":{"name":"result"}}],[11,"new_in","","Create a new temporary file in the specified directory.",1,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"path","","Get the temporary file&#39;s path.",1,null],[11,"close","","Close and remove the temporary file.",1,null],[11,"persist","","Persist the temporary file at the target path.",1,null],[11,"persist_noclobber","","Persist the temporary file at the target path iff no file exists there.",1,null],[11,"reopen","","Reopen the temporary file.",1,null],[11,"from","std::fs","",2,{"inputs":[{"name":"namedtempfile"}],"output":{"name":"file"}}],[11,"drop","tempfile","",1,null],[11,"read","","",1,null],[11,"write","","",1,null],[11,"flush","","",1,null],[11,"seek","","",1,null],[11,"as_raw_fd","","",1,null],[11,"eq","","",327,null],[11,"ne","","",327,null],[11,"clone","","",327,null],[11,"fmt","","",327,null],[11,"new","","Create a new NamedTempFileOptions",327,{"inputs":[],"output":{"name":"self"}}],[11,"prefix","","Set a custom filename prefix.",327,null],[11,"suffix","","Set a custom filename suffix.",327,null],[11,"rand_bytes","","Set the number of random bytes.",327,null],[11,"create","","Create the named temporary file.",327,null],[11,"create_in","","Create the named temporary file in the specified directory.",327,null]],"paths":[[3,"PersistError"],[3,"NamedTempFile"],[3,"File"],[3,"Box"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"ParseIntError"],[3,"TryFromIntError"],[3,"ParseFloatError"],[3,"FromUtf8Error"],[3,"FromUtf16Error"],[4,"ParseError"],[3,"DecodeUtf16Error"],[3,"Error"],[8,"Error"],[3,"EscapeDefault"],[4,"LocalKeyState"],[3,"LocalKey"],[3,"Key"],[3,"Key"],[3,"Builder"],[3,"Thread"],[3,"JoinHandle"],[3,"HashMap"],[3,"Iter"],[3,"Keys"],[3,"Values"],[3,"IterMut"],[3,"IntoIter"],[3,"ValuesMut"],[3,"Drain"],[4,"Entry"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"RandomState"],[3,"DefaultHasher"],[3,"HashSet"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"],[3,"PeekMut"],[3,"BinaryHeap"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Vec"],[3,"VecDeque"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"Iter"],[3,"IntoIter"],[3,"LinkedList"],[3,"IterMut"],[3,"FrontPlace"],[3,"BackPlace"],[3,"Vars"],[3,"VarsOs"],[4,"VarError"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"ArgsOs"],[3,"CString"],[3,"CStr"],[3,"NulError"],[3,"FromBytesWithNulError"],[3,"IntoStringError"],[3,"Error"],[3,"OsString"],[3,"OsStr"],[4,"Cow"],[3,"String"],[3,"Metadata"],[3,"OpenOptions"],[3,"Permissions"],[3,"FileType"],[3,"ReadDir"],[3,"DirEntry"],[3,"DirBuilder"],[3,"BufReader"],[3,"IntoInnerError"],[3,"BufWriter"],[3,"LineWriter"],[3,"Cursor"],[4,"ErrorKind"],[3,"Empty"],[3,"Repeat"],[3,"Sink"],[3,"Stdin"],[3,"StdinLock"],[3,"Stdout"],[3,"StdoutLock"],[3,"Stderr"],[3,"StderrLock"],[4,"SeekFrom"],[3,"Chain"],[3,"Take"],[3,"Bytes"],[4,"CharsError"],[3,"Chars"],[3,"Split"],[3,"Lines"],[4,"IpAddr"],[4,"Ipv6MulticastScope"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[4,"SocketAddr"],[3,"SocketAddrV4"],[3,"SocketAddrV6"],[3,"TcpStream"],[3,"TcpListener"],[3,"Incoming"],[3,"UdpSocket"],[3,"AddrParseError"],[4,"Shutdown"],[3,"LookupHost"],[3,"stat"],[3,"Command"],[3,"ExitStatus"],[3,"Stdio"],[3,"ChildStdin"],[3,"ChildStdout"],[3,"ChildStderr"],[3,"SocketAddr"],[3,"UnixStream"],[3,"UnixListener"],[3,"Incoming"],[3,"UnixDatagram"],[3,"AssertUnwindSafe"],[4,"Prefix"],[3,"PrefixComponent"],[4,"Component"],[3,"Components"],[3,"Iter"],[3,"PathBuf"],[3,"Path"],[3,"StripPrefixError"],[3,"Display"],[3,"Output"],[3,"Child"],[3,"Select"],[3,"Handle"],[3,"SendError"],[3,"RecvError"],[4,"TryRecvError"],[4,"RecvTimeoutError"],[4,"TrySendError"],[3,"Sender"],[3,"SyncSender"],[3,"Receiver"],[3,"Iter"],[3,"IntoIter"],[3,"Barrier"],[3,"BarrierWaitResult"],[3,"WaitTimeoutResult"],[3,"Condvar"],[3,"StaticCondvar"],[3,"Mutex"],[3,"StaticMutex"],[3,"MutexGuard"],[3,"Once"],[3,"OnceState"],[3,"RwLock"],[3,"StaticRwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"AtomicBool"],[3,"AtomicPtr"],[4,"Ordering"],[3,"AtomicI8"],[3,"AtomicU8"],[3,"AtomicI16"],[3,"AtomicU16"],[3,"AtomicI32"],[3,"AtomicU32"],[3,"AtomicI64"],[3,"AtomicU64"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"Duration"],[3,"Instant"],[3,"SystemTime"],[3,"SystemTimeError"],[3,"PoisonError"],[4,"TryLockError"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"fd_set"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"passwd"],[3,"statvfs"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"fsid_t"],[3,"mq_attr"],[3,"cpu_set_t"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"termios"],[3,"flock"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"sigset_t"],[3,"sysinfo"],[3,"stat"],[3,"stat64"],[3,"pthread_attr_t"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"PanicInfo"],[3,"Location"],[3,"ToLowercase"],[3,"ToUppercase"],[3,"DecodeUtf16"],[3,"Unique"],[3,"Shared"],[4,"Option"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Rc"],[3,"Weak"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"Ref"],[3,"RefMut"],[3,"UnsafeCell"],[4,"Ordering"],[3,"ExchangeHeapSingleton"],[3,"IntermediateBox"],[3,"EncodeUtf16"],[4,"SearchStep"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"RangeInclusive"],[3,"RangeToInclusive"],[3,"StepBy"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[8,"Any"],[3,"TypeId"],[3,"TraitObject"],[3,"Drain"],[3,"IntoIter"],[3,"Drain"],[3,"PhantomData"],[3,"SipHasher13"],[3,"SipHasher24"],[3,"SipHasher"],[3,"BuildHasherDefault"],[3,"NamedTempFileOptions"]]};
searchIndex["wayland_client"] = {"doc":"","items":[[3,"EventIterator","wayland_client","",null,null],[3,"ProxyId","","",null,null],[4,"Event","","",null,null],[13,"Wayland","","",0,null],[5,"is_available","","Checks if the wayland lib is available",null,{"inputs":[],"output":{"name":"bool"}}],[11,"fmt","","",0,null],[11,"new","","",1,{"inputs":[],"output":{"name":"eventiterator"}}],[11,"drop","","",1,null],[11,"next","","",1,null],[0,"egl","","",null,null],[3,"WlEglSurface","wayland_client::egl","",null,null],[5,"is_available","","Checks if the wayland-egl lib is available and can be used",null,{"inputs":[],"output":{"name":"bool"}}],[11,"new","","",2,{"inputs":[{"name":"wlsurface"},{"name":"i32"},{"name":"i32"}],"output":{"name":"wleglsurface"}}],[11,"destroy","","",2,null],[11,"get_size","","",2,null],[11,"resize","","",2,null],[11,"egl_surface_ptr","","",2,null],[11,"egl_surfaceptr","","DEPRECATED",2,null],[11,"drop","","",2,null],[11,"deref","","",2,null],[0,"cursor","wayland_client","",null,null],[3,"CursorTheme","wayland_client::cursor","Represents a cursor theme loaded from the system.",null,null],[3,"Cursor","","A cursor from a theme. Can contain several images if animated.",null,null],[3,"CursorImageBuffer","","A buffer containing a cursor image.",null,null],[5,"is_available","","Checks if the wayland-cursor lib is available and can be used",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_theme","","Attempts to load a cursor theme from given name.",null,{"inputs":[{"name":"option"},{"name":"u32"},{"name":"wlshm"}],"output":{"name":"cursortheme"}}],[11,"get_cursor","","Retrieve a cursor from the theme.",3,null],[11,"drop","","",3,null],[11,"name","","Retrieve the name of this cursor.",4,null],[11,"image_count","","Retrieve the number of images contained in this\nanimated cursor",4,null],[11,"frame","","Retrieve the image number of cursor animation.",4,null],[11,"frame_and_duration","","Retrieve the image number and its duration.",4,null],[11,"frame_buffer","","Retrieve a `CursorImageBuffer` containing the given image of an animation.",4,null],[11,"frame_info","","Retrive the metadate associated with given frame of the animation.",4,null],[11,"deref","","",5,null],[11,"drop","","",5,null],[0,"wayland","wayland_client","",null,null],[3,"WlCallback","wayland_client::wayland","callback object",null,null],[3,"WlDisplay","","core global object",null,null],[3,"WlRegistry","","global registry object",null,null],[3,"ReadEventsGuard","","A guard over a read intention.",null,null],[4,"WlCallbackEvent","","",null,null],[13,"Done","","done event",6,null],[4,"WlDisplayEvent","","",null,null],[13,"Error","","fatal error event",7,null],[13,"DeleteId","","acknowledge object ID deletion",7,null],[4,"WlRegistryEvent","","",null,null],[13,"Global","","announce global object",8,null],[13,"GlobalRemove","","announce removal of global object",8,null],[4,"WaylandProtocolEvent","","An event generated by the protocol wayland.",null,null],[13,"WlDisplay","","",9,null],[13,"WlRegistry","","",9,null],[13,"WlCallback","","",9,null],[13,"WlShm","","",9,null],[13,"WlBuffer","","",9,null],[13,"WlDataOffer","","",9,null],[13,"WlDataSource","","",9,null],[13,"WlDataDevice","","",9,null],[13,"WlShellSurface","","",9,null],[13,"WlSurface","","",9,null],[13,"WlSeat","","",9,null],[13,"WlPointer","","",9,null],[13,"WlKeyboard","","",9,null],[13,"WlTouch","","",9,null],[13,"WlOutput","","",9,null],[5,"get_display","","",null,{"inputs":[],"output":{"name":"option"}}],[0,"compositor","","",null,null],[3,"WlCompositor","wayland_client::wayland::compositor","the compositor singleton",null,null],[3,"WlRegion","","region interface",null,null],[3,"WlSurface","","an onscreen surface",null,null],[4,"WlSurfaceEvent","","",null,null],[13,"Enter","","surface enters an output",10,null],[13,"Leave","","surface leaves an output",10,null],[0,"data_device","wayland_client::wayland","",null,null],[3,"WlDataDevice","wayland_client::wayland::data_device","data transfer device",null,null],[3,"WlDataDeviceManager","","data transfer interface",null,null],[3,"WlDataOffer","","offer to transfer data",null,null],[3,"WlDataSource","","offer to transfer data",null,null],[4,"WlDataDeviceEvent","","",null,null],[13,"DataOffer","","introduce a new wl_data_offer",11,null],[13,"Enter","","initiate drag-and-drop session",11,null],[13,"Leave","","end drag-and-drop session",11,null],[13,"Motion","","drag-and-drop session motion",11,null],[13,"Drop","","end drag-and-drag session successfully",11,null],[13,"Selection","","advertise new selection",11,null],[4,"WlDataOfferEvent","","",null,null],[13,"Offer","","advertise offered mime type",12,null],[4,"WlDataSourceEvent","","",null,null],[13,"Target","","a target accepts an offered mime type",13,null],[13,"Send","","send the data",13,null],[13,"Cancelled","","selection was cancelled",13,null],[0,"output","wayland_client::wayland","",null,null],[3,"WlOutput","wayland_client::wayland::output","compositor output region",null,null],[4,"WlOutputEvent","","",null,null],[13,"Geometry","","properties of the output",14,null],[13,"Mode","","advertise available modes for the output",14,null],[13,"Done","","sent all information about output",14,null],[13,"Scale","","output scaling properties",14,null],[4,"WlOutputSubpixel","","subpixel geometry information",null,null],[13,"Unknown","","",15,null],[13,"None","","",15,null],[13,"HorizontalRgb","","",15,null],[13,"HorizontalBgr","","",15,null],[13,"VerticalRgb","","",15,null],[13,"VerticalBgr","","",15,null],[4,"WlOutputTransform","","transform from framebuffer to output",null,null],[13,"Normal","","",16,null],[13,"T90","","",16,null],[13,"T180","","",16,null],[13,"T270","","",16,null],[13,"Flipped","","",16,null],[13,"Flipped90","","",16,null],[13,"Flipped180","","",16,null],[13,"Flipped270","","",16,null],[0,"WlOutputMode","","mode information",null,null],[3,"WlOutputMode","wayland_client::wayland::output::WlOutputMode","",null,null],[17,"Current","","indicates this is the current mode",null,null],[17,"Preferred","","indicates this is the preferred mode",null,null],[11,"hash","","",17,null],[11,"cmp","","",17,null],[11,"partial_cmp","","",17,null],[11,"lt","","",17,null],[11,"le","","",17,null],[11,"gt","","",17,null],[11,"ge","","",17,null],[11,"clone","","",17,null],[11,"eq","","",17,null],[11,"ne","","",17,null],[11,"fmt","","",17,null],[11,"empty","","Returns an empty set of flags.",17,{"inputs":[],"output":{"name":"wloutputmode"}}],[11,"all","","Returns the set containing all flags.",17,{"inputs":[],"output":{"name":"wloutputmode"}}],[11,"bits","","Returns the raw value of the flags currently stored.",17,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",17,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",17,{"inputs":[{"name":"u32"}],"output":{"name":"wloutputmode"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",17,null],[11,"is_all","","Returns `true` if all flags are currently set.",17,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",17,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",17,null],[11,"insert","","Inserts the specified flags in-place.",17,null],[11,"remove","","Removes the specified flags in-place.",17,null],[11,"toggle","","Toggles the specified flags in-place.",17,null],[11,"bitor","","Returns the union of the two sets of flags.",17,null],[11,"bitor_assign","","Adds the set of flags.",17,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",17,null],[11,"bitxor_assign","","Toggles the set of flags.",17,null],[11,"bitand","","Returns the intersection between the two sets of flags.",17,null],[11,"bitand_assign","","Disables all flags disabled in the set.",17,null],[11,"sub","","Returns the set difference of the two sets of flags.",17,null],[11,"sub_assign","","Disables all flags enabled in the set.",17,null],[11,"not","","Returns the complement of this set of flags.",17,null],[11,"extend","","",17,null],[11,"from_iter","","",17,{"inputs":[{"name":"t"}],"output":{"name":"wloutputmode"}}],[0,"seat","wayland_client::wayland","",null,null],[3,"WlKeyboard","wayland_client::wayland::seat","keyboard input device",null,null],[3,"WlPointer","","pointer input device",null,null],[3,"WlSeat","","group of input devices",null,null],[3,"WlTouch","","touchscreen input device",null,null],[4,"WlKeyboardEvent","","",null,null],[13,"Keymap","","keyboard mapping",18,null],[13,"Enter","","enter event",18,null],[13,"Leave","","leave event",18,null],[13,"Key","","key event",18,null],[13,"Modifiers","","modifier and group state",18,null],[13,"RepeatInfo","","repeat rate and delay",18,null],[4,"WlPointerEvent","","",null,null],[13,"Enter","","enter event",19,null],[13,"Leave","","leave event",19,null],[13,"Motion","","pointer motion event",19,null],[13,"Button","","pointer button event",19,null],[13,"Axis","","axis event",19,null],[4,"WlSeatEvent","","",null,null],[13,"Capabilities","","seat capabilities changed",20,null],[13,"Name","","unique identifier for this seat",20,null],[4,"WlTouchEvent","","",null,null],[13,"Down","","touch down event and beginning of a touch sequence",21,null],[13,"Up","","end of a touch event sequence",21,null],[13,"Motion","","update of touch point coordinates",21,null],[13,"Frame","","end of touch frame event",21,null],[13,"Cancel","","touch session cancelled",21,null],[4,"WlKeyboardKeyState","","physical key state",null,null],[13,"Released","","key is not pressed",22,null],[13,"Pressed","","key is pressed",22,null],[4,"WlKeyboardKeymapFormat","","keyboard mapping format",null,null],[13,"NoKeymap","","no keymap; client must understand how to interpret the raw keycode",23,null],[13,"XkbV1","","libxkbcommon compatible; to determine the xkb keycode, clients must add 8 to the key event keycode",23,null],[4,"WlPointerAxis","","axis types",null,null],[13,"VerticalScroll","","",24,null],[13,"HorizontalScroll","","",24,null],[4,"WlPointerButtonState","","physical button state",null,null],[13,"Released","","The button is not pressed",25,null],[13,"Pressed","","The button is pressed",25,null],[0,"WlSeatCapability","","seat capability bitmask",null,null],[3,"WlSeatCapability","wayland_client::wayland::seat::WlSeatCapability","",null,null],[17,"Pointer","","The seat has pointer devices",null,null],[17,"Keyboard","","The seat has one or more keyboards",null,null],[17,"Touch","","The seat has touch devices",null,null],[11,"hash","","",26,null],[11,"cmp","","",26,null],[11,"partial_cmp","","",26,null],[11,"lt","","",26,null],[11,"le","","",26,null],[11,"gt","","",26,null],[11,"ge","","",26,null],[11,"clone","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"fmt","","",26,null],[11,"empty","","Returns an empty set of flags.",26,{"inputs":[],"output":{"name":"wlseatcapability"}}],[11,"all","","Returns the set containing all flags.",26,{"inputs":[],"output":{"name":"wlseatcapability"}}],[11,"bits","","Returns the raw value of the flags currently stored.",26,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",26,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",26,{"inputs":[{"name":"u32"}],"output":{"name":"wlseatcapability"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",26,null],[11,"is_all","","Returns `true` if all flags are currently set.",26,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",26,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",26,null],[11,"insert","","Inserts the specified flags in-place.",26,null],[11,"remove","","Removes the specified flags in-place.",26,null],[11,"toggle","","Toggles the specified flags in-place.",26,null],[11,"bitor","","Returns the union of the two sets of flags.",26,null],[11,"bitor_assign","","Adds the set of flags.",26,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",26,null],[11,"bitxor_assign","","Toggles the set of flags.",26,null],[11,"bitand","","Returns the intersection between the two sets of flags.",26,null],[11,"bitand_assign","","Disables all flags disabled in the set.",26,null],[11,"sub","","Returns the set difference of the two sets of flags.",26,null],[11,"sub_assign","","Disables all flags enabled in the set.",26,null],[11,"not","","Returns the complement of this set of flags.",26,null],[11,"extend","","",26,null],[11,"from_iter","","",26,{"inputs":[{"name":"t"}],"output":{"name":"wlseatcapability"}}],[0,"shell","wayland_client::wayland","",null,null],[3,"WlShell","wayland_client::wayland::shell","create desktop-style surfaces",null,null],[3,"WlShellSurface","","desktop-style metadata interface",null,null],[4,"WlShellSurfaceEvent","","",null,null],[13,"Ping","","ping client",27,null],[13,"Configure","","suggest resize",27,null],[13,"PopupDone","","popup interaction is done",27,null],[4,"WlShellSurfaceFullscreenMethod","","different method to set the surface fullscreen",null,null],[13,"Default","","no preference, apply default policy",28,null],[13,"Scale","","scale, preserve the surface&#39;s aspect ratio and center on output",28,null],[13,"Driver","","switch output mode to the smallest mode that can fit the surface, add black borders to compensate size mismatch",28,null],[13,"Fill","","no upscaling, center on output and add black borders to compensate size mismatch",28,null],[0,"WlShellSurfaceResize","","edge values for resizing",null,null],[3,"WlShellSurfaceResize","wayland_client::wayland::shell::WlShellSurfaceResize","",null,null],[17,"None","","",null,null],[17,"Top","","",null,null],[17,"Bottom","","",null,null],[17,"Left","","",null,null],[17,"TopLeft","","",null,null],[17,"BottomLeft","","",null,null],[17,"Right","","",null,null],[17,"TopRight","","",null,null],[17,"BottomRight","","",null,null],[11,"hash","","",29,null],[11,"cmp","","",29,null],[11,"partial_cmp","","",29,null],[11,"lt","","",29,null],[11,"le","","",29,null],[11,"gt","","",29,null],[11,"ge","","",29,null],[11,"clone","","",29,null],[11,"eq","","",29,null],[11,"ne","","",29,null],[11,"fmt","","",29,null],[11,"empty","","Returns an empty set of flags.",29,{"inputs":[],"output":{"name":"wlshellsurfaceresize"}}],[11,"all","","Returns the set containing all flags.",29,{"inputs":[],"output":{"name":"wlshellsurfaceresize"}}],[11,"bits","","Returns the raw value of the flags currently stored.",29,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",29,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",29,{"inputs":[{"name":"u32"}],"output":{"name":"wlshellsurfaceresize"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",29,null],[11,"is_all","","Returns `true` if all flags are currently set.",29,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",29,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",29,null],[11,"insert","","Inserts the specified flags in-place.",29,null],[11,"remove","","Removes the specified flags in-place.",29,null],[11,"toggle","","Toggles the specified flags in-place.",29,null],[11,"bitor","","Returns the union of the two sets of flags.",29,null],[11,"bitor_assign","","Adds the set of flags.",29,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",29,null],[11,"bitxor_assign","","Toggles the set of flags.",29,null],[11,"bitand","","Returns the intersection between the two sets of flags.",29,null],[11,"bitand_assign","","Disables all flags disabled in the set.",29,null],[11,"sub","","Returns the set difference of the two sets of flags.",29,null],[11,"sub_assign","","Disables all flags enabled in the set.",29,null],[11,"not","","Returns the complement of this set of flags.",29,null],[11,"extend","","",29,null],[11,"from_iter","","",29,{"inputs":[{"name":"t"}],"output":{"name":"wlshellsurfaceresize"}}],[0,"WlShellSurfaceTransient","wayland_client::wayland::shell","details of transient behaviour",null,null],[3,"WlShellSurfaceTransient","wayland_client::wayland::shell::WlShellSurfaceTransient","",null,null],[17,"Inactive","","do not set keyboard focus",null,null],[11,"hash","","",30,null],[11,"cmp","","",30,null],[11,"partial_cmp","","",30,null],[11,"lt","","",30,null],[11,"le","","",30,null],[11,"gt","","",30,null],[11,"ge","","",30,null],[11,"clone","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"fmt","","",30,null],[11,"empty","","Returns an empty set of flags.",30,{"inputs":[],"output":{"name":"wlshellsurfacetransient"}}],[11,"all","","Returns the set containing all flags.",30,{"inputs":[],"output":{"name":"wlshellsurfacetransient"}}],[11,"bits","","Returns the raw value of the flags currently stored.",30,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",30,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",30,{"inputs":[{"name":"u32"}],"output":{"name":"wlshellsurfacetransient"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",30,null],[11,"is_all","","Returns `true` if all flags are currently set.",30,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",30,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",30,null],[11,"insert","","Inserts the specified flags in-place.",30,null],[11,"remove","","Removes the specified flags in-place.",30,null],[11,"toggle","","Toggles the specified flags in-place.",30,null],[11,"bitor","","Returns the union of the two sets of flags.",30,null],[11,"bitor_assign","","Adds the set of flags.",30,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",30,null],[11,"bitxor_assign","","Toggles the set of flags.",30,null],[11,"bitand","","Returns the intersection between the two sets of flags.",30,null],[11,"bitand_assign","","Disables all flags disabled in the set.",30,null],[11,"sub","","Returns the set difference of the two sets of flags.",30,null],[11,"sub_assign","","Disables all flags enabled in the set.",30,null],[11,"not","","Returns the complement of this set of flags.",30,null],[11,"extend","","",30,null],[11,"from_iter","","",30,{"inputs":[{"name":"t"}],"output":{"name":"wlshellsurfacetransient"}}],[0,"shm","wayland_client::wayland","",null,null],[3,"WlBuffer","wayland_client::wayland::shm","content for a wl_surface",null,null],[3,"WlShm","","shared memory support",null,null],[3,"WlShmPool","","a shared memory pool",null,null],[4,"WlBufferEvent","","",null,null],[13,"Release","","compositor releases buffer",31,null],[4,"WlShmEvent","","",null,null],[13,"Format","","pixel format description",32,null],[4,"WlShmFormat","","pixel formats",null,null],[13,"Argb8888","","32-bit ARGB format",33,null],[13,"Xrgb8888","","32-bit RGB format",33,null],[13,"C8","","",33,null],[13,"Rgb332","","",33,null],[13,"Bgr233","","",33,null],[13,"Xrgb4444","","",33,null],[13,"Xbgr4444","","",33,null],[13,"Rgbx4444","","",33,null],[13,"Bgrx4444","","",33,null],[13,"Argb4444","","",33,null],[13,"Abgr4444","","",33,null],[13,"Rgba4444","","",33,null],[13,"Bgra4444","","",33,null],[13,"Xrgb1555","","",33,null],[13,"Xbgr1555","","",33,null],[13,"Rgbx5551","","",33,null],[13,"Bgrx5551","","",33,null],[13,"Argb1555","","",33,null],[13,"Abgr1555","","",33,null],[13,"Rgba5551","","",33,null],[13,"Bgra5551","","",33,null],[13,"Rgb565","","",33,null],[13,"Bgr565","","",33,null],[13,"Rgb888","","",33,null],[13,"Bgr888","","",33,null],[13,"Xbgr8888","","",33,null],[13,"Rgbx8888","","",33,null],[13,"Bgrx8888","","",33,null],[13,"Abgr8888","","",33,null],[13,"Rgba8888","","",33,null],[13,"Bgra8888","","",33,null],[13,"Xrgb2101010","","",33,null],[13,"Xbgr2101010","","",33,null],[13,"Rgbx1010102","","",33,null],[13,"Bgrx1010102","","",33,null],[13,"Argb2101010","","",33,null],[13,"Abgr2101010","","",33,null],[13,"Rgba1010102","","",33,null],[13,"Bgra1010102","","",33,null],[13,"Yuyv","","",33,null],[13,"Yvyu","","",33,null],[13,"Uyvy","","",33,null],[13,"Vyuy","","",33,null],[13,"Ayuv","","",33,null],[13,"Nv12","","",33,null],[13,"Nv21","","",33,null],[13,"Nv16","","",33,null],[13,"Nv61","","",33,null],[13,"Yuv410","","",33,null],[13,"Yvu410","","",33,null],[13,"Yuv411","","",33,null],[13,"Yvu411","","",33,null],[13,"Yuv420","","",33,null],[13,"Yvu420","","",33,null],[13,"Yuv422","","",33,null],[13,"Yvu422","","",33,null],[13,"Yuv444","","",33,null],[13,"Yvu444","","",33,null],[0,"subcompositor","wayland_client::wayland","",null,null],[3,"WlSubcompositor","wayland_client::wayland::subcompositor","sub-surface compositing",null,null],[3,"WlSubsurface","","sub-surface interface to a wl_surface",null,null],[11,"sync_roundtrip","wayland_client::wayland","Synchronous roundtrip",34,null],[11,"dispatch","","Blocking dispatch",34,null],[11,"dispatch_pending","","Non-blocking dispatch",34,null],[11,"prepare_read","","Prepare an conccurent read",34,null],[11,"flush","","Non-blocking write to the server",34,null],[11,"drop","","",34,null],[11,"read_events","","Read events",35,null],[11,"cancel","","Cancel the read",35,null],[11,"drop","","",35,null],[8,"Proxy","wayland_client","",null,null],[10,"ptr","","",36,null],[10,"interface","","",36,null],[10,"interface_name","","The internal name of this interface, as advertized by the registry if it is a global.",36,{"inputs":[],"output":{"name":"str"}}],[10,"version","","The maximum version of this interface handled by the library.",36,{"inputs":[],"output":{"name":"u32"}}],[10,"id","","Get the id of this proxy",36,null],[10,"from_ptr","","Creates a proxy from a fresh ptr",36,null],[10,"from_ptr_no_own","","Creates a proxy from a ptr that is managed elsewhere",36,null],[10,"set_evt_iterator","","Set the event iterator associated to this proxy",36,null],[11,"hash","","",37,null],[11,"fmt","","",37,null],[11,"eq","","",37,null],[11,"ne","","",37,null],[11,"clone","","",37,null],[14,"wayland_env!","","This macro allows you to create a simple wayland environment handler.",null,null],[11,"hash","wayland_client::wayland::shell::WlShellSurfaceResize","",29,null],[11,"cmp","","",29,null],[11,"partial_cmp","","",29,null],[11,"lt","","",29,null],[11,"le","","",29,null],[11,"gt","","",29,null],[11,"ge","","",29,null],[11,"clone","","",29,null],[11,"eq","","",29,null],[11,"ne","","",29,null],[11,"fmt","","",29,null],[11,"empty","","Returns an empty set of flags.",29,{"inputs":[],"output":{"name":"wlshellsurfaceresize"}}],[11,"all","","Returns the set containing all flags.",29,{"inputs":[],"output":{"name":"wlshellsurfaceresize"}}],[11,"bits","","Returns the raw value of the flags currently stored.",29,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",29,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",29,{"inputs":[{"name":"u32"}],"output":{"name":"wlshellsurfaceresize"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",29,null],[11,"is_all","","Returns `true` if all flags are currently set.",29,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",29,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",29,null],[11,"insert","","Inserts the specified flags in-place.",29,null],[11,"remove","","Removes the specified flags in-place.",29,null],[11,"toggle","","Toggles the specified flags in-place.",29,null],[11,"bitor","","Returns the union of the two sets of flags.",29,null],[11,"bitor_assign","","Adds the set of flags.",29,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",29,null],[11,"bitxor_assign","","Toggles the set of flags.",29,null],[11,"bitand","","Returns the intersection between the two sets of flags.",29,null],[11,"bitand_assign","","Disables all flags disabled in the set.",29,null],[11,"sub","","Returns the set difference of the two sets of flags.",29,null],[11,"sub_assign","","Disables all flags enabled in the set.",29,null],[11,"not","","Returns the complement of this set of flags.",29,null],[11,"extend","","",29,null],[11,"from_iter","","",29,{"inputs":[{"name":"t"}],"output":{"name":"wlshellsurfaceresize"}}],[11,"hash","wayland_client::wayland::shell::WlShellSurfaceTransient","",30,null],[11,"cmp","","",30,null],[11,"partial_cmp","","",30,null],[11,"lt","","",30,null],[11,"le","","",30,null],[11,"gt","","",30,null],[11,"ge","","",30,null],[11,"clone","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"fmt","","",30,null],[11,"empty","","Returns an empty set of flags.",30,{"inputs":[],"output":{"name":"wlshellsurfacetransient"}}],[11,"all","","Returns the set containing all flags.",30,{"inputs":[],"output":{"name":"wlshellsurfacetransient"}}],[11,"bits","","Returns the raw value of the flags currently stored.",30,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",30,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",30,{"inputs":[{"name":"u32"}],"output":{"name":"wlshellsurfacetransient"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",30,null],[11,"is_all","","Returns `true` if all flags are currently set.",30,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",30,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",30,null],[11,"insert","","Inserts the specified flags in-place.",30,null],[11,"remove","","Removes the specified flags in-place.",30,null],[11,"toggle","","Toggles the specified flags in-place.",30,null],[11,"bitor","","Returns the union of the two sets of flags.",30,null],[11,"bitor_assign","","Adds the set of flags.",30,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",30,null],[11,"bitxor_assign","","Toggles the set of flags.",30,null],[11,"bitand","","Returns the intersection between the two sets of flags.",30,null],[11,"bitand_assign","","Disables all flags disabled in the set.",30,null],[11,"sub","","Returns the set difference of the two sets of flags.",30,null],[11,"sub_assign","","Disables all flags enabled in the set.",30,null],[11,"not","","Returns the complement of this set of flags.",30,null],[11,"extend","","",30,null],[11,"from_iter","","",30,{"inputs":[{"name":"t"}],"output":{"name":"wlshellsurfacetransient"}}],[11,"hash","wayland_client::wayland::seat::WlSeatCapability","",26,null],[11,"cmp","","",26,null],[11,"partial_cmp","","",26,null],[11,"lt","","",26,null],[11,"le","","",26,null],[11,"gt","","",26,null],[11,"ge","","",26,null],[11,"clone","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"fmt","","",26,null],[11,"empty","","Returns an empty set of flags.",26,{"inputs":[],"output":{"name":"wlseatcapability"}}],[11,"all","","Returns the set containing all flags.",26,{"inputs":[],"output":{"name":"wlseatcapability"}}],[11,"bits","","Returns the raw value of the flags currently stored.",26,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",26,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",26,{"inputs":[{"name":"u32"}],"output":{"name":"wlseatcapability"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",26,null],[11,"is_all","","Returns `true` if all flags are currently set.",26,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",26,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",26,null],[11,"insert","","Inserts the specified flags in-place.",26,null],[11,"remove","","Removes the specified flags in-place.",26,null],[11,"toggle","","Toggles the specified flags in-place.",26,null],[11,"bitor","","Returns the union of the two sets of flags.",26,null],[11,"bitor_assign","","Adds the set of flags.",26,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",26,null],[11,"bitxor_assign","","Toggles the set of flags.",26,null],[11,"bitand","","Returns the intersection between the two sets of flags.",26,null],[11,"bitand_assign","","Disables all flags disabled in the set.",26,null],[11,"sub","","Returns the set difference of the two sets of flags.",26,null],[11,"sub_assign","","Disables all flags enabled in the set.",26,null],[11,"not","","Returns the complement of this set of flags.",26,null],[11,"extend","","",26,null],[11,"from_iter","","",26,{"inputs":[{"name":"t"}],"output":{"name":"wlseatcapability"}}],[11,"hash","wayland_client::wayland::output::WlOutputMode","",17,null],[11,"cmp","","",17,null],[11,"partial_cmp","","",17,null],[11,"lt","","",17,null],[11,"le","","",17,null],[11,"gt","","",17,null],[11,"ge","","",17,null],[11,"clone","","",17,null],[11,"eq","","",17,null],[11,"ne","","",17,null],[11,"fmt","","",17,null],[11,"empty","","Returns an empty set of flags.",17,{"inputs":[],"output":{"name":"wloutputmode"}}],[11,"all","","Returns the set containing all flags.",17,{"inputs":[],"output":{"name":"wloutputmode"}}],[11,"bits","","Returns the raw value of the flags currently stored.",17,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",17,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",17,{"inputs":[{"name":"u32"}],"output":{"name":"wloutputmode"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",17,null],[11,"is_all","","Returns `true` if all flags are currently set.",17,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",17,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",17,null],[11,"insert","","Inserts the specified flags in-place.",17,null],[11,"remove","","Removes the specified flags in-place.",17,null],[11,"toggle","","Toggles the specified flags in-place.",17,null],[11,"bitor","","Returns the union of the two sets of flags.",17,null],[11,"bitor_assign","","Adds the set of flags.",17,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",17,null],[11,"bitxor_assign","","Toggles the set of flags.",17,null],[11,"bitand","","Returns the intersection between the two sets of flags.",17,null],[11,"bitand_assign","","Disables all flags disabled in the set.",17,null],[11,"sub","","Returns the set difference of the two sets of flags.",17,null],[11,"sub_assign","","Disables all flags enabled in the set.",17,null],[11,"not","","Returns the complement of this set of flags.",17,null],[11,"extend","","",17,null],[11,"from_iter","","",17,{"inputs":[{"name":"t"}],"output":{"name":"wloutputmode"}}],[11,"fmt","wayland_client::wayland","",9,null],[11,"ptr","","",34,null],[11,"interface","","",34,null],[11,"interface_name","","",34,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",34,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",34,null],[11,"from_ptr","","",34,null],[11,"from_ptr_no_own","","",34,null],[11,"set_evt_iterator","","",34,null],[11,"fmt","","",34,null],[11,"fmt","","",7,null],[11,"sync","","asynchronous roundtrip",34,null],[11,"get_registry","","get global registry object",34,null],[11,"ptr","","",38,null],[11,"interface","","",38,null],[11,"interface_name","","",38,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",38,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",38,null],[11,"from_ptr","","",38,null],[11,"from_ptr_no_own","","",38,null],[11,"set_evt_iterator","","",38,null],[11,"fmt","","",38,null],[11,"fmt","","",8,null],[11,"bind","","bind an object to the display",38,null],[11,"drop","","",38,null],[11,"ptr","","",39,null],[11,"interface","","",39,null],[11,"interface_name","","",39,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",39,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",39,null],[11,"from_ptr","","",39,null],[11,"from_ptr_no_own","","",39,null],[11,"set_evt_iterator","","",39,null],[11,"fmt","","",39,null],[11,"fmt","","",6,null],[11,"drop","","",39,null],[11,"ptr","wayland_client::wayland::compositor","",40,null],[11,"interface","","",40,null],[11,"interface_name","","",40,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",40,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",40,null],[11,"from_ptr","","",40,null],[11,"from_ptr_no_own","","",40,null],[11,"set_evt_iterator","","",40,null],[11,"fmt","","",40,null],[11,"create_surface","","create new surface",40,null],[11,"create_region","","create new region",40,null],[11,"drop","","",40,null],[11,"ptr","wayland_client::wayland::shm","",41,null],[11,"interface","","",41,null],[11,"interface_name","","",41,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",41,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",41,null],[11,"from_ptr","","",41,null],[11,"from_ptr_no_own","","",41,null],[11,"set_evt_iterator","","",41,null],[11,"fmt","","",41,null],[11,"create_buffer","","create a buffer from the pool",41,null],[11,"destroy","","destroy the pool",41,null],[11,"resize","","change the size of the pool mapping",41,null],[11,"drop","","",41,null],[11,"ptr","","",42,null],[11,"interface","","",42,null],[11,"interface_name","","",42,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",42,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",42,null],[11,"from_ptr","","",42,null],[11,"from_ptr_no_own","","",42,null],[11,"set_evt_iterator","","",42,null],[11,"fmt","","",42,null],[11,"fmt","","",33,null],[11,"fmt","","",32,null],[11,"create_pool","","create a shm pool",42,null],[11,"drop","","",42,null],[11,"ptr","","",43,null],[11,"interface","","",43,null],[11,"interface_name","","",43,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",43,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",43,null],[11,"from_ptr","","",43,null],[11,"from_ptr_no_own","","",43,null],[11,"set_evt_iterator","","",43,null],[11,"fmt","","",43,null],[11,"fmt","","",31,null],[11,"destroy","","destroy a buffer",43,null],[11,"drop","","",43,null],[11,"ptr","wayland_client::wayland::data_device","",44,null],[11,"interface","","",44,null],[11,"interface_name","","",44,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",44,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",44,null],[11,"from_ptr","","",44,null],[11,"from_ptr_no_own","","",44,null],[11,"set_evt_iterator","","",44,null],[11,"fmt","","",44,null],[11,"fmt","","",12,null],[11,"accept","","accept one of the offered mime types",44,null],[11,"receive","","request that the data is transferred",44,null],[11,"destroy","","destroy data offer",44,null],[11,"drop","","",44,null],[11,"ptr","","",45,null],[11,"interface","","",45,null],[11,"interface_name","","",45,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",45,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",45,null],[11,"from_ptr","","",45,null],[11,"from_ptr_no_own","","",45,null],[11,"set_evt_iterator","","",45,null],[11,"fmt","","",45,null],[11,"fmt","","",13,null],[11,"offer","","add an offered mime type",45,null],[11,"destroy","","destroy the data source",45,null],[11,"drop","","",45,null],[11,"ptr","","",46,null],[11,"interface","","",46,null],[11,"interface_name","","",46,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",46,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",46,null],[11,"from_ptr","","",46,null],[11,"from_ptr_no_own","","",46,null],[11,"set_evt_iterator","","",46,null],[11,"fmt","","",46,null],[11,"fmt","","",11,null],[11,"start_drag","","start drag-and-drop operation",46,null],[11,"set_selection","","copy data to the selection",46,null],[11,"release","","destroy data device",46,null],[11,"drop","","",46,null],[11,"ptr","","",47,null],[11,"interface","","",47,null],[11,"interface_name","","",47,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",47,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",47,null],[11,"from_ptr","","",47,null],[11,"from_ptr_no_own","","",47,null],[11,"set_evt_iterator","","",47,null],[11,"fmt","","",47,null],[11,"create_data_source","","create a new data source",47,null],[11,"get_data_device","","create a new data device",47,null],[11,"drop","","",47,null],[11,"ptr","wayland_client::wayland::shell","",48,null],[11,"interface","","",48,null],[11,"interface_name","","",48,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",48,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",48,null],[11,"from_ptr","","",48,null],[11,"from_ptr_no_own","","",48,null],[11,"set_evt_iterator","","",48,null],[11,"fmt","","",48,null],[11,"get_shell_surface","","create a shell surface from a surface",48,null],[11,"drop","","",48,null],[11,"ptr","","",49,null],[11,"interface","","",49,null],[11,"interface_name","","",49,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",49,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",49,null],[11,"from_ptr","","",49,null],[11,"from_ptr_no_own","","",49,null],[11,"set_evt_iterator","","",49,null],[11,"fmt","","",49,null],[11,"fmt","","",28,null],[11,"fmt","","",27,null],[11,"pong","","respond to a ping event",49,null],[11,"move_","","start an interactive move",49,null],[11,"resize","","start an interactive resize",49,null],[11,"set_toplevel","","make the surface a toplevel surface",49,null],[11,"set_transient","","make the surface a transient surface",49,null],[11,"set_fullscreen","","make the surface a fullscreen surface",49,null],[11,"set_popup","","make the surface a popup surface",49,null],[11,"set_maximized","","make the surface a maximized surface",49,null],[11,"set_title","","set surface title",49,null],[11,"set_class","","set surface class",49,null],[11,"drop","","",49,null],[11,"ptr","wayland_client::wayland::compositor","",50,null],[11,"interface","","",50,null],[11,"interface_name","","",50,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",50,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",50,null],[11,"from_ptr","","",50,null],[11,"from_ptr_no_own","","",50,null],[11,"set_evt_iterator","","",50,null],[11,"fmt","","",50,null],[11,"fmt","","",10,null],[11,"destroy","","delete surface",50,null],[11,"attach","","set the surface contents",50,null],[11,"damage","","mark part of the surface damaged",50,null],[11,"frame","","request a frame throttling hint",50,null],[11,"set_opaque_region","","set opaque region",50,null],[11,"set_input_region","","set input region",50,null],[11,"commit","","commit pending surface state",50,null],[11,"set_buffer_transform","","sets the buffer transformation",50,null],[11,"set_buffer_scale","","sets the buffer scaling factor",50,null],[11,"drop","","",50,null],[11,"ptr","wayland_client::wayland::seat","",51,null],[11,"interface","","",51,null],[11,"interface_name","","",51,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",51,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",51,null],[11,"from_ptr","","",51,null],[11,"from_ptr_no_own","","",51,null],[11,"set_evt_iterator","","",51,null],[11,"fmt","","",51,null],[11,"fmt","","",20,null],[11,"get_pointer","","return pointer object",51,null],[11,"get_keyboard","","return keyboard object",51,null],[11,"get_touch","","return touch object",51,null],[11,"release","","release the seat object",51,null],[11,"drop","","",51,null],[11,"ptr","","",52,null],[11,"interface","","",52,null],[11,"interface_name","","",52,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",52,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",52,null],[11,"from_ptr","","",52,null],[11,"from_ptr_no_own","","",52,null],[11,"set_evt_iterator","","",52,null],[11,"fmt","","",52,null],[11,"fmt","","",25,null],[11,"fmt","","",24,null],[11,"fmt","","",19,null],[11,"set_cursor","","set the pointer surface",52,null],[11,"release","","release the pointer object",52,null],[11,"drop","","",52,null],[11,"ptr","","",53,null],[11,"interface","","",53,null],[11,"interface_name","","",53,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",53,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",53,null],[11,"from_ptr","","",53,null],[11,"from_ptr_no_own","","",53,null],[11,"set_evt_iterator","","",53,null],[11,"fmt","","",53,null],[11,"fmt","","",23,null],[11,"fmt","","",22,null],[11,"fmt","","",18,null],[11,"release","","release the keyboard object",53,null],[11,"drop","","",53,null],[11,"ptr","","",54,null],[11,"interface","","",54,null],[11,"interface_name","","",54,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",54,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",54,null],[11,"from_ptr","","",54,null],[11,"from_ptr_no_own","","",54,null],[11,"set_evt_iterator","","",54,null],[11,"fmt","","",54,null],[11,"fmt","","",21,null],[11,"release","","release the touch object",54,null],[11,"drop","","",54,null],[11,"ptr","wayland_client::wayland::output","",55,null],[11,"interface","","",55,null],[11,"interface_name","","",55,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",55,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",55,null],[11,"from_ptr","","",55,null],[11,"from_ptr_no_own","","",55,null],[11,"set_evt_iterator","","",55,null],[11,"fmt","","",55,null],[11,"fmt","","",15,null],[11,"fmt","","",16,null],[11,"fmt","","",14,null],[11,"drop","","",55,null],[11,"ptr","wayland_client::wayland::compositor","",56,null],[11,"interface","","",56,null],[11,"interface_name","","",56,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",56,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",56,null],[11,"from_ptr","","",56,null],[11,"from_ptr_no_own","","",56,null],[11,"set_evt_iterator","","",56,null],[11,"fmt","","",56,null],[11,"destroy","","destroy region",56,null],[11,"add","","add rectangle to region",56,null],[11,"subtract","","subtract rectangle from region",56,null],[11,"drop","","",56,null],[11,"ptr","wayland_client::wayland::subcompositor","",57,null],[11,"interface","","",57,null],[11,"interface_name","","",57,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",57,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",57,null],[11,"from_ptr","","",57,null],[11,"from_ptr_no_own","","",57,null],[11,"set_evt_iterator","","",57,null],[11,"fmt","","",57,null],[11,"destroy","","unbind from the subcompositor interface",57,null],[11,"get_subsurface","","give a surface the role sub-surface",57,null],[11,"drop","","",57,null],[11,"ptr","","",58,null],[11,"interface","","",58,null],[11,"interface_name","","",58,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",58,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",58,null],[11,"from_ptr","","",58,null],[11,"from_ptr_no_own","","",58,null],[11,"set_evt_iterator","","",58,null],[11,"fmt","","",58,null],[11,"destroy","","remove sub-surface interface",58,null],[11,"set_position","","reposition the sub-surface",58,null],[11,"place_above","","restack the sub-surface",58,null],[11,"place_below","","restack the sub-surface",58,null],[11,"set_sync","","set sub-surface to synchronized mode",58,null],[11,"set_desync","","set sub-surface to desynchronized mode",58,null],[11,"drop","","",58,null]],"paths":[[4,"Event"],[3,"EventIterator"],[3,"WlEglSurface"],[3,"CursorTheme"],[3,"Cursor"],[3,"CursorImageBuffer"],[4,"WlCallbackEvent"],[4,"WlDisplayEvent"],[4,"WlRegistryEvent"],[4,"WaylandProtocolEvent"],[4,"WlSurfaceEvent"],[4,"WlDataDeviceEvent"],[4,"WlDataOfferEvent"],[4,"WlDataSourceEvent"],[4,"WlOutputEvent"],[4,"WlOutputSubpixel"],[4,"WlOutputTransform"],[3,"WlOutputMode"],[4,"WlKeyboardEvent"],[4,"WlPointerEvent"],[4,"WlSeatEvent"],[4,"WlTouchEvent"],[4,"WlKeyboardKeyState"],[4,"WlKeyboardKeymapFormat"],[4,"WlPointerAxis"],[4,"WlPointerButtonState"],[3,"WlSeatCapability"],[4,"WlShellSurfaceEvent"],[4,"WlShellSurfaceFullscreenMethod"],[3,"WlShellSurfaceResize"],[3,"WlShellSurfaceTransient"],[4,"WlBufferEvent"],[4,"WlShmEvent"],[4,"WlShmFormat"],[3,"WlDisplay"],[3,"ReadEventsGuard"],[8,"Proxy"],[3,"ProxyId"],[3,"WlRegistry"],[3,"WlCallback"],[3,"WlCompositor"],[3,"WlShmPool"],[3,"WlShm"],[3,"WlBuffer"],[3,"WlDataOffer"],[3,"WlDataSource"],[3,"WlDataDevice"],[3,"WlDataDeviceManager"],[3,"WlShell"],[3,"WlShellSurface"],[3,"WlSurface"],[3,"WlSeat"],[3,"WlPointer"],[3,"WlKeyboard"],[3,"WlTouch"],[3,"WlOutput"],[3,"WlRegion"],[3,"WlSubcompositor"],[3,"WlSubsurface"]]};
searchIndex["rand"] = {"doc":"Utilities for random number generation","items":[[3,"Generator","rand","Iterator which will generate a stream of random items.",null,null],[3,"AsciiGenerator","","Iterator which will continuously generate random ascii characters.",null,null],[3,"XorShiftRng","","An Xorshift[1] random number\ngenerator.",null,null],[3,"Open01","","A wrapper for generating floating point numbers uniformly in the\nopen interval `(0,1)` (not including either endpoint).",null,null],[12,"0","","",0,null],[3,"Closed01","","A wrapper for generating floating point numbers uniformly in the\nclosed interval `[0,1]` (including both endpoints).",null,null],[12,"0","","",1,null],[3,"StdRng","","The standard RNG. This is designed to be efficient on the current\nplatform.",null,null],[3,"ThreadRng","","The thread-local RNG.",null,null],[5,"weak_rng","","Create a weak random number generator with a default algorithm and seed.",null,{"inputs":[],"output":{"name":"xorshiftrng"}}],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number\ngenerator, seeded by the system. Intended to be used in method\nchaining style, e.g. `thread_rng().gen::&lt;i32&gt;()`.",null,{"inputs":[],"output":{"name":"threadrng"}}],[5,"random","","Generates a random value using the thread-local random number generator.",null,{"inputs":[],"output":{"name":"t"}}],[5,"sample","","Randomly sample up to `amount` elements from an iterator.",null,{"inputs":[{"name":"r"},{"name":"i"},{"name":"usize"}],"output":{"name":"vec"}}],[0,"distributions","","Sampling from random distributions.",null,null],[3,"RandSample","rand::distributions","A wrapper for generating types that implement `Rand` via the\n`Sample` &amp; `IndependentSample` traits.",null,null],[3,"Weighted","","A value with a particular weight for use with `WeightedChoice`.",null,null],[12,"weight","","The numerical weight of this item",2,null],[12,"item","","The actual item which is being weighted",2,null],[3,"WeightedChoice","","A distribution that selects from a finite collection of weighted items.",null,null],[0,"range","","Generating numbers between two others.",null,null],[3,"Range","rand::distributions::range","Sample values uniformly between two bounds.",null,null],[8,"SampleRange","","The helper trait for types that have a sensible way to sample\nuniformly between two values. This should not be used directly,\nand is only to facilitate `Range`.",null,null],[10,"construct_range","","Construct the `Range` object that `sample_range`\nrequires. This should not ever be called directly, only via\n`Range::new`, which will check that `low &lt; high`, so this\nfunction doesn&#39;t have to repeat the check.",3,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"range"}}],[10,"sample_range","","Sample a value from the given `Range` with the given `Rng` as\na source of randomness.",3,{"inputs":[{"name":"range"},{"name":"r"}],"output":{"name":"self"}}],[11,"clone","","",4,null],[11,"new","","Create a new `Range` instance that samples uniformly from\n`[low, high)`. Panics if `low &gt;= high`.",4,{"inputs":[{"name":"x"},{"name":"x"}],"output":{"name":"range"}}],[11,"sample","","",4,null],[11,"ind_sample","","",4,null],[0,"gamma","rand::distributions","The Gamma and derived distributions.",null,null],[3,"Gamma","rand::distributions::gamma","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the degrees of\nfreedom.",null,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the degrees of\nfreedom.",null,null],[11,"clone","","",5,null],[11,"new","","Construct an object representing the `Gamma(shape, scale)`\ndistribution.",5,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"gamma"}}],[11,"sample","","",5,null],[11,"ind_sample","","",5,null],[11,"clone","","",6,null],[11,"new","","Create a new chi-squared distribution with degrees-of-freedom\n`k`. Panics if `k &lt; 0`.",6,{"inputs":[{"name":"f64"}],"output":{"name":"chisquared"}}],[11,"sample","","",6,null],[11,"ind_sample","","",6,null],[11,"clone","","",7,null],[11,"new","","Create a new `FisherF` distribution, with the given\nparameter. Panics if either `m` or `n` are not positive.",7,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"fisherf"}}],[11,"sample","","",7,null],[11,"ind_sample","","",7,null],[11,"clone","","",8,null],[11,"new","","Create a new Student t distribution with `n` degrees of\nfreedom. Panics if `n &lt;= 0`.",8,{"inputs":[{"name":"f64"}],"output":{"name":"studentt"}}],[11,"sample","","",8,null],[11,"ind_sample","","",8,null],[0,"normal","rand::distributions","The normal and derived distributions.",null,null],[3,"StandardNormal","rand::distributions::normal","A wrapper around an `f64` to generate N(0, 1) random numbers\n(a.k.a.  a standard normal, or Gaussian).",null,null],[12,"0","","",9,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[11,"clone","","",9,null],[11,"rand","","",9,{"inputs":[{"name":"r"}],"output":{"name":"standardnormal"}}],[11,"clone","","",10,null],[11,"new","","Construct a new `Normal` distribution with the given mean and\nstandard deviation.",10,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"normal"}}],[11,"sample","","",10,null],[11,"ind_sample","","",10,null],[11,"clone","","",11,null],[11,"new","","Construct a new `LogNormal` distribution with the given mean\nand standard deviation.",11,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"lognormal"}}],[11,"sample","","",11,null],[11,"ind_sample","","",11,null],[0,"exponential","rand::distributions","The exponential distribution.",null,null],[3,"Exp1","rand::distributions::exponential","A wrapper around an `f64` to generate Exp(1) random numbers.",null,null],[12,"0","","",12,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[11,"clone","","",12,null],[11,"rand","","",12,{"inputs":[{"name":"r"}],"output":{"name":"exp1"}}],[11,"clone","","",13,null],[11,"new","","Construct a new `Exp` with the given shape parameter\n`lambda`. Panics if `lambda &lt;= 0`.",13,{"inputs":[{"name":"f64"}],"output":{"name":"exp"}}],[11,"sample","","",13,null],[11,"ind_sample","","",13,null],[8,"Sample","rand::distributions","Types that can be used to create a random instance of `Support`.",null,null],[10,"sample","","Generate a random value of `Support`, using `rng` as the\nsource of randomness.",14,null],[8,"IndependentSample","","`Sample`s that do not require keeping track of state.",null,null],[10,"ind_sample","","Generate a random value.",15,null],[11,"clone","","",16,null],[11,"sample","","",16,null],[11,"ind_sample","","",16,null],[11,"new","","",16,{"inputs":[],"output":{"name":"randsample"}}],[11,"clone","","",2,null],[11,"new","","Create a new `WeightedChoice`.",17,null],[11,"sample","","",17,null],[11,"ind_sample","","",17,null],[0,"isaac","rand","The ISAAC random number generator.",null,null],[3,"IsaacRng","rand::isaac","A random number generator that uses the ISAAC algorithm[1].",null,null],[3,"Isaac64Rng","","A random number generator that uses ISAAC-64[1], the 64-bit\nvariant of the ISAAC algorithm.",null,null],[11,"new_unseeded","","Create an ISAAC random number generator using the default\nfixed seed.",18,{"inputs":[],"output":{"name":"isaacrng"}}],[11,"clone","","",18,null],[11,"next_u32","","",18,null],[11,"reseed","","",18,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",18,null],[11,"rand","","",18,{"inputs":[{"name":"r"}],"output":{"name":"isaacrng"}}],[11,"new_unseeded","","Create a 64-bit ISAAC random number generator using the\ndefault fixed seed.",19,{"inputs":[],"output":{"name":"isaac64rng"}}],[11,"clone","","",19,null],[11,"next_u32","","",19,null],[11,"next_u64","","",19,null],[11,"reseed","","",19,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",19,null],[11,"rand","","",19,{"inputs":[{"name":"r"}],"output":{"name":"isaac64rng"}}],[0,"chacha","rand","The ChaCha random number generator.",null,null],[3,"ChaChaRng","rand::chacha","A random number generator that uses the ChaCha20 algorithm [1].",null,null],[11,"clone","","",20,null],[11,"new_unseeded","","Create an ChaCha random number generator using the default\nfixed key of 8 zero words.",20,{"inputs":[],"output":{"name":"chacharng"}}],[11,"set_counter","","Sets the internal 128-bit ChaCha counter to\na user-provided value. This permits jumping\narbitrarily ahead (or backwards) in the pseudorandom stream.",20,null],[11,"next_u32","","",20,null],[11,"reseed","","",20,null],[11,"from_seed","","Create a ChaCha generator from a seed,\nobtained from a variable-length u32 array.\nOnly up to 8 words are used; if less than 8\nwords are used, the remaining are set to zero.",20,null],[11,"rand","","",20,{"inputs":[{"name":"r"}],"output":{"name":"chacharng"}}],[0,"reseeding","rand","A wrapper around another RNG that reseeds it after it\ngenerates a certain number of random bytes.",null,null],[3,"ReseedingRng","rand::reseeding","A wrapper around any RNG which reseeds the underlying RNG after it\nhas generated a certain number of random bytes.",null,null],[12,"reseeder","","Controls the behaviour when reseeding the RNG.",21,null],[3,"ReseedWithDefault","","Reseed an RNG using a `Default` instance. This reseeds by\nreplacing the RNG with the result of a `Default::default` call.",null,null],[8,"Reseeder","","Something that can be used to reseed an RNG via `ReseedingRng`.",null,null],[10,"reseed","","Reseed the given RNG.",22,null],[11,"new","","Create a new `ReseedingRng` with the given parameters.",21,{"inputs":[{"name":"r"},{"name":"u64"},{"name":"rsdr"}],"output":{"name":"reseedingrng"}}],[11,"reseed_if_necessary","","Reseed the internal RNG if the number of bytes that have been\ngenerated exceed the threshold.",21,null],[11,"next_u32","","",21,null],[11,"next_u64","","",21,null],[11,"fill_bytes","","",21,null],[11,"reseed","","",21,null],[11,"from_seed","","Create a new `ReseedingRng` from the given reseeder and\nseed. This uses a default value for `generation_threshold`.",21,null],[11,"clone","","",23,null],[11,"reseed","","",23,null],[11,"default","","",23,{"inputs":[],"output":{"name":"reseedwithdefault"}}],[11,"rand","rand","",0,{"inputs":[{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",1,{"inputs":[{"name":"r"}],"output":{"name":"closed01"}}],[11,"rand","","",0,{"inputs":[{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",1,{"inputs":[{"name":"r"}],"output":{"name":"closed01"}}],[11,"rand","core::option","",24,{"inputs":[{"name":"r"}],"output":{"name":"option"}}],[0,"os","rand","Interfaces to the operating system provided random number\ngenerators.",null,null],[3,"OsRng","rand::os","A random number generator that retrieves randomness straight from\nthe operating system. Platform sources:",null,null],[11,"new","","Create a new `OsRng`.",25,{"inputs":[],"output":{"name":"result"}}],[11,"next_u32","","",25,null],[11,"next_u64","","",25,null],[11,"fill_bytes","","",25,null],[0,"read","rand","A wrapper around any Read to treat it as an RNG.",null,null],[3,"ReadRng","rand::read","An RNG that reads random bytes straight from a `Read`. This will\nwork best with an infinite reader, but this is not required.",null,null],[11,"new","","Create a new `ReadRng` from a `Read`.",26,{"inputs":[{"name":"r"}],"output":{"name":"readrng"}}],[11,"next_u32","","",26,null],[11,"next_u64","","",26,null],[11,"fill_bytes","","",26,null],[8,"Rand","rand","A type that can be randomly generated using an `Rng`.",null,null],[10,"rand","","Generates a random instance of this type using the specified source of\nrandomness.",27,{"inputs":[{"name":"r"}],"output":{"name":"self"}}],[8,"Rng","","A random number generator.",null,null],[10,"next_u32","","Return the next random u32.",28,null],[11,"next_u64","","Return the next random u64.",28,null],[11,"next_f32","","Return the next random f32 selected from the half-open\ninterval `[0, 1)`.",28,null],[11,"next_f64","","Return the next random f64 selected from the half-open\ninterval `[0, 1)`.",28,null],[11,"fill_bytes","","Fill `dest` with random data.",28,null],[11,"gen","","Return a random value of a `Rand` type.",28,null],[11,"gen_iter","","Return an iterator that will yield an infinite number of randomly\ngenerated items.",28,null],[11,"gen_range","","Generate a random value in the range [`low`, `high`).",28,null],[11,"gen_weighted_bool","","Return a bool with a 1 in n chance of true",28,null],[11,"gen_ascii_chars","","Return an iterator of random characters from the set A-Z,a-z,0-9.",28,null],[11,"choose","","Return a random element from `values`.",28,null],[11,"shuffle","","Shuffle a mutable slice in place.",28,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded to produce\nthe same stream of randomness multiple times.",null,null],[10,"reseed","","Reseed an RNG with the given seed.",29,null],[10,"from_seed","","Create a new RNG with the given seed.",29,{"inputs":[{"name":"seed"}],"output":{"name":"self"}}],[11,"next_u32","alloc::boxed","",30,null],[11,"next_u64","","",30,null],[11,"next_f32","","",30,null],[11,"next_f64","","",30,null],[11,"fill_bytes","","",30,null],[11,"next","rand","",31,null],[11,"next","","",32,null],[11,"clone","","",33,null],[11,"new_unseeded","","Creates a new XorShiftRng instance which is not seeded.",33,{"inputs":[],"output":{"name":"xorshiftrng"}}],[11,"next_u32","","",33,null],[11,"reseed","","Reseed an XorShiftRng. This will panic if `seed` is entirely 0.",33,null],[11,"from_seed","","Create a new XorShiftRng. This will panic if `seed` is entirely 0.",33,null],[11,"rand","","",33,{"inputs":[{"name":"r"}],"output":{"name":"xorshiftrng"}}],[11,"clone","","",34,null],[11,"new","","Create a randomly seeded instance of `StdRng`.",34,{"inputs":[],"output":{"name":"result"}}],[11,"next_u32","","",34,null],[11,"next_u64","","",34,null],[11,"reseed","","",34,null],[11,"from_seed","","",34,null],[11,"clone","","",35,null],[11,"next_u32","","",35,null],[11,"next_u64","","",35,null],[11,"fill_bytes","","",35,null]],"paths":[[3,"Open01"],[3,"Closed01"],[3,"Weighted"],[8,"SampleRange"],[3,"Range"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"StandardNormal"],[3,"Normal"],[3,"LogNormal"],[3,"Exp1"],[3,"Exp"],[8,"Sample"],[8,"IndependentSample"],[3,"RandSample"],[3,"WeightedChoice"],[3,"IsaacRng"],[3,"Isaac64Rng"],[3,"ChaChaRng"],[3,"ReseedingRng"],[8,"Reseeder"],[3,"ReseedWithDefault"],[4,"Option"],[3,"OsRng"],[3,"ReadRng"],[8,"Rand"],[8,"Rng"],[8,"SeedableRng"],[3,"Box"],[3,"Generator"],[3,"AsciiGenerator"],[3,"XorShiftRng"],[3,"StdRng"],[3,"ThreadRng"]]};
searchIndex["osmesa_sys"] = {"doc":"","items":[[3,"OsMesa","osmesa_sys","Symbols loaded from a shared library.",null,null],[12,"OSMesaColorClamp","","",0,null],[12,"OSMesaCreateContext","","",0,null],[12,"OSMesaCreateContextExt","","",0,null],[12,"OSMesaDestroyContext","","",0,null],[12,"OSMesaGetColorBuffer","","",0,null],[12,"OSMesaGetCurrentContext","","",0,null],[12,"OSMesaGetDepthBuffer","","",0,null],[12,"OSMesaGetIntegerv","","",0,null],[12,"OSMesaGetProcAddress","","",0,null],[12,"OSMesaMakeCurrent","","",0,null],[12,"OSMesaPixelStore","","",0,null],[3,"osmesa_context","","",null,null],[5,"OSMesaColorClamp","","",null,null],[5,"OSMesaCreateContext","","",null,{"inputs":[{"name":"c_uint"},{"name":"osmesacontext"}],"output":{"name":"osmesacontext"}}],[5,"OSMesaCreateContextExt","","",null,{"inputs":[{"name":"c_uint"},{"name":"c_int"},{"name":"c_int"},{"name":"c_int"},{"name":"osmesacontext"}],"output":{"name":"osmesacontext"}}],[5,"OSMesaDestroyContext","","",null,null],[5,"OSMesaGetColorBuffer","","",null,null],[5,"OSMesaGetCurrentContext","","",null,{"inputs":[],"output":{"name":"osmesacontext"}}],[5,"OSMesaGetDepthBuffer","","",null,null],[5,"OSMesaGetIntegerv","","",null,null],[5,"OSMesaGetProcAddress","","",null,null],[5,"OSMesaMakeCurrent","","",null,null],[5,"OSMesaPixelStore","","",null,null],[6,"OSMesaContext","","",null,null],[6,"OSMESAproc","","",null,null],[17,"OSMESA_BGRA","","",null,null],[17,"OSMESA_ARGB","","",null,null],[17,"OSMESA_BGR","","",null,null],[17,"OSMESA_RGB_565","","",null,null],[17,"OSMESA_COLOR_INDEX","","",null,null],[17,"OSMESA_RGB","","",null,null],[17,"OSMESA_RGBA","","",null,null],[17,"OSMESA_WIDTH","","",null,null],[17,"OSMESA_HEIGHT","","",null,null],[17,"OSMESA_FORMAT","","",null,null],[17,"OSMESA_TYPE","","",null,null],[17,"OSMESA_MAX_WIDTH","","",null,null],[17,"OSMESA_MAX_HEIGHT","","",null,null],[17,"OSMESA_ROW_LENGTH","","",null,null],[17,"OSMESA_Y_UP","","",null,null],[11,"open","","Tries to open the dynamic library.",0,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"try_loading","","Try loading the static symbols linked to this library.",0,{"inputs":[],"output":{"name":"result"}}]],"paths":[[3,"OsMesa"]]};
searchIndex["num_iter"] = {"doc":"External iterators for generic mathematics","items":[[3,"Range","num_iter","An iterator over the range [start, stop)",null,null],[3,"RangeInclusive","","An iterator over the range [start, stop]",null,null],[3,"RangeStep","","An iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,null],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,null],[5,"range","","Returns an iterator over the given range [start, stop) (that is, starting\nat start (inclusive), and ending at stop (exclusive)).",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"range"}}],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"rangeinclusive"}}],[5,"range_step","","Return an iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestep"}}],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestepinclusive"}}],[11,"clone","","",0,null],[11,"next","","",0,null],[11,"size_hint","","",0,null],[11,"next_back","","",0,null],[11,"clone","","",1,null],[11,"next","","",1,null],[11,"size_hint","","",1,null],[11,"next_back","","",1,null],[11,"clone","","",2,null],[11,"next","","",2,null],[11,"clone","","",3,null],[11,"next","","",3,null]],"paths":[[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"]]};
searchIndex["aho_corasick"] = {"doc":"An implementation of the\n[Aho-Corasick string search algorithm](https://en.wikipedia.org/wiki/Aho%E2%80%93Corasick_string_matching_algorithm).","items":[[3,"Match","aho_corasick","Records a match in the search text.",null,null],[12,"pati","","The pattern index.",0,null],[12,"start","","The starting byte offset of the match in the search text.",0,null],[12,"end","","The ending byte offset of the match in the search text.",0,null],[3,"Matches","","An iterator of non-overlapping matches for in-memory text.",null,null],[3,"MatchesOverlapping","","An iterator of overlapping matches for in-memory text.",null,null],[3,"StreamMatches","","An iterator of non-overlapping matches for streaming text.",null,null],[3,"StreamMatchesOverlapping","","An iterator of overlapping matches for streaming text.",null,null],[3,"FullAcAutomaton","","A complete Aho-Corasick automaton.",null,null],[3,"AcAutomaton","","An Aho-Corasick finite automaton.",null,null],[3,"Dense","","State transitions that can be stored either sparsely or densely.",null,null],[3,"Sparse","","State transitions that are always sparse.",null,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"hash","","",0,null],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"fmt","","",1,null],[11,"next","","",1,null],[11,"fmt","","",2,null],[11,"next","","",2,null],[11,"fmt","","",3,null],[11,"next","","",3,null],[11,"fmt","","",4,null],[11,"next","","",4,null],[11,"clone","","",5,null],[11,"new","","Build a new expanded Aho-Corasick automaton from an existing\nAho-Corasick automaton.",5,{"inputs":[{"name":"acautomaton"}],"output":{"name":"fullacautomaton"}}],[11,"next_state","","",5,null],[11,"get_match","","",5,null],[11,"has_match","","",5,null],[11,"start_bytes","","",5,null],[11,"patterns","","",5,null],[11,"pattern","","",5,null],[11,"fmt","","",5,null],[6,"StateIdx","","The integer type used for the state index.",null,null],[8,"Automaton","","An abstraction over automatons and their corresponding iterators.\nThe type parameter `P` is the type of the pattern that was used to\nconstruct this Automaton.",null,null],[10,"next_state","","Return the next state given the current state and next character.",6,null],[10,"has_match","","Return true if and only if the given state and current pattern index\nindicate a match.",6,null],[10,"get_match","","Build a match given the current state, pattern index and input index.",6,null],[10,"start_bytes","","Return the set of bytes that have transitions in the root state.",6,null],[10,"patterns","","Returns all of the patterns matched by this automaton.",6,null],[10,"pattern","","Returns the pattern indexed at `i`.",6,null],[11,"len","","Return the number of patterns in the automaton.",6,null],[11,"is_empty","","Returns true if the automaton has no patterns.",6,null],[11,"find","","Returns an iterator of non-overlapping matches in `s`.",6,null],[11,"find_overlapping","","Returns an iterator of overlapping matches in `s`.",6,null],[11,"stream_find","","Returns an iterator of non-overlapping matches in the given reader.",6,null],[11,"stream_find_overlapping","","Returns an iterator of overlapping matches in the given reader.",6,null],[8,"Transitions","","An abstraction over state transition strategies.",null,null],[10,"new","","Return a new state at the given depth.",7,{"inputs":[{"name":"u32"}],"output":{"name":"self"}}],[10,"goto","","Return the next state index given the next character.",7,null],[10,"set_goto","","Set the next state index for the character given.",7,null],[10,"heap_bytes","","The memory use in bytes (on the heap) of this set of transitions.",7,null],[11,"clone","","",8,null],[11,"new","","Create a new automaton from an iterator of patterns.",8,{"inputs":[{"name":"i"}],"output":{"name":"acautomaton"}}],[11,"with_transitions","","Create a new automaton from an iterator of patterns.",8,{"inputs":[{"name":"i"}],"output":{"name":"acautomaton"}}],[11,"into_full","","Build out the entire automaton into a single matrix.",8,null],[11,"next_state","","",8,null],[11,"get_match","","",8,null],[11,"has_match","","",8,null],[11,"start_bytes","","",8,null],[11,"patterns","","",8,null],[11,"pattern","","",8,null],[11,"fmt","","",9,null],[11,"clone","","",9,null],[11,"new","","",9,{"inputs":[{"name":"u32"}],"output":{"name":"dense"}}],[11,"goto","","",9,null],[11,"set_goto","","",9,null],[11,"heap_bytes","","",9,null],[11,"fmt","","",10,null],[11,"clone","","",10,null],[11,"new","","",10,{"inputs":[{"name":"u32"}],"output":{"name":"sparse"}}],[11,"goto","","",10,null],[11,"set_goto","","",10,null],[11,"heap_bytes","","",10,null],[11,"from_iter","","Create an automaton from an iterator of strings.",8,{"inputs":[{"name":"t"}],"output":{"name":"acautomaton"}}],[11,"fmt","","",8,null],[11,"len","","Return the number of patterns in the automaton.",6,null],[11,"is_empty","","Returns true if the automaton has no patterns.",6,null],[11,"find","","Returns an iterator of non-overlapping matches in `s`.",6,null],[11,"find_overlapping","","Returns an iterator of overlapping matches in `s`.",6,null],[11,"stream_find","","Returns an iterator of non-overlapping matches in the given reader.",6,null],[11,"stream_find_overlapping","","Returns an iterator of overlapping matches in the given reader.",6,null]],"paths":[[3,"Match"],[3,"Matches"],[3,"StreamMatches"],[3,"MatchesOverlapping"],[3,"StreamMatchesOverlapping"],[3,"FullAcAutomaton"],[8,"Automaton"],[8,"Transitions"],[3,"AcAutomaton"],[3,"Dense"],[3,"Sparse"]]};
searchIndex["wayland_sys"] = {"doc":"FFI bindings to the wayland system libraries.","items":[[0,"common","wayland_sys","Various types and functions that are used by both the client and the server\nlibraries.",null,null],[3,"wl_message","wayland_sys::common","",null,null],[12,"name","","",0,null],[12,"signature","","",0,null],[12,"types","","",0,null],[3,"wl_interface","","",null,null],[12,"name","","",1,null],[12,"version","","",1,null],[12,"request_count","","",1,null],[12,"requests","","",1,null],[12,"event_count","","",1,null],[12,"events","","",1,null],[3,"wl_list","","",null,null],[12,"prev","","",2,null],[12,"next","","",2,null],[3,"wl_array","","",null,null],[12,"size","","",3,null],[12,"alloc","","",3,null],[12,"data","","",3,null],[3,"wl_argument","","",null,null],[5,"wl_fixed_to_double","","",null,{"inputs":[{"name":"wl_fixed_t"}],"output":{"name":"f64"}}],[5,"wl_fixed_from_double","","",null,{"inputs":[{"name":"f64"}],"output":{"name":"wl_fixed_t"}}],[5,"wl_fixed_to_int","","",null,{"inputs":[{"name":"wl_fixed_t"}],"output":{"name":"i32"}}],[5,"wl_fixed_from_int","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"wl_fixed_t"}}],[6,"wl_fixed_t","","",null,null],[6,"wl_dispatcher_func_t","","",null,null],[6,"wl_log_func_t","","",null,null],[0,"client","wayland_sys","Bindings to the client library `libwayland-client.so`",null,null],[3,"WaylandClient","wayland_sys::client","",null,null],[12,"wl_display_connect_to_fd","","",4,null],[12,"wl_display_connect","","",4,null],[12,"wl_display_disconnect","","",4,null],[12,"wl_display_get_fd","","",4,null],[12,"wl_display_roundtrip","","",4,null],[12,"wl_display_read_events","","",4,null],[12,"wl_display_prepare_read","","",4,null],[12,"wl_display_cancel_read","","",4,null],[12,"wl_display_dispatch","","",4,null],[12,"wl_display_dispatch_pending","","",4,null],[12,"wl_display_get_error","","",4,null],[12,"wl_display_get_protocol_error","","",4,null],[12,"wl_display_flush","","",4,null],[12,"wl_event_queue_destroy","","",4,null],[12,"wl_display_create_queue","","",4,null],[12,"wl_display_roundtrip_queue","","",4,null],[12,"wl_display_prepare_read_queue","","",4,null],[12,"wl_display_dispatch_queue","","",4,null],[12,"wl_display_dispatch_queue_pending","","",4,null],[12,"wl_proxy_create","","",4,null],[12,"wl_proxy_destroy","","",4,null],[12,"wl_proxy_add_listener","","",4,null],[12,"wl_proxy_get_listener","","",4,null],[12,"wl_proxy_add_dispatcher","","",4,null],[12,"wl_proxy_marshal_array_constructor","","",4,null],[12,"wl_proxy_marshal_array","","",4,null],[12,"wl_proxy_set_user_data","","",4,null],[12,"wl_proxy_get_user_data","","",4,null],[12,"wl_proxy_get_id","","",4,null],[12,"wl_proxy_get_class","","",4,null],[12,"wl_proxy_set_queue","","",4,null],[12,"wl_log_set_handler_client","","",4,null],[12,"wl_list_init","","",4,null],[12,"wl_list_insert","","",4,null],[12,"wl_list_remove","","",4,null],[12,"wl_list_length","","",4,null],[12,"wl_list_empty","","",4,null],[12,"wl_list_insert_list","","",4,null],[12,"wl_array_init","","",4,null],[12,"wl_array_release","","",4,null],[12,"wl_array_add","","",4,null],[12,"wl_array_copy","","",4,null],[12,"wl_proxy_marshal_constructor","","",4,null],[12,"wl_proxy_marshal","","",4,null],[3,"WAYLAND_CLIENT_OPTION","","",null,null],[3,"WAYLAND_CLIENT_HANDLE","","",null,null],[4,"wl_proxy","","",null,null],[4,"wl_display","","",null,null],[4,"wl_event_queue","","",null,null],[5,"is_lib_available","","",null,{"inputs":[],"output":{"name":"bool"}}],[11,"open","","",4,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"is_some","core::option","Returns `true` if the option is a `Some` value",5,null],[11,"is_none","","Returns `true` if the option is a `None` value",5,null],[11,"as_ref","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`",5,null],[11,"as_mut","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;mut T&gt;`",5,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",5,null],[11,"unwrap","","Moves the value `v` out of the `Option&lt;T&gt;` if it is `Some(v)`.",5,null],[11,"unwrap_or","","Returns the contained value or a default.",5,null],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",5,null],[11,"map","","Maps an `Option&lt;T&gt;` to `Option&lt;U&gt;` by applying a function to a contained value",5,null],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",5,null],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",5,null],[11,"ok_or","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",5,null],[11,"ok_or_else","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",5,null],[11,"iter","","Returns an iterator over the possibly contained value.",5,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",5,null],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",5,null],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",5,null],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",5,null],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",5,null],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",5,null],[11,"cloned","","Maps an `Option&lt;&amp;T&gt;` to an `Option&lt;T&gt;` by cloning the contents of the\noption.",5,null],[11,"unwrap_or_default","","Returns the contained value or a default",5,null],[11,"hash","core::num","",6,null],[11,"default","","",6,{"inputs":[],"output":{"name":"wrapping"}}],[11,"clone","","",6,null],[11,"cmp","","",6,null],[11,"partial_cmp","","",6,null],[11,"lt","","",6,null],[11,"le","","",6,null],[11,"gt","","",6,null],[11,"ge","","",6,null],[11,"eq","","",6,null],[11,"ne","","",6,null],[11,"fmt","","",6,null],[11,"fmt","","",6,null],[11,"fmt","","",6,null],[11,"fmt","","",6,null],[11,"fmt","","",6,null],[11,"fmt","","",6,null],[11,"shl","","",6,null],[11,"shl_assign","","",6,null],[11,"shr","","",6,null],[11,"shr_assign","","",6,null],[11,"shl","","",6,null],[11,"shl_assign","","",6,null],[11,"shr","","",6,null],[11,"shr_assign","","",6,null],[11,"shl","","",6,null],[11,"shl_assign","","",6,null],[11,"shr","","",6,null],[11,"shr_assign","","",6,null],[11,"shl","","",6,null],[11,"shl_assign","","",6,null],[11,"shr","","",6,null],[11,"shr_assign","","",6,null],[11,"shl","","",6,null],[11,"shl_assign","","",6,null],[11,"shr","","",6,null],[11,"shr_assign","","",6,null],[11,"shl","","",6,null],[11,"shl_assign","","",6,null],[11,"shr","","",6,null],[11,"shr_assign","","",6,null],[11,"shl","","",6,null],[11,"shl_assign","","",6,null],[11,"shr","","",6,null],[11,"shr_assign","","",6,null],[11,"shl","","",6,null],[11,"shl_assign","","",6,null],[11,"shr","","",6,null],[11,"shr_assign","","",6,null],[11,"shl","","",6,null],[11,"shl_assign","","",6,null],[11,"shr","","",6,null],[11,"shr_assign","","",6,null],[11,"shl","","",6,null],[11,"shl_assign","","",6,null],[11,"shr","","",6,null],[11,"shr_assign","","",6,null],[11,"add","","",6,null],[11,"add_assign","","",6,null],[11,"sub","","",6,null],[11,"sub_assign","","",6,null],[11,"mul","","",6,null],[11,"mul_assign","","",6,null],[11,"div","","",6,null],[11,"div_assign","","",6,null],[11,"rem","","",6,null],[11,"rem_assign","","",6,null],[11,"not","","",6,null],[11,"bitxor","","",6,null],[11,"bitxor_assign","","",6,null],[11,"bitor","","",6,null],[11,"bitor_assign","","",6,null],[11,"bitand","","",6,null],[11,"bitand_assign","","",6,null],[11,"neg","","",6,null],[11,"add","","",6,null],[11,"add_assign","","",6,null],[11,"sub","","",6,null],[11,"sub_assign","","",6,null],[11,"mul","","",6,null],[11,"mul_assign","","",6,null],[11,"div","","",6,null],[11,"div_assign","","",6,null],[11,"rem","","",6,null],[11,"rem_assign","","",6,null],[11,"not","","",6,null],[11,"bitxor","","",6,null],[11,"bitxor_assign","","",6,null],[11,"bitor","","",6,null],[11,"bitor_assign","","",6,null],[11,"bitand","","",6,null],[11,"bitand_assign","","",6,null],[11,"neg","","",6,null],[11,"add","","",6,null],[11,"add_assign","","",6,null],[11,"sub","","",6,null],[11,"sub_assign","","",6,null],[11,"mul","","",6,null],[11,"mul_assign","","",6,null],[11,"div","","",6,null],[11,"div_assign","","",6,null],[11,"rem","","",6,null],[11,"rem_assign","","",6,null],[11,"not","","",6,null],[11,"bitxor","","",6,null],[11,"bitxor_assign","","",6,null],[11,"bitor","","",6,null],[11,"bitor_assign","","",6,null],[11,"bitand","","",6,null],[11,"bitand_assign","","",6,null],[11,"neg","","",6,null],[11,"add","","",6,null],[11,"add_assign","","",6,null],[11,"sub","","",6,null],[11,"sub_assign","","",6,null],[11,"mul","","",6,null],[11,"mul_assign","","",6,null],[11,"div","","",6,null],[11,"div_assign","","",6,null],[11,"rem","","",6,null],[11,"rem_assign","","",6,null],[11,"not","","",6,null],[11,"bitxor","","",6,null],[11,"bitxor_assign","","",6,null],[11,"bitor","","",6,null],[11,"bitor_assign","","",6,null],[11,"bitand","","",6,null],[11,"bitand_assign","","",6,null],[11,"neg","","",6,null],[11,"add","","",6,null],[11,"add_assign","","",6,null],[11,"sub","","",6,null],[11,"sub_assign","","",6,null],[11,"mul","","",6,null],[11,"mul_assign","","",6,null],[11,"div","","",6,null],[11,"div_assign","","",6,null],[11,"rem","","",6,null],[11,"rem_assign","","",6,null],[11,"not","","",6,null],[11,"bitxor","","",6,null],[11,"bitxor_assign","","",6,null],[11,"bitor","","",6,null],[11,"bitor_assign","","",6,null],[11,"bitand","","",6,null],[11,"bitand_assign","","",6,null],[11,"neg","","",6,null],[11,"add","","",6,null],[11,"add_assign","","",6,null],[11,"sub","","",6,null],[11,"sub_assign","","",6,null],[11,"mul","","",6,null],[11,"mul_assign","","",6,null],[11,"div","","",6,null],[11,"div_assign","","",6,null],[11,"rem","","",6,null],[11,"rem_assign","","",6,null],[11,"not","","",6,null],[11,"bitxor","","",6,null],[11,"bitxor_assign","","",6,null],[11,"bitor","","",6,null],[11,"bitor_assign","","",6,null],[11,"bitand","","",6,null],[11,"bitand_assign","","",6,null],[11,"neg","","",6,null],[11,"add","","",6,null],[11,"add_assign","","",6,null],[11,"sub","","",6,null],[11,"sub_assign","","",6,null],[11,"mul","","",6,null],[11,"mul_assign","","",6,null],[11,"div","","",6,null],[11,"div_assign","","",6,null],[11,"rem","","",6,null],[11,"rem_assign","","",6,null],[11,"not","","",6,null],[11,"bitxor","","",6,null],[11,"bitxor_assign","","",6,null],[11,"bitor","","",6,null],[11,"bitor_assign","","",6,null],[11,"bitand","","",6,null],[11,"bitand_assign","","",6,null],[11,"neg","","",6,null],[11,"add","","",6,null],[11,"add_assign","","",6,null],[11,"sub","","",6,null],[11,"sub_assign","","",6,null],[11,"mul","","",6,null],[11,"mul_assign","","",6,null],[11,"div","","",6,null],[11,"div_assign","","",6,null],[11,"rem","","",6,null],[11,"rem_assign","","",6,null],[11,"not","","",6,null],[11,"bitxor","","",6,null],[11,"bitxor_assign","","",6,null],[11,"bitor","","",6,null],[11,"bitor_assign","","",6,null],[11,"bitand","","",6,null],[11,"bitand_assign","","",6,null],[11,"neg","","",6,null],[11,"add","","",6,null],[11,"add_assign","","",6,null],[11,"sub","","",6,null],[11,"sub_assign","","",6,null],[11,"mul","","",6,null],[11,"mul_assign","","",6,null],[11,"div","","",6,null],[11,"div_assign","","",6,null],[11,"rem","","",6,null],[11,"rem_assign","","",6,null],[11,"not","","",6,null],[11,"bitxor","","",6,null],[11,"bitxor_assign","","",6,null],[11,"bitor","","",6,null],[11,"bitor_assign","","",6,null],[11,"bitand","","",6,null],[11,"bitand_assign","","",6,null],[11,"neg","","",6,null],[11,"add","","",6,null],[11,"add_assign","","",6,null],[11,"sub","","",6,null],[11,"sub_assign","","",6,null],[11,"mul","","",6,null],[11,"mul_assign","","",6,null],[11,"div","","",6,null],[11,"div_assign","","",6,null],[11,"rem","","",6,null],[11,"rem_assign","","",6,null],[11,"not","","",6,null],[11,"bitxor","","",6,null],[11,"bitxor_assign","","",6,null],[11,"bitor","","",6,null],[11,"bitor_assign","","",6,null],[11,"bitand","","",6,null],[11,"bitand_assign","","",6,null],[11,"neg","","",6,null],[11,"eq","core::num::dec2flt","",7,null],[11,"ne","","",7,null],[11,"clone","","",7,null],[11,"fmt","","",7,null],[11,"fmt","","",7,null],[11,"fmt","core::num","",8,null],[11,"eq","","",8,null],[11,"clone","","",8,null],[11,"clone","","",9,null],[11,"fmt","","",9,null],[11,"fmt","","",9,null],[11,"eq","","",10,null],[11,"ne","","",10,null],[11,"clone","","",10,null],[11,"fmt","","",10,null],[11,"fmt","","",10,null],[11,"hash","core::nonzero","",11,null],[11,"fmt","","",11,null],[11,"partial_cmp","","",11,null],[11,"lt","","",11,null],[11,"le","","",11,null],[11,"gt","","",11,null],[11,"ge","","",11,null],[11,"cmp","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"clone","","",11,null],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually &quot;non-zero&quot;.",11,{"inputs":[{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",11,null],[11,"new","core::ptr","Creates a new `Unique`.",12,null],[11,"get","","Dereferences the content.",12,null],[11,"get_mut","","Mutably dereferences the content.",12,null],[11,"deref","","",12,null],[11,"fmt","","",12,null],[11,"new","","Creates a new `Shared`.",13,null],[11,"clone","","",13,null],[11,"deref","","",13,null],[11,"fmt","","",13,null],[11,"hash","core::marker","",14,null],[11,"eq","","",14,null],[11,"partial_cmp","","",14,null],[11,"cmp","","",14,null],[11,"clone","","",14,null],[11,"default","","",14,{"inputs":[],"output":{"name":"phantomdata"}}],[11,"hash","core::ops","",15,null],[11,"eq","","",15,null],[11,"clone","","",15,null],[11,"fmt","","",15,null],[11,"hash","","",16,null],[11,"eq","","",16,null],[11,"ne","","",16,null],[11,"clone","","",16,null],[11,"fmt","","",16,null],[11,"contains","","# Examples",16,null],[11,"hash","","",17,null],[11,"eq","","",17,null],[11,"ne","","",17,null],[11,"clone","","",17,null],[11,"fmt","","",17,null],[11,"contains","","# Examples",17,null],[11,"hash","","",18,null],[11,"eq","","",18,null],[11,"ne","","",18,null],[11,"clone","","",18,null],[11,"fmt","","",18,null],[11,"contains","","# Examples",18,null],[11,"hash","","",19,null],[11,"eq","","",19,null],[11,"ne","","",19,null],[11,"clone","","",19,null],[11,"fmt","","",19,null],[11,"contains","","# Examples",19,null],[11,"hash","","",20,null],[11,"eq","","",20,null],[11,"ne","","",20,null],[11,"clone","","",20,null],[11,"fmt","","",20,null],[11,"contains","","# Examples",20,null],[11,"hash","core::cmp","",21,null],[11,"fmt","","",21,null],[11,"eq","","",21,null],[11,"clone","","",21,null],[11,"reverse","","Reverse the `Ordering`.",21,null],[11,"cmp","","",21,null],[11,"partial_cmp","","",21,null],[11,"fmt","wayland_sys","",22,null],[11,"fmt","","",22,null],[11,"is","","Returns true if the boxed type is the same as `T`",22,null],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",22,null],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",22,null],[11,"is","","Forwards to the method defined on the type `Any`.",22,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",22,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",22,null],[11,"hash","core::any","",23,null],[11,"fmt","","",23,null],[11,"eq","","",23,null],[11,"ne","","",23,null],[11,"clone","","",23,null],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",23,{"inputs":[],"output":{"name":"typeid"}}],[11,"default","core::sync::atomic","",24,{"inputs":[],"output":{"name":"atomicbool"}}],[11,"default","","",25,{"inputs":[],"output":{"name":"atomicptr"}}],[11,"fmt","","",26,null],[11,"clone","","",26,null],[11,"new","","Creates a new `AtomicBool`.",24,{"inputs":[{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",24,null],[11,"store","","Stores a value into the bool.",24,null],[11,"swap","","Stores a value into the bool, returning the old value.",24,null],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",24,null],[11,"compare_exchange","","Stores a value into the `bool` if the current value is the same as the `current` value.",24,null],[11,"compare_exchange_weak","","Stores a value into the `bool` if the current value is the same as the `current` value.",24,null],[11,"fetch_and","","Logical &quot;and&quot; with a boolean value.",24,null],[11,"fetch_nand","","Logical &quot;nand&quot; with a boolean value.",24,null],[11,"fetch_or","","Logical &quot;or&quot; with a boolean value.",24,null],[11,"fetch_xor","","Logical &quot;xor&quot; with a boolean value.",24,null],[11,"new","","Creates a new `AtomicPtr`.",25,null],[11,"load","","Loads a value from the pointer.",25,null],[11,"store","","Stores a value into the pointer.",25,null],[11,"swap","","Stores a value into the pointer, returning the old value.",25,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",25,null],[11,"compare_exchange","","Stores a value into the pointer if the current value is the same as the `current` value.",25,null],[11,"compare_exchange_weak","","Stores a value into the pointer if the current value is the same as the `current` value.",25,null],[11,"default","","",27,{"inputs":[],"output":{"name":"atomici8"}}],[11,"fmt","","",27,null],[11,"new","","Creates a new atomic integer.",27,{"inputs":[{"name":"i8"}],"output":{"name":"atomici8"}}],[11,"load","","Loads a value from the atomic integer.",27,null],[11,"store","","Stores a value into the atomic integer.",27,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",27,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",27,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",27,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",27,null],[11,"fetch_add","","Add to the current value, returning the previous value.",27,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",27,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",27,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",27,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",27,null],[11,"default","","",28,{"inputs":[],"output":{"name":"atomicu8"}}],[11,"fmt","","",28,null],[11,"new","","Creates a new atomic integer.",28,{"inputs":[{"name":"u8"}],"output":{"name":"atomicu8"}}],[11,"load","","Loads a value from the atomic integer.",28,null],[11,"store","","Stores a value into the atomic integer.",28,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",28,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",28,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",28,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",28,null],[11,"fetch_add","","Add to the current value, returning the previous value.",28,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",28,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",28,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",28,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",28,null],[11,"default","","",29,{"inputs":[],"output":{"name":"atomici16"}}],[11,"fmt","","",29,null],[11,"new","","Creates a new atomic integer.",29,{"inputs":[{"name":"i16"}],"output":{"name":"atomici16"}}],[11,"load","","Loads a value from the atomic integer.",29,null],[11,"store","","Stores a value into the atomic integer.",29,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",29,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",29,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",29,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",29,null],[11,"fetch_add","","Add to the current value, returning the previous value.",29,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",29,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",29,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",29,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",29,null],[11,"default","","",30,{"inputs":[],"output":{"name":"atomicu16"}}],[11,"fmt","","",30,null],[11,"new","","Creates a new atomic integer.",30,{"inputs":[{"name":"u16"}],"output":{"name":"atomicu16"}}],[11,"load","","Loads a value from the atomic integer.",30,null],[11,"store","","Stores a value into the atomic integer.",30,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",30,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",30,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",30,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",30,null],[11,"fetch_add","","Add to the current value, returning the previous value.",30,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",30,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",30,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",30,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",30,null],[11,"default","","",31,{"inputs":[],"output":{"name":"atomici32"}}],[11,"fmt","","",31,null],[11,"new","","Creates a new atomic integer.",31,{"inputs":[{"name":"i32"}],"output":{"name":"atomici32"}}],[11,"load","","Loads a value from the atomic integer.",31,null],[11,"store","","Stores a value into the atomic integer.",31,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",31,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",31,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",31,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",31,null],[11,"fetch_add","","Add to the current value, returning the previous value.",31,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",31,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",31,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",31,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",31,null],[11,"default","","",32,{"inputs":[],"output":{"name":"atomicu32"}}],[11,"fmt","","",32,null],[11,"new","","Creates a new atomic integer.",32,{"inputs":[{"name":"u32"}],"output":{"name":"atomicu32"}}],[11,"load","","Loads a value from the atomic integer.",32,null],[11,"store","","Stores a value into the atomic integer.",32,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",32,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",32,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",32,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",32,null],[11,"fetch_add","","Add to the current value, returning the previous value.",32,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",32,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",32,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",32,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",32,null],[11,"default","","",33,{"inputs":[],"output":{"name":"atomici64"}}],[11,"fmt","","",33,null],[11,"new","","Creates a new atomic integer.",33,{"inputs":[{"name":"i64"}],"output":{"name":"atomici64"}}],[11,"load","","Loads a value from the atomic integer.",33,null],[11,"store","","Stores a value into the atomic integer.",33,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",33,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",33,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",33,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",33,null],[11,"fetch_add","","Add to the current value, returning the previous value.",33,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",33,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",33,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",33,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",33,null],[11,"default","","",34,{"inputs":[],"output":{"name":"atomicu64"}}],[11,"fmt","","",34,null],[11,"new","","Creates a new atomic integer.",34,{"inputs":[{"name":"u64"}],"output":{"name":"atomicu64"}}],[11,"load","","Loads a value from the atomic integer.",34,null],[11,"store","","Stores a value into the atomic integer.",34,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",34,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",34,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",34,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",34,null],[11,"fetch_add","","Add to the current value, returning the previous value.",34,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",34,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",34,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",34,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",34,null],[11,"default","","",35,{"inputs":[],"output":{"name":"atomicisize"}}],[11,"fmt","","",35,null],[11,"new","","Creates a new atomic integer.",35,{"inputs":[{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the atomic integer.",35,null],[11,"store","","Stores a value into the atomic integer.",35,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",35,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",35,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",35,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",35,null],[11,"fetch_add","","Add to the current value, returning the previous value.",35,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",35,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",35,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",35,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",35,null],[11,"default","","",36,{"inputs":[],"output":{"name":"atomicusize"}}],[11,"fmt","","",36,null],[11,"new","","Creates a new atomic integer.",36,{"inputs":[{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the atomic integer.",36,null],[11,"store","","Stores a value into the atomic integer.",36,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",36,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",36,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",36,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",36,null],[11,"fetch_add","","Add to the current value, returning the previous value.",36,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",36,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",36,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",36,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",36,null],[11,"fmt","","",24,null],[11,"fmt","","",25,null],[11,"new","core::cell","Creates a new `Cell` containing the given value.",37,{"inputs":[{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",37,null],[11,"set","","Sets the contained value.",37,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",37,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",37,null],[11,"clone","","",37,null],[11,"default","","",37,{"inputs":[],"output":{"name":"cell"}}],[11,"eq","","",37,null],[11,"partial_cmp","","",37,null],[11,"lt","","",37,null],[11,"le","","",37,null],[11,"gt","","",37,null],[11,"ge","","",37,null],[11,"cmp","","",37,null],[11,"fmt","","",38,null],[11,"eq","","",38,null],[11,"clone","","",38,null],[11,"new","","Creates a new `RefCell` containing `value`.",39,{"inputs":[{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",39,null],[11,"borrow_state","","Query the current state of this `RefCell`",39,null],[11,"borrow","","Immutably borrows the wrapped value.",39,null],[11,"borrow_mut","","Mutably borrows the wrapped value.",39,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",39,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",39,null],[11,"clone","","",39,null],[11,"default","","",39,{"inputs":[],"output":{"name":"refcell"}}],[11,"eq","","",39,null],[11,"partial_cmp","","",39,null],[11,"lt","","",39,null],[11,"le","","",39,null],[11,"gt","","",39,null],[11,"ge","","",39,null],[11,"cmp","","",39,null],[11,"deref","","",40,null],[11,"clone","","Copies a `Ref`.",40,{"inputs":[{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",40,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",41,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"deref","","",41,null],[11,"deref_mut","","",41,null],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",42,{"inputs":[{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",42,null],[11,"get","","Gets a mutable pointer to the wrapped value.",42,null],[11,"default","","",42,{"inputs":[],"output":{"name":"unsafecell"}}],[11,"fmt","core::char","",43,null],[11,"clone","","",43,null],[11,"next","","",43,null],[11,"size_hint","","",43,null],[11,"count","","",43,null],[11,"last","","",43,null],[11,"len","","",43,null],[11,"fmt","","",44,null],[11,"clone","","",44,null],[11,"next","","",44,null],[11,"size_hint","","",44,null],[11,"count","","",44,null],[11,"nth","","",44,null],[11,"last","","",44,null],[11,"len","","",44,null],[11,"fmt","","",45,null],[11,"as_slice","","Returns the remaining bytes of this iterator as a slice.",45,null],[11,"next","","",45,null],[11,"size_hint","","",45,null],[11,"fmt","","",46,null],[11,"as_slice","","Returns the remaining bytes of this iterator as a slice.",46,null],[11,"next","","",46,null],[11,"size_hint","","",46,null],[11,"fmt","core::iter::range","",47,null],[11,"clone","","",47,null],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",17,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",16,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",19,null],[11,"next","core::iter::range","",47,null],[11,"size_hint","","",47,null],[11,"next","","",47,null],[11,"size_hint","","",47,null],[11,"next","","",47,null],[11,"size_hint","","",47,null],[11,"next","core::ops","",16,null],[11,"size_hint","","",16,null],[11,"next_back","","",16,null],[11,"next","","",17,null],[11,"next","","",19,null],[11,"size_hint","","",19,null],[11,"next_back","","",19,null],[11,"fmt","core::iter::sources","",48,null],[11,"clone","","",48,null],[11,"next","","",48,null],[11,"size_hint","","",48,null],[11,"next_back","","",48,null],[11,"fmt","","",49,null],[11,"next","","",49,null],[11,"size_hint","","",49,null],[11,"next_back","","",49,null],[11,"len","","",49,null],[11,"clone","","",49,null],[11,"default","","",49,{"inputs":[],"output":{"name":"empty"}}],[11,"fmt","","",50,null],[11,"clone","","",50,null],[11,"next","","",50,null],[11,"size_hint","","",50,null],[11,"next_back","","",50,null],[11,"len","","",50,null],[11,"fmt","core::iter","",51,null],[11,"clone","","",51,null],[11,"next","","",51,null],[11,"size_hint","","",51,null],[11,"next_back","","",51,null],[11,"fmt","","",52,null],[11,"clone","","",52,null],[11,"next","","",52,null],[11,"size_hint","","",52,null],[11,"next_back","","",52,null],[11,"fmt","","",53,null],[11,"clone","","",53,null],[11,"next","","",53,null],[11,"size_hint","","",53,null],[11,"fmt","","",54,null],[11,"clone","","",54,null],[11,"next","","",54,null],[11,"count","","",54,null],[11,"nth","","",54,null],[11,"find","","",54,null],[11,"last","","",54,null],[11,"size_hint","","",54,null],[11,"next_back","","",54,null],[11,"fmt","","",55,null],[11,"clone","","",55,null],[11,"next","","",55,null],[11,"size_hint","","",55,null],[11,"next_back","","",55,null],[11,"clone","","",56,null],[11,"fmt","","",56,null],[11,"next","","",56,null],[11,"size_hint","","",56,null],[11,"next_back","","",56,null],[11,"clone","","",57,null],[11,"fmt","","",57,null],[11,"next","","",57,null],[11,"size_hint","","",57,null],[11,"next_back","","",57,null],[11,"clone","","",58,null],[11,"fmt","","",58,null],[11,"next","","",58,null],[11,"size_hint","","",58,null],[11,"next_back","","",58,null],[11,"fmt","","",59,null],[11,"clone","","",59,null],[11,"next","","# Overflow Behavior",59,null],[11,"size_hint","","",59,null],[11,"nth","","",59,null],[11,"count","","",59,null],[11,"next_back","","",59,null],[11,"fmt","","",60,null],[11,"clone","","",60,null],[11,"next","","",60,null],[11,"count","","",60,null],[11,"nth","","",60,null],[11,"last","","",60,null],[11,"size_hint","","",60,null],[11,"peek","","Returns a reference to the next() value without advancing the iterator.",60,null],[11,"is_empty","","Checks if the iterator has finished iterating.",60,null],[11,"clone","","",61,null],[11,"fmt","","",61,null],[11,"next","","",61,null],[11,"size_hint","","",61,null],[11,"clone","","",62,null],[11,"fmt","","",62,null],[11,"next","","",62,null],[11,"size_hint","","",62,null],[11,"fmt","","",63,null],[11,"clone","","",63,null],[11,"next","","",63,null],[11,"nth","","",63,null],[11,"count","","",63,null],[11,"last","","",63,null],[11,"size_hint","","",63,null],[11,"next_back","","",63,null],[11,"fmt","","",64,null],[11,"clone","","",64,null],[11,"next","","",64,null],[11,"nth","","",64,null],[11,"size_hint","","",64,null],[11,"clone","","",65,null],[11,"fmt","","",65,null],[11,"next","","",65,null],[11,"size_hint","","",65,null],[11,"clone","","",66,null],[11,"fmt","","",66,null],[11,"next","","",66,null],[11,"size_hint","","",66,null],[11,"next_back","","",66,null],[11,"fmt","","",67,null],[11,"clone","","",67,null],[11,"next","","",67,null],[11,"nth","","",67,null],[11,"last","","",67,null],[11,"count","","",67,null],[11,"size_hint","","",67,null],[11,"next_back","","",67,null],[11,"clone","","",68,null],[11,"fmt","","",68,null],[11,"next","","",68,null],[11,"size_hint","","",68,null],[11,"next_back","","",68,null],[11,"hash","core::option","",5,null],[11,"fmt","","",5,null],[11,"cmp","","",5,null],[11,"partial_cmp","","",5,null],[11,"lt","","",5,null],[11,"le","","",5,null],[11,"gt","","",5,null],[11,"ge","","",5,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"clone","","",5,null],[11,"default","","",5,{"inputs":[],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",5,null],[11,"fmt","","",69,null],[11,"next","","",69,null],[11,"size_hint","","",69,null],[11,"next_back","","",69,null],[11,"clone","","",69,null],[11,"fmt","","",70,null],[11,"next","","",70,null],[11,"size_hint","","",70,null],[11,"next_back","","",70,null],[11,"fmt","","",71,null],[11,"clone","","",71,null],[11,"next","","",71,null],[11,"size_hint","","",71,null],[11,"next_back","","",71,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",5,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[11,"clone","core::raw","",72,null],[11,"hash","core::result","",73,null],[11,"fmt","","",73,null],[11,"cmp","","",73,null],[11,"partial_cmp","","",73,null],[11,"lt","","",73,null],[11,"le","","",73,null],[11,"gt","","",73,null],[11,"ge","","",73,null],[11,"eq","","",73,null],[11,"ne","","",73,null],[11,"clone","","",73,null],[11,"is_ok","","Returns true if the result is `Ok`",73,null],[11,"is_err","","Returns true if the result is `Err`",73,null],[11,"ok","","Converts from `Result&lt;T, E&gt;` to `Option&lt;T&gt;`",73,null],[11,"err","","Converts from `Result&lt;T, E&gt;` to `Option&lt;E&gt;`",73,null],[11,"as_ref","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;T, &amp;E&gt;`",73,null],[11,"as_mut","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;mut T, &amp;mut E&gt;`",73,null],[11,"map","","Maps a `Result&lt;T, E&gt;` to `Result&lt;U, E&gt;` by applying a function to a\ncontained `Ok` value, leaving an `Err` value untouched.",73,null],[11,"map_err","","Maps a `Result&lt;T, E&gt;` to `Result&lt;T, F&gt;` by applying a function to a\ncontained `Err` value, leaving an `Ok` value untouched.",73,null],[11,"iter","","Returns an iterator over the possibly contained value.",73,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",73,null],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",73,null],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",73,null],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",73,null],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",73,null],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",73,null],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",73,null],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",73,null],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",73,null],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",73,null],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",73,null],[11,"fmt","","",74,null],[11,"next","","",74,null],[11,"size_hint","","",74,null],[11,"next_back","","",74,null],[11,"clone","","",74,null],[11,"fmt","","",75,null],[11,"next","","",75,null],[11,"size_hint","","",75,null],[11,"next_back","","",75,null],[11,"fmt","","",76,null],[11,"next","","",76,null],[11,"size_hint","","",76,null],[11,"next_back","","",76,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",73,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","core::slice","",77,null],[11,"as_slice","","View the underlying data as a subslice of the original data.",77,null],[11,"next","","",77,null],[11,"size_hint","","",77,null],[11,"count","","",77,null],[11,"nth","","",77,null],[11,"last","","",77,null],[11,"next_back","","",77,null],[11,"clone","","",77,null],[11,"fmt","","",78,null],[11,"into_slice","","View the underlying data as a subslice of the original data.",78,null],[11,"next","","",78,null],[11,"size_hint","","",78,null],[11,"count","","",78,null],[11,"nth","","",78,null],[11,"last","","",78,null],[11,"next_back","","",78,null],[11,"fmt","","",79,null],[11,"clone","","",79,null],[11,"next","","",79,null],[11,"size_hint","","",79,null],[11,"next_back","","",79,null],[11,"fmt","","",80,null],[11,"next","","",80,null],[11,"size_hint","","",80,null],[11,"next_back","","",80,null],[11,"fmt","","",81,null],[11,"fmt","","",82,null],[11,"fmt","","",83,null],[11,"fmt","","",84,null],[11,"next","","",81,null],[11,"size_hint","","",81,null],[11,"next","","",82,null],[11,"size_hint","","",82,null],[11,"next","","",83,null],[11,"size_hint","","",83,null],[11,"next","","",84,null],[11,"size_hint","","",84,null],[11,"fmt","","",85,null],[11,"clone","","",85,null],[11,"next","","",85,null],[11,"size_hint","","",85,null],[11,"count","","",85,null],[11,"nth","","",85,null],[11,"last","","",85,null],[11,"next_back","","",85,null],[11,"fmt","","",86,null],[11,"clone","","",86,null],[11,"next","","",86,null],[11,"size_hint","","",86,null],[11,"count","","",86,null],[11,"nth","","",86,null],[11,"last","","",86,null],[11,"next_back","","",86,null],[11,"fmt","","",87,null],[11,"next","","",87,null],[11,"size_hint","","",87,null],[11,"count","","",87,null],[11,"nth","","",87,null],[11,"last","","",87,null],[11,"next_back","","",87,null],[11,"fmt","core::str::pattern","",88,null],[11,"eq","","",88,null],[11,"ne","","",88,null],[11,"clone","","",88,null],[11,"fmt","","",89,null],[11,"clone","","",89,null],[11,"haystack","","",89,null],[11,"next","","",89,null],[11,"next_match","","",89,null],[11,"next_reject","","",89,null],[11,"next_back","","",89,null],[11,"next_match_back","","",89,null],[11,"next_reject_back","","",89,null],[11,"fmt","","",90,null],[11,"clone","","",90,null],[11,"haystack","","",90,null],[11,"next","","",90,null],[11,"next_match","","",90,null],[11,"next_reject","","",90,null],[11,"next_back","","",90,null],[11,"next_match_back","","",90,null],[11,"next_reject_back","","",90,null],[11,"clone","","",91,null],[11,"fmt","","",91,null],[11,"haystack","","",91,null],[11,"next","","",91,null],[11,"next_match","","",91,null],[11,"next_reject","","",91,null],[11,"next_back","","",91,null],[11,"next_match_back","","",91,null],[11,"next_reject_back","","",91,null],[11,"fmt","","",92,null],[11,"clone","","",92,null],[11,"haystack","","",92,null],[11,"next","","",92,null],[11,"next_match","","",92,null],[11,"next_back","","",92,null],[11,"next_match_back","","",92,null],[11,"eq","core::str","",93,null],[11,"ne","","",93,null],[11,"clone","","",93,null],[11,"fmt","","",93,null],[11,"fmt","","",93,null],[11,"fmt","","",94,null],[11,"clone","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",94,null],[11,"fmt","","",94,null],[11,"fmt","","",95,null],[11,"clone","","",95,null],[11,"next","","",95,null],[11,"size_hint","","",95,null],[11,"next_back","","",95,null],[11,"as_str","","View the underlying data as a subslice of the original data.",95,null],[11,"fmt","","",96,null],[11,"clone","","",96,null],[11,"next","","",96,null],[11,"size_hint","","",96,null],[11,"next_back","","",96,null],[11,"as_str","","View the underlying data as a subslice of the original data.",96,null],[11,"fmt","","",97,null],[11,"clone","","",97,null],[11,"next","","",97,null],[11,"size_hint","","",97,null],[11,"count","","",97,null],[11,"last","","",97,null],[11,"nth","","",97,null],[11,"next_back","","",97,null],[11,"len","","",97,null],[11,"fmt","","",98,null],[11,"next","","",98,null],[11,"clone","","",98,null],[11,"fmt","","",99,null],[11,"next","","",99,null],[11,"clone","","",99,null],[11,"next_back","","",98,null],[11,"next_back","","",99,null],[11,"fmt","","",100,null],[11,"next","","",100,null],[11,"clone","","",100,null],[11,"fmt","","",101,null],[11,"next","","",101,null],[11,"clone","","",101,null],[11,"next_back","","",100,null],[11,"next_back","","",101,null],[11,"fmt","","",102,null],[11,"next","","",102,null],[11,"clone","","",102,null],[11,"fmt","","",103,null],[11,"next","","",103,null],[11,"clone","","",103,null],[11,"fmt","","",104,null],[11,"next","","",104,null],[11,"clone","","",104,null],[11,"fmt","","",105,null],[11,"next","","",105,null],[11,"clone","","",105,null],[11,"next_back","","",104,null],[11,"next_back","","",105,null],[11,"fmt","","",106,null],[11,"next","","",106,null],[11,"clone","","",106,null],[11,"fmt","","",107,null],[11,"next","","",107,null],[11,"clone","","",107,null],[11,"next_back","","",106,null],[11,"next_back","","",107,null],[11,"fmt","","",108,null],[11,"clone","","",108,null],[11,"next","","",108,null],[11,"size_hint","","",108,null],[11,"next_back","","",108,null],[11,"fmt","","",109,null],[11,"clone","","",109,null],[11,"next","","",109,null],[11,"size_hint","","",109,null],[11,"next_back","","",109,null],[11,"default","core::hash::sip","",110,{"inputs":[],"output":{"name":"siphasher13"}}],[11,"clone","","",110,null],[11,"fmt","","",110,null],[11,"default","","",111,{"inputs":[],"output":{"name":"siphasher24"}}],[11,"clone","","",111,null],[11,"fmt","","",111,null],[11,"default","","",112,{"inputs":[],"output":{"name":"siphasher"}}],[11,"clone","","",112,null],[11,"fmt","","",112,null],[11,"new","","Creates a new `SipHasher` with the two initial keys set to 0.",112,{"inputs":[],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",112,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"new","","Creates a new `SipHasher13` with the two initial keys set to 0.",110,{"inputs":[],"output":{"name":"siphasher13"}}],[11,"new_with_keys","","Creates a `SipHasher13` that is keyed off the provided keys.",110,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher13"}}],[11,"new","","Creates a new `SipHasher24` with the two initial keys set to 0.",111,{"inputs":[],"output":{"name":"siphasher24"}}],[11,"new_with_keys","","Creates a `SipHasher24` that is keyed off the provided keys.",111,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher24"}}],[11,"write","","",112,null],[11,"finish","","",112,null],[11,"write","","",110,null],[11,"finish","","",110,null],[11,"write","","",111,null],[11,"finish","","",111,null],[11,"fmt","core::hash","",113,null],[11,"build_hasher","","",113,null],[11,"clone","","",113,null],[11,"default","","",113,{"inputs":[],"output":{"name":"buildhasherdefault"}}],[11,"fmt","core::fmt","",114,null],[11,"field","core::fmt::builders","Adds a new field to the generated struct output.",115,null],[11,"finish","","Finishes output and returns any error encountered.",115,null],[11,"field","","Adds a new field to the generated tuple struct output.",116,null],[11,"finish","","Finishes output and returns any error encountered.",116,null],[11,"entry","","Adds a new entry to the set output.",117,null],[11,"entries","","Adds the contents of an iterator of entries to the set output.",117,null],[11,"finish","","Finishes output and returns any error encountered.",117,null],[11,"entry","","Adds a new entry to the list output.",118,null],[11,"entries","","Adds the contents of an iterator of entries to the list output.",118,null],[11,"finish","","Finishes output and returns any error encountered.",118,null],[11,"entry","","Adds a new entry to the map output.",119,null],[11,"entries","","Adds the contents of an iterator of entries to the map output.",119,null],[11,"finish","","Finishes output and returns any error encountered.",119,null],[11,"partial_cmp","core::fmt","",120,null],[11,"eq","","",120,null],[11,"cmp","","",120,null],[11,"hash","","",120,null],[11,"default","","",120,{"inputs":[],"output":{"name":"error"}}],[11,"fmt","","",120,null],[11,"clone","","",120,null],[11,"clone","","",121,null],[11,"fmt","","",121,null],[11,"fmt","","",121,null],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",122,null],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",122,null],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",122,null],[11,"write_fmt","","Writes some formatted information into this instance",122,null],[11,"flags","","Flags for formatting (packed version of rt::Flag)",122,null],[11,"fill","","Character used as &#39;fill&#39; whenever there is alignment",122,null],[11,"align","","Flag indicating what form of alignment was requested",122,null],[11,"width","","Optionally specified integer width that the output should be",122,null],[11,"precision","","Optionally specified precision for numeric types",122,null],[11,"sign_plus","","Determines if the `+` flag was specified.",122,null],[11,"sign_minus","","Determines if the `-` flag was specified.",122,null],[11,"alternate","","Determines if the `#` flag was specified.",122,null],[11,"sign_aware_zero_pad","","Determines if the `0` flag was specified.",122,null],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",122,null],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",122,null],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",122,null],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",122,null],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",122,null],[11,"write_str","","",122,null],[11,"write_char","","",122,null],[11,"write_fmt","","",122,null],[11,"fmt","","",120,null],[11,"fmt","core::marker","",14,null],[11,"fmt","core::cell","",37,null],[11,"fmt","","",39,null],[11,"fmt","","",40,null],[11,"fmt","","",41,null],[11,"fmt","","",42,null],[11,"deref","wayland_sys::client","",123,null],[11,"deref","","",124,null],[0,"egl","wayland_sys","Bindings to the EGL library `libwayland-egl.so`",null,null],[3,"WaylandEgl","wayland_sys::egl","",null,null],[12,"wl_egl_window_create","","",125,null],[12,"wl_egl_window_destroy","","",125,null],[12,"wl_egl_window_resize","","",125,null],[12,"wl_egl_window_get_attached_size","","",125,null],[3,"WAYLAND_EGL_OPTION","","",null,null],[3,"WAYLAND_EGL_HANDLE","","",null,null],[4,"wl_egl_window","","",null,null],[5,"is_lib_available","","",null,{"inputs":[],"output":{"name":"bool"}}],[11,"open","","",125,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"deref","","",126,null],[11,"deref","","",127,null],[0,"cursor","wayland_sys","Bindings to the `wayland-cursor.so` library",null,null],[3,"wl_cursor_image","wayland_sys::cursor","",null,null],[12,"width","","actual width",128,null],[12,"height","","actual height",128,null],[12,"hotspot_x","","hot spot x (must be inside image)",128,null],[12,"hotspot_y","","hot spot y (must be inside image)",128,null],[12,"delay","","animation delay to next frame",128,null],[3,"wl_cursor","","",null,null],[12,"image_count","","",129,null],[12,"images","","",129,null],[12,"name","","",129,null],[3,"WaylandCursor","","",null,null],[12,"wl_cursor_theme_load","","",130,null],[12,"wl_cursor_theme_destroy","","",130,null],[12,"wl_cursor_theme_get_cursor","","",130,null],[12,"wl_cursor_image_get_buffer","","",130,null],[12,"wl_cursor_frame","","",130,null],[12,"wl_cursor_frame_and_duration","","",130,null],[3,"WAYLAND_CURSOR_OPTION","","",null,null],[3,"WAYLAND_CURSOR_HANDLE","","",null,null],[4,"wl_cursor_theme","","",null,null],[5,"is_lib_available","","",null,{"inputs":[],"output":{"name":"bool"}}],[11,"open","","",130,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"deref","","",131,null],[11,"deref","","",132,null],[14,"ffi_dispatch!","wayland_sys","",null,null]],"paths":[[3,"wl_message"],[3,"wl_interface"],[3,"wl_list"],[3,"wl_array"],[3,"WaylandClient"],[4,"Option"],[3,"Wrapping"],[3,"ParseFloatError"],[4,"FpCategory"],[3,"TryFromIntError"],[3,"ParseIntError"],[3,"NonZero"],[3,"Unique"],[3,"Shared"],[3,"PhantomData"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"RangeInclusive"],[3,"RangeToInclusive"],[4,"Ordering"],[8,"Any"],[3,"TypeId"],[3,"AtomicBool"],[3,"AtomicPtr"],[4,"Ordering"],[3,"AtomicI8"],[3,"AtomicU8"],[3,"AtomicI16"],[3,"AtomicU16"],[3,"AtomicI32"],[3,"AtomicU32"],[3,"AtomicI64"],[3,"AtomicU64"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"Ref"],[3,"RefMut"],[3,"UnsafeCell"],[3,"EscapeUnicode"],[3,"EscapeDefault"],[3,"EncodeUtf8"],[3,"EncodeUtf16"],[3,"StepBy"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[4,"SearchStep"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"SipHasher13"],[3,"SipHasher24"],[3,"SipHasher"],[3,"BuildHasherDefault"],[4,"Alignment"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Error"],[3,"Arguments"],[3,"Formatter"],[3,"WAYLAND_CLIENT_OPTION"],[3,"WAYLAND_CLIENT_HANDLE"],[3,"WaylandEgl"],[3,"WAYLAND_EGL_OPTION"],[3,"WAYLAND_EGL_HANDLE"],[3,"wl_cursor_image"],[3,"wl_cursor"],[3,"WaylandCursor"],[3,"WAYLAND_CURSOR_OPTION"],[3,"WAYLAND_CURSOR_HANDLE"]]};
searchIndex["net2"] = {"doc":"Extensions to `std::net` networking types.","items":[[3,"TcpBuilder","net2","An &quot;in progress&quot; TCP socket which has not yet been connected or listened.",null,null],[3,"UdpBuilder","","An &quot;in progress&quot; UDP socket which has not yet been connected.",null,null],[11,"new_v4","","Constructs a new TcpBuilder with the `AF_INET` domain, the `SOCK_STREAM`\ntype, and with a protocol argument of 0.",0,{"inputs":[],"output":{"name":"result"}}],[11,"new_v6","","Constructs a new TcpBuilder with the `AF_INET6` domain, the `SOCK_STREAM`\ntype, and with a protocol argument of 0.",0,{"inputs":[],"output":{"name":"result"}}],[11,"bind","","Binds this socket to the specified address.",0,null],[11,"listen","","Mark a socket as ready to accept incoming connection requests using\naccept()",0,null],[11,"connect","","Initiate a connection on this socket to the specified address.",0,null],[11,"to_tcp_stream","","Converts this builder into a `TcpStream`",0,null],[11,"to_tcp_listener","","Converts this builder into a `TcpListener`",0,null],[11,"fmt","","",0,null],[11,"new_v4","","Constructs a new UdpBuilder with the `AF_INET` domain, the `SOCK_DGRAM`\ntype, and with a protocol argument of 0.",1,{"inputs":[],"output":{"name":"result"}}],[11,"new_v6","","Constructs a new UdpBuilder with the `AF_INET6` domain, the `SOCK_DGRAM`\ntype, and with a protocol argument of 0.",1,{"inputs":[],"output":{"name":"result"}}],[11,"bind","","Binds this socket to the specified address.",1,null],[11,"fmt","","",1,null],[11,"set_nodelay","std::net::tcp","",2,null],[11,"nodelay","","",2,null],[11,"set_keepalive","","",2,null],[11,"keepalive","","",2,null],[11,"set_keepalive_ms","","",2,null],[11,"keepalive_ms","","",2,null],[11,"set_read_timeout_ms","","",2,null],[11,"read_timeout_ms","","",2,null],[11,"set_write_timeout_ms","","",2,null],[11,"write_timeout_ms","","",2,null],[11,"set_read_timeout","","",2,null],[11,"read_timeout","","",2,null],[11,"set_write_timeout","","",2,null],[11,"write_timeout","","",2,null],[11,"set_ttl","","",2,null],[11,"ttl","","",2,null],[11,"set_only_v6","","",2,null],[11,"only_v6","","",2,null],[11,"connect","","",2,null],[11,"take_error","","",2,null],[11,"set_nonblocking","","",2,null],[11,"set_broadcast","std::net::udp","",3,null],[11,"broadcast","","",3,null],[11,"set_multicast_loop_v4","","",3,null],[11,"multicast_loop_v4","","",3,null],[11,"set_multicast_ttl_v4","","",3,null],[11,"multicast_ttl_v4","","",3,null],[11,"set_multicast_loop_v6","","",3,null],[11,"multicast_loop_v6","","",3,null],[11,"set_ttl","","",3,null],[11,"ttl","","",3,null],[11,"set_only_v6","","",3,null],[11,"only_v6","","",3,null],[11,"join_multicast_v4","","",3,null],[11,"join_multicast_v6","","",3,null],[11,"leave_multicast_v4","","",3,null],[11,"leave_multicast_v6","","",3,null],[11,"set_read_timeout_ms","","",3,null],[11,"read_timeout_ms","","",3,null],[11,"set_write_timeout_ms","","",3,null],[11,"write_timeout_ms","","",3,null],[11,"set_read_timeout","","",3,null],[11,"read_timeout","","",3,null],[11,"set_write_timeout","","",3,null],[11,"write_timeout","","",3,null],[11,"take_error","","",3,null],[11,"connect","","",3,null],[11,"send","","",3,null],[11,"recv","","",3,null],[11,"set_nonblocking","","",3,null],[11,"set_ttl","std::net::tcp","",4,null],[11,"ttl","","",4,null],[11,"set_only_v6","","",4,null],[11,"only_v6","","",4,null],[11,"take_error","","",4,null],[11,"set_nonblocking","","",4,null],[11,"ttl","net2","Sets the value for the `IP_TTL` option on this socket.",0,null],[11,"only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",0,null],[11,"reuse_address","","Set value for the `SO_REUSEADDR` option on this socket.",0,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",0,null],[11,"ttl","","Sets the value for the `IP_TTL` option on this socket.",1,null],[11,"only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",1,null],[11,"reuse_address","","Set value for the `SO_REUSEADDR` option on this socket.",1,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",1,null],[11,"from_raw_fd","","",0,{"inputs":[{"name":"c_int"}],"output":{"name":"tcpbuilder"}}],[11,"as_raw_fd","","",0,null],[11,"from_raw_fd","","",1,{"inputs":[{"name":"c_int"}],"output":{"name":"udpbuilder"}}],[11,"as_raw_fd","","",1,null],[0,"unix","","Unix-specific extensions to the `std::net` types.",null,null],[8,"UnixTcpBuilderExt","net2::unix","Unix-specific extensions for the `TcpBuilder` type in this library.",null,null],[10,"reuse_port","","Set value for the `SO_REUSEPORT` option on this socket.",5,null],[8,"UnixUdpBuilderExt","","Unix-specific extensions for the `UdpBuilder` type in this library.",null,null],[10,"reuse_port","","Set value for the `SO_REUSEPORT` option on this socket.",6,null],[11,"reuse_port","net2","",0,null],[11,"reuse_port","","",1,null],[8,"TcpStreamExt","","Extension methods for the standard [`TcpStream` type][link] in `std::net`.",null,null],[10,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",7,null],[10,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",7,null],[10,"set_keepalive_ms","","Sets whether keepalive messages are enabled to be sent on this socket.",7,null],[10,"keepalive_ms","","Returns whether keepalive messages are enabled on this socket, and if so\nthe amount of milliseconds between them.",7,null],[10,"set_keepalive","","Sets whether keepalive messages are enabled to be sent on this socket.",7,null],[10,"keepalive","","Returns whether keepalive messages are enabled on this socket, and if so\nthe duration of time between them.",7,null],[10,"set_read_timeout_ms","","Sets the `SO_RCVTIMEO` option for this socket.",7,null],[10,"set_read_timeout","","Sets the `SO_RCVTIMEO` option for this socket.",7,null],[10,"read_timeout_ms","","Gets the value of the `SO_RCVTIMEO` option for this socket.",7,null],[10,"read_timeout","","Gets the value of the `SO_RCVTIMEO` option for this socket.",7,null],[10,"set_write_timeout_ms","","Sets the `SO_SNDTIMEO` option for this socket.",7,null],[10,"set_write_timeout","","Sets the `SO_SNDTIMEO` option for this socket.",7,null],[10,"write_timeout_ms","","Gets the value of the `SO_SNDTIMEO` option for this socket.",7,null],[10,"write_timeout","","Gets the value of the `SO_SNDTIMEO` option for this socket.",7,null],[10,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",7,null],[10,"ttl","","Gets the value of the `IP_TTL` option for this socket.",7,null],[10,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",7,null],[10,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",7,null],[10,"connect","","Executes a `connect` operation on this socket, establishing a connection\nto the host specified by `addr`.",7,null],[10,"take_error","","Get the value of the `SO_ERROR` option on this socket.",7,null],[10,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",7,null],[8,"TcpListenerExt","","Extension methods for the standard [`TcpListener` type][link] in `std::net`.",null,null],[10,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",8,null],[10,"ttl","","Gets the value of the `IP_TTL` option for this socket.",8,null],[10,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",8,null],[10,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",8,null],[10,"take_error","","Get the value of the `SO_ERROR` option on this socket.",8,null],[10,"set_nonblocking","","Moves this TCP listener into or out of nonblocking mode.",8,null],[8,"UdpSocketExt","","Extension methods for the standard [`UdpSocket` type][link] in `std::net`.",null,null],[10,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",9,null],[10,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",9,null],[10,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this socket.",9,null],[10,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this socket.",9,null],[10,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this socket.",9,null],[10,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this socket.",9,null],[10,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",9,null],[10,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",9,null],[10,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",9,null],[10,"ttl","","Gets the value of the `IP_TTL` option for this socket.",9,null],[10,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",9,null],[10,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",9,null],[10,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",9,null],[10,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",9,null],[10,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",9,null],[10,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",9,null],[10,"set_read_timeout_ms","","Sets the `SO_RCVTIMEO` option for this socket.",9,null],[10,"set_read_timeout","","Sets the `SO_RCVTIMEO` option for this socket.",9,null],[10,"read_timeout_ms","","Gets the value of the `SO_RCVTIMEO` option for this socket.",9,null],[10,"read_timeout","","Gets the value of the `SO_RCVTIMEO` option for this socket.",9,null],[10,"set_write_timeout_ms","","Sets the `SO_SNDTIMEO` option for this socket.",9,null],[10,"set_write_timeout","","Sets the `SO_SNDTIMEO` option for this socket.",9,null],[10,"write_timeout_ms","","Gets the value of the `SO_SNDTIMEO` option for this socket.",9,null],[10,"write_timeout","","Gets the value of the `SO_SNDTIMEO` option for this socket.",9,null],[10,"take_error","","Get the value of the `SO_ERROR` option on this socket.",9,null],[10,"connect","","Connects this UDP socket to a remote address, allowing the `send` and\n`recv` syscalls to be used to send data and also applies filters to only\nreceive data from the specified address.",9,null],[10,"send","","Sends data on the socket to the remote address to which it is connected.",9,null],[10,"recv","","Receives data on the socket from the remote address to which it is\nconnected.",9,null],[10,"set_nonblocking","","Moves this UDP socket into or out of nonblocking mode.",9,null]],"paths":[[3,"TcpBuilder"],[3,"UdpBuilder"],[3,"TcpStream"],[3,"UdpSocket"],[3,"TcpListener"],[8,"UnixTcpBuilderExt"],[8,"UnixUdpBuilderExt"],[8,"TcpStreamExt"],[8,"TcpListenerExt"],[8,"UdpSocketExt"]]};
searchIndex["memmap"] = {"doc":"A cross-platform Rust API for memory maps.","items":[[3,"MmapOptions","memmap","",null,null],[12,"stack","","Indicates that the memory map should be suitable for a stack.",0,null],[3,"Mmap","","A memory-mapped buffer.",null,null],[3,"MmapView","","A view of a memory map.",null,null],[3,"MmapViewSync","","A thread-safe view of a memory map.",null,null],[4,"Protection","","Memory map protection.",null,null],[13,"Read","","A read-only memory map. Writes to the memory map will result in a panic.",1,null],[13,"ReadWrite","","A read-write memory map. Writes to the memory map will be reflected in\nthe file after a call to `Mmap::flush` or after the `Mmap` is dropped.",1,null],[13,"ReadCopy","","A read, copy-on-write memory map. Writes to the memory map will not be\ncarried through to the underlying file. It is unspecified whether\nchanges made to the file after the memory map is created will be\nvisible.",1,null],[11,"eq","","",1,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"write","","Returns `true` if the `Protection` is writable.",1,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"default","","",0,{"inputs":[],"output":{"name":"mmapoptions"}}],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"open","","Opens a file-backed memory map.",2,{"inputs":[{"name":"file"},{"name":"protection"}],"output":{"name":"result"}}],[11,"open_path","","Opens a file-backed memory map.",2,{"inputs":[{"name":"p"},{"name":"protection"}],"output":{"name":"result"}}],[11,"open_with_offset","","Opens a file-backed memory map with the specified offset and length.",2,{"inputs":[{"name":"file"},{"name":"protection"},{"name":"usize"},{"name":"usize"}],"output":{"name":"result"}}],[11,"anonymous","","Opens an anonymous memory map.",2,{"inputs":[{"name":"usize"},{"name":"protection"}],"output":{"name":"result"}}],[11,"anonymous_with_options","","Opens an anonymous memory map with the provided options.",2,{"inputs":[{"name":"usize"},{"name":"protection"},{"name":"mmapoptions"}],"output":{"name":"result"}}],[11,"flush","","Flushes outstanding memory map modifications to disk.",2,null],[11,"flush_async","","Asynchronously flushes outstanding memory map modifications to disk.",2,null],[11,"flush_range","","Flushes outstanding memory map modifications in the range to disk.",2,null],[11,"flush_async_range","","Asynchronously flushes outstanding memory map modifications in the range\nto disk.",2,null],[11,"len","","Returns the length of the memory map.",2,null],[11,"ptr","","Returns a pointer to the mapped memory.",2,null],[11,"mut_ptr","","Returns a pointer to the mapped memory.",2,null],[11,"as_slice","","Returns the memory mapped file as an immutable slice.",2,null],[11,"as_mut_slice","","Returns the memory mapped file as a mutable slice.",2,null],[11,"into_view","","Creates a splittable mmap view from the mmap.",2,null],[11,"into_view_sync","","Creates a thread-safe splittable mmap view from the mmap.",2,null],[11,"split_at","","Split the view into disjoint pieces at the specified offset.",3,null],[11,"restrict","","Restricts the range of the view to the provided offset and length.",3,null],[11,"flush","","Flushes outstanding view modifications to disk.",3,null],[11,"flush_async","","Asynchronously flushes outstanding memory map view modifications to\ndisk.",3,null],[11,"len","","Returns the length of the memory map view.",3,null],[11,"ptr","","Returns a shared pointer to the mapped memory.",3,null],[11,"mut_ptr","","Returns a mutable pointer to the mapped memory.",3,null],[11,"as_slice","","Returns the memory mapped file as an immutable slice.",3,null],[11,"as_mut_slice","","Returns the memory mapped file as a mutable slice.",3,null],[11,"clone","","Clones the view of the memory map.",3,null],[11,"split_at","","Split the view into disjoint pieces at the specified offset.",4,null],[11,"restrict","","Restricts the range of this view to the provided offset and length.",4,null],[11,"flush","","Flushes outstanding view modifications to disk.",4,null],[11,"flush_async","","Asynchronously flushes outstanding memory map view modifications to disk.",4,null],[11,"len","","Returns the length of the memory map view.",4,null],[11,"ptr","","Returns a shared pointer to the mapped memory.",4,null],[11,"mut_ptr","","Returns a mutable pointer to the mapped memory.",4,null],[11,"as_slice","","Returns the memory mapped file as an immutable slice.",4,null],[11,"as_mut_slice","","Returns the memory mapped file as a mutable slice.",4,null],[11,"clone","","Clones the view of the memory map.",4,null]],"paths":[[3,"MmapOptions"],[4,"Protection"],[3,"Mmap"],[3,"MmapView"],[3,"MmapViewSync"]]};
searchIndex["num_integer"] = {"doc":"Integer trait and functions.","items":[[5,"div_rem","num_integer","Simultaneous integer division and modulus",null,null],[5,"div_floor","","Floored integer division",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"mod_floor","","Floored integer modulus",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",null,null],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`. The\nresult is always positive.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[8,"Integer","","",null,null],[10,"div_floor","","Floored integer division.",0,null],[10,"mod_floor","","Floored integer modulo, satisfying:",0,null],[10,"gcd","","Greatest Common Divisor (GCD).",0,null],[10,"lcm","","Lowest Common Multiple (LCM).",0,null],[10,"divides","","Deprecated, use `is_multiple_of` instead.",0,null],[10,"is_multiple_of","","Returns `true` if `other` is a multiple of `self`.",0,null],[10,"is_even","","Returns `true` if the number is even.",0,null],[10,"is_odd","","Returns `true` if the number is odd.",0,null],[10,"div_rem","","Simultaneous truncated integer division and modulus.\nReturns `(quotient, remainder)`.",0,null],[11,"div_mod_floor","","Simultaneous floored integer division and modulus.\nReturns `(quotient, remainder)`.",0,null]],"paths":[[8,"Integer"]]};
searchIndex["backtrace"] = {"doc":"A library for acquiring a backtrace at runtime","items":[[5,"trace","backtrace","Inspects the current call-stack, passing all active frames into the closure\nprovided to calculate a stack trace.",null,{"inputs":[{"name":"fnmut"}],"output":null}],[5,"resolve","","Resolve an address to a symbol, passing the symbol to the specified\nclosure.",null,null],[5,"demangle","","De-mangles a Rust symbol into a more readable version",null,{"inputs":[{"name":"write"},{"name":"str"}],"output":{"name":"result"}}],[8,"Frame","","A trait representing one frame of a backtrace, yielded to the `trace`\nfunction of this crate.",null,null],[10,"ip","","Returns the current instruction pointer of this frame.",0,null],[10,"symbol_address","","Returns the starting symbol address of the frame of this function.",0,null],[8,"Symbol","","A trait representing the resolution of a symbol in a file.",null,null],[11,"name","","Returns the name of this function as a byte array (may not always be\nvalid UTF-8).",1,null],[11,"addr","","Returns the starting address of this function.",1,null],[11,"filename","","Returns the file name where this function was defined.",1,null],[11,"lineno","","Returns the line number for where this symbol is currently executing.",1,null],[11,"fmt","","",0,null],[11,"name","","Returns the name of this function as a byte array (may not always be\nvalid UTF-8).",1,null],[11,"addr","","Returns the starting address of this function.",1,null],[11,"filename","","Returns the file name where this function was defined.",1,null],[11,"lineno","","Returns the line number for where this symbol is currently executing.",1,null],[11,"fmt","","",1,null]],"paths":[[8,"Frame"],[8,"Symbol"]]};
searchIndex["shared_library"] = {"doc":"","items":[[4,"LoadingError","shared_library","Error that can happen while loading the shared library.",null,null],[13,"LibraryNotFound","","",0,null],[12,"descr","shared_library::LoadingError","",0,null],[13,"SymbolNotFound","shared_library","One of the symbols could not be found in the library.",0,null],[12,"symbol","shared_library::LoadingError","The symbol.",0,null],[0,"dynamic_library","shared_library","Dynamic library facilities.",null,null],[3,"DynamicLibrary","shared_library::dynamic_library","",null,null],[11,"new","std::sync::mutex","Creates a new mutex in an unlocked state ready for use.",1,{"inputs":[{"name":"t"}],"output":{"name":"mutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",1,null],[11,"try_lock","","Attempts to acquire this lock.",1,null],[11,"is_poisoned","","Determines whether the lock is poisoned.",1,null],[11,"into_inner","","Consumes this mutex, returning the underlying data.",1,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",1,null],[11,"from","alloc::boxed","",2,{"inputs":[{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",2,{"inputs":[{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",2,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",2,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",2,{"inputs":[{"name":"str"}],"output":{"name":"box"}}],[11,"from","","",2,{"inputs":[{"name":"str"}],"output":{"name":"box"}}],[11,"description","core::str","",3,null],[11,"description","","",4,null],[11,"description","core::num","",5,null],[11,"description","","",6,null],[11,"description","core::num::dec2flt","",7,null],[11,"description","collections::string","",8,null],[11,"description","","",9,null],[11,"description","","",10,null],[11,"description","rustc_unicode::char","",11,null],[11,"description","alloc::boxed","",2,null],[11,"cause","","",2,null],[11,"description","core::fmt","",12,null],[11,"is","shared_library::dynamic_library","Returns true if the boxed type is the same as `T`",13,null],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",13,null],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",13,null],[11,"is","","Forwards to the method defined on the type `Any`.",13,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",13,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",13,null],[11,"is","","Forwards to the method defined on the type `Any`.",13,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",13,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",13,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",13,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",13,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",13,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"next","std::ascii","",14,null],[11,"size_hint","","",14,null],[11,"next_back","","",14,null],[11,"clone","std::thread::local","",15,null],[11,"eq","","",15,null],[11,"with","","Acquires a reference to the value in this TLS key.",16,null],[11,"state","","Query the current state of this key.",16,null],[11,"new","std::thread::local::elf","",17,{"inputs":[],"output":{"name":"key"}}],[11,"get","","",17,null],[11,"new","std::thread::local::os","",18,{"inputs":[],"output":{"name":"key"}}],[11,"get","","",18,null],[11,"new","std::thread","Generates the base configuration for spawning a thread, from which\nconfiguration methods can be chained.",19,{"inputs":[],"output":{"name":"builder"}}],[11,"name","","Names the thread-to-be. Currently the name is used for identification\nonly in panic messages.",19,null],[11,"stack_size","","Sets the size of the stack for the new thread.",19,null],[11,"spawn","","Spawns a new thread, and returns a join handle for it.",19,null],[11,"clone","","",20,null],[11,"unpark","","Atomically makes the handle&#39;s token available if it is not already.",20,null],[11,"name","","Gets the thread&#39;s name.",20,null],[11,"fmt","","",20,null],[11,"thread","","Extracts a handle to the underlying thread",21,null],[11,"join","","Waits for the associated thread to finish.",21,null],[11,"clone","std::collections::hash::map","",22,null],[11,"new","","Creates an empty HashMap.",22,{"inputs":[],"output":{"name":"hashmap"}}],[11,"with_capacity","","Creates an empty hash map with the given initial capacity.",22,{"inputs":[{"name":"usize"}],"output":{"name":"hashmap"}}],[11,"with_hasher","","Creates an empty hashmap which will use the given hash builder to hash\nkeys.",22,{"inputs":[{"name":"s"}],"output":{"name":"hashmap"}}],[11,"with_capacity_and_hasher","","Creates an empty HashMap with space for at least `capacity`\nelements, using `hasher` to hash the keys.",22,{"inputs":[{"name":"usize"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"hasher","","Returns a reference to the map&#39;s hasher.",22,null],[11,"capacity","","Returns the number of elements the map can hold without reallocating.",22,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashMap`. The collection may reserve more space to avoid\nfrequent reallocations.",22,null],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",22,null],[11,"keys","","An iterator visiting all keys in arbitrary order.\nIterator element type is `&amp;&#39;a K`.",22,null],[11,"values","","An iterator visiting all values in arbitrary order.\nIterator element type is `&amp;&#39;a V`.",22,null],[11,"values_mut","","An iterator visiting all values mutably in arbitrary order.\nIterator element type is `&amp;&#39;a mut V`.",22,null],[11,"iter","","An iterator visiting all key-value pairs in arbitrary order.\nIterator element type is `(&amp;&#39;a K, &amp;&#39;a V)`.",22,null],[11,"iter_mut","","An iterator visiting all key-value pairs in arbitrary order,\nwith mutable references to the values.\nIterator element type is `(&amp;&#39;a K, &amp;&#39;a mut V)`.",22,null],[11,"entry","","Gets the given key&#39;s corresponding entry in the map for in-place manipulation.",22,null],[11,"len","","Returns the number of elements in the map.",22,null],[11,"is_empty","","Returns true if the map contains no elements.",22,null],[11,"drain","","Clears the map, returning all key-value pairs as an iterator. Keeps the\nallocated memory for reuse.",22,null],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the allocated memory\nfor reuse.",22,null],[11,"get","","Returns a reference to the value corresponding to the key.",22,null],[11,"contains_key","","Returns true if the map contains a value for the specified key.",22,null],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",22,null],[11,"insert","","Inserts a key-value pair into the map.",22,null],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",22,null],[11,"eq","","",22,null],[11,"fmt","","",22,null],[11,"default","","",22,{"inputs":[],"output":{"name":"hashmap"}}],[11,"index","","",22,null],[11,"clone","","",23,null],[11,"clone","","",24,null],[11,"clone","","",25,null],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each key-value\npair out of the map in arbitrary order. The map cannot be used after\ncalling this.",22,null],[11,"next","","",23,null],[11,"size_hint","","",23,null],[11,"len","","",23,null],[11,"next","","",26,null],[11,"size_hint","","",26,null],[11,"len","","",26,null],[11,"next","","",27,null],[11,"size_hint","","",27,null],[11,"len","","",27,null],[11,"next","","",24,null],[11,"size_hint","","",24,null],[11,"len","","",24,null],[11,"next","","",25,null],[11,"size_hint","","",25,null],[11,"len","","",25,null],[11,"next","","",28,null],[11,"size_hint","","",28,null],[11,"len","","",28,null],[11,"next","","",29,null],[11,"size_hint","","",29,null],[11,"len","","",29,null],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",30,null],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",30,null],[11,"key","","Returns a reference to this entry&#39;s key.",30,null],[11,"key","","Gets a reference to the key in the entry.",31,null],[11,"remove_pair","","Take the ownership of the key and value from the map.",31,null],[11,"get","","Gets a reference to the value in the entry.",31,null],[11,"get_mut","","Gets a mutable reference to the value in the entry.",31,null],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to the value in the entry\nwith a lifetime bound to the map itself",31,null],[11,"insert","","Sets the value of the entry, and returns the entry&#39;s old value",31,null],[11,"remove","","Takes the value out of the entry, and returns it",31,null],[11,"key","","Gets a reference to the key that would be used when inserting a value\nthrough the VacantEntry.",32,null],[11,"into_key","","Take ownership of the key.",32,null],[11,"insert","","Sets the value of the entry with the VacantEntry&#39;s key,\nand returns a mutable reference to it",32,null],[11,"from_iter","","",22,{"inputs":[{"name":"t"}],"output":{"name":"hashmap"}}],[11,"extend","","",22,null],[11,"extend","","",22,null],[11,"clone","","",33,null],[11,"new","","Constructs a new `RandomState` that is initialized with random keys.",33,{"inputs":[],"output":{"name":"randomstate"}}],[11,"build_hasher","","",33,null],[11,"write","","",34,null],[11,"finish","","",34,null],[11,"default","","",33,{"inputs":[],"output":{"name":"randomstate"}}],[11,"clone","std::collections::hash::set","",35,null],[11,"new","","Creates an empty HashSet.",35,{"inputs":[],"output":{"name":"hashset"}}],[11,"with_capacity","","Creates an empty HashSet with space for at least `n` elements in\nthe hash table.",35,{"inputs":[{"name":"usize"}],"output":{"name":"hashset"}}],[11,"with_hasher","","Creates a new empty hash set which will use the given hasher to hash\nkeys.",35,{"inputs":[{"name":"s"}],"output":{"name":"hashset"}}],[11,"with_capacity_and_hasher","","Creates an empty HashSet with space for at least `capacity`\nelements in the hash table, using `hasher` to hash the keys.",35,{"inputs":[{"name":"usize"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"hasher","","Returns a reference to the set&#39;s hasher.",35,null],[11,"capacity","","Returns the number of elements the set can hold without reallocating.",35,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashSet`. The collection may reserve more space to avoid\nfrequent reallocations.",35,null],[11,"shrink_to_fit","","Shrinks the capacity of the set as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",35,null],[11,"iter","","An iterator visiting all elements in arbitrary order.\nIterator element type is &amp;&#39;a T.",35,null],[11,"difference","","Visit the values representing the difference.",35,null],[11,"symmetric_difference","","Visit the values representing the symmetric difference.",35,null],[11,"intersection","","Visit the values representing the intersection.",35,null],[11,"union","","Visit the values representing the union.",35,null],[11,"len","","Returns the number of elements in the set.",35,null],[11,"is_empty","","Returns true if the set contains no elements.",35,null],[11,"drain","","Clears the set, returning all elements in an iterator.",35,null],[11,"clear","","Clears the set, removing all values.",35,null],[11,"contains","","Returns `true` if the set contains a value.",35,null],[11,"get","","Returns a reference to the value in the set, if any, that is equal to the given value.",35,null],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",35,null],[11,"is_subset","","Returns `true` if the set is a subset of another.",35,null],[11,"is_superset","","Returns `true` if the set is a superset of another.",35,null],[11,"insert","","Adds a value to the set.",35,null],[11,"replace","","Adds a value to the set, replacing the existing value, if any, that is equal to the given\none. Returns the replaced value.",35,null],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",35,null],[11,"take","","Removes and returns the value in the set, if any, that is equal to the given one.",35,null],[11,"eq","","",35,null],[11,"fmt","","",35,null],[11,"from_iter","","",35,{"inputs":[{"name":"i"}],"output":{"name":"hashset"}}],[11,"extend","","",35,null],[11,"extend","","",35,null],[11,"default","","",35,{"inputs":[],"output":{"name":"hashset"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out\nof the set in arbitrary order. The set cannot be used after calling\nthis.",35,null],[11,"clone","","",36,null],[11,"next","","",36,null],[11,"size_hint","","",36,null],[11,"len","","",36,null],[11,"next","","",37,null],[11,"size_hint","","",37,null],[11,"len","","",37,null],[11,"next","","",38,null],[11,"size_hint","","",38,null],[11,"len","","",38,null],[11,"clone","","",39,null],[11,"next","","",39,null],[11,"size_hint","","",39,null],[11,"clone","","",40,null],[11,"next","","",40,null],[11,"size_hint","","",40,null],[11,"clone","","",41,null],[11,"next","","",41,null],[11,"size_hint","","",41,null],[11,"clone","","",42,null],[11,"next","","",42,null],[11,"size_hint","","",42,null],[11,"drop","collections::binary_heap","",43,null],[11,"deref","","",43,null],[11,"deref_mut","","",43,null],[11,"clone","","",44,null],[11,"clone_from","","",44,null],[11,"default","","",44,{"inputs":[],"output":{"name":"binaryheap"}}],[11,"fmt","","",44,null],[11,"new","","Creates an empty `BinaryHeap` as a max-heap.",44,{"inputs":[],"output":{"name":"binaryheap"}}],[11,"with_capacity","","Creates an empty `BinaryHeap` with a specific capacity.\nThis preallocates enough memory for `capacity` elements,\nso that the `BinaryHeap` does not have to be reallocated\nuntil it contains at least that many values.",44,{"inputs":[{"name":"usize"}],"output":{"name":"binaryheap"}}],[11,"iter","","Returns an iterator visiting all values in the underlying vector, in\narbitrary order.",44,null],[11,"peek","","Returns the greatest item in the binary heap, or `None` if it is empty.",44,null],[11,"peek_mut","","Returns a mutable reference to the greatest item in the binary heap, or\n`None` if it is empty.",44,null],[11,"capacity","","Returns the number of elements the binary heap can hold without reallocating.",44,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `BinaryHeap`. Does nothing if the capacity is already sufficient.",44,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the\n`BinaryHeap`. The collection may reserve more space to avoid frequent reallocations.",44,null],[11,"shrink_to_fit","","Discards as much additional capacity as possible.",44,null],[11,"pop","","Removes the greatest item from the binary heap and returns it, or `None` if it\nis empty.",44,null],[11,"push","","Pushes an item onto the binary heap.",44,null],[11,"push_pop","","Pushes an item onto the binary heap, then pops the greatest item off the queue in\nan optimized fashion.",44,null],[11,"replace","","Pops the greatest item off the binary heap, then pushes an item onto the queue in\nan optimized fashion. The push is done regardless of whether the binary heap\nwas empty.",44,null],[11,"into_vec","","Consumes the `BinaryHeap` and returns the underlying vector\nin arbitrary order.",44,null],[11,"into_sorted_vec","","Consumes the `BinaryHeap` and returns a vector in sorted\n(ascending) order.",44,null],[11,"len","","Returns the length of the binary heap.",44,null],[11,"is_empty","","Checks if the binary heap is empty.",44,null],[11,"drain","","Clears the binary heap, returning an iterator over the removed elements.",44,null],[11,"clear","","Drops all items from the binary heap.",44,null],[11,"append","","Moves all the elements of `other` into `self`, leaving `other` empty.",44,null],[11,"clone","","",45,null],[11,"next","","",45,null],[11,"size_hint","","",45,null],[11,"next_back","","",45,null],[11,"clone","","",46,null],[11,"next","","",46,null],[11,"size_hint","","",46,null],[11,"next_back","","",46,null],[11,"next","","",47,null],[11,"size_hint","","",47,null],[11,"next_back","","",47,null],[11,"from","","",44,{"inputs":[{"name":"vec"}],"output":{"name":"binaryheap"}}],[11,"from","collections::vec","",48,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"from_iter","collections::binary_heap","",44,{"inputs":[{"name":"i"}],"output":{"name":"binaryheap"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe binary heap in arbitrary order. The binary heap cannot be used\nafter calling this.",44,null],[11,"extend","","",44,null],[11,"extend","","",44,null],[11,"clone","collections::vec_deque","",49,null],[11,"drop","","",49,null],[11,"default","","",49,{"inputs":[],"output":{"name":"vecdeque"}}],[11,"new","","Creates an empty `VecDeque`.",49,{"inputs":[],"output":{"name":"vecdeque"}}],[11,"with_capacity","","Creates an empty `VecDeque` with space for at least `n` elements.",49,{"inputs":[{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"get","","Retrieves an element in the `VecDeque` by index.",49,null],[11,"get_mut","","Retrieves an element in the `VecDeque` mutably by index.",49,null],[11,"swap","","Swaps elements at indices `i` and `j`.",49,null],[11,"capacity","","Returns the number of elements the `VecDeque` can hold without\nreallocating.",49,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `VecDeque`. Does nothing if the capacity is already sufficient.",49,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the given\n`VecDeque`. The collection may reserve more space to avoid frequent reallocations.",49,null],[11,"shrink_to_fit","","Shrinks the capacity of the `VecDeque` as much as possible.",49,null],[11,"truncate","","Shortens a `VecDeque`, dropping excess elements from the back.",49,null],[11,"iter","","Returns a front-to-back iterator.",49,null],[11,"iter_mut","","Returns a front-to-back iterator that returns mutable references.",49,null],[11,"as_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",49,null],[11,"as_mut_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",49,null],[11,"len","","Returns the number of elements in the `VecDeque`.",49,null],[11,"is_empty","","Returns true if the buffer contains no elements",49,null],[11,"drain","","Create a draining iterator that removes the specified range in the\n`VecDeque` and yields the removed items.",49,null],[11,"clear","","Clears the buffer, removing all values.",49,null],[11,"contains","","Returns `true` if the `VecDeque` contains an element equal to the\ngiven value.",49,null],[11,"front","","Provides a reference to the front element, or `None` if the sequence is\nempty.",49,null],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the\nsequence is empty.",49,null],[11,"back","","Provides a reference to the back element, or `None` if the sequence is\nempty.",49,null],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the\nsequence is empty.",49,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the sequence is\nempty.",49,null],[11,"push_front","","Inserts an element first in the sequence.",49,null],[11,"push_back","","Appends an element to the back of a buffer",49,null],[11,"pop_back","","Removes the last element from a buffer and returns it, or `None` if\nit is empty.",49,null],[11,"swap_remove_back","","Removes an element from anywhere in the `VecDeque` and returns it, replacing it with the\nlast element.",49,null],[11,"swap_remove_front","","Removes an element from anywhere in the `VecDeque` and returns it,\nreplacing it with the first element.",49,null],[11,"insert","","Inserts an element at `index` within the `VecDeque`. Whichever\nend is closer to the insertion point will be moved to make room,\nand all the affected elements will be moved to new positions.",49,null],[11,"remove","","Removes and returns the element at `index` from the `VecDeque`.\nWhichever end is closer to the removal point will be moved to make\nroom, and all the affected elements will be moved to new positions.\nReturns `None` if `index` is out of bounds.",49,null],[11,"split_off","","Splits the collection into two at the given index.",49,null],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",49,null],[11,"retain","","Retains only the elements specified by the predicate.",49,null],[11,"resize","","Modifies the `VecDeque` in-place so that `len()` is equal to new_len,\neither by removing excess elements or by appending copies of a value to the back.",49,null],[11,"clone","","",50,null],[11,"next","","",50,null],[11,"size_hint","","",50,null],[11,"next_back","","",50,null],[11,"next","","",51,null],[11,"size_hint","","",51,null],[11,"next_back","","",51,null],[11,"clone","","",52,null],[11,"next","","",52,null],[11,"size_hint","","",52,null],[11,"next_back","","",52,null],[11,"drop","","",53,null],[11,"next","","",53,null],[11,"size_hint","","",53,null],[11,"next_back","","",53,null],[11,"eq","","",49,null],[11,"partial_cmp","","",49,null],[11,"cmp","","",49,null],[11,"hash","","",49,null],[11,"index","","",49,null],[11,"index_mut","","",49,null],[11,"from_iter","","",49,{"inputs":[{"name":"t"}],"output":{"name":"vecdeque"}}],[11,"into_iter","","Consumes the list into a front-to-back iterator yielding elements by\nvalue.",49,null],[11,"extend","","",49,null],[11,"extend","","",49,null],[11,"fmt","","",49,null],[11,"from","","",49,{"inputs":[{"name":"vec"}],"output":{"name":"vecdeque"}}],[11,"from","collections::vec","",48,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vec"}}],[11,"clone","collections::linked_list","",54,null],[11,"clone","","",55,null],[11,"default","","",56,{"inputs":[],"output":{"name":"linkedlist"}}],[11,"new","","Creates an empty `LinkedList`.",56,{"inputs":[],"output":{"name":"linkedlist"}}],[11,"append","","Moves all elements from `other` to the end of the list.",56,null],[11,"iter","","Provides a forward iterator.",56,null],[11,"iter_mut","","Provides a forward iterator with mutable references.",56,null],[11,"is_empty","","Returns `true` if the `LinkedList` is empty.",56,null],[11,"len","","Returns the length of the `LinkedList`.",56,null],[11,"clear","","Removes all elements from the `LinkedList`.",56,null],[11,"contains","","Returns `true` if the `LinkedList` contains an element equal to the\ngiven value.",56,null],[11,"front","","Provides a reference to the front element, or `None` if the list is\nempty.",56,null],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the list\nis empty.",56,null],[11,"back","","Provides a reference to the back element, or `None` if the list is\nempty.",56,null],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the list\nis empty.",56,null],[11,"push_front","","Adds an element first in the list.",56,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the list is\nempty.",56,null],[11,"push_back","","Appends an element to the back of a list",56,null],[11,"pop_back","","Removes the last element from a list and returns it, or `None` if\nit is empty.",56,null],[11,"split_off","","Splits the list into two at the given index. Returns everything after the given index,\nincluding the index.",56,null],[11,"front_place","","Returns a place for insertion at the front of the list.",56,null],[11,"back_place","","Returns a place for insertion at the back of the list.",56,null],[11,"drop","","",56,null],[11,"next","","",54,null],[11,"size_hint","","",54,null],[11,"next_back","","",54,null],[11,"next","","",57,null],[11,"size_hint","","",57,null],[11,"next_back","","",57,null],[11,"insert_next","","Inserts `elt` just after the element most recently returned by `.next()`.\nThe inserted element does not appear in the iteration.",57,null],[11,"peek_next","","Provides a reference to the next element, without changing the iterator.",57,null],[11,"next","","",55,null],[11,"size_hint","","",55,null],[11,"next_back","","",55,null],[11,"from_iter","","",56,{"inputs":[{"name":"t"}],"output":{"name":"linkedlist"}}],[11,"into_iter","","Consumes the list into an iterator yielding elements by value.",56,null],[11,"extend","","",56,null],[11,"extend","","",56,null],[11,"eq","","",56,null],[11,"ne","","",56,null],[11,"partial_cmp","","",56,null],[11,"cmp","","",56,null],[11,"clone","","",56,null],[11,"fmt","","",56,null],[11,"hash","","",56,null],[11,"make_place","","",58,null],[11,"pointer","","",58,null],[11,"finalize","","",58,null],[11,"make_place","","",59,null],[11,"pointer","","",59,null],[11,"finalize","","",59,null],[11,"next","std::env","",60,null],[11,"size_hint","","",60,null],[11,"next","","",61,null],[11,"size_hint","","",61,null],[11,"clone","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"fmt","","",62,null],[11,"fmt","","",62,null],[11,"description","","",62,null],[11,"next","","",63,null],[11,"size_hint","","",63,null],[11,"fmt","","",64,null],[11,"fmt","","",64,null],[11,"description","","",64,null],[11,"next","","",65,null],[11,"size_hint","","",65,null],[11,"len","","",65,null],[11,"next","","",66,null],[11,"size_hint","","",66,null],[11,"len","","",66,null],[11,"clone","std::ffi::c_str","",67,null],[11,"hash","","",67,null],[11,"cmp","","",67,null],[11,"partial_cmp","","",67,null],[11,"lt","","",67,null],[11,"le","","",67,null],[11,"gt","","",67,null],[11,"ge","","",67,null],[11,"eq","","",67,null],[11,"ne","","",67,null],[11,"hash","","",68,null],[11,"fmt","","",69,null],[11,"eq","","",69,null],[11,"ne","","",69,null],[11,"clone","","",69,null],[11,"fmt","","",70,null],[11,"eq","","",70,null],[11,"ne","","",70,null],[11,"clone","","",70,null],[11,"fmt","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"clone","","",71,null],[11,"new","","Creates a new C-compatible string from a container of bytes.",67,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[11,"from_vec_unchecked","","Creates a C-compatible string from a byte vector without checking for\ninterior 0 bytes.",67,{"inputs":[{"name":"vec"}],"output":{"name":"cstring"}}],[11,"from_raw","","Retakes ownership of a `CString` that was transferred to C.",67,null],[11,"into_raw","","Transfers ownership of the string to a C caller.",67,null],[11,"into_string","","Converts the `CString` into a `String` if it contains valid Unicode data.",67,null],[11,"into_bytes","","Returns the underlying byte buffer.",67,null],[11,"into_bytes_with_nul","","Equivalent to the `into_bytes` function except that the returned vector\nincludes the trailing nul byte.",67,null],[11,"as_bytes","","Returns the contents of this `CString` as a slice of bytes.",67,null],[11,"as_bytes_with_nul","","Equivalent to the `as_bytes` function except that the returned slice\nincludes the trailing nul byte.",67,null],[11,"from_ptr","","Casts a raw C string to a safe C string wrapper.",68,null],[11,"from_bytes_with_nul","","Creates a C string wrapper from a byte slice.",68,null],[11,"from_bytes_with_nul_unchecked","","Unsafely creates a C string wrapper from a byte slice.",68,null],[11,"as_ptr","","Returns the inner pointer to this C string.",68,null],[11,"to_bytes","","Converts this C string to a byte slice.",68,null],[11,"to_bytes_with_nul","","Converts this C string to a byte slice containing the trailing 0 byte.",68,null],[11,"to_str","","Yields a `&amp;str` slice if the `CStr` contains valid UTF-8.",68,null],[11,"to_string_lossy","","Converts a `CStr` into a `Cow&lt;str&gt;`.",68,null],[11,"deref","","",67,null],[11,"fmt","","",67,null],[11,"from","collections::vec","",48,{"inputs":[{"name":"cstring"}],"output":{"name":"vec"}}],[11,"fmt","std::ffi::c_str","",68,null],[11,"default","","",67,{"inputs":[],"output":{"name":"cstring"}}],[11,"borrow","","",67,null],[11,"nul_position","","Returns the position of the nul byte in the slice that was provided to\n`CString::new`.",69,null],[11,"into_vec","","Consumes this error, returning the underlying vector of bytes which\ngenerated the error in the first place.",69,null],[11,"description","","",69,null],[11,"fmt","","",69,null],[11,"from","std::io::error","",72,{"inputs":[{"name":"nulerror"}],"output":{"name":"error"}}],[11,"into_cstring","std::ffi::c_str","Consumes this error, returning original `CString` which generated the\nerror.",71,null],[11,"utf8_error","","Access the underlying UTF-8 error that was the cause of this error.",71,null],[11,"description","","",71,null],[11,"cause","","",71,null],[11,"fmt","","",71,null],[11,"eq","","",68,null],[11,"partial_cmp","","",68,null],[11,"cmp","","",68,null],[11,"to_owned","","",68,null],[11,"from","","",67,{"inputs":[{"name":"cstr"}],"output":{"name":"cstring"}}],[11,"index","","",67,null],[11,"as_ref","","",68,null],[11,"as_ref","","",67,null],[11,"clone","std::ffi::os_str","",73,null],[11,"new","","Constructs a new empty `OsString`.",73,{"inputs":[],"output":{"name":"osstring"}}],[11,"as_os_str","","Converts to an `OsStr` slice.",73,null],[11,"into_string","","Converts the `OsString` into a `String` if it contains valid Unicode data.",73,null],[11,"push","","Extends the string with the given `&amp;OsStr` slice.",73,null],[11,"with_capacity","","Creates a new `OsString` with the given capacity.",73,{"inputs":[{"name":"usize"}],"output":{"name":"osstring"}}],[11,"clear","","Truncates the `OsString` to zero length.",73,null],[11,"capacity","","Returns the capacity this `OsString` can hold without reallocating.",73,null],[11,"reserve","","Reserves capacity for at least `additional` more capacity to be inserted\nin the given `OsString`.",73,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more capacity to\nbe inserted in the given `OsString`. Does nothing if the capacity is\nalready sufficient.",73,null],[11,"from","","",73,{"inputs":[{"name":"string"}],"output":{"name":"osstring"}}],[11,"from","","",73,{"inputs":[{"name":"t"}],"output":{"name":"osstring"}}],[11,"index","","",73,null],[11,"new","","Coerces into an `OsStr` slice.",74,{"inputs":[{"name":"s"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&amp;str` slice if the `OsStr` is valid Unicode.",74,null],[11,"to_string_lossy","","Converts an `OsStr` to a `Cow&lt;str&gt;`.",74,null],[11,"to_os_string","","Copies the slice into an owned `OsString`.",74,null],[11,"is_empty","","Checks whether the `OsStr` is empty.",74,null],[11,"len","","Returns the length of this `OsStr`.",74,null],[11,"deref","","",73,null],[11,"default","","",73,{"inputs":[],"output":{"name":"osstring"}}],[11,"fmt","","",73,null],[11,"eq","","",73,null],[11,"eq","","",73,null],[11,"partial_cmp","","",73,null],[11,"lt","","",73,null],[11,"le","","",73,null],[11,"gt","","",73,null],[11,"ge","","",73,null],[11,"partial_cmp","","",73,null],[11,"cmp","","",73,null],[11,"hash","","",73,null],[11,"eq","","",74,null],[11,"eq","","",74,null],[11,"partial_cmp","","",74,null],[11,"lt","","",74,null],[11,"le","","",74,null],[11,"gt","","",74,null],[11,"ge","","",74,null],[11,"partial_cmp","","",74,null],[11,"cmp","","",74,null],[11,"eq","","",73,null],[11,"eq","","",74,null],[11,"partial_cmp","","",73,null],[11,"partial_cmp","","",74,null],[11,"eq","","",73,null],[11,"partial_cmp","","",73,null],[11,"eq","collections::borrow","",75,null],[11,"eq","std::ffi::os_str","",74,null],[11,"partial_cmp","collections::borrow","",75,null],[11,"partial_cmp","std::ffi::os_str","",74,null],[11,"eq","collections::borrow","",75,null],[11,"partial_cmp","","",75,null],[11,"eq","","",75,null],[11,"eq","std::ffi::os_str","",73,null],[11,"partial_cmp","collections::borrow","",75,null],[11,"partial_cmp","std::ffi::os_str","",73,null],[11,"hash","","",74,null],[11,"fmt","","",74,null],[11,"borrow","","",73,null],[11,"to_owned","","",74,null],[11,"as_ref","","",74,null],[11,"as_ref","","",73,null],[11,"as_ref","collections::string","",76,null],[11,"clone","std::fs","",77,null],[11,"clone","","",78,null],[11,"fmt","","",79,null],[11,"eq","","",79,null],[11,"ne","","",79,null],[11,"clone","","",79,null],[11,"hash","","",80,null],[11,"eq","","",80,null],[11,"ne","","",80,null],[11,"clone","","",80,null],[11,"open","","Attempts to open a file in read-only mode.",81,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"create","","Opens a file in write-only mode.",81,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"sync_all","","Attempts to sync all OS-internal metadata to disk.",81,null],[11,"sync_data","","This function is similar to `sync_all`, except that it may not\nsynchronize file metadata to the filesystem.",81,null],[11,"set_len","","Truncates or extends the underlying file, updating the size of\nthis file to become `size`.",81,null],[11,"metadata","","Queries metadata about the underlying file.",81,null],[11,"try_clone","","Creates a new independently owned handle to the underlying file.",81,null],[11,"fmt","","",81,null],[11,"read","","",81,null],[11,"read_to_end","","",81,null],[11,"write","","",81,null],[11,"flush","","",81,null],[11,"seek","","",81,null],[11,"new","","Creates a blank new set of options ready for configuration.",78,{"inputs":[],"output":{"name":"openoptions"}}],[11,"read","","Sets the option for read access.",78,null],[11,"write","","Sets the option for write access.",78,null],[11,"append","","Sets the option for the append mode.",78,null],[11,"truncate","","Sets the option for truncating a previous file.",78,null],[11,"create","","Sets the option for creating a new file.",78,null],[11,"create_new","","Sets the option to always create a new file.",78,null],[11,"open","","Opens a file at `path` with the options specified by `self`.",78,null],[11,"file_type","","Returns the file type for this metadata.",77,null],[11,"is_dir","","Returns whether this metadata is for a directory.",77,null],[11,"is_file","","Returns whether this metadata is for a regular file.",77,null],[11,"len","","Returns the size of the file, in bytes, this metadata is for.",77,null],[11,"permissions","","Returns the permissions of the file this metadata is for.",77,null],[11,"modified","","Returns the last modification time listed in this metadata.",77,null],[11,"accessed","","Returns the last access time of this metadata.",77,null],[11,"created","","Returns the creation time listed in the this metadata.",77,null],[11,"readonly","","Returns whether these permissions describe a readonly file.",79,null],[11,"set_readonly","","Modifies the readonly flag for this set of permissions.",79,null],[11,"is_dir","","Test whether this file type represents a directory.",80,null],[11,"is_file","","Test whether this file type represents a regular file.",80,null],[11,"is_symlink","","Test whether this file type represents a symbolic link.",80,null],[11,"next","","",82,null],[11,"path","","Returns the full path to the file that this entry represents.",83,null],[11,"metadata","","Return the metadata for the file that this entry points at.",83,null],[11,"file_type","","Return the file type for the file that this entry points at.",83,null],[11,"file_name","","Returns the bare file name of this directory entry without any other\nleading path component.",83,null],[11,"new","","Creates a new set of options with default mode/security settings for all\nplatforms and also non-recursive.",84,{"inputs":[],"output":{"name":"dirbuilder"}}],[11,"recursive","","Indicate that directories create should be created recursively, creating\nall parent directories if they do not exist with the same security and\npermissions settings.",84,null],[11,"create","","Create the specified directory with the options configured in this\nbuilder.",84,null],[11,"new","std::io::buffered","Creates a new `BufReader` with a default buffer capacity.",85,{"inputs":[{"name":"r"}],"output":{"name":"bufreader"}}],[11,"with_capacity","","Creates a new `BufReader` with the specified buffer capacity.",85,{"inputs":[{"name":"usize"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"get_ref","","Gets a reference to the underlying reader.",85,null],[11,"get_mut","","Gets a mutable reference to the underlying reader.",85,null],[11,"into_inner","","Unwraps this `BufReader`, returning the underlying reader.",85,null],[11,"read","","",85,null],[11,"fill_buf","","",85,null],[11,"consume","","",85,null],[11,"fmt","","",85,null],[11,"seek","","Seek to an offset, in bytes, in the underlying reader.",85,null],[11,"fmt","","",86,null],[11,"new","","Creates a new `BufWriter` with a default buffer capacity.",87,{"inputs":[{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"with_capacity","","Creates a new `BufWriter` with the specified buffer capacity.",87,{"inputs":[{"name":"usize"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",87,null],[11,"get_mut","","Gets a mutable reference to the underlying writer.",87,null],[11,"into_inner","","Unwraps this `BufWriter`, returning the underlying writer.",87,null],[11,"write","","",87,null],[11,"flush","","",87,null],[11,"fmt","","",87,null],[11,"seek","","Seek to the offset, in bytes, in the underlying writer.",87,null],[11,"drop","","",87,null],[11,"error","","Returns the error which caused the call to `into_inner()` to fail.",86,null],[11,"into_inner","","Returns the buffered writer instance which generated the error.",86,null],[11,"from","std::io::error","",72,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"description","std::io::buffered","",86,null],[11,"fmt","","",86,null],[11,"new","","Creates a new `LineWriter`.",88,{"inputs":[{"name":"w"}],"output":{"name":"linewriter"}}],[11,"with_capacity","","Creates a new `LineWriter` with a specified capacity for the internal\nbuffer.",88,{"inputs":[{"name":"usize"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",88,null],[11,"get_mut","","Gets a mutable reference to the underlying writer.",88,null],[11,"into_inner","","Unwraps this `LineWriter`, returning the underlying writer.",88,null],[11,"write","","",88,null],[11,"flush","","",88,null],[11,"fmt","","",88,null],[11,"fmt","std::io::cursor","",89,null],[11,"clone","","",89,null],[11,"new","","Creates a new cursor wrapping the provided underlying I/O object.",89,{"inputs":[{"name":"t"}],"output":{"name":"cursor"}}],[11,"into_inner","","Consumes this cursor, returning the underlying value.",89,null],[11,"get_ref","","Gets a reference to the underlying value in this cursor.",89,null],[11,"get_mut","","Gets a mutable reference to the underlying value in this cursor.",89,null],[11,"position","","Returns the current position of this cursor.",89,null],[11,"set_position","","Sets the position of this cursor.",89,null],[11,"seek","","",89,null],[11,"read","","",89,null],[11,"fill_buf","","",89,null],[11,"consume","","",89,null],[11,"write","","",89,null],[11,"flush","","",89,null],[11,"write","","",89,null],[11,"flush","","",89,null],[11,"write","","",89,null],[11,"flush","","",89,null],[11,"fmt","std::io::error","",72,null],[11,"fmt","","",90,null],[11,"clone","","",90,null],[11,"eq","","",90,null],[11,"new","","Creates a new I/O error from a known kind of error as well as an\narbitrary error payload.",72,{"inputs":[{"name":"errorkind"},{"name":"e"}],"output":{"name":"error"}}],[11,"last_os_error","","Returns an error representing the last OS error which occurred.",72,{"inputs":[],"output":{"name":"error"}}],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS error code.",72,{"inputs":[{"name":"i32"}],"output":{"name":"error"}}],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",72,null],[11,"get_ref","","Returns a reference to the inner error wrapped by this error (if any).",72,null],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by this error\n(if any).",72,null],[11,"into_inner","","Consumes the `Error`, returning its inner error (if any).",72,null],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",72,null],[11,"fmt","","",72,null],[11,"description","","",72,null],[11,"cause","","",72,null],[11,"read","alloc::boxed","",2,null],[11,"read_to_end","","",2,null],[11,"read_to_string","","",2,null],[11,"read_exact","","",2,null],[11,"write","","",2,null],[11,"flush","","",2,null],[11,"write_all","","",2,null],[11,"write_fmt","","",2,null],[11,"seek","","",2,null],[11,"fill_buf","","",2,null],[11,"consume","","",2,null],[11,"read_until","","",2,null],[11,"read_line","","",2,null],[11,"write","collections::vec","",48,null],[11,"write_all","","",48,null],[11,"flush","","",48,null],[11,"read","std::io::util","",91,null],[11,"fill_buf","","",91,null],[11,"consume","","",91,null],[11,"read","","",92,null],[11,"write","","",93,null],[11,"flush","","",93,null],[11,"lock","std::io::stdio","Locks this handle to the standard input stream, returning a readable\nguard.",94,null],[11,"read_line","","Locks this handle and reads a line of input into the specified buffer.",94,null],[11,"read","","",94,null],[11,"read_to_end","","",94,null],[11,"read_to_string","","",94,null],[11,"read_exact","","",94,null],[11,"read","","",95,null],[11,"read_to_end","","",95,null],[11,"fill_buf","","",95,null],[11,"consume","","",95,null],[11,"lock","","Locks this handle to the standard output stream, returning a writable\nguard.",96,null],[11,"write","","",96,null],[11,"flush","","",96,null],[11,"write_all","","",96,null],[11,"write_fmt","","",96,null],[11,"write","","",97,null],[11,"flush","","",97,null],[11,"lock","","Locks this handle to the standard error stream, returning a writable\nguard.",98,null],[11,"write","","",98,null],[11,"flush","","",98,null],[11,"write_all","","",98,null],[11,"write_fmt","","",98,null],[11,"write","","",99,null],[11,"flush","","",99,null],[11,"fmt","std::io","",100,null],[11,"clone","","",100,null],[11,"eq","","",100,null],[11,"ne","","",100,null],[11,"read","","",101,null],[11,"fill_buf","","",101,null],[11,"consume","","",101,null],[11,"limit","","Returns the number of bytes that can be read before this instance will\nreturn EOF.",102,null],[11,"read","","",102,null],[11,"fill_buf","","",102,null],[11,"consume","","",102,null],[11,"next","","",103,null],[11,"fmt","","",104,null],[11,"next","","",105,null],[11,"description","","",104,null],[11,"cause","","",104,null],[11,"fmt","","",104,null],[11,"next","","",106,null],[11,"next","","",107,null],[11,"cmp","std::net::ip","",108,null],[11,"partial_cmp","","",108,null],[11,"lt","","",108,null],[11,"le","","",108,null],[11,"gt","","",108,null],[11,"ge","","",108,null],[11,"hash","","",108,null],[11,"fmt","","",108,null],[11,"eq","","",108,null],[11,"ne","","",108,null],[11,"clone","","",108,null],[11,"fmt","","",109,null],[11,"hash","","",109,null],[11,"clone","","",109,null],[11,"eq","","",109,null],[11,"new","","Creates a new IPv4 address from four eight-bit octets.",110,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"ipv4addr"}}],[11,"octets","","Returns the four eight-bit integers that make up this address.",110,null],[11,"is_unspecified","","Returns true for the special &#39;unspecified&#39; address (0.0.0.0).",110,null],[11,"is_loopback","","Returns true if this is a loopback address (127.0.0.0/8).",110,null],[11,"is_private","","Returns true if this is a private address.",110,null],[11,"is_link_local","","Returns true if the address is link-local (169.254.0.0/16).",110,null],[11,"is_global","","Returns true if the address appears to be globally routable.\nSee [iana-ipv4-special-registry][ipv4-sr].\n[ipv4-sr]: http://goo.gl/RaZ7lg",110,null],[11,"is_multicast","","Returns true if this is a multicast address (224.0.0.0/4).",110,null],[11,"is_broadcast","","Returns true if this is a broadcast address (255.255.255.255).",110,null],[11,"is_documentation","","Returns true if this address is in a range designated for documentation.",110,null],[11,"to_ipv6_compatible","","Converts this address to an IPv4-compatible IPv6 address.",110,null],[11,"to_ipv6_mapped","","Converts this address to an IPv4-mapped IPv6 address.",110,null],[11,"fmt","","",108,null],[11,"fmt","","",110,null],[11,"fmt","","",110,null],[11,"clone","","",110,null],[11,"eq","","",110,null],[11,"hash","","",110,null],[11,"partial_cmp","","",110,null],[11,"cmp","","",110,null],[11,"from","","",110,{"inputs":[{"name":"u32"}],"output":{"name":"ipv4addr"}}],[11,"from","","",110,null],[11,"new","","Creates a new IPv6 address from eight 16-bit segments.",111,{"inputs":[{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ipv6addr"}}],[11,"segments","","Returns the eight 16-bit segments that make up this address.",111,null],[11,"is_unspecified","","Returns true for the special &#39;unspecified&#39; address (::).",111,null],[11,"is_loopback","","Returns true if this is a loopback address (::1).",111,null],[11,"is_global","","Returns true if the address appears to be globally routable.",111,null],[11,"is_unique_local","","Returns true if this is a unique local address (fc00::/7).",111,null],[11,"is_unicast_link_local","","Returns true if the address is unicast and link-local (fe80::/10).",111,null],[11,"is_unicast_site_local","","Returns true if this is a deprecated unicast site-local address\n(fec0::/10).",111,null],[11,"is_documentation","","Returns true if this is an address reserved for documentation\n(2001:db8::/32).",111,null],[11,"is_unicast_global","","Returns true if the address is a globally routable unicast address.",111,null],[11,"multicast_scope","","Returns the address&#39;s multicast scope if the address is multicast.",111,null],[11,"is_multicast","","Returns true if this is a multicast address (ff00::/8).",111,null],[11,"to_ipv4","","Converts this address to an IPv4 address. Returns None if this address is\nneither IPv4-compatible or IPv4-mapped.",111,null],[11,"octets","","Returns the sixteen eight-bit integers the IPv6 address consists of.",111,null],[11,"fmt","","",111,null],[11,"fmt","","",111,null],[11,"clone","","",111,null],[11,"eq","","",111,null],[11,"hash","","",111,null],[11,"partial_cmp","","",111,null],[11,"cmp","","",111,null],[11,"from","","",111,null],[11,"fmt","std::net::addr","",112,null],[11,"hash","","",112,null],[11,"eq","","",112,null],[11,"ne","","",112,null],[11,"clone","","",112,null],[11,"new","","Creates a new socket address from the (ip, port) pair.",112,{"inputs":[{"name":"ipaddr"},{"name":"u16"}],"output":{"name":"socketaddr"}}],[11,"ip","","Returns the IP address associated with this socket address.",112,null],[11,"set_ip","","Change the IP address associated with this socket address.",112,null],[11,"port","","Returns the port number associated with this socket address.",112,null],[11,"set_port","","Change the port number associated with this socket address.",112,null],[11,"new","","Creates a new socket address from the (ip, port) pair.",113,{"inputs":[{"name":"ipv4addr"},{"name":"u16"}],"output":{"name":"socketaddrv4"}}],[11,"ip","","Returns the IP address associated with this socket address.",113,null],[11,"set_ip","","Change the IP address associated with this socket address.",113,null],[11,"port","","Returns the port number associated with this socket address.",113,null],[11,"set_port","","Change the port number associated with this socket address.",113,null],[11,"new","","Creates a new socket address from the ip/port/flowinfo/scope_id\ncomponents.",114,{"inputs":[{"name":"ipv6addr"},{"name":"u16"},{"name":"u32"},{"name":"u32"}],"output":{"name":"socketaddrv6"}}],[11,"ip","","Returns the IP address associated with this socket address.",114,null],[11,"set_ip","","Change the IP address associated with this socket address.",114,null],[11,"port","","Returns the port number associated with this socket address.",114,null],[11,"set_port","","Change the port number associated with this socket address.",114,null],[11,"flowinfo","","Returns the flow information associated with this address,\ncorresponding to the `sin6_flowinfo` field in C.",114,null],[11,"set_flowinfo","","Change the flow information associated with this socket address.",114,null],[11,"scope_id","","Returns the scope ID associated with this address,\ncorresponding to the `sin6_scope_id` field in C.",114,null],[11,"set_scope_id","","Change the scope ID associated with this socket address.",114,null],[11,"fmt","","",112,null],[11,"fmt","","",113,null],[11,"fmt","","",113,null],[11,"fmt","","",114,null],[11,"fmt","","",114,null],[11,"clone","","",113,null],[11,"clone","","",114,null],[11,"eq","","",113,null],[11,"eq","","",114,null],[11,"hash","","",113,null],[11,"hash","","",114,null],[11,"to_socket_addrs","","",112,null],[11,"to_socket_addrs","","",113,null],[11,"to_socket_addrs","","",114,null],[11,"connect","std::net::tcp","Opens a TCP connection to a remote host.",115,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP connection.",115,null],[11,"local_addr","","Returns the socket address of the local half of this TCP connection.",115,null],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",115,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",115,null],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",115,null],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",115,null],[11,"read_timeout","","Returns the read timeout of this socket.",115,null],[11,"write_timeout","","Returns the write timeout of this socket.",115,null],[11,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",115,null],[11,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",115,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",115,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",115,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",115,null],[11,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",115,null],[11,"read","","",115,null],[11,"read_to_end","","",115,null],[11,"write","","",115,null],[11,"flush","","",115,null],[11,"fmt","","",115,null],[11,"bind","","Creates a new `TcpListener` which will be bound to the specified\naddress.",116,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the local socket address of this listener.",116,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",116,null],[11,"accept","","Accept a new incoming connection from this listener.",116,null],[11,"incoming","","Returns an iterator over the connections being received on this\nlistener.",116,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",116,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",116,null],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",116,null],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",116,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",116,null],[11,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",116,null],[11,"next","","",117,null],[11,"fmt","","",116,null],[11,"bind","std::net::udp","Creates a UDP socket from the given address.",118,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"recv_from","","Receives data from the socket. On success, returns the number of bytes\nread and the address from whence the data came.",118,null],[11,"send_to","","Sends data on the socket to the given address. On success, returns the\nnumber of bytes written.",118,null],[11,"local_addr","","Returns the socket address that this socket was created from.",118,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",118,null],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",118,null],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",118,null],[11,"read_timeout","","Returns the read timeout of this socket.",118,null],[11,"write_timeout","","Returns the write timeout of this socket.",118,null],[11,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",118,null],[11,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",118,null],[11,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this socket.",118,null],[11,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this socket.",118,null],[11,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this socket.",118,null],[11,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this socket.",118,null],[11,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",118,null],[11,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",118,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",118,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",118,null],[11,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",118,null],[11,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",118,null],[11,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",118,null],[11,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",118,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",118,null],[11,"connect","","Connects this UDP socket to a remote address, allowing the `send` and\n`recv` syscalls to be used to send data and also applies filters to only\nreceive data from the specified address.",118,null],[11,"send","","Sends data on the socket to the remote address to which it is connected.",118,null],[11,"recv","","Receives data on the socket from the remote address to which it is\nconnected.",118,null],[11,"set_nonblocking","","Moves this UDP socket into or out of nonblocking mode.",118,null],[11,"fmt","","",118,null],[11,"from_str","std::net::ip","",108,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",110,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",111,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","std::net::addr","",113,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",114,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",112,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","std::net::parser","",119,null],[11,"ne","","",119,null],[11,"clone","","",119,null],[11,"fmt","","",119,null],[11,"fmt","","",119,null],[11,"description","","",119,null],[11,"fmt","std::net","",120,null],[11,"eq","","",120,null],[11,"clone","","",120,null],[11,"next","","",121,null],[11,"clone","std::os::linux::raw::arch","",122,null],[11,"as_raw_stat","std::fs","",77,null],[11,"st_dev","","",77,null],[11,"st_ino","","",77,null],[11,"st_mode","","",77,null],[11,"st_nlink","","",77,null],[11,"st_uid","","",77,null],[11,"st_gid","","",77,null],[11,"st_rdev","","",77,null],[11,"st_size","","",77,null],[11,"st_atime","","",77,null],[11,"st_atime_nsec","","",77,null],[11,"st_mtime","","",77,null],[11,"st_mtime_nsec","","",77,null],[11,"st_ctime","","",77,null],[11,"st_ctime_nsec","","",77,null],[11,"st_blksize","","",77,null],[11,"st_blocks","","",77,null],[11,"as_raw_fd","","",81,null],[11,"from_raw_fd","","",81,{"inputs":[{"name":"i32"}],"output":{"name":"file"}}],[11,"into_raw_fd","","",81,null],[11,"as_raw_fd","std::net::tcp","",115,null],[11,"as_raw_fd","","",116,null],[11,"as_raw_fd","std::net::udp","",118,null],[11,"from_raw_fd","std::net::tcp","",115,{"inputs":[{"name":"i32"}],"output":{"name":"tcpstream"}}],[11,"from_raw_fd","","",116,{"inputs":[{"name":"i32"}],"output":{"name":"tcplistener"}}],[11,"from_raw_fd","std::net::udp","",118,{"inputs":[{"name":"i32"}],"output":{"name":"udpsocket"}}],[11,"into_raw_fd","std::net::tcp","",115,null],[11,"into_raw_fd","","",116,null],[11,"into_raw_fd","std::net::udp","",118,null],[11,"from_vec","std::ffi::os_str","",73,{"inputs":[{"name":"vec"}],"output":{"name":"osstring"}}],[11,"into_vec","","",73,null],[11,"from_bytes","","",74,null],[11,"as_bytes","","",74,null],[11,"mode","std::fs","",79,null],[11,"set_mode","","",79,null],[11,"from_mode","","",79,{"inputs":[{"name":"u32"}],"output":{"name":"permissions"}}],[11,"mode","","",78,null],[11,"custom_flags","","",78,null],[11,"dev","","",77,null],[11,"ino","","",77,null],[11,"mode","","",77,null],[11,"nlink","","",77,null],[11,"uid","","",77,null],[11,"gid","","",77,null],[11,"rdev","","",77,null],[11,"size","","",77,null],[11,"atime","","",77,null],[11,"atime_nsec","","",77,null],[11,"mtime","","",77,null],[11,"mtime_nsec","","",77,null],[11,"ctime","","",77,null],[11,"ctime_nsec","","",77,null],[11,"blksize","","",77,null],[11,"blocks","","",77,null],[11,"is_block_device","","",80,null],[11,"is_char_device","","",80,null],[11,"is_fifo","","",80,null],[11,"is_socket","","",80,null],[11,"ino","","",83,null],[11,"mode","","",84,null],[11,"uid","std::process","",123,null],[11,"gid","","",123,null],[11,"before_exec","","",123,null],[11,"exec","","",123,null],[11,"from_raw","","",124,{"inputs":[{"name":"i32"}],"output":{"name":"exitstatus"}}],[11,"signal","","",124,null],[11,"from_raw_fd","","",125,{"inputs":[{"name":"i32"}],"output":{"name":"stdio"}}],[11,"as_raw_fd","","",126,null],[11,"as_raw_fd","","",127,null],[11,"as_raw_fd","","",128,null],[11,"into_raw_fd","","",126,null],[11,"into_raw_fd","","",127,null],[11,"into_raw_fd","","",128,null],[11,"as_pthread_t","std::thread","",21,null],[11,"into_pthread_t","","",21,null],[11,"clone","std::sys::ext::net","",129,null],[11,"is_unnamed","","Returns true iff the address is unnamed.",129,null],[11,"as_pathname","","Returns the contents of this address if it is a `pathname` address.",129,null],[11,"fmt","","",129,null],[11,"fmt","","",130,null],[11,"connect","","Connects to the socket named by `path`.",130,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"pair","","Creates an unnamed pair of connected sockets.",130,{"inputs":[],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",130,null],[11,"local_addr","","Returns the socket address of the local half of this connection.",130,null],[11,"peer_addr","","Returns the socket address of the remote half of this connection.",130,null],[11,"set_read_timeout","","Sets the read timeout for the socket.",130,null],[11,"set_write_timeout","","Sets the write timeout for the socket.",130,null],[11,"read_timeout","","Returns the read timeout of this socket.",130,null],[11,"write_timeout","","Returns the write timeout of this socket.",130,null],[11,"set_nonblocking","","Moves the socket into or out of nonblocking mode.",130,null],[11,"take_error","","Returns the value of the `SO_ERROR` option.",130,null],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",130,null],[11,"read","","",130,null],[11,"read_to_end","","",130,null],[11,"write","","",130,null],[11,"flush","","",130,null],[11,"as_raw_fd","","",130,null],[11,"from_raw_fd","","",130,{"inputs":[{"name":"i32"}],"output":{"name":"unixstream"}}],[11,"into_raw_fd","","",130,null],[11,"fmt","","",131,null],[11,"bind","","Creates a new `UnixListener` bound to the specified socket.",131,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"accept","","Accepts a new incoming connection to this listener.",131,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",131,null],[11,"local_addr","","Returns the local socket address of this listener.",131,null],[11,"set_nonblocking","","Moves the socket into or out of nonblocking mode.",131,null],[11,"take_error","","Returns the value of the `SO_ERROR` option.",131,null],[11,"incoming","","Returns an iterator over incoming connections.",131,null],[11,"as_raw_fd","","",131,null],[11,"from_raw_fd","","",131,{"inputs":[{"name":"i32"}],"output":{"name":"unixlistener"}}],[11,"into_raw_fd","","",131,null],[11,"fmt","","",132,null],[11,"next","","",132,null],[11,"size_hint","","",132,null],[11,"fmt","","",133,null],[11,"bind","","Creates a Unix datagram socket bound to the given path.",133,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"unbound","","Creates a Unix Datagram socket which is not bound to any address.",133,{"inputs":[],"output":{"name":"result"}}],[11,"pair","","Create an unnamed pair of connected sockets.",133,{"inputs":[],"output":{"name":"result"}}],[11,"connect","","Connects the socket to the specified address.",133,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",133,null],[11,"local_addr","","Returns the address of this socket.",133,null],[11,"peer_addr","","Returns the address of this socket&#39;s peer.",133,null],[11,"recv_from","","Receives data from the socket.",133,null],[11,"recv","","Receives data from the socket.",133,null],[11,"send_to","","Sends data on the socket to the specified address.",133,null],[11,"send","","Sends data on the socket to the socket&#39;s peer.",133,null],[11,"set_read_timeout","","Sets the read timeout for the socket.",133,null],[11,"set_write_timeout","","Sets the write timeout for the socket.",133,null],[11,"read_timeout","","Returns the read timeout of this socket.",133,null],[11,"write_timeout","","Returns the write timeout of this socket.",133,null],[11,"set_nonblocking","","Moves the socket into or out of nonblocking mode.",133,null],[11,"take_error","","Returns the value of the `SO_ERROR` option.",133,null],[11,"shutdown","","Shut down the read, write, or both halves of this connection.",133,null],[11,"as_raw_fd","","",133,null],[11,"from_raw_fd","","",133,{"inputs":[{"name":"i32"}],"output":{"name":"unixdatagram"}}],[11,"into_raw_fd","","",133,null],[11,"deref","std::panic","",134,null],[11,"deref_mut","","",134,null],[11,"call_once","","",134,null],[11,"eq","std::path","",135,null],[11,"ne","","",135,null],[11,"cmp","","",135,null],[11,"partial_cmp","","",135,null],[11,"lt","","",135,null],[11,"le","","",135,null],[11,"gt","","",135,null],[11,"ge","","",135,null],[11,"hash","","",135,null],[11,"fmt","","",135,null],[11,"clone","","",135,null],[11,"is_verbatim","","Determines if the prefix is verbatim, i.e. begins with `\\\\?\\`.",135,null],[11,"fmt","","",136,null],[11,"clone","","",136,null],[11,"kind","","The parsed prefix data.",136,null],[11,"as_os_str","","The raw `OsStr` slice for this prefix.",136,null],[11,"eq","","",136,null],[11,"partial_cmp","","",136,null],[11,"cmp","","",136,null],[11,"hash","","",136,null],[11,"fmt","","",137,null],[11,"hash","","",137,null],[11,"cmp","","",137,null],[11,"partial_cmp","","",137,null],[11,"lt","","",137,null],[11,"le","","",137,null],[11,"gt","","",137,null],[11,"ge","","",137,null],[11,"eq","","",137,null],[11,"ne","","",137,null],[11,"clone","","",137,null],[11,"as_os_str","","Extracts the underlying `OsStr` slice",137,null],[11,"as_ref","","",137,null],[11,"clone","","",138,null],[11,"clone","","",139,null],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",138,null],[11,"as_ref","","",138,null],[11,"as_ref","","",138,null],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",139,null],[11,"as_ref","","",139,null],[11,"as_ref","","",139,null],[11,"next","","",139,null],[11,"next_back","","",139,null],[11,"next","","",138,null],[11,"next_back","","",138,null],[11,"eq","","",138,null],[11,"partial_cmp","","",138,null],[11,"cmp","","",138,null],[11,"clone","","",140,null],[11,"new","","Allocates an empty `PathBuf`.",140,{"inputs":[],"output":{"name":"pathbuf"}}],[11,"as_path","","Coerces to a `Path` slice.",140,null],[11,"push","","Extends `self` with `path`.",140,null],[11,"pop","","Truncate `self` to `self.parent()`.",140,null],[11,"set_file_name","","Updates `self.file_name()` to `file_name`.",140,null],[11,"set_extension","","Updates `self.extension()` to `extension`.",140,null],[11,"into_os_string","","Consumes the `PathBuf`, yielding its internal `OsString` storage.",140,null],[11,"from","","",140,{"inputs":[{"name":"t"}],"output":{"name":"pathbuf"}}],[11,"from","","",140,{"inputs":[{"name":"osstring"}],"output":{"name":"pathbuf"}}],[11,"from","","",140,{"inputs":[{"name":"string"}],"output":{"name":"pathbuf"}}],[11,"from_iter","","",140,{"inputs":[{"name":"i"}],"output":{"name":"pathbuf"}}],[11,"extend","","",140,null],[11,"fmt","","",140,null],[11,"new","","Directly wrap a string slice as a `Path` slice.",141,{"inputs":[{"name":"s"}],"output":{"name":"path"}}],[11,"as_os_str","","Yields the underlying `OsStr` slice.",141,null],[11,"to_str","","Yields a `&amp;str` slice if the `Path` is valid unicode.",141,null],[11,"to_string_lossy","","Converts a `Path` to a `Cow&lt;str&gt;`.",141,null],[11,"to_path_buf","","Converts a `Path` to an owned `PathBuf`.",141,null],[11,"is_absolute","","A path is *absolute* if it is independent of the current directory.",141,null],[11,"is_relative","","A path is *relative* if it is not absolute.",141,null],[11,"has_root","","A path has a root if the body of the path begins with the directory separator.",141,null],[11,"parent","","The path without its final component, if any.",141,null],[11,"file_name","","The final component of the path, if it is a normal file.",141,null],[11,"strip_prefix","","Returns a path that, when joined onto `base`, yields `self`.",141,null],[11,"starts_with","","Determines whether `base` is a prefix of `self`.",141,null],[11,"ends_with","","Determines whether `child` is a suffix of `self`.",141,null],[11,"file_stem","","Extracts the stem (non-extension) portion of `self.file_name()`.",141,null],[11,"extension","","Extracts the extension of `self.file_name()`, if possible.",141,null],[11,"join","","Creates an owned `PathBuf` with `path` adjoined to `self`.",141,null],[11,"with_file_name","","Creates an owned `PathBuf` like `self` but with the given file name.",141,null],[11,"with_extension","","Creates an owned `PathBuf` like `self` but with the given extension.",141,null],[11,"components","","Produce an iterator over the components of the path.",141,null],[11,"iter","","Produce an iterator over the path&#39;s components viewed as `OsStr` slices.",141,null],[11,"display","","Returns an object that implements `Display` for safely printing paths\nthat may contain non-Unicode data.",141,null],[11,"metadata","","Query the file system to get information about a file, directory, etc.",141,null],[11,"symlink_metadata","","Query the metadata about a file without following symlinks.",141,null],[11,"canonicalize","","Returns the canonical form of the path with all intermediate components\nnormalized and symbolic links resolved.",141,null],[11,"read_link","","Reads a symbolic link, returning the file that the link points to.",141,null],[11,"read_dir","","Returns an iterator over the entries within a directory.",141,null],[11,"exists","","Returns whether the path points at an existing entity.",141,null],[11,"is_file","","Returns whether the path is pointing at a regular file.",141,null],[11,"is_dir","","Returns whether the path is pointing at a directory.",141,null],[11,"deref","","",140,null],[11,"borrow","","",140,null],[11,"from","collections::borrow","",75,{"inputs":[{"name":"path"}],"output":{"name":"cow"}}],[11,"from","","",75,{"inputs":[{"name":"pathbuf"}],"output":{"name":"cow"}}],[11,"to_owned","std::path","",141,null],[11,"eq","","",140,null],[11,"hash","","",140,null],[11,"partial_cmp","","",140,null],[11,"cmp","","",140,null],[11,"as_ref","","",140,null],[11,"into","","",140,null],[11,"eq","","",142,null],[11,"ne","","",142,null],[11,"clone","","",142,null],[11,"fmt","","",142,null],[11,"as_ref","","",141,null],[11,"fmt","","",141,null],[11,"fmt","","",143,null],[11,"fmt","","",143,null],[11,"eq","","",141,null],[11,"hash","","",141,null],[11,"partial_cmp","","",141,null],[11,"cmp","","",141,null],[11,"as_ref","","",141,null],[11,"as_ref","std::ffi::os_str","",74,null],[11,"as_ref","collections::borrow","",75,null],[11,"as_ref","std::ffi::os_str","",73,null],[11,"as_ref","collections::string","",76,null],[11,"as_ref","std::path","",140,null],[11,"eq","","",140,null],[11,"eq","","",141,null],[11,"partial_cmp","","",140,null],[11,"partial_cmp","","",141,null],[11,"eq","","",140,null],[11,"partial_cmp","","",140,null],[11,"eq","collections::borrow","",75,null],[11,"eq","std::path","",141,null],[11,"partial_cmp","collections::borrow","",75,null],[11,"partial_cmp","std::path","",141,null],[11,"eq","collections::borrow","",75,null],[11,"partial_cmp","","",75,null],[11,"eq","","",75,null],[11,"eq","std::path","",140,null],[11,"partial_cmp","collections::borrow","",75,null],[11,"partial_cmp","std::path","",140,null],[11,"eq","","",140,null],[11,"eq","std::ffi::os_str","",74,null],[11,"partial_cmp","std::path","",140,null],[11,"partial_cmp","std::ffi::os_str","",74,null],[11,"eq","std::path","",140,null],[11,"partial_cmp","","",140,null],[11,"eq","","",140,null],[11,"eq","collections::borrow","",75,null],[11,"partial_cmp","std::path","",140,null],[11,"partial_cmp","collections::borrow","",75,null],[11,"eq","std::path","",140,null],[11,"eq","std::ffi::os_str","",73,null],[11,"partial_cmp","std::path","",140,null],[11,"partial_cmp","std::ffi::os_str","",73,null],[11,"eq","std::path","",141,null],[11,"eq","std::ffi::os_str","",74,null],[11,"partial_cmp","std::path","",141,null],[11,"partial_cmp","std::ffi::os_str","",74,null],[11,"eq","std::path","",141,null],[11,"partial_cmp","","",141,null],[11,"eq","","",141,null],[11,"eq","collections::borrow","",75,null],[11,"partial_cmp","std::path","",141,null],[11,"partial_cmp","collections::borrow","",75,null],[11,"eq","std::path","",141,null],[11,"eq","std::ffi::os_str","",73,null],[11,"partial_cmp","std::path","",141,null],[11,"partial_cmp","std::ffi::os_str","",73,null],[11,"eq","","",74,null],[11,"partial_cmp","","",74,null],[11,"eq","collections::borrow","",75,null],[11,"partial_cmp","","",75,null],[11,"eq","std::ffi::os_str","",73,null],[11,"partial_cmp","","",73,null],[11,"eq","collections::borrow","",75,null],[11,"eq","std::ffi::os_str","",74,null],[11,"partial_cmp","collections::borrow","",75,null],[11,"partial_cmp","std::ffi::os_str","",74,null],[11,"eq","collections::borrow","",75,null],[11,"partial_cmp","","",75,null],[11,"eq","","",75,null],[11,"eq","std::ffi::os_str","",73,null],[11,"partial_cmp","collections::borrow","",75,null],[11,"partial_cmp","std::ffi::os_str","",73,null],[11,"fmt","std::path","",142,null],[11,"description","","",142,null],[11,"write","std::process","",126,null],[11,"flush","","",126,null],[11,"read","","",127,null],[11,"read_to_end","","",127,null],[11,"read","","",128,null],[11,"read_to_end","","",128,null],[11,"new","","Constructs a new `Command` for launching the program at\npath `program`, with the following default configuration:",123,{"inputs":[{"name":"s"}],"output":{"name":"command"}}],[11,"arg","","Add an argument to pass to the program.",123,null],[11,"args","","Add multiple arguments to pass to the program.",123,null],[11,"env","","Inserts or updates an environment variable mapping.",123,null],[11,"env_remove","","Removes an environment variable mapping.",123,null],[11,"env_clear","","Clears the entire environment map for the child process.",123,null],[11,"current_dir","","Sets the working directory for the child process.",123,null],[11,"stdin","","Configuration for the child process&#39;s stdin handle (file descriptor 0).",123,null],[11,"stdout","","Configuration for the child process&#39;s stdout handle (file descriptor 1).",123,null],[11,"stderr","","Configuration for the child process&#39;s stderr handle (file descriptor 2).",123,null],[11,"spawn","","Executes the command as a child process, returning a handle to it.",123,null],[11,"output","","Executes the command as a child process, waiting for it to finish and\ncollecting all of its output.",123,null],[11,"status","","Executes a command as a child process, waiting for it to finish and\ncollecting its exit status.",123,null],[11,"fmt","","Format the program and arguments of a Command for display. Any\nnon-utf8 data is lossily converted using the utf8 replacement\ncharacter.",123,null],[11,"clone","","",144,null],[11,"eq","","",144,null],[11,"ne","","",144,null],[11,"fmt","","",144,null],[11,"piped","","A new pipe should be arranged to connect the parent and child processes.",125,{"inputs":[],"output":{"name":"stdio"}}],[11,"inherit","","The child inherits from the corresponding parent descriptor.",125,{"inputs":[],"output":{"name":"stdio"}}],[11,"null","","This stream will be ignored. This is the equivalent of attaching the\nstream to `/dev/null`",125,{"inputs":[],"output":{"name":"stdio"}}],[11,"fmt","","",124,null],[11,"clone","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"success","","Was termination successful? Signal termination not considered a success,\nand success is defined as a zero exit status.",124,null],[11,"code","","Returns the exit code of the process, if any.",124,null],[11,"fmt","","",124,null],[11,"kill","","Forces the child to exit. This is equivalent to sending a\nSIGKILL on unix platforms.",145,null],[11,"id","","Returns the OS-assigned process identifier associated with this child.",145,null],[11,"wait","","Waits for the child to exit completely, returning the status that it\nexited with. This function will continue to have the same return value\nafter it has been called at least once.",145,null],[11,"wait_with_output","","Simultaneously waits for the child to exit and collect all remaining\noutput on the stdout/stderr handles, returning an `Output`\ninstance.",145,null],[11,"new","std::sync::mpsc::select","Creates a new selection structure. This set is initially empty.",146,{"inputs":[],"output":{"name":"select"}}],[11,"handle","","Creates a new handle into this receiver set for a new receiver. Note\nthat this does *not* add the receiver to the receiver set, for that you\nmust call the `add` method on the handle itself.",146,null],[11,"wait","","Waits for an event on this receiver set. The returned value is *not* an\nindex, but rather an id. This id can be queried against any active\n`Handle` structures (each one has an `id` method). The handle with\nthe matching `id` will have some sort of event available on it. The\nevent could either be that data is available or the corresponding\nchannel has been closed.",146,null],[11,"id","","Retrieves the id of this handle.",147,null],[11,"recv","","Blocks to receive a value on the underlying receiver, returning `Some` on\nsuccess or `None` if the channel disconnects. This function has the same\nsemantics as `Receiver.recv`",147,null],[11,"add","","Adds this handle to the receiver set that the handle was created from. This\nmethod can be called multiple times, but it has no effect if `add` was\ncalled previously.",147,null],[11,"remove","","Removes this handle from the `Select` set. This method is unsafe because\nit has no guarantee that the `Handle` was not moved since `add` was\ncalled.",147,null],[11,"drop","","",146,null],[11,"drop","","",147,null],[11,"fmt","","",146,null],[11,"fmt","","",147,null],[11,"clone","std::sync::mpsc","",148,null],[11,"eq","","",148,null],[11,"ne","","",148,null],[11,"fmt","","",149,null],[11,"clone","","",149,null],[11,"eq","","",149,null],[11,"fmt","","",150,null],[11,"clone","","",150,null],[11,"eq","","",150,null],[11,"fmt","","",151,null],[11,"clone","","",151,null],[11,"eq","","",151,null],[11,"clone","","",152,null],[11,"eq","","",152,null],[11,"ne","","",152,null],[11,"send","","Attempts to send a value on this channel, returning it back if it could\nnot be sent.",153,null],[11,"clone","","",153,null],[11,"drop","","",153,null],[11,"fmt","","",153,null],[11,"send","","Sends a value on this synchronous channel.",154,null],[11,"try_send","","Attempts to send a value on this channel without blocking.",154,null],[11,"clone","","",154,null],[11,"drop","","",154,null],[11,"fmt","","",154,null],[11,"try_recv","","Attempts to return a pending value on this receiver without blocking",155,null],[11,"recv","","Attempts to wait for a value on this receiver, returning an error if the\ncorresponding channel has hung up.",155,null],[11,"recv_timeout","","Attempts to wait for a value on this receiver, returning an error if the\ncorresponding channel has hung up, or if it waits more than `timeout`.",155,null],[11,"iter","","Returns an iterator that will block waiting for messages, but never\n`panic!`. It will return `None` when the channel has hung up.",155,null],[11,"next","","",156,null],[11,"next","","",157,null],[11,"into_iter","","",155,null],[11,"drop","","",155,null],[11,"fmt","","",155,null],[11,"fmt","","",148,null],[11,"fmt","","",148,null],[11,"description","","",148,null],[11,"cause","","",148,null],[11,"fmt","","",152,null],[11,"fmt","","",152,null],[11,"description","","",152,null],[11,"cause","","",152,null],[11,"fmt","","",149,null],[11,"description","","",149,null],[11,"cause","","",149,null],[11,"fmt","","",150,null],[11,"description","","",150,null],[11,"cause","","",150,null],[11,"new","std::sync::barrier","Creates a new barrier that can block a given number of threads.",158,{"inputs":[{"name":"usize"}],"output":{"name":"barrier"}}],[11,"wait","","Blocks the current thread until all threads have rendezvoused here.",158,null],[11,"is_leader","","Returns whether this thread from `wait` is the &quot;leader thread&quot;.",159,null],[11,"clone","std::sync::condvar","",160,null],[11,"eq","","",160,null],[11,"ne","","",160,null],[11,"fmt","","",160,null],[11,"timed_out","","Returns whether the wait was known to have timed out.",160,null],[11,"new","","Creates a new condition variable which is ready to be waited on and\nnotified.",161,{"inputs":[],"output":{"name":"condvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",161,null],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",161,null],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",161,null],[11,"notify_one","","Wakes up one blocked thread on this condvar.",161,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",161,null],[11,"default","","",161,{"inputs":[],"output":{"name":"condvar"}}],[11,"drop","","",161,null],[11,"new","","Creates a new condition variable",162,{"inputs":[],"output":{"name":"staticcondvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",162,null],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",162,null],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",162,null],[11,"notify_one","","Wakes up one blocked thread on this condvar.",162,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",162,null],[11,"destroy","","Deallocates all resources associated with this static condvar.",162,null],[11,"drop","std::sync::mutex","",1,null],[11,"default","","",1,{"inputs":[],"output":{"name":"mutex"}}],[11,"fmt","","",1,null],[11,"new","","Creates a new mutex in an unlocked state ready for use.",163,{"inputs":[],"output":{"name":"staticmutex"}}],[11,"lock","","Acquires this lock, see `Mutex::lock`",163,null],[11,"try_lock","","Attempts to grab this lock, see `Mutex::try_lock`",163,null],[11,"destroy","","Deallocates resources associated with this static mutex.",163,null],[11,"deref","","",164,null],[11,"deref_mut","","",164,null],[11,"drop","","",164,null],[11,"new","std::sync::once","Creates a new `Once` value.",165,{"inputs":[],"output":{"name":"once"}}],[11,"call_once","","Performs an initialization routine once and only once. The given closure\nwill be executed if this is the first time `call_once` has been called,\nand otherwise the routine will *not* be invoked.",165,null],[11,"call_once_force","","Performs the same function as `call_once` except ignores poisoning.",165,null],[11,"poisoned","","Returns whether the associated `Once` has been poisoned.",166,null],[11,"new","std::sync::rwlock","Creates a new instance of an `RwLock&lt;T&gt;` which is unlocked.",167,{"inputs":[{"name":"t"}],"output":{"name":"rwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",167,null],[11,"try_read","","Attempts to acquire this rwlock with shared read access.",167,null],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",167,null],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",167,null],[11,"is_poisoned","","Determines whether the lock is poisoned.",167,null],[11,"into_inner","","Consumes this `RwLock`, returning the underlying data.",167,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",167,null],[11,"drop","","",167,null],[11,"fmt","","",167,null],[11,"default","","",167,{"inputs":[],"output":{"name":"rwlock"}}],[11,"new","","Creates a new rwlock.",168,{"inputs":[],"output":{"name":"staticrwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",168,null],[11,"try_read","","Attempts to acquire this lock with shared read access.",168,null],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",168,null],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",168,null],[11,"destroy","","Deallocates all resources associated with this static lock.",168,null],[11,"deref","","",169,null],[11,"deref","","",170,null],[11,"deref_mut","","",170,null],[11,"drop","","",169,null],[11,"drop","","",170,null],[11,"default","core::sync::atomic","",171,{"inputs":[],"output":{"name":"atomicbool"}}],[11,"default","","",172,{"inputs":[],"output":{"name":"atomicptr"}}],[11,"fmt","","",173,null],[11,"clone","","",173,null],[11,"new","","Creates a new `AtomicBool`.",171,{"inputs":[{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",171,null],[11,"store","","Stores a value into the bool.",171,null],[11,"swap","","Stores a value into the bool, returning the old value.",171,null],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",171,null],[11,"compare_exchange","","Stores a value into the `bool` if the current value is the same as the `current` value.",171,null],[11,"compare_exchange_weak","","Stores a value into the `bool` if the current value is the same as the `current` value.",171,null],[11,"fetch_and","","Logical &quot;and&quot; with a boolean value.",171,null],[11,"fetch_nand","","Logical &quot;nand&quot; with a boolean value.",171,null],[11,"fetch_or","","Logical &quot;or&quot; with a boolean value.",171,null],[11,"fetch_xor","","Logical &quot;xor&quot; with a boolean value.",171,null],[11,"new","","Creates a new `AtomicPtr`.",172,null],[11,"load","","Loads a value from the pointer.",172,null],[11,"store","","Stores a value into the pointer.",172,null],[11,"swap","","Stores a value into the pointer, returning the old value.",172,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",172,null],[11,"compare_exchange","","Stores a value into the pointer if the current value is the same as the `current` value.",172,null],[11,"compare_exchange_weak","","Stores a value into the pointer if the current value is the same as the `current` value.",172,null],[11,"default","","",174,{"inputs":[],"output":{"name":"atomici8"}}],[11,"fmt","","",174,null],[11,"new","","Creates a new atomic integer.",174,{"inputs":[{"name":"i8"}],"output":{"name":"atomici8"}}],[11,"load","","Loads a value from the atomic integer.",174,null],[11,"store","","Stores a value into the atomic integer.",174,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",174,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",174,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",174,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",174,null],[11,"fetch_add","","Add to the current value, returning the previous value.",174,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",174,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",174,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",174,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",174,null],[11,"default","","",175,{"inputs":[],"output":{"name":"atomicu8"}}],[11,"fmt","","",175,null],[11,"new","","Creates a new atomic integer.",175,{"inputs":[{"name":"u8"}],"output":{"name":"atomicu8"}}],[11,"load","","Loads a value from the atomic integer.",175,null],[11,"store","","Stores a value into the atomic integer.",175,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",175,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",175,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",175,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",175,null],[11,"fetch_add","","Add to the current value, returning the previous value.",175,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",175,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",175,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",175,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",175,null],[11,"default","","",176,{"inputs":[],"output":{"name":"atomici16"}}],[11,"fmt","","",176,null],[11,"new","","Creates a new atomic integer.",176,{"inputs":[{"name":"i16"}],"output":{"name":"atomici16"}}],[11,"load","","Loads a value from the atomic integer.",176,null],[11,"store","","Stores a value into the atomic integer.",176,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",176,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",176,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",176,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",176,null],[11,"fetch_add","","Add to the current value, returning the previous value.",176,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",176,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",176,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",176,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",176,null],[11,"default","","",177,{"inputs":[],"output":{"name":"atomicu16"}}],[11,"fmt","","",177,null],[11,"new","","Creates a new atomic integer.",177,{"inputs":[{"name":"u16"}],"output":{"name":"atomicu16"}}],[11,"load","","Loads a value from the atomic integer.",177,null],[11,"store","","Stores a value into the atomic integer.",177,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",177,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",177,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",177,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",177,null],[11,"fetch_add","","Add to the current value, returning the previous value.",177,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",177,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",177,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",177,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",177,null],[11,"default","","",178,{"inputs":[],"output":{"name":"atomici32"}}],[11,"fmt","","",178,null],[11,"new","","Creates a new atomic integer.",178,{"inputs":[{"name":"i32"}],"output":{"name":"atomici32"}}],[11,"load","","Loads a value from the atomic integer.",178,null],[11,"store","","Stores a value into the atomic integer.",178,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",178,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",178,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",178,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",178,null],[11,"fetch_add","","Add to the current value, returning the previous value.",178,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",178,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",178,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",178,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",178,null],[11,"default","","",179,{"inputs":[],"output":{"name":"atomicu32"}}],[11,"fmt","","",179,null],[11,"new","","Creates a new atomic integer.",179,{"inputs":[{"name":"u32"}],"output":{"name":"atomicu32"}}],[11,"load","","Loads a value from the atomic integer.",179,null],[11,"store","","Stores a value into the atomic integer.",179,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",179,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",179,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",179,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",179,null],[11,"fetch_add","","Add to the current value, returning the previous value.",179,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",179,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",179,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",179,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",179,null],[11,"default","","",180,{"inputs":[],"output":{"name":"atomici64"}}],[11,"fmt","","",180,null],[11,"new","","Creates a new atomic integer.",180,{"inputs":[{"name":"i64"}],"output":{"name":"atomici64"}}],[11,"load","","Loads a value from the atomic integer.",180,null],[11,"store","","Stores a value into the atomic integer.",180,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",180,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",180,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",180,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",180,null],[11,"fetch_add","","Add to the current value, returning the previous value.",180,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",180,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",180,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",180,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",180,null],[11,"default","","",181,{"inputs":[],"output":{"name":"atomicu64"}}],[11,"fmt","","",181,null],[11,"new","","Creates a new atomic integer.",181,{"inputs":[{"name":"u64"}],"output":{"name":"atomicu64"}}],[11,"load","","Loads a value from the atomic integer.",181,null],[11,"store","","Stores a value into the atomic integer.",181,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",181,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",181,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",181,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",181,null],[11,"fetch_add","","Add to the current value, returning the previous value.",181,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",181,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",181,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",181,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",181,null],[11,"default","","",182,{"inputs":[],"output":{"name":"atomicisize"}}],[11,"fmt","","",182,null],[11,"new","","Creates a new atomic integer.",182,{"inputs":[{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the atomic integer.",182,null],[11,"store","","Stores a value into the atomic integer.",182,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",182,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",182,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",182,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",182,null],[11,"fetch_add","","Add to the current value, returning the previous value.",182,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",182,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",182,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",182,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",182,null],[11,"default","","",183,{"inputs":[],"output":{"name":"atomicusize"}}],[11,"fmt","","",183,null],[11,"new","","Creates a new atomic integer.",183,{"inputs":[{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the atomic integer.",183,null],[11,"store","","Stores a value into the atomic integer.",183,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",183,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",183,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",183,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",183,null],[11,"fetch_add","","Add to the current value, returning the previous value.",183,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",183,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",183,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",183,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",183,null],[11,"fmt","","",171,null],[11,"fmt","","",172,null],[11,"hash","std::time::duration","",184,null],[11,"fmt","","",184,null],[11,"cmp","","",184,null],[11,"partial_cmp","","",184,null],[11,"lt","","",184,null],[11,"le","","",184,null],[11,"gt","","",184,null],[11,"ge","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"clone","","",184,null],[11,"new","","Creates a new `Duration` from the specified number of seconds and\nadditional nanosecond precision.",184,{"inputs":[{"name":"u64"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"from_secs","","Creates a new `Duration` from the specified number of seconds.",184,{"inputs":[{"name":"u64"}],"output":{"name":"duration"}}],[11,"from_millis","","Creates a new `Duration` from the specified number of milliseconds.",184,{"inputs":[{"name":"u64"}],"output":{"name":"duration"}}],[11,"as_secs","","Returns the number of whole seconds represented by this duration.",184,null],[11,"subsec_nanos","","Returns the nanosecond precision represented by this duration.",184,null],[11,"add","","",184,null],[11,"add_assign","","",184,null],[11,"sub","","",184,null],[11,"sub_assign","","",184,null],[11,"mul","","",184,null],[11,"mul_assign","","",184,null],[11,"div","","",184,null],[11,"div_assign","","",184,null],[11,"cmp","std::time","",185,null],[11,"partial_cmp","","",185,null],[11,"lt","","",185,null],[11,"le","","",185,null],[11,"gt","","",185,null],[11,"ge","","",185,null],[11,"eq","","",185,null],[11,"ne","","",185,null],[11,"clone","","",185,null],[11,"cmp","","",186,null],[11,"partial_cmp","","",186,null],[11,"lt","","",186,null],[11,"le","","",186,null],[11,"gt","","",186,null],[11,"ge","","",186,null],[11,"eq","","",186,null],[11,"ne","","",186,null],[11,"clone","","",186,null],[11,"fmt","","",187,null],[11,"clone","","",187,null],[11,"now","","Returns an instant corresponding to &quot;now&quot;.",185,{"inputs":[],"output":{"name":"instant"}}],[11,"duration_since","","Returns the amount of time elapsed from another instant to this one.",185,null],[11,"elapsed","","Returns the amount of time elapsed since this instant was created.",185,null],[11,"add","","",185,null],[11,"add_assign","","",185,null],[11,"sub","","",185,null],[11,"sub_assign","","",185,null],[11,"sub","","",185,null],[11,"fmt","","",185,null],[11,"now","","Returns the system time corresponding to &quot;now&quot;.",186,{"inputs":[],"output":{"name":"systemtime"}}],[11,"duration_since","","Returns the amount of time elapsed from an earlier point in time.",186,null],[11,"elapsed","","Returns the amount of time elapsed since this system time was created.",186,null],[11,"add","","",186,null],[11,"add_assign","","",186,null],[11,"sub","","",186,null],[11,"sub_assign","","",186,null],[11,"fmt","","",186,null],[11,"duration","","Returns the positive duration which represents how far forward the\nsecond system time was from the first.",187,null],[11,"description","","",187,null],[11,"fmt","","",187,null],[11,"fmt","std::sys_common::poison","",188,null],[11,"fmt","","",188,null],[11,"description","","",188,null],[11,"new","","Creates a `PoisonError`.",188,{"inputs":[{"name":"t"}],"output":{"name":"poisonerror"}}],[11,"into_inner","","Consumes this error indicating that a lock is poisoned, returning the\nunderlying guard to allow access regardless.",188,null],[11,"get_ref","","Reaches into this error indicating that a lock is poisoned, returning a\nreference to the underlying guard to allow access regardless.",188,null],[11,"get_mut","","Reaches into this error indicating that a lock is poisoned, returning a\nmutable reference to the underlying guard to allow access regardless.",188,null],[11,"from","","",189,{"inputs":[{"name":"poisonerror"}],"output":{"name":"trylockerror"}}],[11,"fmt","","",189,null],[11,"fmt","","",189,null],[11,"description","","",189,null],[11,"cause","","",189,null],[11,"clone","libc::unix","",190,null],[11,"clone","","",191,null],[11,"clone","","",192,null],[11,"clone","","",193,null],[11,"clone","","",194,null],[11,"clone","","",195,null],[11,"clone","","",196,null],[11,"clone","","",197,null],[11,"clone","","",198,null],[11,"clone","","",199,null],[11,"clone","","",200,null],[11,"clone","","",201,null],[11,"clone","","",202,null],[11,"clone","libc::unix::notbsd","",203,null],[11,"clone","","",204,null],[11,"clone","","",205,null],[11,"clone","","",206,null],[11,"clone","","",207,null],[11,"clone","","",208,null],[11,"clone","","",209,null],[11,"clone","","",210,null],[11,"clone","","",211,null],[11,"clone","","",212,null],[11,"clone","","",213,null],[11,"clone","","",214,null],[11,"clone","","",215,null],[11,"clone","","",216,null],[11,"clone","","",217,null],[11,"clone","libc::unix::notbsd::linux","",218,null],[11,"clone","","",219,null],[11,"clone","","",220,null],[11,"clone","","",221,null],[11,"clone","","",222,null],[11,"clone","","",223,null],[11,"clone","","",224,null],[11,"clone","","",225,null],[11,"clone","","",226,null],[11,"clone","","",227,null],[11,"clone","","",228,null],[11,"clone","","",229,null],[11,"clone","","",230,null],[11,"clone","","",231,null],[11,"clone","","",232,null],[11,"clone","","",233,null],[11,"clone","libc::unix::notbsd::linux::other","",234,null],[11,"clone","","",235,null],[11,"clone","","",236,null],[11,"clone","","",237,null],[11,"clone","","",238,null],[11,"clone","","",239,null],[11,"clone","","",240,null],[11,"clone","","",241,null],[11,"clone","","",242,null],[11,"clone","","",243,null],[11,"clone","","",244,null],[11,"clone","libc::unix::notbsd::linux::other::b64","",245,null],[11,"clone","","",246,null],[11,"clone","libc::unix::notbsd::linux::other::b64::x86_64","",247,null],[11,"clone","","",248,null],[11,"clone","","",249,null],[11,"clone","","",250,null],[11,"clone","","",251,null],[11,"clone","","",252,null],[11,"clone","","",253,null],[11,"clone","","",254,null],[11,"payload","std::panicking","Returns the payload associated with the panic.",255,null],[11,"location","","Returns information about the location from which the panic originated,\nif available.",255,null],[11,"file","","Returns the name of the source file from which the panic originated.",256,null],[11,"line","","Returns the line number from which the panic originated.",256,null],[11,"next","rustc_unicode::char","",257,null],[11,"next","","",258,null],[11,"clone","","",259,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"clone","","",11,null],[11,"fmt","","",11,null],[11,"next","","",259,null],[11,"size_hint","","",259,null],[11,"unpaired_surrogate","","Returns the unpaired surrogate which caused this error.",11,null],[11,"fmt","","",11,null],[11,"new","core::ptr","Creates a new `Unique`.",260,null],[11,"get","","Dereferences the content.",260,null],[11,"get_mut","","Mutably dereferences the content.",260,null],[11,"deref","","",260,null],[11,"fmt","","",260,null],[11,"new","","Creates a new `Shared`.",261,null],[11,"clone","","",261,null],[11,"deref","","",261,null],[11,"fmt","","",261,null],[11,"borrow","collections::borrow","",75,null],[11,"clone","","",75,null],[11,"to_mut","","Acquires a mutable reference to the owned form of the data.",75,null],[11,"into_owned","","Extracts the owned data.",75,null],[11,"deref","","",75,null],[11,"cmp","","",75,null],[11,"eq","","",75,null],[11,"partial_cmp","","",75,null],[11,"fmt","","",75,null],[11,"fmt","","",75,null],[11,"default","","",75,{"inputs":[],"output":{"name":"cow"}}],[11,"hash","","",75,null],[11,"as_ref","","",75,null],[11,"hash","core::option","",262,null],[11,"fmt","","",262,null],[11,"cmp","","",262,null],[11,"partial_cmp","","",262,null],[11,"lt","","",262,null],[11,"le","","",262,null],[11,"gt","","",262,null],[11,"ge","","",262,null],[11,"eq","","",262,null],[11,"ne","","",262,null],[11,"clone","","",262,null],[11,"is_some","","Returns `true` if the option is a `Some` value",262,null],[11,"is_none","","Returns `true` if the option is a `None` value",262,null],[11,"as_ref","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`",262,null],[11,"as_mut","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;mut T&gt;`",262,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",262,null],[11,"unwrap","","Moves the value `v` out of the `Option&lt;T&gt;` if it is `Some(v)`.",262,null],[11,"unwrap_or","","Returns the contained value or a default.",262,null],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",262,null],[11,"map","","Maps an `Option&lt;T&gt;` to `Option&lt;U&gt;` by applying a function to a contained value",262,null],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",262,null],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",262,null],[11,"ok_or","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",262,null],[11,"ok_or_else","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",262,null],[11,"iter","","Returns an iterator over the possibly contained value.",262,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",262,null],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",262,null],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",262,null],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",262,null],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",262,null],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",262,null],[11,"cloned","","Maps an `Option&lt;&amp;T&gt;` to an `Option&lt;T&gt;` by cloning the contents of the\noption.",262,null],[11,"unwrap_or_default","","Returns the contained value or a default",262,null],[11,"default","","",262,{"inputs":[],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",262,null],[11,"fmt","","",263,null],[11,"next","","",263,null],[11,"size_hint","","",263,null],[11,"next_back","","",263,null],[11,"clone","","",263,null],[11,"fmt","","",264,null],[11,"next","","",264,null],[11,"size_hint","","",264,null],[11,"next_back","","",264,null],[11,"fmt","","",265,null],[11,"clone","","",265,null],[11,"next","","",265,null],[11,"size_hint","","",265,null],[11,"next_back","","",265,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",262,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[11,"new","alloc::rc","Constructs a new `Rc&lt;T&gt;`.",266,{"inputs":[{"name":"t"}],"output":{"name":"rc"}}],[11,"try_unwrap","","Unwraps the contained value if the `Rc&lt;T&gt;` has exactly one strong reference.",266,{"inputs":[{"name":"rc"}],"output":{"name":"result"}}],[11,"would_unwrap","","Checks if `Rc::try_unwrap` would return `Ok`.",266,{"inputs":[{"name":"rc"}],"output":{"name":"bool"}}],[11,"downgrade","","Creates a new `Weak&lt;T&gt;` reference from this value.",266,{"inputs":[{"name":"rc"}],"output":{"name":"weak"}}],[11,"weak_count","","Get the number of weak references to this value.",266,{"inputs":[{"name":"rc"}],"output":{"name":"usize"}}],[11,"strong_count","","Get the number of strong references to this value.",266,{"inputs":[{"name":"rc"}],"output":{"name":"usize"}}],[11,"is_unique","","Returns true if there are no other `Rc` or `Weak&lt;T&gt;` values that share\nthe same inner value.",266,{"inputs":[{"name":"rc"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the contained value if the `Rc&lt;T&gt;` has\none strong reference and no weak references.",266,{"inputs":[{"name":"rc"}],"output":{"name":"option"}}],[11,"make_mut","","Make a mutable reference into the given `Rc&lt;T&gt;` by cloning the inner\ndata if the `Rc&lt;T&gt;` doesn&#39;t have one strong reference and no weak\nreferences.",266,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"deref","","",266,null],[11,"drop","","Drops the `Rc&lt;T&gt;`.",266,null],[11,"clone","","Makes a clone of the `Rc&lt;T&gt;`.",266,null],[11,"default","","Creates a new `Rc&lt;T&gt;`, with the `Default` value for `T`.",266,{"inputs":[],"output":{"name":"rc"}}],[11,"eq","","Equality for two `Rc&lt;T&gt;`s.",266,null],[11,"ne","","Inequality for two `Rc&lt;T&gt;`s.",266,null],[11,"partial_cmp","","Partial comparison for two `Rc&lt;T&gt;`s.",266,null],[11,"lt","","Less-than comparison for two `Rc&lt;T&gt;`s.",266,null],[11,"le","","&#39;Less-than or equal to&#39; comparison for two `Rc&lt;T&gt;`s.",266,null],[11,"gt","","Greater-than comparison for two `Rc&lt;T&gt;`s.",266,null],[11,"ge","","&#39;Greater-than or equal to&#39; comparison for two `Rc&lt;T&gt;`s.",266,null],[11,"cmp","","Comparison for two `Rc&lt;T&gt;`s.",266,null],[11,"hash","","",266,null],[11,"fmt","","",266,null],[11,"fmt","","",266,null],[11,"fmt","","",266,null],[11,"from","","",266,{"inputs":[{"name":"t"}],"output":{"name":"rc"}}],[11,"new","","Constructs a new `Weak&lt;T&gt;` without an accompanying instance of T.",267,{"inputs":[],"output":{"name":"weak"}}],[11,"upgrade","","Upgrades a weak reference to a strong reference.",267,null],[11,"drop","","Drops the `Weak&lt;T&gt;`.",267,null],[11,"clone","","Makes a clone of the `Weak&lt;T&gt;`.",267,null],[11,"fmt","","",267,null],[11,"default","","",267,{"inputs":[],"output":{"name":"weak"}}],[11,"borrow","","",266,null],[11,"as_ref","","",266,null],[11,"new","core::cell","Creates a new `Cell` containing the given value.",268,{"inputs":[{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",268,null],[11,"set","","Sets the contained value.",268,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",268,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",268,null],[11,"clone","","",268,null],[11,"default","","",268,{"inputs":[],"output":{"name":"cell"}}],[11,"eq","","",268,null],[11,"partial_cmp","","",268,null],[11,"lt","","",268,null],[11,"le","","",268,null],[11,"gt","","",268,null],[11,"ge","","",268,null],[11,"cmp","","",268,null],[11,"fmt","","",269,null],[11,"eq","","",269,null],[11,"clone","","",269,null],[11,"new","","Creates a new `RefCell` containing `value`.",270,{"inputs":[{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",270,null],[11,"borrow_state","","Query the current state of this `RefCell`",270,null],[11,"borrow","","Immutably borrows the wrapped value.",270,null],[11,"borrow_mut","","Mutably borrows the wrapped value.",270,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",270,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",270,null],[11,"clone","","",270,null],[11,"default","","",270,{"inputs":[],"output":{"name":"refcell"}}],[11,"eq","","",270,null],[11,"partial_cmp","","",270,null],[11,"lt","","",270,null],[11,"le","","",270,null],[11,"gt","","",270,null],[11,"ge","","",270,null],[11,"cmp","","",270,null],[11,"deref","","",271,null],[11,"clone","","Copies a `Ref`.",271,{"inputs":[{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",271,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",272,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"deref","","",272,null],[11,"deref_mut","","",272,null],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",273,{"inputs":[{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",273,null],[11,"get","","Gets a mutable pointer to the wrapped value.",273,null],[11,"default","","",273,{"inputs":[],"output":{"name":"unsafecell"}}],[11,"hash","core::cmp","",274,null],[11,"fmt","","",274,null],[11,"eq","","",274,null],[11,"clone","","",274,null],[11,"reverse","","Reverse the `Ordering`.",274,null],[11,"cmp","","",274,null],[11,"partial_cmp","","",274,null],[11,"clone","alloc::boxed","",275,null],[11,"pointer","","",276,null],[11,"make_place","","",276,{"inputs":[],"output":{"name":"intermediatebox"}}],[11,"finalize","","",276,null],[11,"finalize","","",2,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"make_place","","",275,null],[11,"drop","","",276,null],[11,"new","","Allocates memory on the heap and then places `x` into it.",2,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"from_raw","","Constructs a box from a raw pointer.",2,null],[11,"into_raw","","Consumes the `Box`, returning the wrapped raw pointer.",2,null],[11,"default","","",2,{"inputs":[],"output":{"name":"box"}}],[11,"default","","",2,{"inputs":[],"output":{"name":"box"}}],[11,"clone","","Returns a new box with a `clone()` of this box&#39;s contents.",2,null],[11,"clone_from","","Copies `source`&#39;s contents into `self` without creating a new allocation.",2,null],[11,"clone","","",2,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"partial_cmp","","",2,null],[11,"lt","","",2,null],[11,"le","","",2,null],[11,"ge","","",2,null],[11,"gt","","",2,null],[11,"cmp","","",2,null],[11,"hash","","",2,null],[11,"from","","",2,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",2,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",2,null],[11,"fmt","","",2,null],[11,"fmt","","",2,null],[11,"fmt","","",2,null],[11,"deref","","",2,null],[11,"deref_mut","","",2,null],[11,"next","","",2,null],[11,"size_hint","","",2,null],[11,"next_back","","",2,null],[11,"call_once","","",2,null],[11,"call_once","","",2,null],[11,"clone","","",2,null],[11,"borrow","","",2,null],[11,"borrow_mut","","",2,null],[11,"as_ref","","",2,null],[11,"as_mut","","",2,null],[11,"clone","collections::str","",277,null],[11,"next","","",277,null],[11,"size_hint","","",277,null],[11,"borrow","collections::string","",76,null],[11,"fmt","core::str::pattern","",278,null],[11,"eq","","",278,null],[11,"ne","","",278,null],[11,"clone","","",278,null],[11,"fmt","","",279,null],[11,"clone","","",279,null],[11,"haystack","","",279,null],[11,"next","","",279,null],[11,"next_match","","",279,null],[11,"next_reject","","",279,null],[11,"next_back","","",279,null],[11,"next_match_back","","",279,null],[11,"next_reject_back","","",279,null],[11,"fmt","","",280,null],[11,"clone","","",280,null],[11,"haystack","","",280,null],[11,"next","","",280,null],[11,"next_match","","",280,null],[11,"next_reject","","",280,null],[11,"next_back","","",280,null],[11,"next_match_back","","",280,null],[11,"next_reject_back","","",280,null],[11,"clone","","",281,null],[11,"fmt","","",281,null],[11,"haystack","","",281,null],[11,"next","","",281,null],[11,"next_match","","",281,null],[11,"next_reject","","",281,null],[11,"next_back","","",281,null],[11,"next_match_back","","",281,null],[11,"next_reject_back","","",281,null],[11,"fmt","","",282,null],[11,"clone","","",282,null],[11,"haystack","","",282,null],[11,"next","","",282,null],[11,"next_match","","",282,null],[11,"next_back","","",282,null],[11,"next_match_back","","",282,null],[11,"hash","core::ops","",283,null],[11,"eq","","",283,null],[11,"clone","","",283,null],[11,"fmt","","",283,null],[11,"hash","","",284,null],[11,"eq","","",284,null],[11,"ne","","",284,null],[11,"clone","","",284,null],[11,"fmt","","",284,null],[11,"contains","","# Examples",284,null],[11,"hash","","",285,null],[11,"eq","","",285,null],[11,"ne","","",285,null],[11,"clone","","",285,null],[11,"fmt","","",285,null],[11,"contains","","# Examples",285,null],[11,"hash","","",286,null],[11,"eq","","",286,null],[11,"ne","","",286,null],[11,"clone","","",286,null],[11,"fmt","","",286,null],[11,"contains","","# Examples",286,null],[11,"hash","","",287,null],[11,"eq","","",287,null],[11,"ne","","",287,null],[11,"clone","","",287,null],[11,"fmt","","",287,null],[11,"contains","","# Examples",287,null],[11,"hash","","",288,null],[11,"eq","","",288,null],[11,"ne","","",288,null],[11,"clone","","",288,null],[11,"fmt","","",288,null],[11,"contains","","# Examples",288,null],[11,"fmt","core::iter::range","",289,null],[11,"clone","","",289,null],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",285,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",284,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",287,null],[11,"next","core::iter::range","",289,null],[11,"size_hint","","",289,null],[11,"next","","",289,null],[11,"size_hint","","",289,null],[11,"next","","",289,null],[11,"size_hint","","",289,null],[11,"next","core::ops","",284,null],[11,"size_hint","","",284,null],[11,"next_back","","",284,null],[11,"next","","",285,null],[11,"next","","",287,null],[11,"size_hint","","",287,null],[11,"next_back","","",287,null],[11,"fmt","core::iter::sources","",290,null],[11,"clone","","",290,null],[11,"next","","",290,null],[11,"size_hint","","",290,null],[11,"next_back","","",290,null],[11,"fmt","","",291,null],[11,"next","","",291,null],[11,"size_hint","","",291,null],[11,"next_back","","",291,null],[11,"len","","",291,null],[11,"clone","","",291,null],[11,"default","","",291,{"inputs":[],"output":{"name":"empty"}}],[11,"fmt","","",292,null],[11,"clone","","",292,null],[11,"next","","",292,null],[11,"size_hint","","",292,null],[11,"next_back","","",292,null],[11,"len","","",292,null],[11,"fmt","core::iter","",293,null],[11,"clone","","",293,null],[11,"next","","",293,null],[11,"size_hint","","",293,null],[11,"next_back","","",293,null],[11,"fmt","","",294,null],[11,"clone","","",294,null],[11,"next","","",294,null],[11,"size_hint","","",294,null],[11,"next_back","","",294,null],[11,"fmt","","",295,null],[11,"clone","","",295,null],[11,"next","","",295,null],[11,"size_hint","","",295,null],[11,"fmt","","",296,null],[11,"clone","","",296,null],[11,"next","","",296,null],[11,"count","","",296,null],[11,"nth","","",296,null],[11,"find","","",296,null],[11,"last","","",296,null],[11,"size_hint","","",296,null],[11,"next_back","","",296,null],[11,"fmt","","",297,null],[11,"clone","","",297,null],[11,"next","","",297,null],[11,"size_hint","","",297,null],[11,"next_back","","",297,null],[11,"clone","","",298,null],[11,"fmt","","",298,null],[11,"next","","",298,null],[11,"size_hint","","",298,null],[11,"next_back","","",298,null],[11,"clone","","",299,null],[11,"fmt","","",299,null],[11,"next","","",299,null],[11,"size_hint","","",299,null],[11,"next_back","","",299,null],[11,"clone","","",300,null],[11,"fmt","","",300,null],[11,"next","","",300,null],[11,"size_hint","","",300,null],[11,"next_back","","",300,null],[11,"fmt","","",301,null],[11,"clone","","",301,null],[11,"next","","# Overflow Behavior",301,null],[11,"size_hint","","",301,null],[11,"nth","","",301,null],[11,"count","","",301,null],[11,"next_back","","",301,null],[11,"fmt","","",302,null],[11,"clone","","",302,null],[11,"next","","",302,null],[11,"count","","",302,null],[11,"nth","","",302,null],[11,"last","","",302,null],[11,"size_hint","","",302,null],[11,"peek","","Returns a reference to the next() value without advancing the iterator.",302,null],[11,"is_empty","","Checks if the iterator has finished iterating.",302,null],[11,"clone","","",303,null],[11,"fmt","","",303,null],[11,"next","","",303,null],[11,"size_hint","","",303,null],[11,"clone","","",304,null],[11,"fmt","","",304,null],[11,"next","","",304,null],[11,"size_hint","","",304,null],[11,"fmt","","",305,null],[11,"clone","","",305,null],[11,"next","","",305,null],[11,"nth","","",305,null],[11,"count","","",305,null],[11,"last","","",305,null],[11,"size_hint","","",305,null],[11,"next_back","","",305,null],[11,"fmt","","",306,null],[11,"clone","","",306,null],[11,"next","","",306,null],[11,"nth","","",306,null],[11,"size_hint","","",306,null],[11,"clone","","",307,null],[11,"fmt","","",307,null],[11,"next","","",307,null],[11,"size_hint","","",307,null],[11,"clone","","",308,null],[11,"fmt","","",308,null],[11,"next","","",308,null],[11,"size_hint","","",308,null],[11,"next_back","","",308,null],[11,"fmt","","",309,null],[11,"clone","","",309,null],[11,"next","","",309,null],[11,"nth","","",309,null],[11,"last","","",309,null],[11,"count","","",309,null],[11,"size_hint","","",309,null],[11,"next_back","","",309,null],[11,"clone","","",310,null],[11,"fmt","","",310,null],[11,"next","","",310,null],[11,"size_hint","","",310,null],[11,"next_back","","",310,null],[11,"borrow","collections::vec","",48,null],[11,"borrow_mut","","",48,null],[11,"hash","core::result","",311,null],[11,"fmt","","",311,null],[11,"cmp","","",311,null],[11,"partial_cmp","","",311,null],[11,"lt","","",311,null],[11,"le","","",311,null],[11,"gt","","",311,null],[11,"ge","","",311,null],[11,"eq","","",311,null],[11,"ne","","",311,null],[11,"clone","","",311,null],[11,"is_ok","","Returns true if the result is `Ok`",311,null],[11,"is_err","","Returns true if the result is `Err`",311,null],[11,"ok","","Converts from `Result&lt;T, E&gt;` to `Option&lt;T&gt;`",311,null],[11,"err","","Converts from `Result&lt;T, E&gt;` to `Option&lt;E&gt;`",311,null],[11,"as_ref","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;T, &amp;E&gt;`",311,null],[11,"as_mut","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;mut T, &amp;mut E&gt;`",311,null],[11,"map","","Maps a `Result&lt;T, E&gt;` to `Result&lt;U, E&gt;` by applying a function to a\ncontained `Ok` value, leaving an `Err` value untouched.",311,null],[11,"map_err","","Maps a `Result&lt;T, E&gt;` to `Result&lt;T, F&gt;` by applying a function to a\ncontained `Err` value, leaving an `Ok` value untouched.",311,null],[11,"iter","","Returns an iterator over the possibly contained value.",311,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",311,null],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",311,null],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",311,null],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",311,null],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",311,null],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",311,null],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",311,null],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",311,null],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",311,null],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",311,null],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",311,null],[11,"fmt","","",312,null],[11,"next","","",312,null],[11,"size_hint","","",312,null],[11,"next_back","","",312,null],[11,"clone","","",312,null],[11,"fmt","","",313,null],[11,"next","","",313,null],[11,"size_hint","","",313,null],[11,"next_back","","",313,null],[11,"fmt","","",314,null],[11,"next","","",314,null],[11,"size_hint","","",314,null],[11,"next_back","","",314,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",311,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","shared_library::dynamic_library","",315,null],[11,"fmt","","",315,null],[11,"is","","Returns true if the boxed type is the same as `T`",315,null],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",315,null],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",315,null],[11,"is","","Forwards to the method defined on the type `Any`.",315,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",315,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",315,null],[11,"hash","core::any","",316,null],[11,"fmt","","",316,null],[11,"eq","","",316,null],[11,"ne","","",316,null],[11,"clone","","",316,null],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",316,{"inputs":[],"output":{"name":"typeid"}}],[11,"clone","core::raw","",317,null],[11,"cmp","collections::string","",76,null],[11,"partial_cmp","","",76,null],[11,"lt","","",76,null],[11,"le","","",76,null],[11,"gt","","",76,null],[11,"ge","","",76,null],[11,"fmt","","",8,null],[11,"fmt","","",9,null],[11,"new","","Creates a new empty `String`.",76,{"inputs":[],"output":{"name":"string"}}],[11,"with_capacity","","Creates a new empty `String` with a particular capacity.",76,{"inputs":[{"name":"usize"}],"output":{"name":"string"}}],[11,"from_utf8","","Converts a vector of bytes to a `String`.",76,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[11,"from_utf8_lossy","","Converts a slice of bytes to a string, including invalid characters.",76,null],[11,"from_utf16","","Decode a UTF-16 encoded vector `v` into a `String`, returning `Err`\nif `v` contains any invalid data.",76,null],[11,"from_utf16_lossy","","Decode a UTF-16 encoded vector `v` into a string, replacing\ninvalid data with the replacement character (U+FFFD).",76,null],[11,"from_raw_parts","","Creates a new `String` from a length, capacity, and pointer.",76,null],[11,"from_utf8_unchecked","","Converts a vector of bytes to a `String` without checking that the\nstring contains valid UTF-8.",76,{"inputs":[{"name":"vec"}],"output":{"name":"string"}}],[11,"into_bytes","","Converts a `String` into a byte vector.",76,null],[11,"as_str","","Extracts a string slice containing the entire string.",76,null],[11,"as_mut_str","","Extracts a string slice containing the entire string.",76,null],[11,"push_str","","Appends a given string slice onto the end of this `String`.",76,null],[11,"capacity","","Returns this `String`&#39;s capacity, in bytes.",76,null],[11,"reserve","","Ensures that this `String`&#39;s capacity is at least `additional` bytes\nlarger than its length.",76,null],[11,"reserve_exact","","Ensures that this `String`&#39;s capacity is `additional` bytes\nlarger than its length.",76,null],[11,"shrink_to_fit","","Shrinks the capacity of this `String` to match its length.",76,null],[11,"push","","Appends the given `char` to the end of this `String`.",76,null],[11,"as_bytes","","Returns a byte slice of this `String`&#39;s contents.",76,null],[11,"truncate","","Shortens this `String` to the specified length.",76,null],[11,"pop","","Removes the last character from the string buffer and returns it.",76,null],[11,"remove","","Removes a `char` from this `String` at a byte position and returns it.",76,null],[11,"insert","","Inserts a character into this `String` at a byte position.",76,null],[11,"as_mut_vec","","Returns a mutable reference to the contents of this `String`.",76,null],[11,"len","","Returns the length of this `String`, in bytes.",76,null],[11,"is_empty","","Returns `true` if this `String` has a length of zero.",76,null],[11,"clear","","Truncates this `String`, removing all contents.",76,null],[11,"drain","","Create a draining iterator that removes the specified range in the string\nand yields the removed chars.",76,null],[11,"into_boxed_str","","Converts this `String` into a `Box&lt;str&gt;`.",76,null],[11,"into_bytes","","Returns the bytes that were attempted to convert to a `String`.",8,null],[11,"utf8_error","","Fetch a `Utf8Error` to get more details about the conversion failure.",8,null],[11,"fmt","","",8,null],[11,"fmt","","",9,null],[11,"clone","","",76,null],[11,"clone_from","","",76,null],[11,"from_iter","","",76,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",76,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",76,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"extend","","",76,null],[11,"extend","","",76,null],[11,"extend","","",76,null],[11,"extend","","",76,null],[11,"eq","","",76,null],[11,"ne","","",76,null],[11,"eq","","",76,null],[11,"ne","","",76,null],[11,"eq","","",76,null],[11,"ne","","",76,null],[11,"eq","collections::borrow","",75,null],[11,"ne","","",75,null],[11,"eq","","",75,null],[11,"ne","","",75,null],[11,"eq","","",75,null],[11,"ne","","",75,null],[11,"eq","collections::string","",76,null],[11,"ne","","",76,null],[11,"default","","",76,{"inputs":[],"output":{"name":"string"}}],[11,"fmt","","",76,null],[11,"fmt","","",76,null],[11,"hash","","",76,null],[11,"add","","",76,null],[11,"index","","",76,null],[11,"index","","",76,null],[11,"index","","",76,null],[11,"index","","",76,null],[11,"index","","",76,null],[11,"index","","",76,null],[11,"index_mut","","",76,null],[11,"index_mut","","",76,null],[11,"index_mut","","",76,null],[11,"index_mut","","",76,null],[11,"index_mut","","",76,null],[11,"index_mut","","",76,null],[11,"deref","","",76,null],[11,"deref_mut","","",76,null],[11,"from_str","","",76,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",10,null],[11,"fmt","","",10,null],[11,"fmt","","",10,null],[11,"eq","","",10,null],[11,"as_ref","","",76,null],[11,"as_ref","","",76,null],[11,"from","","",76,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[11,"from","collections::borrow","",75,{"inputs":[{"name":"str"}],"output":{"name":"cow"}}],[11,"from","","",75,{"inputs":[{"name":"string"}],"output":{"name":"cow"}}],[11,"into","collections::string","",76,null],[11,"write_str","","",76,null],[11,"write_char","","",76,null],[11,"drop","","",318,null],[11,"next","","",318,null],[11,"size_hint","","",318,null],[11,"next_back","","",318,null],[11,"new","collections::vec","Constructs a new, empty `Vec&lt;T&gt;`.",48,{"inputs":[],"output":{"name":"vec"}}],[11,"with_capacity","","Constructs a new, empty `Vec&lt;T&gt;` with the specified capacity.",48,{"inputs":[{"name":"usize"}],"output":{"name":"vec"}}],[11,"from_raw_parts","","Creates a `Vec&lt;T&gt;` directly from the raw components of another vector.",48,null],[11,"capacity","","Returns the number of elements the vector can hold without\nreallocating.",48,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the given `Vec&lt;T&gt;`. The collection may reserve more space to avoid\nfrequent reallocations.",48,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to\nbe inserted in the given `Vec&lt;T&gt;`. Does nothing if the capacity is already\nsufficient.",48,null],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",48,null],[11,"into_boxed_slice","","Converts the vector into Box&lt;[T]&gt;.",48,null],[11,"truncate","","Shorten a vector to be `len` elements long, dropping excess elements.",48,null],[11,"as_slice","","Extracts a slice containing the entire vector.",48,null],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",48,null],[11,"set_len","","Sets the length of a vector.",48,null],[11,"swap_remove","","Removes an element from anywhere in the vector and return it, replacing\nit with the last element.",48,null],[11,"insert","","Inserts an element at position `index` within the vector, shifting all\nelements after it to the right.",48,null],[11,"remove","","Removes and returns the element at position `index` within the vector,\nshifting all elements after it to the left.",48,null],[11,"retain","","Retains only the elements specified by the predicate.",48,null],[11,"push","","Appends an element to the back of a collection.",48,null],[11,"pop","","Removes the last element from a vector and returns it, or `None` if it\nis empty.",48,null],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",48,null],[11,"drain","","Create a draining iterator that removes the specified range in the vector\nand yields the removed items.",48,null],[11,"clear","","Clears the vector, removing all values.",48,null],[11,"len","","Returns the number of elements in the vector.",48,null],[11,"is_empty","","Returns `true` if the vector contains no elements.",48,null],[11,"split_off","","Splits the collection into two at the given index.",48,null],[11,"resize","","Resizes the `Vec` in-place so that `len()` is equal to `new_len`.",48,null],[11,"extend_from_slice","","Clones and appends all elements in a slice to the `Vec`.",48,null],[11,"dedup","","Removes consecutive repeated elements in the vector.",48,null],[11,"clone","","",48,null],[11,"clone_from","","",48,null],[11,"hash","","",48,null],[11,"index","","",48,null],[11,"index_mut","","",48,null],[11,"index","","",48,null],[11,"index","","",48,null],[11,"index","","",48,null],[11,"index","","",48,null],[11,"index","","",48,null],[11,"index","","",48,null],[11,"index_mut","","",48,null],[11,"index_mut","","",48,null],[11,"index_mut","","",48,null],[11,"index_mut","","",48,null],[11,"index_mut","","",48,null],[11,"index_mut","","",48,null],[11,"deref","","",48,null],[11,"deref_mut","","",48,null],[11,"from_iter","","",48,{"inputs":[{"name":"i"}],"output":{"name":"vec"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe vector (from start to end). The vector cannot be used after calling\nthis.",48,null],[11,"extend","","",48,null],[11,"extend","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","collections::borrow","",75,null],[11,"ne","","",75,null],[11,"eq","","",75,null],[11,"ne","","",75,null],[11,"eq","","",75,null],[11,"ne","","",75,null],[11,"eq","collections::vec","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"partial_cmp","","",48,null],[11,"cmp","","",48,null],[11,"drop","","",48,null],[11,"default","","",48,{"inputs":[],"output":{"name":"vec"}}],[11,"fmt","","",48,null],[11,"as_ref","","",48,null],[11,"as_mut","","",48,null],[11,"as_ref","","",48,null],[11,"as_mut","","",48,null],[11,"from","","",48,null],[11,"from","","",48,{"inputs":[{"name":"str"}],"output":{"name":"vec"}}],[11,"from","collections::borrow","",75,null],[11,"from","","",75,{"inputs":[{"name":"vec"}],"output":{"name":"cow"}}],[11,"from_iter","","",75,{"inputs":[{"name":"i"}],"output":{"name":"cow"}}],[11,"next","collections::vec","",319,null],[11,"size_hint","","",319,null],[11,"count","","",319,null],[11,"next_back","","",319,null],[11,"clone","","",319,null],[11,"drop","","",319,null],[11,"next","","",320,null],[11,"size_hint","","",320,null],[11,"next_back","","",320,null],[11,"drop","","",320,null],[11,"hash","core::marker","",321,null],[11,"eq","","",321,null],[11,"partial_cmp","","",321,null],[11,"cmp","","",321,null],[11,"clone","","",321,null],[11,"default","","",321,{"inputs":[],"output":{"name":"phantomdata"}}],[11,"default","core::hash::sip","",322,{"inputs":[],"output":{"name":"siphasher13"}}],[11,"clone","","",322,null],[11,"fmt","","",322,null],[11,"default","","",323,{"inputs":[],"output":{"name":"siphasher24"}}],[11,"clone","","",323,null],[11,"fmt","","",323,null],[11,"default","","",324,{"inputs":[],"output":{"name":"siphasher"}}],[11,"clone","","",324,null],[11,"fmt","","",324,null],[11,"new","","Creates a new `SipHasher` with the two initial keys set to 0.",324,{"inputs":[],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",324,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"new","","Creates a new `SipHasher13` with the two initial keys set to 0.",322,{"inputs":[],"output":{"name":"siphasher13"}}],[11,"new_with_keys","","Creates a `SipHasher13` that is keyed off the provided keys.",322,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher13"}}],[11,"new","","Creates a new `SipHasher24` with the two initial keys set to 0.",323,{"inputs":[],"output":{"name":"siphasher24"}}],[11,"new_with_keys","","Creates a `SipHasher24` that is keyed off the provided keys.",323,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher24"}}],[11,"write","","",324,null],[11,"finish","","",324,null],[11,"write","","",322,null],[11,"finish","","",322,null],[11,"write","","",323,null],[11,"finish","","",323,null],[11,"fmt","core::hash","",325,null],[11,"build_hasher","","",325,null],[11,"clone","","",325,null],[11,"default","","",325,{"inputs":[],"output":{"name":"buildhasherdefault"}}],[11,"drop","shared_library::dynamic_library","",326,null],[11,"open","","Lazily open a dynamic library. When passed None it gives a\nhandle to the calling process",326,{"inputs":[{"name":"option"}],"output":{"name":"result"}}],[11,"prepend_search_path","","Prepends a path to this process&#39;s search path for dynamic libraries",326,{"inputs":[{"name":"path"}],"output":null}],[11,"create_path","","From a slice of paths, create a new vector which is suitable to be an\nenvironment variable for this platforms dylib search path.",326,null],[11,"envvar","","Returns the environment variable for this process&#39;s dynamic library\nsearch path",326,{"inputs":[],"output":{"name":"str"}}],[11,"search_path","","Returns the current search path for dynamic libraries being used by this\nprocess",326,{"inputs":[],"output":{"name":"vec"}}],[11,"symbol","","Access the value at the symbol of the dynamic library",326,null],[11,"clone","shared_library","",0,null],[11,"fmt","","",0,null],[14,"shared_library!","","",null,null]],"paths":[[4,"LoadingError"],[3,"Mutex"],[3,"Box"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"ParseIntError"],[3,"TryFromIntError"],[3,"ParseFloatError"],[3,"FromUtf8Error"],[3,"FromUtf16Error"],[4,"ParseError"],[3,"DecodeUtf16Error"],[3,"Error"],[8,"Error"],[3,"EscapeDefault"],[4,"LocalKeyState"],[3,"LocalKey"],[3,"Key"],[3,"Key"],[3,"Builder"],[3,"Thread"],[3,"JoinHandle"],[3,"HashMap"],[3,"Iter"],[3,"Keys"],[3,"Values"],[3,"IterMut"],[3,"IntoIter"],[3,"ValuesMut"],[3,"Drain"],[4,"Entry"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"RandomState"],[3,"DefaultHasher"],[3,"HashSet"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"],[3,"PeekMut"],[3,"BinaryHeap"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Vec"],[3,"VecDeque"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"Iter"],[3,"IntoIter"],[3,"LinkedList"],[3,"IterMut"],[3,"FrontPlace"],[3,"BackPlace"],[3,"Vars"],[3,"VarsOs"],[4,"VarError"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"ArgsOs"],[3,"CString"],[3,"CStr"],[3,"NulError"],[3,"FromBytesWithNulError"],[3,"IntoStringError"],[3,"Error"],[3,"OsString"],[3,"OsStr"],[4,"Cow"],[3,"String"],[3,"Metadata"],[3,"OpenOptions"],[3,"Permissions"],[3,"FileType"],[3,"File"],[3,"ReadDir"],[3,"DirEntry"],[3,"DirBuilder"],[3,"BufReader"],[3,"IntoInnerError"],[3,"BufWriter"],[3,"LineWriter"],[3,"Cursor"],[4,"ErrorKind"],[3,"Empty"],[3,"Repeat"],[3,"Sink"],[3,"Stdin"],[3,"StdinLock"],[3,"Stdout"],[3,"StdoutLock"],[3,"Stderr"],[3,"StderrLock"],[4,"SeekFrom"],[3,"Chain"],[3,"Take"],[3,"Bytes"],[4,"CharsError"],[3,"Chars"],[3,"Split"],[3,"Lines"],[4,"IpAddr"],[4,"Ipv6MulticastScope"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[4,"SocketAddr"],[3,"SocketAddrV4"],[3,"SocketAddrV6"],[3,"TcpStream"],[3,"TcpListener"],[3,"Incoming"],[3,"UdpSocket"],[3,"AddrParseError"],[4,"Shutdown"],[3,"LookupHost"],[3,"stat"],[3,"Command"],[3,"ExitStatus"],[3,"Stdio"],[3,"ChildStdin"],[3,"ChildStdout"],[3,"ChildStderr"],[3,"SocketAddr"],[3,"UnixStream"],[3,"UnixListener"],[3,"Incoming"],[3,"UnixDatagram"],[3,"AssertUnwindSafe"],[4,"Prefix"],[3,"PrefixComponent"],[4,"Component"],[3,"Components"],[3,"Iter"],[3,"PathBuf"],[3,"Path"],[3,"StripPrefixError"],[3,"Display"],[3,"Output"],[3,"Child"],[3,"Select"],[3,"Handle"],[3,"SendError"],[3,"RecvError"],[4,"TryRecvError"],[4,"RecvTimeoutError"],[4,"TrySendError"],[3,"Sender"],[3,"SyncSender"],[3,"Receiver"],[3,"Iter"],[3,"IntoIter"],[3,"Barrier"],[3,"BarrierWaitResult"],[3,"WaitTimeoutResult"],[3,"Condvar"],[3,"StaticCondvar"],[3,"StaticMutex"],[3,"MutexGuard"],[3,"Once"],[3,"OnceState"],[3,"RwLock"],[3,"StaticRwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"AtomicBool"],[3,"AtomicPtr"],[4,"Ordering"],[3,"AtomicI8"],[3,"AtomicU8"],[3,"AtomicI16"],[3,"AtomicU16"],[3,"AtomicI32"],[3,"AtomicU32"],[3,"AtomicI64"],[3,"AtomicU64"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"Duration"],[3,"Instant"],[3,"SystemTime"],[3,"SystemTimeError"],[3,"PoisonError"],[4,"TryLockError"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"fd_set"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"passwd"],[3,"statvfs"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"fsid_t"],[3,"mq_attr"],[3,"cpu_set_t"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"termios"],[3,"flock"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"sigset_t"],[3,"sysinfo"],[3,"stat"],[3,"stat64"],[3,"pthread_attr_t"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"PanicInfo"],[3,"Location"],[3,"ToLowercase"],[3,"ToUppercase"],[3,"DecodeUtf16"],[3,"Unique"],[3,"Shared"],[4,"Option"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Rc"],[3,"Weak"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"Ref"],[3,"RefMut"],[3,"UnsafeCell"],[4,"Ordering"],[3,"ExchangeHeapSingleton"],[3,"IntermediateBox"],[3,"EncodeUtf16"],[4,"SearchStep"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"RangeInclusive"],[3,"RangeToInclusive"],[3,"StepBy"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[8,"Any"],[3,"TypeId"],[3,"TraitObject"],[3,"Drain"],[3,"IntoIter"],[3,"Drain"],[3,"PhantomData"],[3,"SipHasher13"],[3,"SipHasher24"],[3,"SipHasher"],[3,"BuildHasherDefault"],[3,"DynamicLibrary"]]};
searchIndex["thread_local"] = {"doc":"Per-object thread-local storage","items":[[3,"ThreadLocal","thread_local","Thread-local variable wrapper",null,null],[3,"IterMut","","Mutable iterator over the contents of a `ThreadLocal`.",null,null],[3,"IntoIter","","An iterator that moves out of a `ThreadLocal`.",null,null],[3,"CachedThreadLocal","","Wrapper around `ThreadLocal` which adds a fast path for a single thread.",null,null],[6,"CachedIterMut","","Mutable iterator over the contents of a `CachedThreadLocal`.",null,null],[6,"CachedIntoIter","","An iterator that moves out of a `CachedThreadLocal`.",null,null],[11,"default","","",0,{"inputs":[],"output":{"name":"threadlocal"}}],[11,"drop","","",0,null],[11,"new","","Creates a new empty `ThreadLocal`.",0,{"inputs":[],"output":{"name":"threadlocal"}}],[11,"get","","Returns the element for the current thread, if it exists.",0,null],[11,"get_or","","Returns the element for the current thread, or creates it if it doesn&#39;t\nexist.",0,null],[11,"iter_mut","","Returns a mutable iterator over the local values of all threads.",0,null],[11,"clear","","Removes all thread-specific values from the `ThreadLocal`, effectively\nreseting it to its original state.",0,null],[11,"into_iter","","",0,null],[11,"get_default","","Returns the element for the current thread, or creates a default one if\nit doesn&#39;t exist.",0,null],[11,"fmt","","",0,null],[11,"next","","",1,null],[11,"size_hint","","",1,null],[11,"next","","",2,null],[11,"size_hint","","",2,null],[11,"default","","",3,{"inputs":[],"output":{"name":"cachedthreadlocal"}}],[11,"new","","Creates a new empty `CachedThreadLocal`.",3,{"inputs":[],"output":{"name":"cachedthreadlocal"}}],[11,"get","","Returns the element for the current thread, if it exists.",3,null],[11,"get_or","","Returns the element for the current thread, or creates it if it doesn&#39;t\nexist.",3,null],[11,"iter_mut","","Returns a mutable iterator over the local values of all threads.",3,null],[11,"clear","","Removes all thread-specific values from the `ThreadLocal`, effectively\nreseting it to its original state.",3,null],[11,"into_iter","","",3,null],[11,"get_default","","Returns the element for the current thread, or creates a default one if\nit doesn&#39;t exist.",3,null],[11,"fmt","","",3,null]],"paths":[[3,"ThreadLocal"],[3,"IterMut"],[3,"IntoIter"],[3,"CachedThreadLocal"]]};
searchIndex["memchr"] = {"doc":"This crate defines two functions, `memchr` and `memrchr`, which expose a safe interface\nto the corresponding functions in `libc`.","items":[[5,"memchr","memchr","A safe interface to `memchr`.",null,null],[5,"memrchr","","A safe interface to `memrchr`.",null,null],[5,"memchr2","","Like `memchr`, but searches for two bytes instead of one.",null,null],[5,"memchr3","","Like `memchr`, but searches for three bytes instead of one.",null,null]],"paths":[]};
searchIndex["fs2"] = {"doc":"","items":[[5,"lock_contended_error","fs2","Returns the error that a call to a try lock method on a contended file will\nreturn.",null,{"inputs":[],"output":{"name":"error"}}],[5,"free_space","","Returns the number of free bytes in the file system containing the provided\npath.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"available_space","","Returns the available space in bytes to non-priveleged users in the file\nsystem containing the provided path.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"total_space","","Returns the total space in bytes in the file system containing the provided\npath.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"allocation_granularity","","Returns the filesystem&#39;s disk space allocation granularity in bytes.\nThe provided path may be for any file in the filesystem.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[8,"FileExt","","Extension trait for `File` providing duplication and locking methods.",null,null],[10,"duplicate","","Returns a duplicate instance of the file.",0,null],[10,"allocated_size","","Returns the amount of physical space allocated for a file.",0,null],[10,"allocate","","Ensures that at least `len` bytes of disk space are allocated for the\nfile, and the file size is at least `len` bytes. After a successful call\nto `allocate`, subsequent writes to the file within the specified length\nare guaranteed not to fail because of lack of disk space.",0,null],[10,"lock_shared","","Locks the file for shared usage, blocking if the file is currently\nlocked exclusively.",0,null],[10,"lock_exclusive","","Locks the file for exclusive usage, blocking if the file is currently\nlocked.",0,null],[10,"try_lock_shared","","Locks the file for shared usage, or returns a an error if the file is\ncurrently locked (see `lock_contended_error`).",0,null],[10,"try_lock_exclusive","","Locks the file for shared usage, or returns a an error if the file is\ncurrently locked (see `lock_contended_error`).",0,null],[10,"unlock","","Unlocks the file.",0,null],[11,"duplicate","std::fs","",1,null],[11,"allocated_size","","",1,null],[11,"allocate","","",1,null],[11,"lock_shared","","",1,null],[11,"lock_exclusive","","",1,null],[11,"try_lock_shared","","",1,null],[11,"try_lock_exclusive","","",1,null],[11,"unlock","","",1,null]],"paths":[[8,"FileExt"],[3,"File"]]};
searchIndex["backtrace_sys"] = {"doc":"","items":[[4,"backtrace_state","backtrace_sys","",null,null],[5,"backtrace_create_state","","",null,null],[5,"backtrace_syminfo","","",null,null],[5,"backtrace_pcinfo","","",null,null],[6,"backtrace_syminfo_callback","","",null,null],[6,"backtrace_full_callback","","",null,null],[6,"backtrace_error_callback","","",null,null]],"paths":[]};
searchIndex["thread_id"] = {"doc":"Thread-ID: get a unique ID for the current thread.","items":[[5,"get","thread_id","Returns a number that is unique to the calling thread.",null,{"inputs":[],"output":{"name":"usize"}}]],"paths":[]};
searchIndex["regex_syntax"] = {"doc":"This crate provides a regular expression parser and an abstract syntax for\nregular expressions. The abstract syntax is defined by the `Expr` type. The\nconcrete syntax is enumerated in the\n[`regex`](../regex/index.html#syntax)\ncrate documentation.","items":[[3,"Literals","regex_syntax","A set of literal byte strings extracted from a regular expression.",null,null],[3,"Lit","","A single member of a set of literals extracted from a regular expression.",null,null],[3,"CharClass","","A character class.",null,null],[3,"ClassRange","","A single inclusive range in a character class.",null,null],[12,"start","","The start character of the range.",0,null],[12,"end","","The end character of the range.",0,null],[3,"ByteClass","","A byte class for byte ranges only.",null,null],[3,"ByteRange","","A single inclusive range in a byte class.",null,null],[12,"start","","The start byte of the range.",1,null],[12,"end","","The end byte of the range.",1,null],[3,"ExprBuilder","","A builder for configuring regular expression parsing.",null,null],[3,"Error","","A parse error.",null,null],[4,"Expr","","A regular expression abstract syntax tree.",null,null],[13,"Empty","","An empty regex (which never matches any text).",2,null],[13,"Literal","","A sequence of one or more literal characters to be matched.",2,null],[12,"chars","regex_syntax::Expr","The characters.",2,null],[12,"casei","","Whether to match case insensitively.",2,null],[13,"LiteralBytes","regex_syntax","A sequence of one or more literal bytes to be matched.",2,null],[12,"bytes","regex_syntax::Expr","The bytes.",2,null],[12,"casei","","Whether to match case insensitively.",2,null],[13,"AnyChar","regex_syntax","Match any character.",2,null],[13,"AnyCharNoNL","","Match any character, excluding new line (`0xA`).",2,null],[13,"AnyByte","","Match any byte.",2,null],[13,"AnyByteNoNL","","Match any byte, excluding new line (`0xA`).",2,null],[13,"Class","","A character class.",2,null],[13,"ClassBytes","","A character class with byte ranges only.",2,null],[13,"StartLine","","Match the start of a line or beginning of input.",2,null],[13,"EndLine","","Match the end of a line or end of input.",2,null],[13,"StartText","","Match the beginning of input.",2,null],[13,"EndText","","Match the end of input.",2,null],[13,"WordBoundary","","Match a word boundary (word character on one side and a non-word\ncharacter on the other).",2,null],[13,"NotWordBoundary","","Match a position that is not a word boundary (word or non-word\ncharacters on both sides).",2,null],[13,"WordBoundaryAscii","","Match an ASCII word boundary.",2,null],[13,"NotWordBoundaryAscii","","Match a position that is not an ASCII word boundary.",2,null],[13,"Group","","A group, possibly non-capturing.",2,null],[12,"e","regex_syntax::Expr","The expression inside the group.",2,null],[12,"i","","The capture index (starting at `1`) only for capturing groups.",2,null],[12,"name","","The capture name, only for capturing named groups.",2,null],[13,"Repeat","regex_syntax","A repeat operator (`?`, `*`, `+` or `{m,n}`).",2,null],[12,"e","regex_syntax::Expr","The expression to be repeated. Limited to literals, `.`, classes\nor grouped expressions.",2,null],[12,"r","","The type of repeat operator used.",2,null],[12,"greedy","","Whether the repeat is greedy (match the most) or not (match the\nleast).",2,null],[13,"Concat","regex_syntax","A concatenation of expressions. Must be matched one after the other.",2,null],[13,"Alternate","","An alternation of expressions. Only one must match.",2,null],[4,"Repeater","","The type of a repeat operator expression.",null,null],[13,"ZeroOrOne","","Match zero or one (`?`).",3,null],[13,"ZeroOrMore","","Match zero or more (`*`).",3,null],[13,"OneOrMore","","Match one or more (`+`).",3,null],[13,"Range","","Match for at least `min` and at most `max` (`{m,n}`).",3,null],[12,"min","regex_syntax::Repeater","Lower bound on the number of matches.",3,null],[12,"max","","Optional upper bound on the number of matches.",3,null],[4,"ErrorKind","regex_syntax","The specific type of parse error that can occur.",null,null],[13,"DoubleFlagNegation","","A negation symbol is used twice in flag settings.\ne.g., `(?-i-s)`.",4,null],[13,"DuplicateCaptureName","","The same capture name was used more than once.\ne.g., `(?P&lt;a&gt;.)(?P&lt;a&gt;.)`.",4,null],[13,"EmptyAlternate","","An alternate is empty. e.g., `(|a)`.",4,null],[13,"EmptyCaptureName","","A capture group name is empty. e.g., `(?P&lt;&gt;a)`.",4,null],[13,"EmptyFlagNegation","","A negation symbol was not proceded by any flags. e.g., `(?i-)`.",4,null],[13,"EmptyGroup","","A group is empty. e.g., `()`.",4,null],[13,"InvalidBase10","","An invalid number was used in a counted repetition. e.g., `a{b}`.",4,null],[13,"InvalidBase16","","An invalid hexadecimal number was used in an escape sequence.\ne.g., `\\xAG`.",4,null],[13,"InvalidCaptureName","","An invalid capture name was used. e.g., `(?P&lt;0a&gt;b)`.",4,null],[13,"InvalidClassRange","","An invalid class range was givien. Specifically, when the start of the\nrange is greater than the end. e.g., `[z-a]`.",4,null],[12,"start","regex_syntax::ErrorKind","The first character specified in the range.",4,null],[12,"end","","The second character specified in the range.",4,null],[13,"InvalidClassEscape","regex_syntax","An escape sequence was used in a character class where it is not\nallowed. e.g., `[a-\\pN]` or `[\\A]`.",4,null],[13,"InvalidRepeatRange","","An invalid counted repetition min/max was given. e.g., `a{2,1}`.",4,null],[12,"min","regex_syntax::ErrorKind","The first number specified in the repetition.",4,null],[12,"max","","The second number specified in the repetition.",4,null],[13,"InvalidScalarValue","regex_syntax","An invalid Unicode scalar value was used in a long hexadecimal\nsequence. e.g., `\\x{D800}`.",4,null],[13,"MissingBase10","","An empty counted repetition operator. e.g., `a{}`.",4,null],[13,"RepeaterExpectsExpr","","A repetition operator was not applied to an expression. e.g., `*`.",4,null],[13,"RepeaterUnexpectedExpr","","A repetition operator was applied to an expression that cannot be\nrepeated. e.g., `a+*` or `a|*`.",4,null],[13,"UnclosedCaptureName","","A capture group name that is never closed. e.g., `(?P&lt;a`.",4,null],[13,"UnclosedHex","","An unclosed hexadecimal literal. e.g., `\\x{a`.",4,null],[13,"UnclosedParen","","An unclosed parenthesis. e.g., `(a`.",4,null],[13,"UnclosedRepeat","","An unclosed counted repetition operator. e.g., `a{2`.",4,null],[13,"UnclosedUnicodeName","","An unclosed named Unicode class. e.g., `\\p{Yi`.",4,null],[13,"UnexpectedClassEof","","Saw end of regex before class was closed. e.g., `[a`.",4,null],[13,"UnexpectedEscapeEof","","Saw end of regex before escape sequence was closed. e.g., `\\`.",4,null],[13,"UnexpectedFlagEof","","Saw end of regex before flags were closed. e.g., `(?i`.",4,null],[13,"UnexpectedTwoDigitHexEof","","Saw end of regex before two hexadecimal digits were seen. e.g., `\\xA`.",4,null],[13,"UnopenedParen","","Unopened parenthesis. e.g., `)`.",4,null],[13,"UnrecognizedEscape","","Unrecognized escape sequence. e.g., `\\q`.",4,null],[13,"UnrecognizedFlag","","Unrecognized flag. e.g., `(?a)`.",4,null],[13,"UnrecognizedUnicodeClass","","Unrecognized named Unicode class. e.g., `\\p{Foo}`.",4,null],[13,"StackExhausted","","Indicates that the regex uses too much nesting.",4,null],[13,"FlagNotAllowed","","A disallowed flag was found (e.g., `u`).",4,null],[13,"UnicodeNotAllowed","","A Unicode class was used when the Unicode (`u`) flag was disabled.",4,null],[13,"InvalidUtf8","","InvalidUtf8 indicates that the expression may match non-UTF-8 bytes.\nThis never returned if the parser is permitted to allow expressions\nthat match arbitrary bytes.",4,null],[5,"quote","","Escapes all regular expression meta characters in `text`.",null,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"clone","","",5,null],[11,"cmp","","",6,null],[11,"clone","","",6,null],[11,"empty","","Returns a new empty set of literals using default limits.",5,{"inputs":[],"output":{"name":"literals"}}],[11,"limit_size","","Get the approximate size limit (in bytes) of this set.",5,null],[11,"set_limit_size","","Set the approximate size limit (in bytes) of this set.",5,null],[11,"limit_class","","Get the character class size limit for this set.",5,null],[11,"set_limit_class","","Limits the size of character(or byte) classes considered.",5,null],[11,"literals","","Returns the set of literals as a slice. Its order is unspecified.",5,null],[11,"all_complete","","Returns true if all members in this set are complete.",5,null],[11,"any_complete","","Returns true if any member in this set is complete.",5,null],[11,"contains_empty","","Returns true if this set contains an empty literal.",5,null],[11,"is_empty","","Returns true if this set is empty or if all of its members is empty.",5,null],[11,"to_empty","","Returns a new empty set of literals using this set&#39;s limits.",5,null],[11,"longest_common_prefix","","Returns the longest common prefix of all members in this set.",5,null],[11,"longest_common_suffix","","Returns the longest common suffix of all members in this set.",5,null],[11,"unambiguous_prefixes","","Returns a new set of prefixes of this set of literals that are\nguaranteed to be unambiguous.",5,null],[11,"unambiguous_suffixes","","Returns a new set of suffixes of this set of literals that are\nguaranteed to be unambiguous.",5,null],[11,"union_prefixes","","Unions the prefixes from the given expression to this set.",5,null],[11,"union_suffixes","","Unions the suffixes from the given expression to this set.",5,null],[11,"union","","Unions this set with another set.",5,null],[11,"cross_product","","Extends this set with another set.",5,null],[11,"cross_add","","Extends each literal in this set with the bytes given.",5,null],[11,"add","","Adds the given literal to this set.",5,null],[11,"add_char_class","","Extends each literal in this set with the character class given.",5,null],[11,"add_byte_class","","Extends each literal in this set with the byte class given.",5,null],[11,"cut","","Cuts every member of this set. When a member is cut, it can never\nbe extended.",5,null],[11,"reverse","","Reverses all members in place.",5,null],[11,"clear","","Clears this set of all members.",5,null],[11,"fmt","","",5,null],[11,"new","","Returns a new complete literal with the bytes given.",6,{"inputs":[{"name":"vec"}],"output":{"name":"lit"}}],[11,"empty","","Returns a new complete empty literal.",6,{"inputs":[],"output":{"name":"lit"}}],[11,"is_cut","","Returns true if this literal was &quot;cut.&quot;",6,null],[11,"cut","","Cuts this literal.",6,null],[11,"eq","","",6,null],[11,"partial_cmp","","",6,null],[11,"fmt","","",6,null],[11,"as_ref","","",6,null],[11,"new","collections::vec","Constructs a new, empty `Vec&lt;T&gt;`.",7,{"inputs":[],"output":{"name":"vec"}}],[11,"with_capacity","","Constructs a new, empty `Vec&lt;T&gt;` with the specified capacity.",7,{"inputs":[{"name":"usize"}],"output":{"name":"vec"}}],[11,"from_raw_parts","","Creates a `Vec&lt;T&gt;` directly from the raw components of another vector.",7,null],[11,"capacity","","Returns the number of elements the vector can hold without\nreallocating.",7,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the given `Vec&lt;T&gt;`. The collection may reserve more space to avoid\nfrequent reallocations.",7,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to\nbe inserted in the given `Vec&lt;T&gt;`. Does nothing if the capacity is already\nsufficient.",7,null],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",7,null],[11,"into_boxed_slice","","Converts the vector into Box&lt;[T]&gt;.",7,null],[11,"truncate","","Shorten a vector to be `len` elements long, dropping excess elements.",7,null],[11,"as_slice","","Extracts a slice containing the entire vector.",7,null],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",7,null],[11,"set_len","","Sets the length of a vector.",7,null],[11,"swap_remove","","Removes an element from anywhere in the vector and return it, replacing\nit with the last element.",7,null],[11,"insert","","Inserts an element at position `index` within the vector, shifting all\nelements after it to the right.",7,null],[11,"remove","","Removes and returns the element at position `index` within the vector,\nshifting all elements after it to the left.",7,null],[11,"retain","","Retains only the elements specified by the predicate.",7,null],[11,"push","","Appends an element to the back of a collection.",7,null],[11,"pop","","Removes the last element from a vector and returns it, or `None` if it\nis empty.",7,null],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",7,null],[11,"drain","","Create a draining iterator that removes the specified range in the vector\nand yields the removed items.",7,null],[11,"clear","","Clears the vector, removing all values.",7,null],[11,"len","","Returns the number of elements in the vector.",7,null],[11,"is_empty","","Returns `true` if the vector contains no elements.",7,null],[11,"split_off","","Splits the collection into two at the given index.",7,null],[11,"resize","","Resizes the `Vec` in-place so that `len()` is equal to `new_len`.",7,null],[11,"extend_from_slice","","Clones and appends all elements in a slice to the `Vec`.",7,null],[11,"dedup","","Removes consecutive repeated elements in the vector.",7,null],[11,"drop","collections::binary_heap","",8,null],[11,"deref","","",8,null],[11,"deref_mut","","",8,null],[11,"clone","","",9,null],[11,"clone_from","","",9,null],[11,"default","","",9,{"inputs":[],"output":{"name":"binaryheap"}}],[11,"fmt","","",9,null],[11,"new","","Creates an empty `BinaryHeap` as a max-heap.",9,{"inputs":[],"output":{"name":"binaryheap"}}],[11,"with_capacity","","Creates an empty `BinaryHeap` with a specific capacity.\nThis preallocates enough memory for `capacity` elements,\nso that the `BinaryHeap` does not have to be reallocated\nuntil it contains at least that many values.",9,{"inputs":[{"name":"usize"}],"output":{"name":"binaryheap"}}],[11,"iter","","Returns an iterator visiting all values in the underlying vector, in\narbitrary order.",9,null],[11,"peek","","Returns the greatest item in the binary heap, or `None` if it is empty.",9,null],[11,"peek_mut","","Returns a mutable reference to the greatest item in the binary heap, or\n`None` if it is empty.",9,null],[11,"capacity","","Returns the number of elements the binary heap can hold without reallocating.",9,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `BinaryHeap`. Does nothing if the capacity is already sufficient.",9,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the\n`BinaryHeap`. The collection may reserve more space to avoid frequent reallocations.",9,null],[11,"shrink_to_fit","","Discards as much additional capacity as possible.",9,null],[11,"pop","","Removes the greatest item from the binary heap and returns it, or `None` if it\nis empty.",9,null],[11,"push","","Pushes an item onto the binary heap.",9,null],[11,"push_pop","","Pushes an item onto the binary heap, then pops the greatest item off the queue in\nan optimized fashion.",9,null],[11,"replace","","Pops the greatest item off the binary heap, then pushes an item onto the queue in\nan optimized fashion. The push is done regardless of whether the binary heap\nwas empty.",9,null],[11,"into_vec","","Consumes the `BinaryHeap` and returns the underlying vector\nin arbitrary order.",9,null],[11,"into_sorted_vec","","Consumes the `BinaryHeap` and returns a vector in sorted\n(ascending) order.",9,null],[11,"len","","Returns the length of the binary heap.",9,null],[11,"is_empty","","Checks if the binary heap is empty.",9,null],[11,"drain","","Clears the binary heap, returning an iterator over the removed elements.",9,null],[11,"clear","","Drops all items from the binary heap.",9,null],[11,"append","","Moves all the elements of `other` into `self`, leaving `other` empty.",9,null],[11,"clone","","",10,null],[11,"next","","",10,null],[11,"size_hint","","",10,null],[11,"next_back","","",10,null],[11,"clone","","",11,null],[11,"next","","",11,null],[11,"size_hint","","",11,null],[11,"next_back","","",11,null],[11,"next","","",12,null],[11,"size_hint","","",12,null],[11,"next_back","","",12,null],[11,"from","","",9,{"inputs":[{"name":"vec"}],"output":{"name":"binaryheap"}}],[11,"from","collections::vec","",7,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"from_iter","collections::binary_heap","",9,{"inputs":[{"name":"i"}],"output":{"name":"binaryheap"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe binary heap in arbitrary order. The binary heap cannot be used\nafter calling this.",9,null],[11,"extend","","",9,null],[11,"extend","","",9,null],[11,"drop","collections::btree::map","",13,null],[11,"clone","","",13,null],[11,"new","","Makes a new empty BTreeMap with a reasonable choice for B.",13,{"inputs":[],"output":{"name":"btreemap"}}],[11,"clear","","Clears the map, removing all values.",13,null],[11,"get","","Returns a reference to the value corresponding to the key.",13,null],[11,"contains_key","","Returns true if the map contains a value for the specified key.",13,null],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",13,null],[11,"insert","","Inserts a key-value pair into the map.",13,null],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",13,null],[11,"append","","Moves all elements from `other` into `Self`, leaving `other` empty.",13,null],[11,"range","","Constructs a double-ended iterator over a sub-range of elements in the map, starting\nat min, and ending at max. If min is `Unbounded`, then it will be treated as &quot;negative\ninfinity&quot;, and if max is `Unbounded`, then it will be treated as &quot;positive infinity&quot;.\nThus range(Unbounded, Unbounded) will yield the whole collection.",13,null],[11,"range_mut","","Constructs a mutable double-ended iterator over a sub-range of elements in the map, starting\nat min, and ending at max. If min is `Unbounded`, then it will be treated as &quot;negative\ninfinity&quot;, and if max is `Unbounded`, then it will be treated as &quot;positive infinity&quot;.\nThus range(Unbounded, Unbounded) will yield the whole collection.",13,null],[11,"entry","","Gets the given key&#39;s corresponding entry in the map for in-place manipulation.",13,null],[11,"split_off","","Splits the collection into two at the given key. Returns everything after the given key,\nincluding the key.",13,null],[11,"next","","",14,null],[11,"size_hint","","",14,null],[11,"next_back","","",14,null],[11,"len","","",14,null],[11,"clone","","",14,null],[11,"next","","",15,null],[11,"size_hint","","",15,null],[11,"next_back","","",15,null],[11,"len","","",15,null],[11,"into_iter","","",13,null],[11,"drop","","",16,null],[11,"next","","",16,null],[11,"size_hint","","",16,null],[11,"next_back","","",16,null],[11,"len","","",16,null],[11,"next","","",17,null],[11,"size_hint","","",17,null],[11,"next_back","","",17,null],[11,"len","","",17,null],[11,"clone","","",17,null],[11,"next","","",18,null],[11,"size_hint","","",18,null],[11,"next_back","","",18,null],[11,"len","","",18,null],[11,"clone","","",18,null],[11,"next","","",19,null],[11,"next","","",20,null],[11,"size_hint","","",20,null],[11,"next_back","","",20,null],[11,"len","","",20,null],[11,"next_back","","",19,null],[11,"clone","","",19,null],[11,"next","","",21,null],[11,"next_back","","",21,null],[11,"from_iter","","",13,{"inputs":[{"name":"t"}],"output":{"name":"btreemap"}}],[11,"extend","","",13,null],[11,"extend","","",13,null],[11,"hash","","",13,null],[11,"default","","",13,{"inputs":[],"output":{"name":"btreemap"}}],[11,"eq","","",13,null],[11,"partial_cmp","","",13,null],[11,"cmp","","",13,null],[11,"fmt","","",13,null],[11,"index","","",13,null],[11,"iter","","Gets an iterator over the entries of the map, sorted by key.",13,null],[11,"iter_mut","","Gets a mutable iterator over the entries of the map, sorted by key.",13,null],[11,"keys","","Gets an iterator over the keys of the map, in sorted order.",13,null],[11,"values","","Gets an iterator over the values of the map, in order by key.",13,null],[11,"values_mut","","Gets a mutable iterator over the values of the map, in order by key.",13,null],[11,"len","","Returns the number of elements in the map.",13,null],[11,"is_empty","","Returns true if the map contains no elements.",13,null],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",22,null],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",22,null],[11,"key","","Returns a reference to this entry&#39;s key.",22,null],[11,"key","","Gets a reference to the key that would be used when inserting a value\nthrough the VacantEntry.",23,null],[11,"into_key","","Take ownership of the key.",23,null],[11,"insert","","Sets the value of the entry with the VacantEntry&#39;s key,\nand returns a mutable reference to it.",23,null],[11,"key","","Gets a reference to the key in the entry.",24,null],[11,"remove_pair","","Take ownership of the key and value from the map.",24,null],[11,"get","","Gets a reference to the value in the entry.",24,null],[11,"get_mut","","Gets a mutable reference to the value in the entry.",24,null],[11,"into_mut","","Converts the entry into a mutable reference to its value.",24,null],[11,"insert","","Sets the value of the entry with the OccupiedEntry&#39;s key,\nand returns the entry&#39;s old value.",24,null],[11,"remove","","Takes the value of the entry out of the map, and returns it.",24,null],[11,"partial_cmp","collections::btree::set","",25,null],[11,"lt","","",25,null],[11,"le","","",25,null],[11,"gt","","",25,null],[11,"ge","","",25,null],[11,"cmp","","",25,null],[11,"eq","","",25,null],[11,"ne","","",25,null],[11,"hash","","",25,null],[11,"clone","","",25,null],[11,"new","","Makes a new BTreeSet with a reasonable choice of B.",25,{"inputs":[],"output":{"name":"btreeset"}}],[11,"iter","","Gets an iterator over the BTreeSet&#39;s contents.",25,null],[11,"range","","Constructs a double-ended iterator over a sub-range of elements in the set, starting\nat min, and ending at max. If min is `Unbounded`, then it will be treated as &quot;negative\ninfinity&quot;, and if max is `Unbounded`, then it will be treated as &quot;positive infinity&quot;.\nThus range(Unbounded, Unbounded) will yield the whole collection.",25,null],[11,"difference","","Visits the values representing the difference, in ascending order.",25,null],[11,"symmetric_difference","","Visits the values representing the symmetric difference, in ascending order.",25,null],[11,"intersection","","Visits the values representing the intersection, in ascending order.",25,null],[11,"union","","Visits the values representing the union, in ascending order.",25,null],[11,"len","","Returns the number of elements in the set.",25,null],[11,"is_empty","","Returns true if the set contains no elements.",25,null],[11,"clear","","Clears the set, removing all values.",25,null],[11,"contains","","Returns `true` if the set contains a value.",25,null],[11,"get","","Returns a reference to the value in the set, if any, that is equal to the given value.",25,null],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",25,null],[11,"is_subset","","Returns `true` if the set is a subset of another.",25,null],[11,"is_superset","","Returns `true` if the set is a superset of another.",25,null],[11,"insert","","Adds a value to the set.",25,null],[11,"replace","","Adds a value to the set, replacing the existing value, if any, that is equal to the given\none. Returns the replaced value.",25,null],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",25,null],[11,"take","","Removes and returns the value in the set, if any, that is equal to the given one.",25,null],[11,"append","","Moves all elements from `other` into `Self`, leaving `other` empty.",25,null],[11,"split_off","","Splits the collection into two at the given key. Returns everything after the given key,\nincluding the key.",25,null],[11,"from_iter","","",25,{"inputs":[{"name":"i"}],"output":{"name":"btreeset"}}],[11,"into_iter","","Gets an iterator for moving out the BtreeSet&#39;s contents.",25,null],[11,"extend","","",25,null],[11,"extend","","",25,null],[11,"default","","",25,{"inputs":[],"output":{"name":"btreeset"}}],[11,"fmt","","",25,null],[11,"clone","","",26,null],[11,"next","","",26,null],[11,"size_hint","","",26,null],[11,"next_back","","",26,null],[11,"len","","",26,null],[11,"next","","",27,null],[11,"size_hint","","",27,null],[11,"next_back","","",27,null],[11,"len","","",27,null],[11,"clone","","",28,null],[11,"next","","",28,null],[11,"next_back","","",28,null],[11,"clone","","",29,null],[11,"next","","",29,null],[11,"size_hint","","",29,null],[11,"clone","","",30,null],[11,"next","","",30,null],[11,"size_hint","","",30,null],[11,"clone","","",31,null],[11,"next","","",31,null],[11,"size_hint","","",31,null],[11,"clone","","",32,null],[11,"next","","",32,null],[11,"size_hint","","",32,null],[11,"borrow","collections::borrow","",33,null],[11,"clone","","",33,null],[11,"to_mut","","Acquires a mutable reference to the owned form of the data.",33,null],[11,"into_owned","","Extracts the owned data.",33,null],[11,"deref","","",33,null],[11,"cmp","","",33,null],[11,"eq","","",33,null],[11,"partial_cmp","","",33,null],[11,"fmt","","",33,null],[11,"fmt","","",33,null],[11,"default","","",33,{"inputs":[],"output":{"name":"cow"}}],[11,"hash","","",33,null],[11,"as_ref","","",33,null],[11,"hash","collections::enum_set","",34,null],[11,"cmp","","",34,null],[11,"partial_cmp","","",34,null],[11,"lt","","",34,null],[11,"le","","",34,null],[11,"gt","","",34,null],[11,"ge","","",34,null],[11,"eq","","",34,null],[11,"ne","","",34,null],[11,"clone","","",34,null],[11,"fmt","","",34,null],[11,"new","","Returns an empty `EnumSet`.",34,{"inputs":[],"output":{"name":"enumset"}}],[11,"len","","Returns the number of elements in the given `EnumSet`.",34,null],[11,"is_empty","","Returns true if the `EnumSet` is empty.",34,null],[11,"clear","","",34,null],[11,"is_disjoint","","Returns `false` if the `EnumSet` contains any enum of the given `EnumSet`.",34,null],[11,"is_superset","","Returns `true` if a given `EnumSet` is included in this `EnumSet`.",34,null],[11,"is_subset","","Returns `true` if this `EnumSet` is included in the given `EnumSet`.",34,null],[11,"union","","Returns the union of both `EnumSets`.",34,null],[11,"intersection","","Returns the intersection of both `EnumSets`.",34,null],[11,"insert","","Adds an enum to the `EnumSet`, and returns `true` if it wasn&#39;t there before",34,null],[11,"remove","","Removes an enum from the EnumSet",34,null],[11,"contains","","Returns `true` if an `EnumSet` contains a given enum.",34,null],[11,"iter","","Returns an iterator over an `EnumSet`.",34,null],[11,"sub","","",34,null],[11,"bitor","","",34,null],[11,"bitand","","",34,null],[11,"bitxor","","",34,null],[11,"clone","","",35,null],[11,"next","","",35,null],[11,"size_hint","","",35,null],[11,"from_iter","","",34,{"inputs":[{"name":"i"}],"output":{"name":"enumset"}}],[11,"extend","","",34,null],[11,"extend","","",34,null],[11,"clone","collections::linked_list","",36,null],[11,"clone","","",37,null],[11,"default","","",38,{"inputs":[],"output":{"name":"linkedlist"}}],[11,"new","","Creates an empty `LinkedList`.",38,{"inputs":[],"output":{"name":"linkedlist"}}],[11,"append","","Moves all elements from `other` to the end of the list.",38,null],[11,"iter","","Provides a forward iterator.",38,null],[11,"iter_mut","","Provides a forward iterator with mutable references.",38,null],[11,"is_empty","","Returns `true` if the `LinkedList` is empty.",38,null],[11,"len","","Returns the length of the `LinkedList`.",38,null],[11,"clear","","Removes all elements from the `LinkedList`.",38,null],[11,"contains","","Returns `true` if the `LinkedList` contains an element equal to the\ngiven value.",38,null],[11,"front","","Provides a reference to the front element, or `None` if the list is\nempty.",38,null],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the list\nis empty.",38,null],[11,"back","","Provides a reference to the back element, or `None` if the list is\nempty.",38,null],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the list\nis empty.",38,null],[11,"push_front","","Adds an element first in the list.",38,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the list is\nempty.",38,null],[11,"push_back","","Appends an element to the back of a list",38,null],[11,"pop_back","","Removes the last element from a list and returns it, or `None` if\nit is empty.",38,null],[11,"split_off","","Splits the list into two at the given index. Returns everything after the given index,\nincluding the index.",38,null],[11,"front_place","","Returns a place for insertion at the front of the list.",38,null],[11,"back_place","","Returns a place for insertion at the back of the list.",38,null],[11,"drop","","",38,null],[11,"next","","",36,null],[11,"size_hint","","",36,null],[11,"next_back","","",36,null],[11,"next","","",39,null],[11,"size_hint","","",39,null],[11,"next_back","","",39,null],[11,"insert_next","","Inserts `elt` just after the element most recently returned by `.next()`.\nThe inserted element does not appear in the iteration.",39,null],[11,"peek_next","","Provides a reference to the next element, without changing the iterator.",39,null],[11,"next","","",37,null],[11,"size_hint","","",37,null],[11,"next_back","","",37,null],[11,"from_iter","","",38,{"inputs":[{"name":"t"}],"output":{"name":"linkedlist"}}],[11,"into_iter","","Consumes the list into an iterator yielding elements by value.",38,null],[11,"extend","","",38,null],[11,"extend","","",38,null],[11,"eq","","",38,null],[11,"ne","","",38,null],[11,"partial_cmp","","",38,null],[11,"cmp","","",38,null],[11,"clone","","",38,null],[11,"fmt","","",38,null],[11,"hash","","",38,null],[11,"make_place","","",40,null],[11,"pointer","","",40,null],[11,"finalize","","",40,null],[11,"make_place","","",41,null],[11,"pointer","","",41,null],[11,"finalize","","",41,null],[11,"start","core::ops","",42,null],[11,"end","","",43,null],[11,"start","","",44,null],[11,"end","","",44,null],[11,"borrow","collections::vec","",7,null],[11,"borrow_mut","","",7,null],[11,"clone","collections::str","",45,null],[11,"next","","",45,null],[11,"size_hint","","",45,null],[11,"borrow","collections::string","",46,null],[11,"fmt","core::str::pattern","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"clone","","",47,null],[11,"fmt","","",48,null],[11,"clone","","",48,null],[11,"haystack","","",48,null],[11,"next","","",48,null],[11,"next_match","","",48,null],[11,"next_reject","","",48,null],[11,"next_back","","",48,null],[11,"next_match_back","","",48,null],[11,"next_reject_back","","",48,null],[11,"fmt","","",49,null],[11,"clone","","",49,null],[11,"haystack","","",49,null],[11,"next","","",49,null],[11,"next_match","","",49,null],[11,"next_reject","","",49,null],[11,"next_back","","",49,null],[11,"next_match_back","","",49,null],[11,"next_reject_back","","",49,null],[11,"clone","","",50,null],[11,"fmt","","",50,null],[11,"haystack","","",50,null],[11,"next","","",50,null],[11,"next_match","","",50,null],[11,"next_reject","","",50,null],[11,"next_back","","",50,null],[11,"next_match_back","","",50,null],[11,"next_reject_back","","",50,null],[11,"fmt","","",51,null],[11,"clone","","",51,null],[11,"haystack","","",51,null],[11,"next","","",51,null],[11,"next_match","","",51,null],[11,"next_back","","",51,null],[11,"next_match_back","","",51,null],[11,"cmp","collections::string","",46,null],[11,"partial_cmp","","",46,null],[11,"lt","","",46,null],[11,"le","","",46,null],[11,"gt","","",46,null],[11,"ge","","",46,null],[11,"fmt","","",52,null],[11,"fmt","","",53,null],[11,"new","","Creates a new empty `String`.",46,{"inputs":[],"output":{"name":"string"}}],[11,"with_capacity","","Creates a new empty `String` with a particular capacity.",46,{"inputs":[{"name":"usize"}],"output":{"name":"string"}}],[11,"from_utf8","","Converts a vector of bytes to a `String`.",46,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[11,"from_utf8_lossy","","Converts a slice of bytes to a string, including invalid characters.",46,null],[11,"from_utf16","","Decode a UTF-16 encoded vector `v` into a `String`, returning `Err`\nif `v` contains any invalid data.",46,null],[11,"from_utf16_lossy","","Decode a UTF-16 encoded vector `v` into a string, replacing\ninvalid data with the replacement character (U+FFFD).",46,null],[11,"from_raw_parts","","Creates a new `String` from a length, capacity, and pointer.",46,null],[11,"from_utf8_unchecked","","Converts a vector of bytes to a `String` without checking that the\nstring contains valid UTF-8.",46,{"inputs":[{"name":"vec"}],"output":{"name":"string"}}],[11,"into_bytes","","Converts a `String` into a byte vector.",46,null],[11,"as_str","","Extracts a string slice containing the entire string.",46,null],[11,"as_mut_str","","Extracts a string slice containing the entire string.",46,null],[11,"push_str","","Appends a given string slice onto the end of this `String`.",46,null],[11,"capacity","","Returns this `String`&#39;s capacity, in bytes.",46,null],[11,"reserve","","Ensures that this `String`&#39;s capacity is at least `additional` bytes\nlarger than its length.",46,null],[11,"reserve_exact","","Ensures that this `String`&#39;s capacity is `additional` bytes\nlarger than its length.",46,null],[11,"shrink_to_fit","","Shrinks the capacity of this `String` to match its length.",46,null],[11,"push","","Appends the given `char` to the end of this `String`.",46,null],[11,"as_bytes","","Returns a byte slice of this `String`&#39;s contents.",46,null],[11,"truncate","","Shortens this `String` to the specified length.",46,null],[11,"pop","","Removes the last character from the string buffer and returns it.",46,null],[11,"remove","","Removes a `char` from this `String` at a byte position and returns it.",46,null],[11,"insert","","Inserts a character into this `String` at a byte position.",46,null],[11,"as_mut_vec","","Returns a mutable reference to the contents of this `String`.",46,null],[11,"len","","Returns the length of this `String`, in bytes.",46,null],[11,"is_empty","","Returns `true` if this `String` has a length of zero.",46,null],[11,"clear","","Truncates this `String`, removing all contents.",46,null],[11,"drain","","Create a draining iterator that removes the specified range in the string\nand yields the removed chars.",46,null],[11,"into_boxed_str","","Converts this `String` into a `Box&lt;str&gt;`.",46,null],[11,"into_bytes","","Returns the bytes that were attempted to convert to a `String`.",52,null],[11,"utf8_error","","Fetch a `Utf8Error` to get more details about the conversion failure.",52,null],[11,"fmt","","",52,null],[11,"fmt","","",53,null],[11,"clone","","",46,null],[11,"clone_from","","",46,null],[11,"from_iter","","",46,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",46,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",46,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"extend","","",46,null],[11,"extend","","",46,null],[11,"extend","","",46,null],[11,"extend","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","collections::borrow","",33,null],[11,"ne","","",33,null],[11,"eq","","",33,null],[11,"ne","","",33,null],[11,"eq","","",33,null],[11,"ne","","",33,null],[11,"eq","collections::string","",46,null],[11,"ne","","",46,null],[11,"default","","",46,{"inputs":[],"output":{"name":"string"}}],[11,"fmt","","",46,null],[11,"fmt","","",46,null],[11,"hash","","",46,null],[11,"add","","",46,null],[11,"index","","",46,null],[11,"index","","",46,null],[11,"index","","",46,null],[11,"index","","",46,null],[11,"index","","",46,null],[11,"index","","",46,null],[11,"index_mut","","",46,null],[11,"index_mut","","",46,null],[11,"index_mut","","",46,null],[11,"index_mut","","",46,null],[11,"index_mut","","",46,null],[11,"index_mut","","",46,null],[11,"deref","","",46,null],[11,"deref_mut","","",46,null],[11,"from_str","","",46,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",54,null],[11,"fmt","","",54,null],[11,"fmt","","",54,null],[11,"eq","","",54,null],[11,"as_ref","","",46,null],[11,"as_ref","","",46,null],[11,"from","","",46,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[11,"from","collections::borrow","",33,{"inputs":[{"name":"str"}],"output":{"name":"cow"}}],[11,"from","","",33,{"inputs":[{"name":"string"}],"output":{"name":"cow"}}],[11,"into","collections::string","",46,null],[11,"write_str","","",46,null],[11,"write_char","","",46,null],[11,"drop","","",55,null],[11,"next","","",55,null],[11,"size_hint","","",55,null],[11,"next_back","","",55,null],[11,"clone","collections::vec","",7,null],[11,"clone_from","","",7,null],[11,"hash","","",7,null],[11,"index","","",7,null],[11,"index_mut","","",7,null],[11,"index","","",7,null],[11,"index","","",7,null],[11,"index","","",7,null],[11,"index","","",7,null],[11,"index","","",7,null],[11,"index","","",7,null],[11,"index_mut","","",7,null],[11,"index_mut","","",7,null],[11,"index_mut","","",7,null],[11,"index_mut","","",7,null],[11,"index_mut","","",7,null],[11,"index_mut","","",7,null],[11,"deref","","",7,null],[11,"deref_mut","","",7,null],[11,"from_iter","","",7,{"inputs":[{"name":"i"}],"output":{"name":"vec"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe vector (from start to end). The vector cannot be used after calling\nthis.",7,null],[11,"extend","","",7,null],[11,"extend","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","collections::borrow","",33,null],[11,"ne","","",33,null],[11,"eq","","",33,null],[11,"ne","","",33,null],[11,"eq","","",33,null],[11,"ne","","",33,null],[11,"eq","collections::vec","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"partial_cmp","","",7,null],[11,"cmp","","",7,null],[11,"drop","","",7,null],[11,"default","","",7,{"inputs":[],"output":{"name":"vec"}}],[11,"fmt","","",7,null],[11,"as_ref","","",7,null],[11,"as_mut","","",7,null],[11,"as_ref","","",7,null],[11,"as_mut","","",7,null],[11,"from","","",7,null],[11,"from","","",7,{"inputs":[{"name":"str"}],"output":{"name":"vec"}}],[11,"from","collections::borrow","",33,null],[11,"from","","",33,{"inputs":[{"name":"vec"}],"output":{"name":"cow"}}],[11,"from_iter","","",33,{"inputs":[{"name":"i"}],"output":{"name":"cow"}}],[11,"next","collections::vec","",56,null],[11,"size_hint","","",56,null],[11,"count","","",56,null],[11,"next_back","","",56,null],[11,"clone","","",56,null],[11,"drop","","",56,null],[11,"next","","",57,null],[11,"size_hint","","",57,null],[11,"next_back","","",57,null],[11,"drop","","",57,null],[11,"clone","collections::vec_deque","",58,null],[11,"drop","","",58,null],[11,"default","","",58,{"inputs":[],"output":{"name":"vecdeque"}}],[11,"new","","Creates an empty `VecDeque`.",58,{"inputs":[],"output":{"name":"vecdeque"}}],[11,"with_capacity","","Creates an empty `VecDeque` with space for at least `n` elements.",58,{"inputs":[{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"get","","Retrieves an element in the `VecDeque` by index.",58,null],[11,"get_mut","","Retrieves an element in the `VecDeque` mutably by index.",58,null],[11,"swap","","Swaps elements at indices `i` and `j`.",58,null],[11,"capacity","","Returns the number of elements the `VecDeque` can hold without\nreallocating.",58,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `VecDeque`. Does nothing if the capacity is already sufficient.",58,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the given\n`VecDeque`. The collection may reserve more space to avoid frequent reallocations.",58,null],[11,"shrink_to_fit","","Shrinks the capacity of the `VecDeque` as much as possible.",58,null],[11,"truncate","","Shortens a `VecDeque`, dropping excess elements from the back.",58,null],[11,"iter","","Returns a front-to-back iterator.",58,null],[11,"iter_mut","","Returns a front-to-back iterator that returns mutable references.",58,null],[11,"as_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",58,null],[11,"as_mut_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",58,null],[11,"len","","Returns the number of elements in the `VecDeque`.",58,null],[11,"is_empty","","Returns true if the buffer contains no elements",58,null],[11,"drain","","Create a draining iterator that removes the specified range in the\n`VecDeque` and yields the removed items.",58,null],[11,"clear","","Clears the buffer, removing all values.",58,null],[11,"contains","","Returns `true` if the `VecDeque` contains an element equal to the\ngiven value.",58,null],[11,"front","","Provides a reference to the front element, or `None` if the sequence is\nempty.",58,null],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the\nsequence is empty.",58,null],[11,"back","","Provides a reference to the back element, or `None` if the sequence is\nempty.",58,null],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the\nsequence is empty.",58,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the sequence is\nempty.",58,null],[11,"push_front","","Inserts an element first in the sequence.",58,null],[11,"push_back","","Appends an element to the back of a buffer",58,null],[11,"pop_back","","Removes the last element from a buffer and returns it, or `None` if\nit is empty.",58,null],[11,"swap_remove_back","","Removes an element from anywhere in the `VecDeque` and returns it, replacing it with the\nlast element.",58,null],[11,"swap_remove_front","","Removes an element from anywhere in the `VecDeque` and returns it,\nreplacing it with the first element.",58,null],[11,"insert","","Inserts an element at `index` within the `VecDeque`. Whichever\nend is closer to the insertion point will be moved to make room,\nand all the affected elements will be moved to new positions.",58,null],[11,"remove","","Removes and returns the element at `index` from the `VecDeque`.\nWhichever end is closer to the removal point will be moved to make\nroom, and all the affected elements will be moved to new positions.\nReturns `None` if `index` is out of bounds.",58,null],[11,"split_off","","Splits the collection into two at the given index.",58,null],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",58,null],[11,"retain","","Retains only the elements specified by the predicate.",58,null],[11,"resize","","Modifies the `VecDeque` in-place so that `len()` is equal to new_len,\neither by removing excess elements or by appending copies of a value to the back.",58,null],[11,"clone","","",59,null],[11,"next","","",59,null],[11,"size_hint","","",59,null],[11,"next_back","","",59,null],[11,"next","","",60,null],[11,"size_hint","","",60,null],[11,"next_back","","",60,null],[11,"clone","","",61,null],[11,"next","","",61,null],[11,"size_hint","","",61,null],[11,"next_back","","",61,null],[11,"drop","","",62,null],[11,"next","","",62,null],[11,"size_hint","","",62,null],[11,"next_back","","",62,null],[11,"eq","","",58,null],[11,"partial_cmp","","",58,null],[11,"cmp","","",58,null],[11,"hash","","",58,null],[11,"index","","",58,null],[11,"index_mut","","",58,null],[11,"from_iter","","",58,{"inputs":[{"name":"t"}],"output":{"name":"vecdeque"}}],[11,"into_iter","","Consumes the list into a front-to-back iterator yielding elements by\nvalue.",58,null],[11,"extend","","",58,null],[11,"extend","","",58,null],[11,"fmt","","",58,null],[11,"from","","",58,{"inputs":[{"name":"vec"}],"output":{"name":"vecdeque"}}],[11,"from","collections::vec","",7,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vec"}}],[11,"eq","collections","",63,null],[11,"ne","","",63,null],[11,"hash","","",63,null],[11,"fmt","","",63,null],[11,"clone","","",63,null],[11,"clone","alloc::boxed","",64,null],[11,"pointer","","",65,null],[11,"make_place","","",65,{"inputs":[],"output":{"name":"intermediatebox"}}],[11,"finalize","","",65,null],[11,"finalize","","",66,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"make_place","","",64,null],[11,"drop","","",65,null],[11,"new","","Allocates memory on the heap and then places `x` into it.",66,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"from_raw","","Constructs a box from a raw pointer.",66,null],[11,"into_raw","","Consumes the `Box`, returning the wrapped raw pointer.",66,null],[11,"default","","",66,{"inputs":[],"output":{"name":"box"}}],[11,"default","","",66,{"inputs":[],"output":{"name":"box"}}],[11,"clone","","Returns a new box with a `clone()` of this box&#39;s contents.",66,null],[11,"clone_from","","Copies `source`&#39;s contents into `self` without creating a new allocation.",66,null],[11,"clone","","",66,null],[11,"eq","","",66,null],[11,"ne","","",66,null],[11,"partial_cmp","","",66,null],[11,"lt","","",66,null],[11,"le","","",66,null],[11,"ge","","",66,null],[11,"gt","","",66,null],[11,"cmp","","",66,null],[11,"hash","","",66,null],[11,"from","","",66,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",66,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",66,null],[11,"fmt","","",66,null],[11,"fmt","","",66,null],[11,"fmt","","",66,null],[11,"deref","","",66,null],[11,"deref_mut","","",66,null],[11,"next","","",66,null],[11,"size_hint","","",66,null],[11,"next_back","","",66,null],[11,"call_once","","",66,null],[11,"call_once","","",66,null],[11,"clone","","",66,null],[11,"borrow","","",66,null],[11,"borrow_mut","","",66,null],[11,"as_ref","","",66,null],[11,"as_mut","","",66,null],[11,"deref","regex_syntax","",6,null],[11,"deref_mut","","",6,null],[6,"Result","","An alias for computations that can return a `Error`.",null,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"fmt","","",2,null],[11,"clone","","",2,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"fmt","","",3,null],[11,"clone","","",3,null],[11,"eq","","",67,null],[11,"ne","","",67,null],[11,"fmt","","",67,null],[11,"clone","","",67,null],[11,"cmp","","",0,null],[11,"partial_cmp","","",0,null],[11,"lt","","",0,null],[11,"le","","",0,null],[11,"gt","","",0,null],[11,"ge","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"eq","","",68,null],[11,"ne","","",68,null],[11,"fmt","","",68,null],[11,"clone","","",68,null],[11,"cmp","","",1,null],[11,"partial_cmp","","",1,null],[11,"lt","","",1,null],[11,"le","","",1,null],[11,"gt","","",1,null],[11,"ge","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"fmt","","",69,null],[11,"clone","","",69,null],[11,"new","","Create a new builder for configuring expression parsing.",69,{"inputs":[],"output":{"name":"exprbuilder"}}],[11,"case_insensitive","","Set the default value for the case insensitive (`i`) flag.",69,null],[11,"multi_line","","Set the default value for the multi-line matching (`m`) flag.",69,null],[11,"dot_matches_new_line","","Set the default value for the any character (`s`) flag.",69,null],[11,"swap_greed","","Set the default value for the greedy swap (`U`) flag.",69,null],[11,"ignore_whitespace","","Set the default value for the ignore whitespace (`x`) flag.",69,null],[11,"unicode","","Set the default value for the Unicode (`u`) flag.",69,null],[11,"allow_bytes","","Whether the parser allows matching arbitrary bytes or not.",69,null],[11,"nest_limit","","Set the nesting limit for regular expression parsing.",69,null],[11,"parse","","Parse a string as a regular expression using the current configuraiton.",69,null],[11,"parse","","Parses a string in a regular expression syntax tree.",2,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"prefixes","","Returns a set of literal prefixes extracted from this expression.",2,null],[11,"suffixes","","Returns a set of literal suffixes extracted from this expression.",2,null],[11,"is_anchored_start","","Returns true if and only if the expression is required to match from\nthe beginning of text.",2,null],[11,"is_anchored_end","","Returns true if and only if the expression is required to match at the\nend of the text.",2,null],[11,"has_bytes","","Returns true if and only if the expression contains sub-expressions\nthat can match arbitrary bytes.",2,null],[11,"deref","","",67,null],[11,"into_iter","","",67,null],[11,"new","","Create a new class from an existing set of ranges.",67,{"inputs":[{"name":"vec"}],"output":{"name":"charclass"}}],[11,"matches","","Returns true if `c` is matched by this character class.",67,null],[11,"remove","","Removes the given character from the class if it exists.",67,null],[11,"negate","","Negates the character class.",67,null],[11,"case_fold","","Apply case folding to this character class.",67,null],[11,"eq","","",0,null],[11,"partial_cmp","","",0,null],[11,"new","","Create a new class from an existing set of ranges.",68,{"inputs":[{"name":"vec"}],"output":{"name":"byteclass"}}],[11,"matches","","Returns true if `b` is matched by this byte class.",68,null],[11,"remove","","Removes the given byte from the class if it exists.",68,null],[11,"negate","","Negates the byte class.",68,null],[11,"case_fold","","Apply case folding to this byte class.",68,null],[11,"deref","","",68,null],[11,"into_iter","","",68,null],[11,"eq","","",1,null],[11,"partial_cmp","","",1,null],[11,"fmt","","",2,null],[11,"fmt","","",3,null],[11,"fmt","","",67,null],[11,"fmt","","",0,null],[11,"fmt","","",68,null],[11,"fmt","","",1,null],[11,"eq","","",70,null],[11,"ne","","",70,null],[11,"fmt","","",70,null],[11,"clone","","",70,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"fmt","","",4,null],[11,"clone","","",4,null],[11,"position","","Returns an approximate *character* offset at which the error occurred.",70,null],[11,"kind","","Returns the type of the regex parse error.",70,null],[11,"description","","",70,null],[11,"fmt","","",70,null],[11,"fmt","","",4,null]],"paths":[[3,"ClassRange"],[3,"ByteRange"],[4,"Expr"],[4,"Repeater"],[4,"ErrorKind"],[3,"Literals"],[3,"Lit"],[3,"Vec"],[3,"PeekMut"],[3,"BinaryHeap"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"BTreeMap"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"Range"],[3,"ValuesMut"],[3,"RangeMut"],[4,"Entry"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"BTreeSet"],[3,"Iter"],[3,"IntoIter"],[3,"Range"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Intersection"],[3,"Union"],[4,"Cow"],[3,"EnumSet"],[3,"Iter"],[3,"Iter"],[3,"IntoIter"],[3,"LinkedList"],[3,"IterMut"],[3,"FrontPlace"],[3,"BackPlace"],[3,"RangeFrom"],[3,"RangeTo"],[3,"Range"],[3,"EncodeUtf16"],[3,"String"],[4,"SearchStep"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[3,"FromUtf8Error"],[3,"FromUtf16Error"],[4,"ParseError"],[3,"Drain"],[3,"IntoIter"],[3,"Drain"],[3,"VecDeque"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[4,"Bound"],[3,"ExchangeHeapSingleton"],[3,"IntermediateBox"],[3,"Box"],[3,"CharClass"],[3,"ByteClass"],[3,"ExprBuilder"],[3,"Error"]]};
searchIndex["dlib"] = {"doc":"","items":[[11,"new","libloading","Find and load a shared library (module).",0,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"get","","Get a symbol by name.",0,null],[11,"new","libloading::os::unix","Find and load a shared library (module).",1,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"this","","Load the dynamic libraries linked into main program.",1,{"inputs":[],"output":{"name":"library"}}],[11,"get","","Get a symbol by name.",1,null],[11,"drop","","",1,null],[11,"fmt","","",1,null],[11,"deref","","",2,null],[11,"fmt","","",2,null],[11,"from","std::io::error","",3,{"inputs":[{"name":"nullerror"}],"output":{"name":"error"}}],[11,"fmt","libloading","",0,null],[11,"deref","","",4,null],[11,"fmt","","",4,null],[3,"Library","dlib","A dynamically loaded library.",null,null],[3,"Symbol","","Symbol from a library.",null,null],[4,"DlError","","",null,null],[13,"NotFound","","",5,null],[13,"MissingSymbol","","",5,null],[14,"ffi_dispatch!","","",null,null],[14,"ffi_dispatch_static!","","",null,null],[14,"link_external_library!","","",null,null],[14,"dlopen_external_library!","","",null,null],[14,"external_library!","","",null,null]],"paths":[[3,"Library"],[3,"Library"],[3,"Symbol"],[3,"Error"],[3,"Symbol"],[4,"DlError"]]};
searchIndex["unicode_normalization"] = {"doc":"Unicode character composition and decomposition utilities\nas described in\n[Unicode Standard Annex #15](http://www.unicode.org/reports/tr15/).","items":[[3,"Decompositions","unicode_normalization","External iterator for a string decomposition&#39;s characters.",null,null],[3,"Recompositions","","External iterator for a string recomposition&#39;s characters.",null,null],[11,"clone","","",0,null],[11,"next","","",0,null],[11,"size_hint","","",0,null],[11,"clone","","",1,null],[11,"next","","",1,null],[0,"char","","Methods for composing and decomposing characters.",null,null],[5,"decompose_canonical","unicode_normalization::char","Compute canonical Unicode decomposition for character.\nSee [Unicode Standard Annex #15](http://www.unicode.org/reports/tr15/)\nfor more information.",null,{"inputs":[{"name":"char"},{"name":"f"}],"output":null}],[5,"decompose_compatible","","Compute canonical or compatible Unicode decomposition for character.\nSee [Unicode Standard Annex #15](http://www.unicode.org/reports/tr15/)\nfor more information.",null,{"inputs":[{"name":"char"},{"name":"f"}],"output":null}],[5,"compose","","Compose two characters into a single character, if possible.\nSee [Unicode Standard Annex #15](http://www.unicode.org/reports/tr15/)\nfor more information.",null,{"inputs":[{"name":"char"},{"name":"char"}],"output":{"name":"option"}}],[5,"canonical_combining_class","","",null,{"inputs":[{"name":"char"}],"output":{"name":"u8"}}],[5,"is_combining_mark","","Return whether the given character is a combining mark (`General_Category=Mark`)",null,{"inputs":[{"name":"char"}],"output":{"name":"bool"}}],[17,"UNICODE_VERSION","unicode_normalization","The version of [Unicode](http://www.unicode.org/)\nthat this version of unicode-normalization is based on.",null,null],[8,"UnicodeNormalization","","Methods for iterating over strings while applying Unicode normalizations\nas described in\n[Unicode Standard Annex #15](http://www.unicode.org/reports/tr15/).",null,null],[10,"nfd","","Returns an iterator over the string in Unicode Normalization Form D\n(canonical decomposition).",2,null],[10,"nfkd","","Returns an iterator over the string in Unicode Normalization Form KD\n(compatibility decomposition).",2,null],[10,"nfc","","An Iterator over the string in Unicode Normalization Form C\n(canonical decomposition followed by canonical composition).",2,null],[10,"nfkc","","An Iterator over the string in Unicode Normalization Form KC\n(compatibility decomposition followed by canonical composition).",2,null]],"paths":[[3,"Decompositions"],[3,"Recompositions"],[8,"UnicodeNormalization"]]};
searchIndex["libloading"] = {"doc":"A memory-safer wrapper around system dynamic library primitives.","items":[[3,"Library","libloading","A dynamically loaded library.",null,null],[3,"Symbol","","Symbol from a library.",null,null],[0,"os","","",null,null],[0,"unix","libloading::os","",null,null],[3,"Library","libloading::os::unix","A platform-specific equivalent of the cross-platform `Library`.",null,null],[3,"Symbol","","Symbol from a library.",null,null],[11,"new","std::sync::mutex","Creates a new mutex in an unlocked state ready for use.",0,{"inputs":[{"name":"t"}],"output":{"name":"mutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",0,null],[11,"try_lock","","Attempts to acquire this lock.",0,null],[11,"is_poisoned","","Determines whether the lock is poisoned.",0,null],[11,"into_inner","","Consumes this mutex, returning the underlying data.",0,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",0,null],[11,"from","alloc::boxed","",1,{"inputs":[{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",1,{"inputs":[{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",1,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",1,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",1,{"inputs":[{"name":"str"}],"output":{"name":"box"}}],[11,"from","","",1,{"inputs":[{"name":"str"}],"output":{"name":"box"}}],[11,"description","core::str","",2,null],[11,"description","","",3,null],[11,"description","core::num","",4,null],[11,"description","","",5,null],[11,"description","core::num::dec2flt","",6,null],[11,"description","collections::string","",7,null],[11,"description","","",8,null],[11,"description","","",9,null],[11,"description","rustc_unicode::char","",10,null],[11,"description","alloc::boxed","",1,null],[11,"cause","","",1,null],[11,"description","core::fmt","",11,null],[11,"is","libloading::os","Returns true if the boxed type is the same as `T`",12,null],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",12,null],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",12,null],[11,"is","","Forwards to the method defined on the type `Any`.",12,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",12,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",12,null],[11,"is","","Forwards to the method defined on the type `Any`.",12,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",12,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",12,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",12,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",12,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",12,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"next","std::ascii","",13,null],[11,"size_hint","","",13,null],[11,"next_back","","",13,null],[11,"clone","std::thread::local","",14,null],[11,"eq","","",14,null],[11,"with","","Acquires a reference to the value in this TLS key.",15,null],[11,"state","","Query the current state of this key.",15,null],[11,"new","std::thread::local::elf","",16,{"inputs":[],"output":{"name":"key"}}],[11,"get","","",16,null],[11,"new","std::thread::local::os","",17,{"inputs":[],"output":{"name":"key"}}],[11,"get","","",17,null],[11,"new","std::thread","Generates the base configuration for spawning a thread, from which\nconfiguration methods can be chained.",18,{"inputs":[],"output":{"name":"builder"}}],[11,"name","","Names the thread-to-be. Currently the name is used for identification\nonly in panic messages.",18,null],[11,"stack_size","","Sets the size of the stack for the new thread.",18,null],[11,"spawn","","Spawns a new thread, and returns a join handle for it.",18,null],[11,"clone","","",19,null],[11,"unpark","","Atomically makes the handle&#39;s token available if it is not already.",19,null],[11,"name","","Gets the thread&#39;s name.",19,null],[11,"fmt","","",19,null],[11,"thread","","Extracts a handle to the underlying thread",20,null],[11,"join","","Waits for the associated thread to finish.",20,null],[11,"clone","std::collections::hash::map","",21,null],[11,"new","","Creates an empty HashMap.",21,{"inputs":[],"output":{"name":"hashmap"}}],[11,"with_capacity","","Creates an empty hash map with the given initial capacity.",21,{"inputs":[{"name":"usize"}],"output":{"name":"hashmap"}}],[11,"with_hasher","","Creates an empty hashmap which will use the given hash builder to hash\nkeys.",21,{"inputs":[{"name":"s"}],"output":{"name":"hashmap"}}],[11,"with_capacity_and_hasher","","Creates an empty HashMap with space for at least `capacity`\nelements, using `hasher` to hash the keys.",21,{"inputs":[{"name":"usize"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"hasher","","Returns a reference to the map&#39;s hasher.",21,null],[11,"capacity","","Returns the number of elements the map can hold without reallocating.",21,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashMap`. The collection may reserve more space to avoid\nfrequent reallocations.",21,null],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",21,null],[11,"keys","","An iterator visiting all keys in arbitrary order.\nIterator element type is `&amp;&#39;a K`.",21,null],[11,"values","","An iterator visiting all values in arbitrary order.\nIterator element type is `&amp;&#39;a V`.",21,null],[11,"values_mut","","An iterator visiting all values mutably in arbitrary order.\nIterator element type is `&amp;&#39;a mut V`.",21,null],[11,"iter","","An iterator visiting all key-value pairs in arbitrary order.\nIterator element type is `(&amp;&#39;a K, &amp;&#39;a V)`.",21,null],[11,"iter_mut","","An iterator visiting all key-value pairs in arbitrary order,\nwith mutable references to the values.\nIterator element type is `(&amp;&#39;a K, &amp;&#39;a mut V)`.",21,null],[11,"entry","","Gets the given key&#39;s corresponding entry in the map for in-place manipulation.",21,null],[11,"len","","Returns the number of elements in the map.",21,null],[11,"is_empty","","Returns true if the map contains no elements.",21,null],[11,"drain","","Clears the map, returning all key-value pairs as an iterator. Keeps the\nallocated memory for reuse.",21,null],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the allocated memory\nfor reuse.",21,null],[11,"get","","Returns a reference to the value corresponding to the key.",21,null],[11,"contains_key","","Returns true if the map contains a value for the specified key.",21,null],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",21,null],[11,"insert","","Inserts a key-value pair into the map.",21,null],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",21,null],[11,"eq","","",21,null],[11,"fmt","","",21,null],[11,"default","","",21,{"inputs":[],"output":{"name":"hashmap"}}],[11,"index","","",21,null],[11,"clone","","",22,null],[11,"clone","","",23,null],[11,"clone","","",24,null],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each key-value\npair out of the map in arbitrary order. The map cannot be used after\ncalling this.",21,null],[11,"next","","",22,null],[11,"size_hint","","",22,null],[11,"len","","",22,null],[11,"next","","",25,null],[11,"size_hint","","",25,null],[11,"len","","",25,null],[11,"next","","",26,null],[11,"size_hint","","",26,null],[11,"len","","",26,null],[11,"next","","",23,null],[11,"size_hint","","",23,null],[11,"len","","",23,null],[11,"next","","",24,null],[11,"size_hint","","",24,null],[11,"len","","",24,null],[11,"next","","",27,null],[11,"size_hint","","",27,null],[11,"len","","",27,null],[11,"next","","",28,null],[11,"size_hint","","",28,null],[11,"len","","",28,null],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",29,null],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",29,null],[11,"key","","Returns a reference to this entry&#39;s key.",29,null],[11,"key","","Gets a reference to the key in the entry.",30,null],[11,"remove_pair","","Take the ownership of the key and value from the map.",30,null],[11,"get","","Gets a reference to the value in the entry.",30,null],[11,"get_mut","","Gets a mutable reference to the value in the entry.",30,null],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to the value in the entry\nwith a lifetime bound to the map itself",30,null],[11,"insert","","Sets the value of the entry, and returns the entry&#39;s old value",30,null],[11,"remove","","Takes the value out of the entry, and returns it",30,null],[11,"key","","Gets a reference to the key that would be used when inserting a value\nthrough the VacantEntry.",31,null],[11,"into_key","","Take ownership of the key.",31,null],[11,"insert","","Sets the value of the entry with the VacantEntry&#39;s key,\nand returns a mutable reference to it",31,null],[11,"from_iter","","",21,{"inputs":[{"name":"t"}],"output":{"name":"hashmap"}}],[11,"extend","","",21,null],[11,"extend","","",21,null],[11,"clone","","",32,null],[11,"new","","Constructs a new `RandomState` that is initialized with random keys.",32,{"inputs":[],"output":{"name":"randomstate"}}],[11,"build_hasher","","",32,null],[11,"write","","",33,null],[11,"finish","","",33,null],[11,"default","","",32,{"inputs":[],"output":{"name":"randomstate"}}],[11,"clone","std::collections::hash::set","",34,null],[11,"new","","Creates an empty HashSet.",34,{"inputs":[],"output":{"name":"hashset"}}],[11,"with_capacity","","Creates an empty HashSet with space for at least `n` elements in\nthe hash table.",34,{"inputs":[{"name":"usize"}],"output":{"name":"hashset"}}],[11,"with_hasher","","Creates a new empty hash set which will use the given hasher to hash\nkeys.",34,{"inputs":[{"name":"s"}],"output":{"name":"hashset"}}],[11,"with_capacity_and_hasher","","Creates an empty HashSet with space for at least `capacity`\nelements in the hash table, using `hasher` to hash the keys.",34,{"inputs":[{"name":"usize"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"hasher","","Returns a reference to the set&#39;s hasher.",34,null],[11,"capacity","","Returns the number of elements the set can hold without reallocating.",34,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashSet`. The collection may reserve more space to avoid\nfrequent reallocations.",34,null],[11,"shrink_to_fit","","Shrinks the capacity of the set as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",34,null],[11,"iter","","An iterator visiting all elements in arbitrary order.\nIterator element type is &amp;&#39;a T.",34,null],[11,"difference","","Visit the values representing the difference.",34,null],[11,"symmetric_difference","","Visit the values representing the symmetric difference.",34,null],[11,"intersection","","Visit the values representing the intersection.",34,null],[11,"union","","Visit the values representing the union.",34,null],[11,"len","","Returns the number of elements in the set.",34,null],[11,"is_empty","","Returns true if the set contains no elements.",34,null],[11,"drain","","Clears the set, returning all elements in an iterator.",34,null],[11,"clear","","Clears the set, removing all values.",34,null],[11,"contains","","Returns `true` if the set contains a value.",34,null],[11,"get","","Returns a reference to the value in the set, if any, that is equal to the given value.",34,null],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",34,null],[11,"is_subset","","Returns `true` if the set is a subset of another.",34,null],[11,"is_superset","","Returns `true` if the set is a superset of another.",34,null],[11,"insert","","Adds a value to the set.",34,null],[11,"replace","","Adds a value to the set, replacing the existing value, if any, that is equal to the given\none. Returns the replaced value.",34,null],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",34,null],[11,"take","","Removes and returns the value in the set, if any, that is equal to the given one.",34,null],[11,"eq","","",34,null],[11,"fmt","","",34,null],[11,"from_iter","","",34,{"inputs":[{"name":"i"}],"output":{"name":"hashset"}}],[11,"extend","","",34,null],[11,"extend","","",34,null],[11,"default","","",34,{"inputs":[],"output":{"name":"hashset"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out\nof the set in arbitrary order. The set cannot be used after calling\nthis.",34,null],[11,"clone","","",35,null],[11,"next","","",35,null],[11,"size_hint","","",35,null],[11,"len","","",35,null],[11,"next","","",36,null],[11,"size_hint","","",36,null],[11,"len","","",36,null],[11,"next","","",37,null],[11,"size_hint","","",37,null],[11,"len","","",37,null],[11,"clone","","",38,null],[11,"next","","",38,null],[11,"size_hint","","",38,null],[11,"clone","","",39,null],[11,"next","","",39,null],[11,"size_hint","","",39,null],[11,"clone","","",40,null],[11,"next","","",40,null],[11,"size_hint","","",40,null],[11,"clone","","",41,null],[11,"next","","",41,null],[11,"size_hint","","",41,null],[11,"drop","collections::binary_heap","",42,null],[11,"deref","","",42,null],[11,"deref_mut","","",42,null],[11,"clone","","",43,null],[11,"clone_from","","",43,null],[11,"default","","",43,{"inputs":[],"output":{"name":"binaryheap"}}],[11,"fmt","","",43,null],[11,"new","","Creates an empty `BinaryHeap` as a max-heap.",43,{"inputs":[],"output":{"name":"binaryheap"}}],[11,"with_capacity","","Creates an empty `BinaryHeap` with a specific capacity.\nThis preallocates enough memory for `capacity` elements,\nso that the `BinaryHeap` does not have to be reallocated\nuntil it contains at least that many values.",43,{"inputs":[{"name":"usize"}],"output":{"name":"binaryheap"}}],[11,"iter","","Returns an iterator visiting all values in the underlying vector, in\narbitrary order.",43,null],[11,"peek","","Returns the greatest item in the binary heap, or `None` if it is empty.",43,null],[11,"peek_mut","","Returns a mutable reference to the greatest item in the binary heap, or\n`None` if it is empty.",43,null],[11,"capacity","","Returns the number of elements the binary heap can hold without reallocating.",43,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `BinaryHeap`. Does nothing if the capacity is already sufficient.",43,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the\n`BinaryHeap`. The collection may reserve more space to avoid frequent reallocations.",43,null],[11,"shrink_to_fit","","Discards as much additional capacity as possible.",43,null],[11,"pop","","Removes the greatest item from the binary heap and returns it, or `None` if it\nis empty.",43,null],[11,"push","","Pushes an item onto the binary heap.",43,null],[11,"push_pop","","Pushes an item onto the binary heap, then pops the greatest item off the queue in\nan optimized fashion.",43,null],[11,"replace","","Pops the greatest item off the binary heap, then pushes an item onto the queue in\nan optimized fashion. The push is done regardless of whether the binary heap\nwas empty.",43,null],[11,"into_vec","","Consumes the `BinaryHeap` and returns the underlying vector\nin arbitrary order.",43,null],[11,"into_sorted_vec","","Consumes the `BinaryHeap` and returns a vector in sorted\n(ascending) order.",43,null],[11,"len","","Returns the length of the binary heap.",43,null],[11,"is_empty","","Checks if the binary heap is empty.",43,null],[11,"drain","","Clears the binary heap, returning an iterator over the removed elements.",43,null],[11,"clear","","Drops all items from the binary heap.",43,null],[11,"append","","Moves all the elements of `other` into `self`, leaving `other` empty.",43,null],[11,"clone","","",44,null],[11,"next","","",44,null],[11,"size_hint","","",44,null],[11,"next_back","","",44,null],[11,"clone","","",45,null],[11,"next","","",45,null],[11,"size_hint","","",45,null],[11,"next_back","","",45,null],[11,"next","","",46,null],[11,"size_hint","","",46,null],[11,"next_back","","",46,null],[11,"from","","",43,{"inputs":[{"name":"vec"}],"output":{"name":"binaryheap"}}],[11,"from","collections::vec","",47,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"from_iter","collections::binary_heap","",43,{"inputs":[{"name":"i"}],"output":{"name":"binaryheap"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe binary heap in arbitrary order. The binary heap cannot be used\nafter calling this.",43,null],[11,"extend","","",43,null],[11,"extend","","",43,null],[11,"clone","collections::vec_deque","",48,null],[11,"drop","","",48,null],[11,"default","","",48,{"inputs":[],"output":{"name":"vecdeque"}}],[11,"new","","Creates an empty `VecDeque`.",48,{"inputs":[],"output":{"name":"vecdeque"}}],[11,"with_capacity","","Creates an empty `VecDeque` with space for at least `n` elements.",48,{"inputs":[{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"get","","Retrieves an element in the `VecDeque` by index.",48,null],[11,"get_mut","","Retrieves an element in the `VecDeque` mutably by index.",48,null],[11,"swap","","Swaps elements at indices `i` and `j`.",48,null],[11,"capacity","","Returns the number of elements the `VecDeque` can hold without\nreallocating.",48,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `VecDeque`. Does nothing if the capacity is already sufficient.",48,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the given\n`VecDeque`. The collection may reserve more space to avoid frequent reallocations.",48,null],[11,"shrink_to_fit","","Shrinks the capacity of the `VecDeque` as much as possible.",48,null],[11,"truncate","","Shortens a `VecDeque`, dropping excess elements from the back.",48,null],[11,"iter","","Returns a front-to-back iterator.",48,null],[11,"iter_mut","","Returns a front-to-back iterator that returns mutable references.",48,null],[11,"as_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",48,null],[11,"as_mut_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",48,null],[11,"len","","Returns the number of elements in the `VecDeque`.",48,null],[11,"is_empty","","Returns true if the buffer contains no elements",48,null],[11,"drain","","Create a draining iterator that removes the specified range in the\n`VecDeque` and yields the removed items.",48,null],[11,"clear","","Clears the buffer, removing all values.",48,null],[11,"contains","","Returns `true` if the `VecDeque` contains an element equal to the\ngiven value.",48,null],[11,"front","","Provides a reference to the front element, or `None` if the sequence is\nempty.",48,null],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the\nsequence is empty.",48,null],[11,"back","","Provides a reference to the back element, or `None` if the sequence is\nempty.",48,null],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the\nsequence is empty.",48,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the sequence is\nempty.",48,null],[11,"push_front","","Inserts an element first in the sequence.",48,null],[11,"push_back","","Appends an element to the back of a buffer",48,null],[11,"pop_back","","Removes the last element from a buffer and returns it, or `None` if\nit is empty.",48,null],[11,"swap_remove_back","","Removes an element from anywhere in the `VecDeque` and returns it, replacing it with the\nlast element.",48,null],[11,"swap_remove_front","","Removes an element from anywhere in the `VecDeque` and returns it,\nreplacing it with the first element.",48,null],[11,"insert","","Inserts an element at `index` within the `VecDeque`. Whichever\nend is closer to the insertion point will be moved to make room,\nand all the affected elements will be moved to new positions.",48,null],[11,"remove","","Removes and returns the element at `index` from the `VecDeque`.\nWhichever end is closer to the removal point will be moved to make\nroom, and all the affected elements will be moved to new positions.\nReturns `None` if `index` is out of bounds.",48,null],[11,"split_off","","Splits the collection into two at the given index.",48,null],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",48,null],[11,"retain","","Retains only the elements specified by the predicate.",48,null],[11,"resize","","Modifies the `VecDeque` in-place so that `len()` is equal to new_len,\neither by removing excess elements or by appending copies of a value to the back.",48,null],[11,"clone","","",49,null],[11,"next","","",49,null],[11,"size_hint","","",49,null],[11,"next_back","","",49,null],[11,"next","","",50,null],[11,"size_hint","","",50,null],[11,"next_back","","",50,null],[11,"clone","","",51,null],[11,"next","","",51,null],[11,"size_hint","","",51,null],[11,"next_back","","",51,null],[11,"drop","","",52,null],[11,"next","","",52,null],[11,"size_hint","","",52,null],[11,"next_back","","",52,null],[11,"eq","","",48,null],[11,"partial_cmp","","",48,null],[11,"cmp","","",48,null],[11,"hash","","",48,null],[11,"index","","",48,null],[11,"index_mut","","",48,null],[11,"from_iter","","",48,{"inputs":[{"name":"t"}],"output":{"name":"vecdeque"}}],[11,"into_iter","","Consumes the list into a front-to-back iterator yielding elements by\nvalue.",48,null],[11,"extend","","",48,null],[11,"extend","","",48,null],[11,"fmt","","",48,null],[11,"from","","",48,{"inputs":[{"name":"vec"}],"output":{"name":"vecdeque"}}],[11,"from","collections::vec","",47,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vec"}}],[11,"clone","collections::linked_list","",53,null],[11,"clone","","",54,null],[11,"default","","",55,{"inputs":[],"output":{"name":"linkedlist"}}],[11,"new","","Creates an empty `LinkedList`.",55,{"inputs":[],"output":{"name":"linkedlist"}}],[11,"append","","Moves all elements from `other` to the end of the list.",55,null],[11,"iter","","Provides a forward iterator.",55,null],[11,"iter_mut","","Provides a forward iterator with mutable references.",55,null],[11,"is_empty","","Returns `true` if the `LinkedList` is empty.",55,null],[11,"len","","Returns the length of the `LinkedList`.",55,null],[11,"clear","","Removes all elements from the `LinkedList`.",55,null],[11,"contains","","Returns `true` if the `LinkedList` contains an element equal to the\ngiven value.",55,null],[11,"front","","Provides a reference to the front element, or `None` if the list is\nempty.",55,null],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the list\nis empty.",55,null],[11,"back","","Provides a reference to the back element, or `None` if the list is\nempty.",55,null],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the list\nis empty.",55,null],[11,"push_front","","Adds an element first in the list.",55,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the list is\nempty.",55,null],[11,"push_back","","Appends an element to the back of a list",55,null],[11,"pop_back","","Removes the last element from a list and returns it, or `None` if\nit is empty.",55,null],[11,"split_off","","Splits the list into two at the given index. Returns everything after the given index,\nincluding the index.",55,null],[11,"front_place","","Returns a place for insertion at the front of the list.",55,null],[11,"back_place","","Returns a place for insertion at the back of the list.",55,null],[11,"drop","","",55,null],[11,"next","","",53,null],[11,"size_hint","","",53,null],[11,"next_back","","",53,null],[11,"next","","",56,null],[11,"size_hint","","",56,null],[11,"next_back","","",56,null],[11,"insert_next","","Inserts `elt` just after the element most recently returned by `.next()`.\nThe inserted element does not appear in the iteration.",56,null],[11,"peek_next","","Provides a reference to the next element, without changing the iterator.",56,null],[11,"next","","",54,null],[11,"size_hint","","",54,null],[11,"next_back","","",54,null],[11,"from_iter","","",55,{"inputs":[{"name":"t"}],"output":{"name":"linkedlist"}}],[11,"into_iter","","Consumes the list into an iterator yielding elements by value.",55,null],[11,"extend","","",55,null],[11,"extend","","",55,null],[11,"eq","","",55,null],[11,"ne","","",55,null],[11,"partial_cmp","","",55,null],[11,"cmp","","",55,null],[11,"clone","","",55,null],[11,"fmt","","",55,null],[11,"hash","","",55,null],[11,"make_place","","",57,null],[11,"pointer","","",57,null],[11,"finalize","","",57,null],[11,"make_place","","",58,null],[11,"pointer","","",58,null],[11,"finalize","","",58,null],[11,"next","std::env","",59,null],[11,"size_hint","","",59,null],[11,"next","","",60,null],[11,"size_hint","","",60,null],[11,"clone","","",61,null],[11,"eq","","",61,null],[11,"ne","","",61,null],[11,"fmt","","",61,null],[11,"fmt","","",61,null],[11,"description","","",61,null],[11,"next","","",62,null],[11,"size_hint","","",62,null],[11,"fmt","","",63,null],[11,"fmt","","",63,null],[11,"description","","",63,null],[11,"next","","",64,null],[11,"size_hint","","",64,null],[11,"len","","",64,null],[11,"next","","",65,null],[11,"size_hint","","",65,null],[11,"len","","",65,null],[11,"clone","std::ffi::c_str","",66,null],[11,"hash","","",66,null],[11,"cmp","","",66,null],[11,"partial_cmp","","",66,null],[11,"lt","","",66,null],[11,"le","","",66,null],[11,"gt","","",66,null],[11,"ge","","",66,null],[11,"eq","","",66,null],[11,"ne","","",66,null],[11,"hash","","",67,null],[11,"fmt","","",68,null],[11,"eq","","",68,null],[11,"ne","","",68,null],[11,"clone","","",68,null],[11,"fmt","","",69,null],[11,"eq","","",69,null],[11,"ne","","",69,null],[11,"clone","","",69,null],[11,"fmt","","",70,null],[11,"eq","","",70,null],[11,"ne","","",70,null],[11,"clone","","",70,null],[11,"new","","Creates a new C-compatible string from a container of bytes.",66,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[11,"from_vec_unchecked","","Creates a C-compatible string from a byte vector without checking for\ninterior 0 bytes.",66,{"inputs":[{"name":"vec"}],"output":{"name":"cstring"}}],[11,"from_raw","","Retakes ownership of a `CString` that was transferred to C.",66,null],[11,"into_raw","","Transfers ownership of the string to a C caller.",66,null],[11,"into_string","","Converts the `CString` into a `String` if it contains valid Unicode data.",66,null],[11,"into_bytes","","Returns the underlying byte buffer.",66,null],[11,"into_bytes_with_nul","","Equivalent to the `into_bytes` function except that the returned vector\nincludes the trailing nul byte.",66,null],[11,"as_bytes","","Returns the contents of this `CString` as a slice of bytes.",66,null],[11,"as_bytes_with_nul","","Equivalent to the `as_bytes` function except that the returned slice\nincludes the trailing nul byte.",66,null],[11,"from_ptr","","Casts a raw C string to a safe C string wrapper.",67,null],[11,"from_bytes_with_nul","","Creates a C string wrapper from a byte slice.",67,null],[11,"from_bytes_with_nul_unchecked","","Unsafely creates a C string wrapper from a byte slice.",67,null],[11,"as_ptr","","Returns the inner pointer to this C string.",67,null],[11,"to_bytes","","Converts this C string to a byte slice.",67,null],[11,"to_bytes_with_nul","","Converts this C string to a byte slice containing the trailing 0 byte.",67,null],[11,"to_str","","Yields a `&amp;str` slice if the `CStr` contains valid UTF-8.",67,null],[11,"to_string_lossy","","Converts a `CStr` into a `Cow&lt;str&gt;`.",67,null],[11,"deref","","",66,null],[11,"fmt","","",66,null],[11,"from","collections::vec","",47,{"inputs":[{"name":"cstring"}],"output":{"name":"vec"}}],[11,"fmt","std::ffi::c_str","",67,null],[11,"default","","",66,{"inputs":[],"output":{"name":"cstring"}}],[11,"borrow","","",66,null],[11,"nul_position","","Returns the position of the nul byte in the slice that was provided to\n`CString::new`.",68,null],[11,"into_vec","","Consumes this error, returning the underlying vector of bytes which\ngenerated the error in the first place.",68,null],[11,"description","","",68,null],[11,"fmt","","",68,null],[11,"from","std::io::error","",71,{"inputs":[{"name":"nulerror"}],"output":{"name":"error"}}],[11,"into_cstring","std::ffi::c_str","Consumes this error, returning original `CString` which generated the\nerror.",70,null],[11,"utf8_error","","Access the underlying UTF-8 error that was the cause of this error.",70,null],[11,"description","","",70,null],[11,"cause","","",70,null],[11,"fmt","","",70,null],[11,"eq","","",67,null],[11,"partial_cmp","","",67,null],[11,"cmp","","",67,null],[11,"to_owned","","",67,null],[11,"from","","",66,{"inputs":[{"name":"cstr"}],"output":{"name":"cstring"}}],[11,"index","","",66,null],[11,"as_ref","","",67,null],[11,"as_ref","","",66,null],[11,"clone","std::ffi::os_str","",72,null],[11,"new","","Constructs a new empty `OsString`.",72,{"inputs":[],"output":{"name":"osstring"}}],[11,"as_os_str","","Converts to an `OsStr` slice.",72,null],[11,"into_string","","Converts the `OsString` into a `String` if it contains valid Unicode data.",72,null],[11,"push","","Extends the string with the given `&amp;OsStr` slice.",72,null],[11,"with_capacity","","Creates a new `OsString` with the given capacity.",72,{"inputs":[{"name":"usize"}],"output":{"name":"osstring"}}],[11,"clear","","Truncates the `OsString` to zero length.",72,null],[11,"capacity","","Returns the capacity this `OsString` can hold without reallocating.",72,null],[11,"reserve","","Reserves capacity for at least `additional` more capacity to be inserted\nin the given `OsString`.",72,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more capacity to\nbe inserted in the given `OsString`. Does nothing if the capacity is\nalready sufficient.",72,null],[11,"from","","",72,{"inputs":[{"name":"string"}],"output":{"name":"osstring"}}],[11,"from","","",72,{"inputs":[{"name":"t"}],"output":{"name":"osstring"}}],[11,"index","","",72,null],[11,"new","","Coerces into an `OsStr` slice.",73,{"inputs":[{"name":"s"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&amp;str` slice if the `OsStr` is valid Unicode.",73,null],[11,"to_string_lossy","","Converts an `OsStr` to a `Cow&lt;str&gt;`.",73,null],[11,"to_os_string","","Copies the slice into an owned `OsString`.",73,null],[11,"is_empty","","Checks whether the `OsStr` is empty.",73,null],[11,"len","","Returns the length of this `OsStr`.",73,null],[11,"deref","","",72,null],[11,"default","","",72,{"inputs":[],"output":{"name":"osstring"}}],[11,"fmt","","",72,null],[11,"eq","","",72,null],[11,"eq","","",72,null],[11,"partial_cmp","","",72,null],[11,"lt","","",72,null],[11,"le","","",72,null],[11,"gt","","",72,null],[11,"ge","","",72,null],[11,"partial_cmp","","",72,null],[11,"cmp","","",72,null],[11,"hash","","",72,null],[11,"eq","","",73,null],[11,"eq","","",73,null],[11,"partial_cmp","","",73,null],[11,"lt","","",73,null],[11,"le","","",73,null],[11,"gt","","",73,null],[11,"ge","","",73,null],[11,"partial_cmp","","",73,null],[11,"cmp","","",73,null],[11,"eq","","",72,null],[11,"eq","","",73,null],[11,"partial_cmp","","",72,null],[11,"partial_cmp","","",73,null],[11,"eq","","",72,null],[11,"partial_cmp","","",72,null],[11,"eq","collections::borrow","",74,null],[11,"eq","std::ffi::os_str","",73,null],[11,"partial_cmp","collections::borrow","",74,null],[11,"partial_cmp","std::ffi::os_str","",73,null],[11,"eq","collections::borrow","",74,null],[11,"partial_cmp","","",74,null],[11,"eq","","",74,null],[11,"eq","std::ffi::os_str","",72,null],[11,"partial_cmp","collections::borrow","",74,null],[11,"partial_cmp","std::ffi::os_str","",72,null],[11,"hash","","",73,null],[11,"fmt","","",73,null],[11,"borrow","","",72,null],[11,"to_owned","","",73,null],[11,"as_ref","","",73,null],[11,"as_ref","","",72,null],[11,"as_ref","collections::string","",75,null],[11,"clone","std::fs","",76,null],[11,"clone","","",77,null],[11,"fmt","","",78,null],[11,"eq","","",78,null],[11,"ne","","",78,null],[11,"clone","","",78,null],[11,"hash","","",79,null],[11,"eq","","",79,null],[11,"ne","","",79,null],[11,"clone","","",79,null],[11,"open","","Attempts to open a file in read-only mode.",80,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"create","","Opens a file in write-only mode.",80,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"sync_all","","Attempts to sync all OS-internal metadata to disk.",80,null],[11,"sync_data","","This function is similar to `sync_all`, except that it may not\nsynchronize file metadata to the filesystem.",80,null],[11,"set_len","","Truncates or extends the underlying file, updating the size of\nthis file to become `size`.",80,null],[11,"metadata","","Queries metadata about the underlying file.",80,null],[11,"try_clone","","Creates a new independently owned handle to the underlying file.",80,null],[11,"fmt","","",80,null],[11,"read","","",80,null],[11,"read_to_end","","",80,null],[11,"write","","",80,null],[11,"flush","","",80,null],[11,"seek","","",80,null],[11,"new","","Creates a blank new set of options ready for configuration.",77,{"inputs":[],"output":{"name":"openoptions"}}],[11,"read","","Sets the option for read access.",77,null],[11,"write","","Sets the option for write access.",77,null],[11,"append","","Sets the option for the append mode.",77,null],[11,"truncate","","Sets the option for truncating a previous file.",77,null],[11,"create","","Sets the option for creating a new file.",77,null],[11,"create_new","","Sets the option to always create a new file.",77,null],[11,"open","","Opens a file at `path` with the options specified by `self`.",77,null],[11,"file_type","","Returns the file type for this metadata.",76,null],[11,"is_dir","","Returns whether this metadata is for a directory.",76,null],[11,"is_file","","Returns whether this metadata is for a regular file.",76,null],[11,"len","","Returns the size of the file, in bytes, this metadata is for.",76,null],[11,"permissions","","Returns the permissions of the file this metadata is for.",76,null],[11,"modified","","Returns the last modification time listed in this metadata.",76,null],[11,"accessed","","Returns the last access time of this metadata.",76,null],[11,"created","","Returns the creation time listed in the this metadata.",76,null],[11,"readonly","","Returns whether these permissions describe a readonly file.",78,null],[11,"set_readonly","","Modifies the readonly flag for this set of permissions.",78,null],[11,"is_dir","","Test whether this file type represents a directory.",79,null],[11,"is_file","","Test whether this file type represents a regular file.",79,null],[11,"is_symlink","","Test whether this file type represents a symbolic link.",79,null],[11,"next","","",81,null],[11,"path","","Returns the full path to the file that this entry represents.",82,null],[11,"metadata","","Return the metadata for the file that this entry points at.",82,null],[11,"file_type","","Return the file type for the file that this entry points at.",82,null],[11,"file_name","","Returns the bare file name of this directory entry without any other\nleading path component.",82,null],[11,"new","","Creates a new set of options with default mode/security settings for all\nplatforms and also non-recursive.",83,{"inputs":[],"output":{"name":"dirbuilder"}}],[11,"recursive","","Indicate that directories create should be created recursively, creating\nall parent directories if they do not exist with the same security and\npermissions settings.",83,null],[11,"create","","Create the specified directory with the options configured in this\nbuilder.",83,null],[11,"new","std::io::buffered","Creates a new `BufReader` with a default buffer capacity.",84,{"inputs":[{"name":"r"}],"output":{"name":"bufreader"}}],[11,"with_capacity","","Creates a new `BufReader` with the specified buffer capacity.",84,{"inputs":[{"name":"usize"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"get_ref","","Gets a reference to the underlying reader.",84,null],[11,"get_mut","","Gets a mutable reference to the underlying reader.",84,null],[11,"into_inner","","Unwraps this `BufReader`, returning the underlying reader.",84,null],[11,"read","","",84,null],[11,"fill_buf","","",84,null],[11,"consume","","",84,null],[11,"fmt","","",84,null],[11,"seek","","Seek to an offset, in bytes, in the underlying reader.",84,null],[11,"fmt","","",85,null],[11,"new","","Creates a new `BufWriter` with a default buffer capacity.",86,{"inputs":[{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"with_capacity","","Creates a new `BufWriter` with the specified buffer capacity.",86,{"inputs":[{"name":"usize"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",86,null],[11,"get_mut","","Gets a mutable reference to the underlying writer.",86,null],[11,"into_inner","","Unwraps this `BufWriter`, returning the underlying writer.",86,null],[11,"write","","",86,null],[11,"flush","","",86,null],[11,"fmt","","",86,null],[11,"seek","","Seek to the offset, in bytes, in the underlying writer.",86,null],[11,"drop","","",86,null],[11,"error","","Returns the error which caused the call to `into_inner()` to fail.",85,null],[11,"into_inner","","Returns the buffered writer instance which generated the error.",85,null],[11,"from","std::io::error","",71,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"description","std::io::buffered","",85,null],[11,"fmt","","",85,null],[11,"new","","Creates a new `LineWriter`.",87,{"inputs":[{"name":"w"}],"output":{"name":"linewriter"}}],[11,"with_capacity","","Creates a new `LineWriter` with a specified capacity for the internal\nbuffer.",87,{"inputs":[{"name":"usize"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",87,null],[11,"get_mut","","Gets a mutable reference to the underlying writer.",87,null],[11,"into_inner","","Unwraps this `LineWriter`, returning the underlying writer.",87,null],[11,"write","","",87,null],[11,"flush","","",87,null],[11,"fmt","","",87,null],[11,"fmt","std::io::cursor","",88,null],[11,"clone","","",88,null],[11,"new","","Creates a new cursor wrapping the provided underlying I/O object.",88,{"inputs":[{"name":"t"}],"output":{"name":"cursor"}}],[11,"into_inner","","Consumes this cursor, returning the underlying value.",88,null],[11,"get_ref","","Gets a reference to the underlying value in this cursor.",88,null],[11,"get_mut","","Gets a mutable reference to the underlying value in this cursor.",88,null],[11,"position","","Returns the current position of this cursor.",88,null],[11,"set_position","","Sets the position of this cursor.",88,null],[11,"seek","","",88,null],[11,"read","","",88,null],[11,"fill_buf","","",88,null],[11,"consume","","",88,null],[11,"write","","",88,null],[11,"flush","","",88,null],[11,"write","","",88,null],[11,"flush","","",88,null],[11,"write","","",88,null],[11,"flush","","",88,null],[11,"fmt","std::io::error","",71,null],[11,"fmt","","",89,null],[11,"clone","","",89,null],[11,"eq","","",89,null],[11,"new","","Creates a new I/O error from a known kind of error as well as an\narbitrary error payload.",71,{"inputs":[{"name":"errorkind"},{"name":"e"}],"output":{"name":"error"}}],[11,"last_os_error","","Returns an error representing the last OS error which occurred.",71,{"inputs":[],"output":{"name":"error"}}],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS error code.",71,{"inputs":[{"name":"i32"}],"output":{"name":"error"}}],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",71,null],[11,"get_ref","","Returns a reference to the inner error wrapped by this error (if any).",71,null],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by this error\n(if any).",71,null],[11,"into_inner","","Consumes the `Error`, returning its inner error (if any).",71,null],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",71,null],[11,"fmt","","",71,null],[11,"description","","",71,null],[11,"cause","","",71,null],[11,"read","alloc::boxed","",1,null],[11,"read_to_end","","",1,null],[11,"read_to_string","","",1,null],[11,"read_exact","","",1,null],[11,"write","","",1,null],[11,"flush","","",1,null],[11,"write_all","","",1,null],[11,"write_fmt","","",1,null],[11,"seek","","",1,null],[11,"fill_buf","","",1,null],[11,"consume","","",1,null],[11,"read_until","","",1,null],[11,"read_line","","",1,null],[11,"write","collections::vec","",47,null],[11,"write_all","","",47,null],[11,"flush","","",47,null],[11,"read","std::io::util","",90,null],[11,"fill_buf","","",90,null],[11,"consume","","",90,null],[11,"read","","",91,null],[11,"write","","",92,null],[11,"flush","","",92,null],[11,"lock","std::io::stdio","Locks this handle to the standard input stream, returning a readable\nguard.",93,null],[11,"read_line","","Locks this handle and reads a line of input into the specified buffer.",93,null],[11,"read","","",93,null],[11,"read_to_end","","",93,null],[11,"read_to_string","","",93,null],[11,"read_exact","","",93,null],[11,"read","","",94,null],[11,"read_to_end","","",94,null],[11,"fill_buf","","",94,null],[11,"consume","","",94,null],[11,"lock","","Locks this handle to the standard output stream, returning a writable\nguard.",95,null],[11,"write","","",95,null],[11,"flush","","",95,null],[11,"write_all","","",95,null],[11,"write_fmt","","",95,null],[11,"write","","",96,null],[11,"flush","","",96,null],[11,"lock","","Locks this handle to the standard error stream, returning a writable\nguard.",97,null],[11,"write","","",97,null],[11,"flush","","",97,null],[11,"write_all","","",97,null],[11,"write_fmt","","",97,null],[11,"write","","",98,null],[11,"flush","","",98,null],[11,"fmt","std::io","",99,null],[11,"clone","","",99,null],[11,"eq","","",99,null],[11,"ne","","",99,null],[11,"read","","",100,null],[11,"fill_buf","","",100,null],[11,"consume","","",100,null],[11,"limit","","Returns the number of bytes that can be read before this instance will\nreturn EOF.",101,null],[11,"read","","",101,null],[11,"fill_buf","","",101,null],[11,"consume","","",101,null],[11,"next","","",102,null],[11,"fmt","","",103,null],[11,"next","","",104,null],[11,"description","","",103,null],[11,"cause","","",103,null],[11,"fmt","","",103,null],[11,"next","","",105,null],[11,"next","","",106,null],[11,"cmp","std::net::ip","",107,null],[11,"partial_cmp","","",107,null],[11,"lt","","",107,null],[11,"le","","",107,null],[11,"gt","","",107,null],[11,"ge","","",107,null],[11,"hash","","",107,null],[11,"fmt","","",107,null],[11,"eq","","",107,null],[11,"ne","","",107,null],[11,"clone","","",107,null],[11,"fmt","","",108,null],[11,"hash","","",108,null],[11,"clone","","",108,null],[11,"eq","","",108,null],[11,"new","","Creates a new IPv4 address from four eight-bit octets.",109,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"ipv4addr"}}],[11,"octets","","Returns the four eight-bit integers that make up this address.",109,null],[11,"is_unspecified","","Returns true for the special &#39;unspecified&#39; address (0.0.0.0).",109,null],[11,"is_loopback","","Returns true if this is a loopback address (127.0.0.0/8).",109,null],[11,"is_private","","Returns true if this is a private address.",109,null],[11,"is_link_local","","Returns true if the address is link-local (169.254.0.0/16).",109,null],[11,"is_global","","Returns true if the address appears to be globally routable.\nSee [iana-ipv4-special-registry][ipv4-sr].\n[ipv4-sr]: http://goo.gl/RaZ7lg",109,null],[11,"is_multicast","","Returns true if this is a multicast address (224.0.0.0/4).",109,null],[11,"is_broadcast","","Returns true if this is a broadcast address (255.255.255.255).",109,null],[11,"is_documentation","","Returns true if this address is in a range designated for documentation.",109,null],[11,"to_ipv6_compatible","","Converts this address to an IPv4-compatible IPv6 address.",109,null],[11,"to_ipv6_mapped","","Converts this address to an IPv4-mapped IPv6 address.",109,null],[11,"fmt","","",107,null],[11,"fmt","","",109,null],[11,"fmt","","",109,null],[11,"clone","","",109,null],[11,"eq","","",109,null],[11,"hash","","",109,null],[11,"partial_cmp","","",109,null],[11,"cmp","","",109,null],[11,"from","","",109,{"inputs":[{"name":"u32"}],"output":{"name":"ipv4addr"}}],[11,"from","","",109,null],[11,"new","","Creates a new IPv6 address from eight 16-bit segments.",110,{"inputs":[{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ipv6addr"}}],[11,"segments","","Returns the eight 16-bit segments that make up this address.",110,null],[11,"is_unspecified","","Returns true for the special &#39;unspecified&#39; address (::).",110,null],[11,"is_loopback","","Returns true if this is a loopback address (::1).",110,null],[11,"is_global","","Returns true if the address appears to be globally routable.",110,null],[11,"is_unique_local","","Returns true if this is a unique local address (fc00::/7).",110,null],[11,"is_unicast_link_local","","Returns true if the address is unicast and link-local (fe80::/10).",110,null],[11,"is_unicast_site_local","","Returns true if this is a deprecated unicast site-local address\n(fec0::/10).",110,null],[11,"is_documentation","","Returns true if this is an address reserved for documentation\n(2001:db8::/32).",110,null],[11,"is_unicast_global","","Returns true if the address is a globally routable unicast address.",110,null],[11,"multicast_scope","","Returns the address&#39;s multicast scope if the address is multicast.",110,null],[11,"is_multicast","","Returns true if this is a multicast address (ff00::/8).",110,null],[11,"to_ipv4","","Converts this address to an IPv4 address. Returns None if this address is\nneither IPv4-compatible or IPv4-mapped.",110,null],[11,"octets","","Returns the sixteen eight-bit integers the IPv6 address consists of.",110,null],[11,"fmt","","",110,null],[11,"fmt","","",110,null],[11,"clone","","",110,null],[11,"eq","","",110,null],[11,"hash","","",110,null],[11,"partial_cmp","","",110,null],[11,"cmp","","",110,null],[11,"from","","",110,null],[11,"fmt","std::net::addr","",111,null],[11,"hash","","",111,null],[11,"eq","","",111,null],[11,"ne","","",111,null],[11,"clone","","",111,null],[11,"new","","Creates a new socket address from the (ip, port) pair.",111,{"inputs":[{"name":"ipaddr"},{"name":"u16"}],"output":{"name":"socketaddr"}}],[11,"ip","","Returns the IP address associated with this socket address.",111,null],[11,"set_ip","","Change the IP address associated with this socket address.",111,null],[11,"port","","Returns the port number associated with this socket address.",111,null],[11,"set_port","","Change the port number associated with this socket address.",111,null],[11,"new","","Creates a new socket address from the (ip, port) pair.",112,{"inputs":[{"name":"ipv4addr"},{"name":"u16"}],"output":{"name":"socketaddrv4"}}],[11,"ip","","Returns the IP address associated with this socket address.",112,null],[11,"set_ip","","Change the IP address associated with this socket address.",112,null],[11,"port","","Returns the port number associated with this socket address.",112,null],[11,"set_port","","Change the port number associated with this socket address.",112,null],[11,"new","","Creates a new socket address from the ip/port/flowinfo/scope_id\ncomponents.",113,{"inputs":[{"name":"ipv6addr"},{"name":"u16"},{"name":"u32"},{"name":"u32"}],"output":{"name":"socketaddrv6"}}],[11,"ip","","Returns the IP address associated with this socket address.",113,null],[11,"set_ip","","Change the IP address associated with this socket address.",113,null],[11,"port","","Returns the port number associated with this socket address.",113,null],[11,"set_port","","Change the port number associated with this socket address.",113,null],[11,"flowinfo","","Returns the flow information associated with this address,\ncorresponding to the `sin6_flowinfo` field in C.",113,null],[11,"set_flowinfo","","Change the flow information associated with this socket address.",113,null],[11,"scope_id","","Returns the scope ID associated with this address,\ncorresponding to the `sin6_scope_id` field in C.",113,null],[11,"set_scope_id","","Change the scope ID associated with this socket address.",113,null],[11,"fmt","","",111,null],[11,"fmt","","",112,null],[11,"fmt","","",112,null],[11,"fmt","","",113,null],[11,"fmt","","",113,null],[11,"clone","","",112,null],[11,"clone","","",113,null],[11,"eq","","",112,null],[11,"eq","","",113,null],[11,"hash","","",112,null],[11,"hash","","",113,null],[11,"to_socket_addrs","","",111,null],[11,"to_socket_addrs","","",112,null],[11,"to_socket_addrs","","",113,null],[11,"connect","std::net::tcp","Opens a TCP connection to a remote host.",114,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP connection.",114,null],[11,"local_addr","","Returns the socket address of the local half of this TCP connection.",114,null],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",114,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",114,null],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",114,null],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",114,null],[11,"read_timeout","","Returns the read timeout of this socket.",114,null],[11,"write_timeout","","Returns the write timeout of this socket.",114,null],[11,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",114,null],[11,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",114,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",114,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",114,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",114,null],[11,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",114,null],[11,"read","","",114,null],[11,"read_to_end","","",114,null],[11,"write","","",114,null],[11,"flush","","",114,null],[11,"fmt","","",114,null],[11,"bind","","Creates a new `TcpListener` which will be bound to the specified\naddress.",115,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the local socket address of this listener.",115,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",115,null],[11,"accept","","Accept a new incoming connection from this listener.",115,null],[11,"incoming","","Returns an iterator over the connections being received on this\nlistener.",115,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",115,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",115,null],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",115,null],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",115,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",115,null],[11,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",115,null],[11,"next","","",116,null],[11,"fmt","","",115,null],[11,"bind","std::net::udp","Creates a UDP socket from the given address.",117,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"recv_from","","Receives data from the socket. On success, returns the number of bytes\nread and the address from whence the data came.",117,null],[11,"send_to","","Sends data on the socket to the given address. On success, returns the\nnumber of bytes written.",117,null],[11,"local_addr","","Returns the socket address that this socket was created from.",117,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",117,null],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",117,null],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",117,null],[11,"read_timeout","","Returns the read timeout of this socket.",117,null],[11,"write_timeout","","Returns the write timeout of this socket.",117,null],[11,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",117,null],[11,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",117,null],[11,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this socket.",117,null],[11,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this socket.",117,null],[11,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this socket.",117,null],[11,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this socket.",117,null],[11,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",117,null],[11,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",117,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",117,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",117,null],[11,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",117,null],[11,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",117,null],[11,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",117,null],[11,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",117,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",117,null],[11,"connect","","Connects this UDP socket to a remote address, allowing the `send` and\n`recv` syscalls to be used to send data and also applies filters to only\nreceive data from the specified address.",117,null],[11,"send","","Sends data on the socket to the remote address to which it is connected.",117,null],[11,"recv","","Receives data on the socket from the remote address to which it is\nconnected.",117,null],[11,"set_nonblocking","","Moves this UDP socket into or out of nonblocking mode.",117,null],[11,"fmt","","",117,null],[11,"from_str","std::net::ip","",107,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",109,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",110,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","std::net::addr","",112,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",113,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",111,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","std::net::parser","",118,null],[11,"ne","","",118,null],[11,"clone","","",118,null],[11,"fmt","","",118,null],[11,"fmt","","",118,null],[11,"description","","",118,null],[11,"fmt","std::net","",119,null],[11,"eq","","",119,null],[11,"clone","","",119,null],[11,"next","","",120,null],[11,"clone","std::os::linux::raw::arch","",121,null],[11,"as_raw_stat","std::fs","",76,null],[11,"st_dev","","",76,null],[11,"st_ino","","",76,null],[11,"st_mode","","",76,null],[11,"st_nlink","","",76,null],[11,"st_uid","","",76,null],[11,"st_gid","","",76,null],[11,"st_rdev","","",76,null],[11,"st_size","","",76,null],[11,"st_atime","","",76,null],[11,"st_atime_nsec","","",76,null],[11,"st_mtime","","",76,null],[11,"st_mtime_nsec","","",76,null],[11,"st_ctime","","",76,null],[11,"st_ctime_nsec","","",76,null],[11,"st_blksize","","",76,null],[11,"st_blocks","","",76,null],[11,"as_raw_fd","","",80,null],[11,"from_raw_fd","","",80,{"inputs":[{"name":"i32"}],"output":{"name":"file"}}],[11,"into_raw_fd","","",80,null],[11,"as_raw_fd","std::net::tcp","",114,null],[11,"as_raw_fd","","",115,null],[11,"as_raw_fd","std::net::udp","",117,null],[11,"from_raw_fd","std::net::tcp","",114,{"inputs":[{"name":"i32"}],"output":{"name":"tcpstream"}}],[11,"from_raw_fd","","",115,{"inputs":[{"name":"i32"}],"output":{"name":"tcplistener"}}],[11,"from_raw_fd","std::net::udp","",117,{"inputs":[{"name":"i32"}],"output":{"name":"udpsocket"}}],[11,"into_raw_fd","std::net::tcp","",114,null],[11,"into_raw_fd","","",115,null],[11,"into_raw_fd","std::net::udp","",117,null],[11,"from_vec","std::ffi::os_str","",72,{"inputs":[{"name":"vec"}],"output":{"name":"osstring"}}],[11,"into_vec","","",72,null],[11,"from_bytes","","",73,null],[11,"as_bytes","","",73,null],[11,"mode","std::fs","",78,null],[11,"set_mode","","",78,null],[11,"from_mode","","",78,{"inputs":[{"name":"u32"}],"output":{"name":"permissions"}}],[11,"mode","","",77,null],[11,"custom_flags","","",77,null],[11,"dev","","",76,null],[11,"ino","","",76,null],[11,"mode","","",76,null],[11,"nlink","","",76,null],[11,"uid","","",76,null],[11,"gid","","",76,null],[11,"rdev","","",76,null],[11,"size","","",76,null],[11,"atime","","",76,null],[11,"atime_nsec","","",76,null],[11,"mtime","","",76,null],[11,"mtime_nsec","","",76,null],[11,"ctime","","",76,null],[11,"ctime_nsec","","",76,null],[11,"blksize","","",76,null],[11,"blocks","","",76,null],[11,"is_block_device","","",79,null],[11,"is_char_device","","",79,null],[11,"is_fifo","","",79,null],[11,"is_socket","","",79,null],[11,"ino","","",82,null],[11,"mode","","",83,null],[11,"uid","std::process","",122,null],[11,"gid","","",122,null],[11,"before_exec","","",122,null],[11,"exec","","",122,null],[11,"from_raw","","",123,{"inputs":[{"name":"i32"}],"output":{"name":"exitstatus"}}],[11,"signal","","",123,null],[11,"from_raw_fd","","",124,{"inputs":[{"name":"i32"}],"output":{"name":"stdio"}}],[11,"as_raw_fd","","",125,null],[11,"as_raw_fd","","",126,null],[11,"as_raw_fd","","",127,null],[11,"into_raw_fd","","",125,null],[11,"into_raw_fd","","",126,null],[11,"into_raw_fd","","",127,null],[11,"as_pthread_t","std::thread","",20,null],[11,"into_pthread_t","","",20,null],[11,"clone","std::sys::ext::net","",128,null],[11,"is_unnamed","","Returns true iff the address is unnamed.",128,null],[11,"as_pathname","","Returns the contents of this address if it is a `pathname` address.",128,null],[11,"fmt","","",128,null],[11,"fmt","","",129,null],[11,"connect","","Connects to the socket named by `path`.",129,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"pair","","Creates an unnamed pair of connected sockets.",129,{"inputs":[],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",129,null],[11,"local_addr","","Returns the socket address of the local half of this connection.",129,null],[11,"peer_addr","","Returns the socket address of the remote half of this connection.",129,null],[11,"set_read_timeout","","Sets the read timeout for the socket.",129,null],[11,"set_write_timeout","","Sets the write timeout for the socket.",129,null],[11,"read_timeout","","Returns the read timeout of this socket.",129,null],[11,"write_timeout","","Returns the write timeout of this socket.",129,null],[11,"set_nonblocking","","Moves the socket into or out of nonblocking mode.",129,null],[11,"take_error","","Returns the value of the `SO_ERROR` option.",129,null],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",129,null],[11,"read","","",129,null],[11,"read_to_end","","",129,null],[11,"write","","",129,null],[11,"flush","","",129,null],[11,"as_raw_fd","","",129,null],[11,"from_raw_fd","","",129,{"inputs":[{"name":"i32"}],"output":{"name":"unixstream"}}],[11,"into_raw_fd","","",129,null],[11,"fmt","","",130,null],[11,"bind","","Creates a new `UnixListener` bound to the specified socket.",130,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"accept","","Accepts a new incoming connection to this listener.",130,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",130,null],[11,"local_addr","","Returns the local socket address of this listener.",130,null],[11,"set_nonblocking","","Moves the socket into or out of nonblocking mode.",130,null],[11,"take_error","","Returns the value of the `SO_ERROR` option.",130,null],[11,"incoming","","Returns an iterator over incoming connections.",130,null],[11,"as_raw_fd","","",130,null],[11,"from_raw_fd","","",130,{"inputs":[{"name":"i32"}],"output":{"name":"unixlistener"}}],[11,"into_raw_fd","","",130,null],[11,"fmt","","",131,null],[11,"next","","",131,null],[11,"size_hint","","",131,null],[11,"fmt","","",132,null],[11,"bind","","Creates a Unix datagram socket bound to the given path.",132,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"unbound","","Creates a Unix Datagram socket which is not bound to any address.",132,{"inputs":[],"output":{"name":"result"}}],[11,"pair","","Create an unnamed pair of connected sockets.",132,{"inputs":[],"output":{"name":"result"}}],[11,"connect","","Connects the socket to the specified address.",132,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",132,null],[11,"local_addr","","Returns the address of this socket.",132,null],[11,"peer_addr","","Returns the address of this socket&#39;s peer.",132,null],[11,"recv_from","","Receives data from the socket.",132,null],[11,"recv","","Receives data from the socket.",132,null],[11,"send_to","","Sends data on the socket to the specified address.",132,null],[11,"send","","Sends data on the socket to the socket&#39;s peer.",132,null],[11,"set_read_timeout","","Sets the read timeout for the socket.",132,null],[11,"set_write_timeout","","Sets the write timeout for the socket.",132,null],[11,"read_timeout","","Returns the read timeout of this socket.",132,null],[11,"write_timeout","","Returns the write timeout of this socket.",132,null],[11,"set_nonblocking","","Moves the socket into or out of nonblocking mode.",132,null],[11,"take_error","","Returns the value of the `SO_ERROR` option.",132,null],[11,"shutdown","","Shut down the read, write, or both halves of this connection.",132,null],[11,"as_raw_fd","","",132,null],[11,"from_raw_fd","","",132,{"inputs":[{"name":"i32"}],"output":{"name":"unixdatagram"}}],[11,"into_raw_fd","","",132,null],[11,"deref","std::panic","",133,null],[11,"deref_mut","","",133,null],[11,"call_once","","",133,null],[11,"eq","std::path","",134,null],[11,"ne","","",134,null],[11,"cmp","","",134,null],[11,"partial_cmp","","",134,null],[11,"lt","","",134,null],[11,"le","","",134,null],[11,"gt","","",134,null],[11,"ge","","",134,null],[11,"hash","","",134,null],[11,"fmt","","",134,null],[11,"clone","","",134,null],[11,"is_verbatim","","Determines if the prefix is verbatim, i.e. begins with `\\\\?\\`.",134,null],[11,"fmt","","",135,null],[11,"clone","","",135,null],[11,"kind","","The parsed prefix data.",135,null],[11,"as_os_str","","The raw `OsStr` slice for this prefix.",135,null],[11,"eq","","",135,null],[11,"partial_cmp","","",135,null],[11,"cmp","","",135,null],[11,"hash","","",135,null],[11,"fmt","","",136,null],[11,"hash","","",136,null],[11,"cmp","","",136,null],[11,"partial_cmp","","",136,null],[11,"lt","","",136,null],[11,"le","","",136,null],[11,"gt","","",136,null],[11,"ge","","",136,null],[11,"eq","","",136,null],[11,"ne","","",136,null],[11,"clone","","",136,null],[11,"as_os_str","","Extracts the underlying `OsStr` slice",136,null],[11,"as_ref","","",136,null],[11,"clone","","",137,null],[11,"clone","","",138,null],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",137,null],[11,"as_ref","","",137,null],[11,"as_ref","","",137,null],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",138,null],[11,"as_ref","","",138,null],[11,"as_ref","","",138,null],[11,"next","","",138,null],[11,"next_back","","",138,null],[11,"next","","",137,null],[11,"next_back","","",137,null],[11,"eq","","",137,null],[11,"partial_cmp","","",137,null],[11,"cmp","","",137,null],[11,"clone","","",139,null],[11,"new","","Allocates an empty `PathBuf`.",139,{"inputs":[],"output":{"name":"pathbuf"}}],[11,"as_path","","Coerces to a `Path` slice.",139,null],[11,"push","","Extends `self` with `path`.",139,null],[11,"pop","","Truncate `self` to `self.parent()`.",139,null],[11,"set_file_name","","Updates `self.file_name()` to `file_name`.",139,null],[11,"set_extension","","Updates `self.extension()` to `extension`.",139,null],[11,"into_os_string","","Consumes the `PathBuf`, yielding its internal `OsString` storage.",139,null],[11,"from","","",139,{"inputs":[{"name":"t"}],"output":{"name":"pathbuf"}}],[11,"from","","",139,{"inputs":[{"name":"osstring"}],"output":{"name":"pathbuf"}}],[11,"from","","",139,{"inputs":[{"name":"string"}],"output":{"name":"pathbuf"}}],[11,"from_iter","","",139,{"inputs":[{"name":"i"}],"output":{"name":"pathbuf"}}],[11,"extend","","",139,null],[11,"fmt","","",139,null],[11,"new","","Directly wrap a string slice as a `Path` slice.",140,{"inputs":[{"name":"s"}],"output":{"name":"path"}}],[11,"as_os_str","","Yields the underlying `OsStr` slice.",140,null],[11,"to_str","","Yields a `&amp;str` slice if the `Path` is valid unicode.",140,null],[11,"to_string_lossy","","Converts a `Path` to a `Cow&lt;str&gt;`.",140,null],[11,"to_path_buf","","Converts a `Path` to an owned `PathBuf`.",140,null],[11,"is_absolute","","A path is *absolute* if it is independent of the current directory.",140,null],[11,"is_relative","","A path is *relative* if it is not absolute.",140,null],[11,"has_root","","A path has a root if the body of the path begins with the directory separator.",140,null],[11,"parent","","The path without its final component, if any.",140,null],[11,"file_name","","The final component of the path, if it is a normal file.",140,null],[11,"strip_prefix","","Returns a path that, when joined onto `base`, yields `self`.",140,null],[11,"starts_with","","Determines whether `base` is a prefix of `self`.",140,null],[11,"ends_with","","Determines whether `child` is a suffix of `self`.",140,null],[11,"file_stem","","Extracts the stem (non-extension) portion of `self.file_name()`.",140,null],[11,"extension","","Extracts the extension of `self.file_name()`, if possible.",140,null],[11,"join","","Creates an owned `PathBuf` with `path` adjoined to `self`.",140,null],[11,"with_file_name","","Creates an owned `PathBuf` like `self` but with the given file name.",140,null],[11,"with_extension","","Creates an owned `PathBuf` like `self` but with the given extension.",140,null],[11,"components","","Produce an iterator over the components of the path.",140,null],[11,"iter","","Produce an iterator over the path&#39;s components viewed as `OsStr` slices.",140,null],[11,"display","","Returns an object that implements `Display` for safely printing paths\nthat may contain non-Unicode data.",140,null],[11,"metadata","","Query the file system to get information about a file, directory, etc.",140,null],[11,"symlink_metadata","","Query the metadata about a file without following symlinks.",140,null],[11,"canonicalize","","Returns the canonical form of the path with all intermediate components\nnormalized and symbolic links resolved.",140,null],[11,"read_link","","Reads a symbolic link, returning the file that the link points to.",140,null],[11,"read_dir","","Returns an iterator over the entries within a directory.",140,null],[11,"exists","","Returns whether the path points at an existing entity.",140,null],[11,"is_file","","Returns whether the path is pointing at a regular file.",140,null],[11,"is_dir","","Returns whether the path is pointing at a directory.",140,null],[11,"deref","","",139,null],[11,"borrow","","",139,null],[11,"from","collections::borrow","",74,{"inputs":[{"name":"path"}],"output":{"name":"cow"}}],[11,"from","","",74,{"inputs":[{"name":"pathbuf"}],"output":{"name":"cow"}}],[11,"to_owned","std::path","",140,null],[11,"eq","","",139,null],[11,"hash","","",139,null],[11,"partial_cmp","","",139,null],[11,"cmp","","",139,null],[11,"as_ref","","",139,null],[11,"into","","",139,null],[11,"eq","","",141,null],[11,"ne","","",141,null],[11,"clone","","",141,null],[11,"fmt","","",141,null],[11,"as_ref","","",140,null],[11,"fmt","","",140,null],[11,"fmt","","",142,null],[11,"fmt","","",142,null],[11,"eq","","",140,null],[11,"hash","","",140,null],[11,"partial_cmp","","",140,null],[11,"cmp","","",140,null],[11,"as_ref","","",140,null],[11,"as_ref","std::ffi::os_str","",73,null],[11,"as_ref","collections::borrow","",74,null],[11,"as_ref","std::ffi::os_str","",72,null],[11,"as_ref","collections::string","",75,null],[11,"as_ref","std::path","",139,null],[11,"eq","","",139,null],[11,"eq","","",140,null],[11,"partial_cmp","","",139,null],[11,"partial_cmp","","",140,null],[11,"eq","","",139,null],[11,"partial_cmp","","",139,null],[11,"eq","collections::borrow","",74,null],[11,"eq","std::path","",140,null],[11,"partial_cmp","collections::borrow","",74,null],[11,"partial_cmp","std::path","",140,null],[11,"eq","collections::borrow","",74,null],[11,"partial_cmp","","",74,null],[11,"eq","","",74,null],[11,"eq","std::path","",139,null],[11,"partial_cmp","collections::borrow","",74,null],[11,"partial_cmp","std::path","",139,null],[11,"eq","","",139,null],[11,"eq","std::ffi::os_str","",73,null],[11,"partial_cmp","std::path","",139,null],[11,"partial_cmp","std::ffi::os_str","",73,null],[11,"eq","std::path","",139,null],[11,"partial_cmp","","",139,null],[11,"eq","","",139,null],[11,"eq","collections::borrow","",74,null],[11,"partial_cmp","std::path","",139,null],[11,"partial_cmp","collections::borrow","",74,null],[11,"eq","std::path","",139,null],[11,"eq","std::ffi::os_str","",72,null],[11,"partial_cmp","std::path","",139,null],[11,"partial_cmp","std::ffi::os_str","",72,null],[11,"eq","std::path","",140,null],[11,"eq","std::ffi::os_str","",73,null],[11,"partial_cmp","std::path","",140,null],[11,"partial_cmp","std::ffi::os_str","",73,null],[11,"eq","std::path","",140,null],[11,"partial_cmp","","",140,null],[11,"eq","","",140,null],[11,"eq","collections::borrow","",74,null],[11,"partial_cmp","std::path","",140,null],[11,"partial_cmp","collections::borrow","",74,null],[11,"eq","std::path","",140,null],[11,"eq","std::ffi::os_str","",72,null],[11,"partial_cmp","std::path","",140,null],[11,"partial_cmp","std::ffi::os_str","",72,null],[11,"eq","","",73,null],[11,"partial_cmp","","",73,null],[11,"eq","collections::borrow","",74,null],[11,"partial_cmp","","",74,null],[11,"eq","std::ffi::os_str","",72,null],[11,"partial_cmp","","",72,null],[11,"eq","collections::borrow","",74,null],[11,"eq","std::ffi::os_str","",73,null],[11,"partial_cmp","collections::borrow","",74,null],[11,"partial_cmp","std::ffi::os_str","",73,null],[11,"eq","collections::borrow","",74,null],[11,"partial_cmp","","",74,null],[11,"eq","","",74,null],[11,"eq","std::ffi::os_str","",72,null],[11,"partial_cmp","collections::borrow","",74,null],[11,"partial_cmp","std::ffi::os_str","",72,null],[11,"fmt","std::path","",141,null],[11,"description","","",141,null],[11,"write","std::process","",125,null],[11,"flush","","",125,null],[11,"read","","",126,null],[11,"read_to_end","","",126,null],[11,"read","","",127,null],[11,"read_to_end","","",127,null],[11,"new","","Constructs a new `Command` for launching the program at\npath `program`, with the following default configuration:",122,{"inputs":[{"name":"s"}],"output":{"name":"command"}}],[11,"arg","","Add an argument to pass to the program.",122,null],[11,"args","","Add multiple arguments to pass to the program.",122,null],[11,"env","","Inserts or updates an environment variable mapping.",122,null],[11,"env_remove","","Removes an environment variable mapping.",122,null],[11,"env_clear","","Clears the entire environment map for the child process.",122,null],[11,"current_dir","","Sets the working directory for the child process.",122,null],[11,"stdin","","Configuration for the child process&#39;s stdin handle (file descriptor 0).",122,null],[11,"stdout","","Configuration for the child process&#39;s stdout handle (file descriptor 1).",122,null],[11,"stderr","","Configuration for the child process&#39;s stderr handle (file descriptor 2).",122,null],[11,"spawn","","Executes the command as a child process, returning a handle to it.",122,null],[11,"output","","Executes the command as a child process, waiting for it to finish and\ncollecting all of its output.",122,null],[11,"status","","Executes a command as a child process, waiting for it to finish and\ncollecting its exit status.",122,null],[11,"fmt","","Format the program and arguments of a Command for display. Any\nnon-utf8 data is lossily converted using the utf8 replacement\ncharacter.",122,null],[11,"clone","","",143,null],[11,"eq","","",143,null],[11,"ne","","",143,null],[11,"fmt","","",143,null],[11,"piped","","A new pipe should be arranged to connect the parent and child processes.",124,{"inputs":[],"output":{"name":"stdio"}}],[11,"inherit","","The child inherits from the corresponding parent descriptor.",124,{"inputs":[],"output":{"name":"stdio"}}],[11,"null","","This stream will be ignored. This is the equivalent of attaching the\nstream to `/dev/null`",124,{"inputs":[],"output":{"name":"stdio"}}],[11,"fmt","","",123,null],[11,"clone","","",123,null],[11,"eq","","",123,null],[11,"ne","","",123,null],[11,"success","","Was termination successful? Signal termination not considered a success,\nand success is defined as a zero exit status.",123,null],[11,"code","","Returns the exit code of the process, if any.",123,null],[11,"fmt","","",123,null],[11,"kill","","Forces the child to exit. This is equivalent to sending a\nSIGKILL on unix platforms.",144,null],[11,"id","","Returns the OS-assigned process identifier associated with this child.",144,null],[11,"wait","","Waits for the child to exit completely, returning the status that it\nexited with. This function will continue to have the same return value\nafter it has been called at least once.",144,null],[11,"wait_with_output","","Simultaneously waits for the child to exit and collect all remaining\noutput on the stdout/stderr handles, returning an `Output`\ninstance.",144,null],[11,"new","std::sync::mpsc::select","Creates a new selection structure. This set is initially empty.",145,{"inputs":[],"output":{"name":"select"}}],[11,"handle","","Creates a new handle into this receiver set for a new receiver. Note\nthat this does *not* add the receiver to the receiver set, for that you\nmust call the `add` method on the handle itself.",145,null],[11,"wait","","Waits for an event on this receiver set. The returned value is *not* an\nindex, but rather an id. This id can be queried against any active\n`Handle` structures (each one has an `id` method). The handle with\nthe matching `id` will have some sort of event available on it. The\nevent could either be that data is available or the corresponding\nchannel has been closed.",145,null],[11,"id","","Retrieves the id of this handle.",146,null],[11,"recv","","Blocks to receive a value on the underlying receiver, returning `Some` on\nsuccess or `None` if the channel disconnects. This function has the same\nsemantics as `Receiver.recv`",146,null],[11,"add","","Adds this handle to the receiver set that the handle was created from. This\nmethod can be called multiple times, but it has no effect if `add` was\ncalled previously.",146,null],[11,"remove","","Removes this handle from the `Select` set. This method is unsafe because\nit has no guarantee that the `Handle` was not moved since `add` was\ncalled.",146,null],[11,"drop","","",145,null],[11,"drop","","",146,null],[11,"fmt","","",145,null],[11,"fmt","","",146,null],[11,"clone","std::sync::mpsc","",147,null],[11,"eq","","",147,null],[11,"ne","","",147,null],[11,"fmt","","",148,null],[11,"clone","","",148,null],[11,"eq","","",148,null],[11,"fmt","","",149,null],[11,"clone","","",149,null],[11,"eq","","",149,null],[11,"fmt","","",150,null],[11,"clone","","",150,null],[11,"eq","","",150,null],[11,"clone","","",151,null],[11,"eq","","",151,null],[11,"ne","","",151,null],[11,"send","","Attempts to send a value on this channel, returning it back if it could\nnot be sent.",152,null],[11,"clone","","",152,null],[11,"drop","","",152,null],[11,"fmt","","",152,null],[11,"send","","Sends a value on this synchronous channel.",153,null],[11,"try_send","","Attempts to send a value on this channel without blocking.",153,null],[11,"clone","","",153,null],[11,"drop","","",153,null],[11,"fmt","","",153,null],[11,"try_recv","","Attempts to return a pending value on this receiver without blocking",154,null],[11,"recv","","Attempts to wait for a value on this receiver, returning an error if the\ncorresponding channel has hung up.",154,null],[11,"recv_timeout","","Attempts to wait for a value on this receiver, returning an error if the\ncorresponding channel has hung up, or if it waits more than `timeout`.",154,null],[11,"iter","","Returns an iterator that will block waiting for messages, but never\n`panic!`. It will return `None` when the channel has hung up.",154,null],[11,"next","","",155,null],[11,"next","","",156,null],[11,"into_iter","","",154,null],[11,"drop","","",154,null],[11,"fmt","","",154,null],[11,"fmt","","",147,null],[11,"fmt","","",147,null],[11,"description","","",147,null],[11,"cause","","",147,null],[11,"fmt","","",151,null],[11,"fmt","","",151,null],[11,"description","","",151,null],[11,"cause","","",151,null],[11,"fmt","","",148,null],[11,"description","","",148,null],[11,"cause","","",148,null],[11,"fmt","","",149,null],[11,"description","","",149,null],[11,"cause","","",149,null],[11,"new","std::sync::barrier","Creates a new barrier that can block a given number of threads.",157,{"inputs":[{"name":"usize"}],"output":{"name":"barrier"}}],[11,"wait","","Blocks the current thread until all threads have rendezvoused here.",157,null],[11,"is_leader","","Returns whether this thread from `wait` is the &quot;leader thread&quot;.",158,null],[11,"clone","std::sync::condvar","",159,null],[11,"eq","","",159,null],[11,"ne","","",159,null],[11,"fmt","","",159,null],[11,"timed_out","","Returns whether the wait was known to have timed out.",159,null],[11,"new","","Creates a new condition variable which is ready to be waited on and\nnotified.",160,{"inputs":[],"output":{"name":"condvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",160,null],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",160,null],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",160,null],[11,"notify_one","","Wakes up one blocked thread on this condvar.",160,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",160,null],[11,"default","","",160,{"inputs":[],"output":{"name":"condvar"}}],[11,"drop","","",160,null],[11,"new","","Creates a new condition variable",161,{"inputs":[],"output":{"name":"staticcondvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",161,null],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",161,null],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",161,null],[11,"notify_one","","Wakes up one blocked thread on this condvar.",161,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",161,null],[11,"destroy","","Deallocates all resources associated with this static condvar.",161,null],[11,"drop","std::sync::mutex","",0,null],[11,"default","","",0,{"inputs":[],"output":{"name":"mutex"}}],[11,"fmt","","",0,null],[11,"new","","Creates a new mutex in an unlocked state ready for use.",162,{"inputs":[],"output":{"name":"staticmutex"}}],[11,"lock","","Acquires this lock, see `Mutex::lock`",162,null],[11,"try_lock","","Attempts to grab this lock, see `Mutex::try_lock`",162,null],[11,"destroy","","Deallocates resources associated with this static mutex.",162,null],[11,"deref","","",163,null],[11,"deref_mut","","",163,null],[11,"drop","","",163,null],[11,"new","std::sync::once","Creates a new `Once` value.",164,{"inputs":[],"output":{"name":"once"}}],[11,"call_once","","Performs an initialization routine once and only once. The given closure\nwill be executed if this is the first time `call_once` has been called,\nand otherwise the routine will *not* be invoked.",164,null],[11,"call_once_force","","Performs the same function as `call_once` except ignores poisoning.",164,null],[11,"poisoned","","Returns whether the associated `Once` has been poisoned.",165,null],[11,"new","std::sync::rwlock","Creates a new instance of an `RwLock&lt;T&gt;` which is unlocked.",166,{"inputs":[{"name":"t"}],"output":{"name":"rwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",166,null],[11,"try_read","","Attempts to acquire this rwlock with shared read access.",166,null],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",166,null],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",166,null],[11,"is_poisoned","","Determines whether the lock is poisoned.",166,null],[11,"into_inner","","Consumes this `RwLock`, returning the underlying data.",166,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",166,null],[11,"drop","","",166,null],[11,"fmt","","",166,null],[11,"default","","",166,{"inputs":[],"output":{"name":"rwlock"}}],[11,"new","","Creates a new rwlock.",167,{"inputs":[],"output":{"name":"staticrwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",167,null],[11,"try_read","","Attempts to acquire this lock with shared read access.",167,null],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",167,null],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",167,null],[11,"destroy","","Deallocates all resources associated with this static lock.",167,null],[11,"deref","","",168,null],[11,"deref","","",169,null],[11,"deref_mut","","",169,null],[11,"drop","","",168,null],[11,"drop","","",169,null],[11,"default","core::sync::atomic","",170,{"inputs":[],"output":{"name":"atomicbool"}}],[11,"default","","",171,{"inputs":[],"output":{"name":"atomicptr"}}],[11,"fmt","","",172,null],[11,"clone","","",172,null],[11,"new","","Creates a new `AtomicBool`.",170,{"inputs":[{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",170,null],[11,"store","","Stores a value into the bool.",170,null],[11,"swap","","Stores a value into the bool, returning the old value.",170,null],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",170,null],[11,"compare_exchange","","Stores a value into the `bool` if the current value is the same as the `current` value.",170,null],[11,"compare_exchange_weak","","Stores a value into the `bool` if the current value is the same as the `current` value.",170,null],[11,"fetch_and","","Logical &quot;and&quot; with a boolean value.",170,null],[11,"fetch_nand","","Logical &quot;nand&quot; with a boolean value.",170,null],[11,"fetch_or","","Logical &quot;or&quot; with a boolean value.",170,null],[11,"fetch_xor","","Logical &quot;xor&quot; with a boolean value.",170,null],[11,"new","","Creates a new `AtomicPtr`.",171,null],[11,"load","","Loads a value from the pointer.",171,null],[11,"store","","Stores a value into the pointer.",171,null],[11,"swap","","Stores a value into the pointer, returning the old value.",171,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",171,null],[11,"compare_exchange","","Stores a value into the pointer if the current value is the same as the `current` value.",171,null],[11,"compare_exchange_weak","","Stores a value into the pointer if the current value is the same as the `current` value.",171,null],[11,"default","","",173,{"inputs":[],"output":{"name":"atomici8"}}],[11,"fmt","","",173,null],[11,"new","","Creates a new atomic integer.",173,{"inputs":[{"name":"i8"}],"output":{"name":"atomici8"}}],[11,"load","","Loads a value from the atomic integer.",173,null],[11,"store","","Stores a value into the atomic integer.",173,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",173,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",173,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",173,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",173,null],[11,"fetch_add","","Add to the current value, returning the previous value.",173,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",173,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",173,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",173,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",173,null],[11,"default","","",174,{"inputs":[],"output":{"name":"atomicu8"}}],[11,"fmt","","",174,null],[11,"new","","Creates a new atomic integer.",174,{"inputs":[{"name":"u8"}],"output":{"name":"atomicu8"}}],[11,"load","","Loads a value from the atomic integer.",174,null],[11,"store","","Stores a value into the atomic integer.",174,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",174,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",174,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",174,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",174,null],[11,"fetch_add","","Add to the current value, returning the previous value.",174,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",174,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",174,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",174,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",174,null],[11,"default","","",175,{"inputs":[],"output":{"name":"atomici16"}}],[11,"fmt","","",175,null],[11,"new","","Creates a new atomic integer.",175,{"inputs":[{"name":"i16"}],"output":{"name":"atomici16"}}],[11,"load","","Loads a value from the atomic integer.",175,null],[11,"store","","Stores a value into the atomic integer.",175,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",175,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",175,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",175,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",175,null],[11,"fetch_add","","Add to the current value, returning the previous value.",175,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",175,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",175,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",175,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",175,null],[11,"default","","",176,{"inputs":[],"output":{"name":"atomicu16"}}],[11,"fmt","","",176,null],[11,"new","","Creates a new atomic integer.",176,{"inputs":[{"name":"u16"}],"output":{"name":"atomicu16"}}],[11,"load","","Loads a value from the atomic integer.",176,null],[11,"store","","Stores a value into the atomic integer.",176,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",176,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",176,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",176,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",176,null],[11,"fetch_add","","Add to the current value, returning the previous value.",176,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",176,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",176,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",176,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",176,null],[11,"default","","",177,{"inputs":[],"output":{"name":"atomici32"}}],[11,"fmt","","",177,null],[11,"new","","Creates a new atomic integer.",177,{"inputs":[{"name":"i32"}],"output":{"name":"atomici32"}}],[11,"load","","Loads a value from the atomic integer.",177,null],[11,"store","","Stores a value into the atomic integer.",177,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",177,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",177,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",177,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",177,null],[11,"fetch_add","","Add to the current value, returning the previous value.",177,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",177,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",177,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",177,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",177,null],[11,"default","","",178,{"inputs":[],"output":{"name":"atomicu32"}}],[11,"fmt","","",178,null],[11,"new","","Creates a new atomic integer.",178,{"inputs":[{"name":"u32"}],"output":{"name":"atomicu32"}}],[11,"load","","Loads a value from the atomic integer.",178,null],[11,"store","","Stores a value into the atomic integer.",178,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",178,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",178,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",178,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",178,null],[11,"fetch_add","","Add to the current value, returning the previous value.",178,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",178,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",178,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",178,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",178,null],[11,"default","","",179,{"inputs":[],"output":{"name":"atomici64"}}],[11,"fmt","","",179,null],[11,"new","","Creates a new atomic integer.",179,{"inputs":[{"name":"i64"}],"output":{"name":"atomici64"}}],[11,"load","","Loads a value from the atomic integer.",179,null],[11,"store","","Stores a value into the atomic integer.",179,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",179,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",179,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",179,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",179,null],[11,"fetch_add","","Add to the current value, returning the previous value.",179,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",179,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",179,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",179,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",179,null],[11,"default","","",180,{"inputs":[],"output":{"name":"atomicu64"}}],[11,"fmt","","",180,null],[11,"new","","Creates a new atomic integer.",180,{"inputs":[{"name":"u64"}],"output":{"name":"atomicu64"}}],[11,"load","","Loads a value from the atomic integer.",180,null],[11,"store","","Stores a value into the atomic integer.",180,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",180,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",180,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",180,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",180,null],[11,"fetch_add","","Add to the current value, returning the previous value.",180,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",180,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",180,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",180,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",180,null],[11,"default","","",181,{"inputs":[],"output":{"name":"atomicisize"}}],[11,"fmt","","",181,null],[11,"new","","Creates a new atomic integer.",181,{"inputs":[{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the atomic integer.",181,null],[11,"store","","Stores a value into the atomic integer.",181,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",181,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",181,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",181,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",181,null],[11,"fetch_add","","Add to the current value, returning the previous value.",181,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",181,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",181,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",181,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",181,null],[11,"default","","",182,{"inputs":[],"output":{"name":"atomicusize"}}],[11,"fmt","","",182,null],[11,"new","","Creates a new atomic integer.",182,{"inputs":[{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the atomic integer.",182,null],[11,"store","","Stores a value into the atomic integer.",182,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",182,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",182,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",182,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",182,null],[11,"fetch_add","","Add to the current value, returning the previous value.",182,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",182,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",182,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",182,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",182,null],[11,"fmt","","",170,null],[11,"fmt","","",171,null],[11,"hash","std::time::duration","",183,null],[11,"fmt","","",183,null],[11,"cmp","","",183,null],[11,"partial_cmp","","",183,null],[11,"lt","","",183,null],[11,"le","","",183,null],[11,"gt","","",183,null],[11,"ge","","",183,null],[11,"eq","","",183,null],[11,"ne","","",183,null],[11,"clone","","",183,null],[11,"new","","Creates a new `Duration` from the specified number of seconds and\nadditional nanosecond precision.",183,{"inputs":[{"name":"u64"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"from_secs","","Creates a new `Duration` from the specified number of seconds.",183,{"inputs":[{"name":"u64"}],"output":{"name":"duration"}}],[11,"from_millis","","Creates a new `Duration` from the specified number of milliseconds.",183,{"inputs":[{"name":"u64"}],"output":{"name":"duration"}}],[11,"as_secs","","Returns the number of whole seconds represented by this duration.",183,null],[11,"subsec_nanos","","Returns the nanosecond precision represented by this duration.",183,null],[11,"add","","",183,null],[11,"add_assign","","",183,null],[11,"sub","","",183,null],[11,"sub_assign","","",183,null],[11,"mul","","",183,null],[11,"mul_assign","","",183,null],[11,"div","","",183,null],[11,"div_assign","","",183,null],[11,"cmp","std::time","",184,null],[11,"partial_cmp","","",184,null],[11,"lt","","",184,null],[11,"le","","",184,null],[11,"gt","","",184,null],[11,"ge","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"clone","","",184,null],[11,"cmp","","",185,null],[11,"partial_cmp","","",185,null],[11,"lt","","",185,null],[11,"le","","",185,null],[11,"gt","","",185,null],[11,"ge","","",185,null],[11,"eq","","",185,null],[11,"ne","","",185,null],[11,"clone","","",185,null],[11,"fmt","","",186,null],[11,"clone","","",186,null],[11,"now","","Returns an instant corresponding to &quot;now&quot;.",184,{"inputs":[],"output":{"name":"instant"}}],[11,"duration_since","","Returns the amount of time elapsed from another instant to this one.",184,null],[11,"elapsed","","Returns the amount of time elapsed since this instant was created.",184,null],[11,"add","","",184,null],[11,"add_assign","","",184,null],[11,"sub","","",184,null],[11,"sub_assign","","",184,null],[11,"sub","","",184,null],[11,"fmt","","",184,null],[11,"now","","Returns the system time corresponding to &quot;now&quot;.",185,{"inputs":[],"output":{"name":"systemtime"}}],[11,"duration_since","","Returns the amount of time elapsed from an earlier point in time.",185,null],[11,"elapsed","","Returns the amount of time elapsed since this system time was created.",185,null],[11,"add","","",185,null],[11,"add_assign","","",185,null],[11,"sub","","",185,null],[11,"sub_assign","","",185,null],[11,"fmt","","",185,null],[11,"duration","","Returns the positive duration which represents how far forward the\nsecond system time was from the first.",186,null],[11,"description","","",186,null],[11,"fmt","","",186,null],[11,"fmt","std::sys_common::poison","",187,null],[11,"fmt","","",187,null],[11,"description","","",187,null],[11,"new","","Creates a `PoisonError`.",187,{"inputs":[{"name":"t"}],"output":{"name":"poisonerror"}}],[11,"into_inner","","Consumes this error indicating that a lock is poisoned, returning the\nunderlying guard to allow access regardless.",187,null],[11,"get_ref","","Reaches into this error indicating that a lock is poisoned, returning a\nreference to the underlying guard to allow access regardless.",187,null],[11,"get_mut","","Reaches into this error indicating that a lock is poisoned, returning a\nmutable reference to the underlying guard to allow access regardless.",187,null],[11,"from","","",188,{"inputs":[{"name":"poisonerror"}],"output":{"name":"trylockerror"}}],[11,"fmt","","",188,null],[11,"fmt","","",188,null],[11,"description","","",188,null],[11,"cause","","",188,null],[11,"clone","libc::unix","",189,null],[11,"clone","","",190,null],[11,"clone","","",191,null],[11,"clone","","",192,null],[11,"clone","","",193,null],[11,"clone","","",194,null],[11,"clone","","",195,null],[11,"clone","","",196,null],[11,"clone","","",197,null],[11,"clone","","",198,null],[11,"clone","","",199,null],[11,"clone","","",200,null],[11,"clone","","",201,null],[11,"clone","libc::unix::notbsd","",202,null],[11,"clone","","",203,null],[11,"clone","","",204,null],[11,"clone","","",205,null],[11,"clone","","",206,null],[11,"clone","","",207,null],[11,"clone","","",208,null],[11,"clone","","",209,null],[11,"clone","","",210,null],[11,"clone","","",211,null],[11,"clone","","",212,null],[11,"clone","","",213,null],[11,"clone","","",214,null],[11,"clone","","",215,null],[11,"clone","","",216,null],[11,"clone","libc::unix::notbsd::linux","",217,null],[11,"clone","","",218,null],[11,"clone","","",219,null],[11,"clone","","",220,null],[11,"clone","","",221,null],[11,"clone","","",222,null],[11,"clone","","",223,null],[11,"clone","","",224,null],[11,"clone","","",225,null],[11,"clone","","",226,null],[11,"clone","","",227,null],[11,"clone","","",228,null],[11,"clone","","",229,null],[11,"clone","","",230,null],[11,"clone","","",231,null],[11,"clone","","",232,null],[11,"clone","libc::unix::notbsd::linux::other","",233,null],[11,"clone","","",234,null],[11,"clone","","",235,null],[11,"clone","","",236,null],[11,"clone","","",237,null],[11,"clone","","",238,null],[11,"clone","","",239,null],[11,"clone","","",240,null],[11,"clone","","",241,null],[11,"clone","","",242,null],[11,"clone","","",243,null],[11,"clone","libc::unix::notbsd::linux::other::b64","",244,null],[11,"clone","","",245,null],[11,"clone","libc::unix::notbsd::linux::other::b64::x86_64","",246,null],[11,"clone","","",247,null],[11,"clone","","",248,null],[11,"clone","","",249,null],[11,"clone","","",250,null],[11,"clone","","",251,null],[11,"clone","","",252,null],[11,"clone","","",253,null],[11,"payload","std::panicking","Returns the payload associated with the panic.",254,null],[11,"location","","Returns information about the location from which the panic originated,\nif available.",254,null],[11,"file","","Returns the name of the source file from which the panic originated.",255,null],[11,"line","","Returns the line number from which the panic originated.",255,null],[11,"next","rustc_unicode::char","",256,null],[11,"next","","",257,null],[11,"clone","","",258,null],[11,"eq","","",10,null],[11,"ne","","",10,null],[11,"clone","","",10,null],[11,"fmt","","",10,null],[11,"next","","",258,null],[11,"size_hint","","",258,null],[11,"unpaired_surrogate","","Returns the unpaired surrogate which caused this error.",10,null],[11,"fmt","","",10,null],[11,"new","core::ptr","Creates a new `Unique`.",259,null],[11,"get","","Dereferences the content.",259,null],[11,"get_mut","","Mutably dereferences the content.",259,null],[11,"deref","","",259,null],[11,"fmt","","",259,null],[11,"new","","Creates a new `Shared`.",260,null],[11,"clone","","",260,null],[11,"deref","","",260,null],[11,"fmt","","",260,null],[11,"borrow","collections::borrow","",74,null],[11,"clone","","",74,null],[11,"to_mut","","Acquires a mutable reference to the owned form of the data.",74,null],[11,"into_owned","","Extracts the owned data.",74,null],[11,"deref","","",74,null],[11,"cmp","","",74,null],[11,"eq","","",74,null],[11,"partial_cmp","","",74,null],[11,"fmt","","",74,null],[11,"fmt","","",74,null],[11,"default","","",74,{"inputs":[],"output":{"name":"cow"}}],[11,"hash","","",74,null],[11,"as_ref","","",74,null],[11,"hash","core::option","",261,null],[11,"fmt","","",261,null],[11,"cmp","","",261,null],[11,"partial_cmp","","",261,null],[11,"lt","","",261,null],[11,"le","","",261,null],[11,"gt","","",261,null],[11,"ge","","",261,null],[11,"eq","","",261,null],[11,"ne","","",261,null],[11,"clone","","",261,null],[11,"is_some","","Returns `true` if the option is a `Some` value",261,null],[11,"is_none","","Returns `true` if the option is a `None` value",261,null],[11,"as_ref","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`",261,null],[11,"as_mut","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;mut T&gt;`",261,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",261,null],[11,"unwrap","","Moves the value `v` out of the `Option&lt;T&gt;` if it is `Some(v)`.",261,null],[11,"unwrap_or","","Returns the contained value or a default.",261,null],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",261,null],[11,"map","","Maps an `Option&lt;T&gt;` to `Option&lt;U&gt;` by applying a function to a contained value",261,null],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",261,null],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",261,null],[11,"ok_or","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",261,null],[11,"ok_or_else","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",261,null],[11,"iter","","Returns an iterator over the possibly contained value.",261,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",261,null],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",261,null],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",261,null],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",261,null],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",261,null],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",261,null],[11,"cloned","","Maps an `Option&lt;&amp;T&gt;` to an `Option&lt;T&gt;` by cloning the contents of the\noption.",261,null],[11,"unwrap_or_default","","Returns the contained value or a default",261,null],[11,"default","","",261,{"inputs":[],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",261,null],[11,"fmt","","",262,null],[11,"next","","",262,null],[11,"size_hint","","",262,null],[11,"next_back","","",262,null],[11,"clone","","",262,null],[11,"fmt","","",263,null],[11,"next","","",263,null],[11,"size_hint","","",263,null],[11,"next_back","","",263,null],[11,"fmt","","",264,null],[11,"clone","","",264,null],[11,"next","","",264,null],[11,"size_hint","","",264,null],[11,"next_back","","",264,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",261,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[11,"new","alloc::rc","Constructs a new `Rc&lt;T&gt;`.",265,{"inputs":[{"name":"t"}],"output":{"name":"rc"}}],[11,"try_unwrap","","Unwraps the contained value if the `Rc&lt;T&gt;` has exactly one strong reference.",265,{"inputs":[{"name":"rc"}],"output":{"name":"result"}}],[11,"would_unwrap","","Checks if `Rc::try_unwrap` would return `Ok`.",265,{"inputs":[{"name":"rc"}],"output":{"name":"bool"}}],[11,"downgrade","","Creates a new `Weak&lt;T&gt;` reference from this value.",265,{"inputs":[{"name":"rc"}],"output":{"name":"weak"}}],[11,"weak_count","","Get the number of weak references to this value.",265,{"inputs":[{"name":"rc"}],"output":{"name":"usize"}}],[11,"strong_count","","Get the number of strong references to this value.",265,{"inputs":[{"name":"rc"}],"output":{"name":"usize"}}],[11,"is_unique","","Returns true if there are no other `Rc` or `Weak&lt;T&gt;` values that share\nthe same inner value.",265,{"inputs":[{"name":"rc"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the contained value if the `Rc&lt;T&gt;` has\none strong reference and no weak references.",265,{"inputs":[{"name":"rc"}],"output":{"name":"option"}}],[11,"make_mut","","Make a mutable reference into the given `Rc&lt;T&gt;` by cloning the inner\ndata if the `Rc&lt;T&gt;` doesn&#39;t have one strong reference and no weak\nreferences.",265,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"deref","","",265,null],[11,"drop","","Drops the `Rc&lt;T&gt;`.",265,null],[11,"clone","","Makes a clone of the `Rc&lt;T&gt;`.",265,null],[11,"default","","Creates a new `Rc&lt;T&gt;`, with the `Default` value for `T`.",265,{"inputs":[],"output":{"name":"rc"}}],[11,"eq","","Equality for two `Rc&lt;T&gt;`s.",265,null],[11,"ne","","Inequality for two `Rc&lt;T&gt;`s.",265,null],[11,"partial_cmp","","Partial comparison for two `Rc&lt;T&gt;`s.",265,null],[11,"lt","","Less-than comparison for two `Rc&lt;T&gt;`s.",265,null],[11,"le","","&#39;Less-than or equal to&#39; comparison for two `Rc&lt;T&gt;`s.",265,null],[11,"gt","","Greater-than comparison for two `Rc&lt;T&gt;`s.",265,null],[11,"ge","","&#39;Greater-than or equal to&#39; comparison for two `Rc&lt;T&gt;`s.",265,null],[11,"cmp","","Comparison for two `Rc&lt;T&gt;`s.",265,null],[11,"hash","","",265,null],[11,"fmt","","",265,null],[11,"fmt","","",265,null],[11,"fmt","","",265,null],[11,"from","","",265,{"inputs":[{"name":"t"}],"output":{"name":"rc"}}],[11,"new","","Constructs a new `Weak&lt;T&gt;` without an accompanying instance of T.",266,{"inputs":[],"output":{"name":"weak"}}],[11,"upgrade","","Upgrades a weak reference to a strong reference.",266,null],[11,"drop","","Drops the `Weak&lt;T&gt;`.",266,null],[11,"clone","","Makes a clone of the `Weak&lt;T&gt;`.",266,null],[11,"fmt","","",266,null],[11,"default","","",266,{"inputs":[],"output":{"name":"weak"}}],[11,"borrow","","",265,null],[11,"as_ref","","",265,null],[11,"new","core::cell","Creates a new `Cell` containing the given value.",267,{"inputs":[{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",267,null],[11,"set","","Sets the contained value.",267,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",267,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",267,null],[11,"clone","","",267,null],[11,"default","","",267,{"inputs":[],"output":{"name":"cell"}}],[11,"eq","","",267,null],[11,"partial_cmp","","",267,null],[11,"lt","","",267,null],[11,"le","","",267,null],[11,"gt","","",267,null],[11,"ge","","",267,null],[11,"cmp","","",267,null],[11,"fmt","","",268,null],[11,"eq","","",268,null],[11,"clone","","",268,null],[11,"new","","Creates a new `RefCell` containing `value`.",269,{"inputs":[{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",269,null],[11,"borrow_state","","Query the current state of this `RefCell`",269,null],[11,"borrow","","Immutably borrows the wrapped value.",269,null],[11,"borrow_mut","","Mutably borrows the wrapped value.",269,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",269,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",269,null],[11,"clone","","",269,null],[11,"default","","",269,{"inputs":[],"output":{"name":"refcell"}}],[11,"eq","","",269,null],[11,"partial_cmp","","",269,null],[11,"lt","","",269,null],[11,"le","","",269,null],[11,"gt","","",269,null],[11,"ge","","",269,null],[11,"cmp","","",269,null],[11,"deref","","",270,null],[11,"clone","","Copies a `Ref`.",270,{"inputs":[{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",270,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",271,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"deref","","",271,null],[11,"deref_mut","","",271,null],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",272,{"inputs":[{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",272,null],[11,"get","","Gets a mutable pointer to the wrapped value.",272,null],[11,"default","","",272,{"inputs":[],"output":{"name":"unsafecell"}}],[11,"hash","core::cmp","",273,null],[11,"fmt","","",273,null],[11,"eq","","",273,null],[11,"clone","","",273,null],[11,"reverse","","Reverse the `Ordering`.",273,null],[11,"cmp","","",273,null],[11,"partial_cmp","","",273,null],[11,"clone","alloc::boxed","",274,null],[11,"pointer","","",275,null],[11,"make_place","","",275,{"inputs":[],"output":{"name":"intermediatebox"}}],[11,"finalize","","",275,null],[11,"finalize","","",1,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"make_place","","",274,null],[11,"drop","","",275,null],[11,"new","","Allocates memory on the heap and then places `x` into it.",1,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"from_raw","","Constructs a box from a raw pointer.",1,null],[11,"into_raw","","Consumes the `Box`, returning the wrapped raw pointer.",1,null],[11,"default","","",1,{"inputs":[],"output":{"name":"box"}}],[11,"default","","",1,{"inputs":[],"output":{"name":"box"}}],[11,"clone","","Returns a new box with a `clone()` of this box&#39;s contents.",1,null],[11,"clone_from","","Copies `source`&#39;s contents into `self` without creating a new allocation.",1,null],[11,"clone","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"partial_cmp","","",1,null],[11,"lt","","",1,null],[11,"le","","",1,null],[11,"ge","","",1,null],[11,"gt","","",1,null],[11,"cmp","","",1,null],[11,"hash","","",1,null],[11,"from","","",1,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",1,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",1,null],[11,"fmt","","",1,null],[11,"fmt","","",1,null],[11,"fmt","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"next","","",1,null],[11,"size_hint","","",1,null],[11,"next_back","","",1,null],[11,"call_once","","",1,null],[11,"call_once","","",1,null],[11,"clone","","",1,null],[11,"borrow","","",1,null],[11,"borrow_mut","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"clone","collections::str","",276,null],[11,"next","","",276,null],[11,"size_hint","","",276,null],[11,"borrow","collections::string","",75,null],[11,"fmt","core::str::pattern","",277,null],[11,"eq","","",277,null],[11,"ne","","",277,null],[11,"clone","","",277,null],[11,"fmt","","",278,null],[11,"clone","","",278,null],[11,"haystack","","",278,null],[11,"next","","",278,null],[11,"next_match","","",278,null],[11,"next_reject","","",278,null],[11,"next_back","","",278,null],[11,"next_match_back","","",278,null],[11,"next_reject_back","","",278,null],[11,"fmt","","",279,null],[11,"clone","","",279,null],[11,"haystack","","",279,null],[11,"next","","",279,null],[11,"next_match","","",279,null],[11,"next_reject","","",279,null],[11,"next_back","","",279,null],[11,"next_match_back","","",279,null],[11,"next_reject_back","","",279,null],[11,"clone","","",280,null],[11,"fmt","","",280,null],[11,"haystack","","",280,null],[11,"next","","",280,null],[11,"next_match","","",280,null],[11,"next_reject","","",280,null],[11,"next_back","","",280,null],[11,"next_match_back","","",280,null],[11,"next_reject_back","","",280,null],[11,"fmt","","",281,null],[11,"clone","","",281,null],[11,"haystack","","",281,null],[11,"next","","",281,null],[11,"next_match","","",281,null],[11,"next_back","","",281,null],[11,"next_match_back","","",281,null],[11,"hash","core::ops","",282,null],[11,"eq","","",282,null],[11,"clone","","",282,null],[11,"fmt","","",282,null],[11,"hash","","",283,null],[11,"eq","","",283,null],[11,"ne","","",283,null],[11,"clone","","",283,null],[11,"fmt","","",283,null],[11,"contains","","# Examples",283,null],[11,"hash","","",284,null],[11,"eq","","",284,null],[11,"ne","","",284,null],[11,"clone","","",284,null],[11,"fmt","","",284,null],[11,"contains","","# Examples",284,null],[11,"hash","","",285,null],[11,"eq","","",285,null],[11,"ne","","",285,null],[11,"clone","","",285,null],[11,"fmt","","",285,null],[11,"contains","","# Examples",285,null],[11,"hash","","",286,null],[11,"eq","","",286,null],[11,"ne","","",286,null],[11,"clone","","",286,null],[11,"fmt","","",286,null],[11,"contains","","# Examples",286,null],[11,"hash","","",287,null],[11,"eq","","",287,null],[11,"ne","","",287,null],[11,"clone","","",287,null],[11,"fmt","","",287,null],[11,"contains","","# Examples",287,null],[11,"fmt","core::iter::range","",288,null],[11,"clone","","",288,null],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",284,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",283,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",286,null],[11,"next","core::iter::range","",288,null],[11,"size_hint","","",288,null],[11,"next","","",288,null],[11,"size_hint","","",288,null],[11,"next","","",288,null],[11,"size_hint","","",288,null],[11,"next","core::ops","",283,null],[11,"size_hint","","",283,null],[11,"next_back","","",283,null],[11,"next","","",284,null],[11,"next","","",286,null],[11,"size_hint","","",286,null],[11,"next_back","","",286,null],[11,"fmt","core::iter::sources","",289,null],[11,"clone","","",289,null],[11,"next","","",289,null],[11,"size_hint","","",289,null],[11,"next_back","","",289,null],[11,"fmt","","",290,null],[11,"next","","",290,null],[11,"size_hint","","",290,null],[11,"next_back","","",290,null],[11,"len","","",290,null],[11,"clone","","",290,null],[11,"default","","",290,{"inputs":[],"output":{"name":"empty"}}],[11,"fmt","","",291,null],[11,"clone","","",291,null],[11,"next","","",291,null],[11,"size_hint","","",291,null],[11,"next_back","","",291,null],[11,"len","","",291,null],[11,"fmt","core::iter","",292,null],[11,"clone","","",292,null],[11,"next","","",292,null],[11,"size_hint","","",292,null],[11,"next_back","","",292,null],[11,"fmt","","",293,null],[11,"clone","","",293,null],[11,"next","","",293,null],[11,"size_hint","","",293,null],[11,"next_back","","",293,null],[11,"fmt","","",294,null],[11,"clone","","",294,null],[11,"next","","",294,null],[11,"size_hint","","",294,null],[11,"fmt","","",295,null],[11,"clone","","",295,null],[11,"next","","",295,null],[11,"count","","",295,null],[11,"nth","","",295,null],[11,"find","","",295,null],[11,"last","","",295,null],[11,"size_hint","","",295,null],[11,"next_back","","",295,null],[11,"fmt","","",296,null],[11,"clone","","",296,null],[11,"next","","",296,null],[11,"size_hint","","",296,null],[11,"next_back","","",296,null],[11,"clone","","",297,null],[11,"fmt","","",297,null],[11,"next","","",297,null],[11,"size_hint","","",297,null],[11,"next_back","","",297,null],[11,"clone","","",298,null],[11,"fmt","","",298,null],[11,"next","","",298,null],[11,"size_hint","","",298,null],[11,"next_back","","",298,null],[11,"clone","","",299,null],[11,"fmt","","",299,null],[11,"next","","",299,null],[11,"size_hint","","",299,null],[11,"next_back","","",299,null],[11,"fmt","","",300,null],[11,"clone","","",300,null],[11,"next","","# Overflow Behavior",300,null],[11,"size_hint","","",300,null],[11,"nth","","",300,null],[11,"count","","",300,null],[11,"next_back","","",300,null],[11,"fmt","","",301,null],[11,"clone","","",301,null],[11,"next","","",301,null],[11,"count","","",301,null],[11,"nth","","",301,null],[11,"last","","",301,null],[11,"size_hint","","",301,null],[11,"peek","","Returns a reference to the next() value without advancing the iterator.",301,null],[11,"is_empty","","Checks if the iterator has finished iterating.",301,null],[11,"clone","","",302,null],[11,"fmt","","",302,null],[11,"next","","",302,null],[11,"size_hint","","",302,null],[11,"clone","","",303,null],[11,"fmt","","",303,null],[11,"next","","",303,null],[11,"size_hint","","",303,null],[11,"fmt","","",304,null],[11,"clone","","",304,null],[11,"next","","",304,null],[11,"nth","","",304,null],[11,"count","","",304,null],[11,"last","","",304,null],[11,"size_hint","","",304,null],[11,"next_back","","",304,null],[11,"fmt","","",305,null],[11,"clone","","",305,null],[11,"next","","",305,null],[11,"nth","","",305,null],[11,"size_hint","","",305,null],[11,"clone","","",306,null],[11,"fmt","","",306,null],[11,"next","","",306,null],[11,"size_hint","","",306,null],[11,"clone","","",307,null],[11,"fmt","","",307,null],[11,"next","","",307,null],[11,"size_hint","","",307,null],[11,"next_back","","",307,null],[11,"fmt","","",308,null],[11,"clone","","",308,null],[11,"next","","",308,null],[11,"nth","","",308,null],[11,"last","","",308,null],[11,"count","","",308,null],[11,"size_hint","","",308,null],[11,"next_back","","",308,null],[11,"clone","","",309,null],[11,"fmt","","",309,null],[11,"next","","",309,null],[11,"size_hint","","",309,null],[11,"next_back","","",309,null],[11,"borrow","collections::vec","",47,null],[11,"borrow_mut","","",47,null],[11,"hash","core::result","",310,null],[11,"fmt","","",310,null],[11,"cmp","","",310,null],[11,"partial_cmp","","",310,null],[11,"lt","","",310,null],[11,"le","","",310,null],[11,"gt","","",310,null],[11,"ge","","",310,null],[11,"eq","","",310,null],[11,"ne","","",310,null],[11,"clone","","",310,null],[11,"is_ok","","Returns true if the result is `Ok`",310,null],[11,"is_err","","Returns true if the result is `Err`",310,null],[11,"ok","","Converts from `Result&lt;T, E&gt;` to `Option&lt;T&gt;`",310,null],[11,"err","","Converts from `Result&lt;T, E&gt;` to `Option&lt;E&gt;`",310,null],[11,"as_ref","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;T, &amp;E&gt;`",310,null],[11,"as_mut","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;mut T, &amp;mut E&gt;`",310,null],[11,"map","","Maps a `Result&lt;T, E&gt;` to `Result&lt;U, E&gt;` by applying a function to a\ncontained `Ok` value, leaving an `Err` value untouched.",310,null],[11,"map_err","","Maps a `Result&lt;T, E&gt;` to `Result&lt;T, F&gt;` by applying a function to a\ncontained `Err` value, leaving an `Ok` value untouched.",310,null],[11,"iter","","Returns an iterator over the possibly contained value.",310,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",310,null],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",310,null],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",310,null],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",310,null],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",310,null],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",310,null],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",310,null],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",310,null],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",310,null],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",310,null],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",310,null],[11,"fmt","","",311,null],[11,"next","","",311,null],[11,"size_hint","","",311,null],[11,"next_back","","",311,null],[11,"clone","","",311,null],[11,"fmt","","",312,null],[11,"next","","",312,null],[11,"size_hint","","",312,null],[11,"next_back","","",312,null],[11,"fmt","","",313,null],[11,"next","","",313,null],[11,"size_hint","","",313,null],[11,"next_back","","",313,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",310,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","libloading::os","",314,null],[11,"fmt","","",314,null],[11,"is","","Returns true if the boxed type is the same as `T`",314,null],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",314,null],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",314,null],[11,"is","","Forwards to the method defined on the type `Any`.",314,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",314,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",314,null],[11,"hash","core::any","",315,null],[11,"fmt","","",315,null],[11,"eq","","",315,null],[11,"ne","","",315,null],[11,"clone","","",315,null],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",315,{"inputs":[],"output":{"name":"typeid"}}],[11,"clone","core::raw","",316,null],[11,"cmp","collections::string","",75,null],[11,"partial_cmp","","",75,null],[11,"lt","","",75,null],[11,"le","","",75,null],[11,"gt","","",75,null],[11,"ge","","",75,null],[11,"fmt","","",7,null],[11,"fmt","","",8,null],[11,"new","","Creates a new empty `String`.",75,{"inputs":[],"output":{"name":"string"}}],[11,"with_capacity","","Creates a new empty `String` with a particular capacity.",75,{"inputs":[{"name":"usize"}],"output":{"name":"string"}}],[11,"from_utf8","","Converts a vector of bytes to a `String`.",75,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[11,"from_utf8_lossy","","Converts a slice of bytes to a string, including invalid characters.",75,null],[11,"from_utf16","","Decode a UTF-16 encoded vector `v` into a `String`, returning `Err`\nif `v` contains any invalid data.",75,null],[11,"from_utf16_lossy","","Decode a UTF-16 encoded vector `v` into a string, replacing\ninvalid data with the replacement character (U+FFFD).",75,null],[11,"from_raw_parts","","Creates a new `String` from a length, capacity, and pointer.",75,null],[11,"from_utf8_unchecked","","Converts a vector of bytes to a `String` without checking that the\nstring contains valid UTF-8.",75,{"inputs":[{"name":"vec"}],"output":{"name":"string"}}],[11,"into_bytes","","Converts a `String` into a byte vector.",75,null],[11,"as_str","","Extracts a string slice containing the entire string.",75,null],[11,"as_mut_str","","Extracts a string slice containing the entire string.",75,null],[11,"push_str","","Appends a given string slice onto the end of this `String`.",75,null],[11,"capacity","","Returns this `String`&#39;s capacity, in bytes.",75,null],[11,"reserve","","Ensures that this `String`&#39;s capacity is at least `additional` bytes\nlarger than its length.",75,null],[11,"reserve_exact","","Ensures that this `String`&#39;s capacity is `additional` bytes\nlarger than its length.",75,null],[11,"shrink_to_fit","","Shrinks the capacity of this `String` to match its length.",75,null],[11,"push","","Appends the given `char` to the end of this `String`.",75,null],[11,"as_bytes","","Returns a byte slice of this `String`&#39;s contents.",75,null],[11,"truncate","","Shortens this `String` to the specified length.",75,null],[11,"pop","","Removes the last character from the string buffer and returns it.",75,null],[11,"remove","","Removes a `char` from this `String` at a byte position and returns it.",75,null],[11,"insert","","Inserts a character into this `String` at a byte position.",75,null],[11,"as_mut_vec","","Returns a mutable reference to the contents of this `String`.",75,null],[11,"len","","Returns the length of this `String`, in bytes.",75,null],[11,"is_empty","","Returns `true` if this `String` has a length of zero.",75,null],[11,"clear","","Truncates this `String`, removing all contents.",75,null],[11,"drain","","Create a draining iterator that removes the specified range in the string\nand yields the removed chars.",75,null],[11,"into_boxed_str","","Converts this `String` into a `Box&lt;str&gt;`.",75,null],[11,"into_bytes","","Returns the bytes that were attempted to convert to a `String`.",7,null],[11,"utf8_error","","Fetch a `Utf8Error` to get more details about the conversion failure.",7,null],[11,"fmt","","",7,null],[11,"fmt","","",8,null],[11,"clone","","",75,null],[11,"clone_from","","",75,null],[11,"from_iter","","",75,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",75,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",75,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"extend","","",75,null],[11,"extend","","",75,null],[11,"extend","","",75,null],[11,"extend","","",75,null],[11,"eq","","",75,null],[11,"ne","","",75,null],[11,"eq","","",75,null],[11,"ne","","",75,null],[11,"eq","","",75,null],[11,"ne","","",75,null],[11,"eq","collections::borrow","",74,null],[11,"ne","","",74,null],[11,"eq","","",74,null],[11,"ne","","",74,null],[11,"eq","","",74,null],[11,"ne","","",74,null],[11,"eq","collections::string","",75,null],[11,"ne","","",75,null],[11,"default","","",75,{"inputs":[],"output":{"name":"string"}}],[11,"fmt","","",75,null],[11,"fmt","","",75,null],[11,"hash","","",75,null],[11,"add","","",75,null],[11,"index","","",75,null],[11,"index","","",75,null],[11,"index","","",75,null],[11,"index","","",75,null],[11,"index","","",75,null],[11,"index","","",75,null],[11,"index_mut","","",75,null],[11,"index_mut","","",75,null],[11,"index_mut","","",75,null],[11,"index_mut","","",75,null],[11,"index_mut","","",75,null],[11,"index_mut","","",75,null],[11,"deref","","",75,null],[11,"deref_mut","","",75,null],[11,"from_str","","",75,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",9,null],[11,"fmt","","",9,null],[11,"fmt","","",9,null],[11,"eq","","",9,null],[11,"as_ref","","",75,null],[11,"as_ref","","",75,null],[11,"from","","",75,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[11,"from","collections::borrow","",74,{"inputs":[{"name":"str"}],"output":{"name":"cow"}}],[11,"from","","",74,{"inputs":[{"name":"string"}],"output":{"name":"cow"}}],[11,"into","collections::string","",75,null],[11,"write_str","","",75,null],[11,"write_char","","",75,null],[11,"drop","","",317,null],[11,"next","","",317,null],[11,"size_hint","","",317,null],[11,"next_back","","",317,null],[11,"new","collections::vec","Constructs a new, empty `Vec&lt;T&gt;`.",47,{"inputs":[],"output":{"name":"vec"}}],[11,"with_capacity","","Constructs a new, empty `Vec&lt;T&gt;` with the specified capacity.",47,{"inputs":[{"name":"usize"}],"output":{"name":"vec"}}],[11,"from_raw_parts","","Creates a `Vec&lt;T&gt;` directly from the raw components of another vector.",47,null],[11,"capacity","","Returns the number of elements the vector can hold without\nreallocating.",47,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the given `Vec&lt;T&gt;`. The collection may reserve more space to avoid\nfrequent reallocations.",47,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to\nbe inserted in the given `Vec&lt;T&gt;`. Does nothing if the capacity is already\nsufficient.",47,null],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",47,null],[11,"into_boxed_slice","","Converts the vector into Box&lt;[T]&gt;.",47,null],[11,"truncate","","Shorten a vector to be `len` elements long, dropping excess elements.",47,null],[11,"as_slice","","Extracts a slice containing the entire vector.",47,null],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",47,null],[11,"set_len","","Sets the length of a vector.",47,null],[11,"swap_remove","","Removes an element from anywhere in the vector and return it, replacing\nit with the last element.",47,null],[11,"insert","","Inserts an element at position `index` within the vector, shifting all\nelements after it to the right.",47,null],[11,"remove","","Removes and returns the element at position `index` within the vector,\nshifting all elements after it to the left.",47,null],[11,"retain","","Retains only the elements specified by the predicate.",47,null],[11,"push","","Appends an element to the back of a collection.",47,null],[11,"pop","","Removes the last element from a vector and returns it, or `None` if it\nis empty.",47,null],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",47,null],[11,"drain","","Create a draining iterator that removes the specified range in the vector\nand yields the removed items.",47,null],[11,"clear","","Clears the vector, removing all values.",47,null],[11,"len","","Returns the number of elements in the vector.",47,null],[11,"is_empty","","Returns `true` if the vector contains no elements.",47,null],[11,"split_off","","Splits the collection into two at the given index.",47,null],[11,"resize","","Resizes the `Vec` in-place so that `len()` is equal to `new_len`.",47,null],[11,"extend_from_slice","","Clones and appends all elements in a slice to the `Vec`.",47,null],[11,"dedup","","Removes consecutive repeated elements in the vector.",47,null],[11,"clone","","",47,null],[11,"clone_from","","",47,null],[11,"hash","","",47,null],[11,"index","","",47,null],[11,"index_mut","","",47,null],[11,"index","","",47,null],[11,"index","","",47,null],[11,"index","","",47,null],[11,"index","","",47,null],[11,"index","","",47,null],[11,"index","","",47,null],[11,"index_mut","","",47,null],[11,"index_mut","","",47,null],[11,"index_mut","","",47,null],[11,"index_mut","","",47,null],[11,"index_mut","","",47,null],[11,"index_mut","","",47,null],[11,"deref","","",47,null],[11,"deref_mut","","",47,null],[11,"from_iter","","",47,{"inputs":[{"name":"i"}],"output":{"name":"vec"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe vector (from start to end). The vector cannot be used after calling\nthis.",47,null],[11,"extend","","",47,null],[11,"extend","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","collections::borrow","",74,null],[11,"ne","","",74,null],[11,"eq","","",74,null],[11,"ne","","",74,null],[11,"eq","","",74,null],[11,"ne","","",74,null],[11,"eq","collections::vec","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"partial_cmp","","",47,null],[11,"cmp","","",47,null],[11,"drop","","",47,null],[11,"default","","",47,{"inputs":[],"output":{"name":"vec"}}],[11,"fmt","","",47,null],[11,"as_ref","","",47,null],[11,"as_mut","","",47,null],[11,"as_ref","","",47,null],[11,"as_mut","","",47,null],[11,"from","","",47,null],[11,"from","","",47,{"inputs":[{"name":"str"}],"output":{"name":"vec"}}],[11,"from","collections::borrow","",74,null],[11,"from","","",74,{"inputs":[{"name":"vec"}],"output":{"name":"cow"}}],[11,"from_iter","","",74,{"inputs":[{"name":"i"}],"output":{"name":"cow"}}],[11,"next","collections::vec","",318,null],[11,"size_hint","","",318,null],[11,"count","","",318,null],[11,"next_back","","",318,null],[11,"clone","","",318,null],[11,"drop","","",318,null],[11,"next","","",319,null],[11,"size_hint","","",319,null],[11,"next_back","","",319,null],[11,"drop","","",319,null],[11,"hash","core::marker","",320,null],[11,"eq","","",320,null],[11,"partial_cmp","","",320,null],[11,"cmp","","",320,null],[11,"clone","","",320,null],[11,"default","","",320,{"inputs":[],"output":{"name":"phantomdata"}}],[11,"default","core::hash::sip","",321,{"inputs":[],"output":{"name":"siphasher13"}}],[11,"clone","","",321,null],[11,"fmt","","",321,null],[11,"default","","",322,{"inputs":[],"output":{"name":"siphasher24"}}],[11,"clone","","",322,null],[11,"fmt","","",322,null],[11,"default","","",323,{"inputs":[],"output":{"name":"siphasher"}}],[11,"clone","","",323,null],[11,"fmt","","",323,null],[11,"new","","Creates a new `SipHasher` with the two initial keys set to 0.",323,{"inputs":[],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",323,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"new","","Creates a new `SipHasher13` with the two initial keys set to 0.",321,{"inputs":[],"output":{"name":"siphasher13"}}],[11,"new_with_keys","","Creates a `SipHasher13` that is keyed off the provided keys.",321,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher13"}}],[11,"new","","Creates a new `SipHasher24` with the two initial keys set to 0.",322,{"inputs":[],"output":{"name":"siphasher24"}}],[11,"new_with_keys","","Creates a `SipHasher24` that is keyed off the provided keys.",322,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher24"}}],[11,"write","","",323,null],[11,"finish","","",323,null],[11,"write","","",321,null],[11,"finish","","",321,null],[11,"write","","",322,null],[11,"finish","","",322,null],[11,"fmt","core::hash","",324,null],[11,"build_hasher","","",324,null],[11,"clone","","",324,null],[11,"default","","",324,{"inputs":[],"output":{"name":"buildhasherdefault"}}],[11,"new","libloading::os::unix","Find and load a shared library (module).",325,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"this","","Load the dynamic libraries linked into main program.",325,{"inputs":[],"output":{"name":"library"}}],[11,"get","","Get a symbol by name.",325,null],[11,"drop","","",325,null],[11,"fmt","","",325,null],[11,"deref","","",326,null],[11,"fmt","","",326,null],[11,"from","std::io::error","",71,{"inputs":[{"name":"nullerror"}],"output":{"name":"error"}}],[6,"Result","libloading","",null,null],[11,"new","","Find and load a shared library (module).",327,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"get","","Get a symbol by name.",327,null],[11,"fmt","","",327,null],[11,"deref","","",328,null],[11,"fmt","","",328,null]],"paths":[[3,"Mutex"],[3,"Box"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"ParseIntError"],[3,"TryFromIntError"],[3,"ParseFloatError"],[3,"FromUtf8Error"],[3,"FromUtf16Error"],[4,"ParseError"],[3,"DecodeUtf16Error"],[3,"Error"],[8,"Error"],[3,"EscapeDefault"],[4,"LocalKeyState"],[3,"LocalKey"],[3,"Key"],[3,"Key"],[3,"Builder"],[3,"Thread"],[3,"JoinHandle"],[3,"HashMap"],[3,"Iter"],[3,"Keys"],[3,"Values"],[3,"IterMut"],[3,"IntoIter"],[3,"ValuesMut"],[3,"Drain"],[4,"Entry"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"RandomState"],[3,"DefaultHasher"],[3,"HashSet"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"],[3,"PeekMut"],[3,"BinaryHeap"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Vec"],[3,"VecDeque"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"Iter"],[3,"IntoIter"],[3,"LinkedList"],[3,"IterMut"],[3,"FrontPlace"],[3,"BackPlace"],[3,"Vars"],[3,"VarsOs"],[4,"VarError"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"ArgsOs"],[3,"CString"],[3,"CStr"],[3,"NulError"],[3,"FromBytesWithNulError"],[3,"IntoStringError"],[3,"Error"],[3,"OsString"],[3,"OsStr"],[4,"Cow"],[3,"String"],[3,"Metadata"],[3,"OpenOptions"],[3,"Permissions"],[3,"FileType"],[3,"File"],[3,"ReadDir"],[3,"DirEntry"],[3,"DirBuilder"],[3,"BufReader"],[3,"IntoInnerError"],[3,"BufWriter"],[3,"LineWriter"],[3,"Cursor"],[4,"ErrorKind"],[3,"Empty"],[3,"Repeat"],[3,"Sink"],[3,"Stdin"],[3,"StdinLock"],[3,"Stdout"],[3,"StdoutLock"],[3,"Stderr"],[3,"StderrLock"],[4,"SeekFrom"],[3,"Chain"],[3,"Take"],[3,"Bytes"],[4,"CharsError"],[3,"Chars"],[3,"Split"],[3,"Lines"],[4,"IpAddr"],[4,"Ipv6MulticastScope"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[4,"SocketAddr"],[3,"SocketAddrV4"],[3,"SocketAddrV6"],[3,"TcpStream"],[3,"TcpListener"],[3,"Incoming"],[3,"UdpSocket"],[3,"AddrParseError"],[4,"Shutdown"],[3,"LookupHost"],[3,"stat"],[3,"Command"],[3,"ExitStatus"],[3,"Stdio"],[3,"ChildStdin"],[3,"ChildStdout"],[3,"ChildStderr"],[3,"SocketAddr"],[3,"UnixStream"],[3,"UnixListener"],[3,"Incoming"],[3,"UnixDatagram"],[3,"AssertUnwindSafe"],[4,"Prefix"],[3,"PrefixComponent"],[4,"Component"],[3,"Components"],[3,"Iter"],[3,"PathBuf"],[3,"Path"],[3,"StripPrefixError"],[3,"Display"],[3,"Output"],[3,"Child"],[3,"Select"],[3,"Handle"],[3,"SendError"],[3,"RecvError"],[4,"TryRecvError"],[4,"RecvTimeoutError"],[4,"TrySendError"],[3,"Sender"],[3,"SyncSender"],[3,"Receiver"],[3,"Iter"],[3,"IntoIter"],[3,"Barrier"],[3,"BarrierWaitResult"],[3,"WaitTimeoutResult"],[3,"Condvar"],[3,"StaticCondvar"],[3,"StaticMutex"],[3,"MutexGuard"],[3,"Once"],[3,"OnceState"],[3,"RwLock"],[3,"StaticRwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"AtomicBool"],[3,"AtomicPtr"],[4,"Ordering"],[3,"AtomicI8"],[3,"AtomicU8"],[3,"AtomicI16"],[3,"AtomicU16"],[3,"AtomicI32"],[3,"AtomicU32"],[3,"AtomicI64"],[3,"AtomicU64"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"Duration"],[3,"Instant"],[3,"SystemTime"],[3,"SystemTimeError"],[3,"PoisonError"],[4,"TryLockError"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"fd_set"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"passwd"],[3,"statvfs"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"fsid_t"],[3,"mq_attr"],[3,"cpu_set_t"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"termios"],[3,"flock"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"sigset_t"],[3,"sysinfo"],[3,"stat"],[3,"stat64"],[3,"pthread_attr_t"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"PanicInfo"],[3,"Location"],[3,"ToLowercase"],[3,"ToUppercase"],[3,"DecodeUtf16"],[3,"Unique"],[3,"Shared"],[4,"Option"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Rc"],[3,"Weak"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"Ref"],[3,"RefMut"],[3,"UnsafeCell"],[4,"Ordering"],[3,"ExchangeHeapSingleton"],[3,"IntermediateBox"],[3,"EncodeUtf16"],[4,"SearchStep"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"RangeInclusive"],[3,"RangeToInclusive"],[3,"StepBy"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[8,"Any"],[3,"TypeId"],[3,"TraitObject"],[3,"Drain"],[3,"IntoIter"],[3,"Drain"],[3,"PhantomData"],[3,"SipHasher13"],[3,"SipHasher24"],[3,"SipHasher"],[3,"BuildHasherDefault"],[3,"Library"],[3,"Symbol"],[3,"Library"],[3,"Symbol"]]};
searchIndex["num_traits"] = {"doc":"Numeric traits for generic mathematics","items":[[3,"ParseFloatError","num_traits","",null,null],[12,"kind","","",0,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",1,null],[13,"Invalid","","",1,null],[0,"identities","","",null,null],[8,"Zero","num_traits::identities","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",2,{"inputs":[],"output":{"name":"self"}}],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",2,null],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",3,{"inputs":[],"output":{"name":"self"}}],[0,"sign","num_traits","",null,null],[8,"Signed","num_traits::sign","Useful functions for signed numbers (i.e. numbers that can be negative).",null,null],[10,"abs","","Computes the absolute value.",4,null],[10,"abs_sub","","The positive difference of two numbers.",4,null],[10,"signum","","Returns the sign of the number.",4,null],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",4,null],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",4,null],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[0,"ops","num_traits","",null,null],[0,"saturating","num_traits::ops","",null,null],[8,"Saturating","num_traits::ops::saturating","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator.\nReturns a+b, saturating at the numeric bounds instead of overflowing.",5,null],[10,"saturating_sub","","Saturating subtraction operator.\nReturns a-b, saturating at the numeric bounds instead of overflowing.",5,null],[0,"checked","num_traits::ops","",null,null],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns `None` instead of wrapping around on\noverflow.",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is\nreturned.",6,null],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens,\n`None` is returned.",7,null],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or\noverflow.",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow\nor overflow happens, `None` is returned.",8,null],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of\nwrapping around on underflow and overflow.",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by\nzero. If any of that happens, `None` is returned.",9,null],[0,"bounds","num_traits","",null,null],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",10,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","returns the largest finite number this type can represent",10,{"inputs":[],"output":{"name":"self"}}],[0,"float","num_traits","",null,null],[8,"Float","num_traits::float","",null,null],[10,"nan","","Returns the `NaN` value.",11,{"inputs":[],"output":{"name":"self"}}],[10,"infinity","","Returns the infinite value.",11,{"inputs":[],"output":{"name":"self"}}],[10,"neg_infinity","","Returns the negative infinite value.",11,{"inputs":[],"output":{"name":"self"}}],[10,"neg_zero","","Returns `-0.0`.",11,{"inputs":[],"output":{"name":"self"}}],[10,"min_value","","Returns the smallest finite value that this type can represent.",11,{"inputs":[],"output":{"name":"self"}}],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",11,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","Returns the largest finite value that this type can represent.",11,{"inputs":[],"output":{"name":"self"}}],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",11,null],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and\nfalse otherwise.",11,null],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",11,null],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,\n[subnormal][subnormal], or `NaN`.",11,null],[10,"classify","","Returns the floating point category of the number. If only one property\nis going to be tested, it is generally faster to use the specific\npredicate instead.",11,null],[10,"floor","","Returns the largest integer less than or equal to a number.",11,null],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",11,null],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from\n`0.0`.",11,null],[10,"trunc","","Return the integer part of a number.",11,null],[10,"fract","","Returns the fractional part of a number.",11,null],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the\nnumber is `Float::nan()`.",11,null],[10,"signum","","Returns a number that represents the sign of `self`.",11,null],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and\n`Float::infinity()`.",11,null],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and\n`Float::neg_infinity()`.",11,null],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding\nerror. This produces a more accurate result with better performance than\na separate multiplication operation followed by an add.",11,null],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",11,null],[10,"powi","","Raise a number to an integer power.",11,null],[10,"powf","","Raise a number to a floating point power.",11,null],[10,"sqrt","","Take the square root of a number.",11,null],[10,"exp","","Returns `e^(self)`, (the exponential function).",11,null],[10,"exp2","","Returns `2^(self)`.",11,null],[10,"ln","","Returns the natural logarithm of the number.",11,null],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",11,null],[10,"log2","","Returns the base 2 logarithm of the number.",11,null],[10,"log10","","Returns the base 10 logarithm of the number.",11,null],[10,"max","","Returns the maximum of the two numbers.",11,null],[10,"min","","Returns the minimum of the two numbers.",11,null],[10,"abs_sub","","The positive difference of two numbers.",11,null],[10,"cbrt","","Take the cubic root of a number.",11,null],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given\nlegs of length `x` and `y`.",11,null],[10,"sin","","Computes the sine of a number (in radians).",11,null],[10,"cos","","Computes the cosine of a number (in radians).",11,null],[10,"tan","","Computes the tangent of a number (in radians).",11,null],[10,"asin","","Computes the arcsine of a number. Return value is in radians in\nthe range [-pi/2, pi/2] or NaN if the number is outside the range\n[-1, 1].",11,null],[10,"acos","","Computes the arccosine of a number. Return value is in radians in\nthe range [0, pi] or NaN if the number is outside the range\n[-1, 1].",11,null],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the\nrange [-pi/2, pi/2];",11,null],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",11,null],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns\n`(sin(x), cos(x))`.",11,null],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the\nnumber is close to zero.",11,null],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if\nthe operations were performed separately.",11,null],[10,"sinh","","Hyperbolic sine function.",11,null],[10,"cosh","","Hyperbolic cosine function.",11,null],[10,"tanh","","Hyperbolic tangent function.",11,null],[10,"asinh","","Inverse hyperbolic sine function.",11,null],[10,"acosh","","Inverse hyperbolic cosine function.",11,null],[10,"atanh","","Inverse hyperbolic tangent function.",11,null],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively.\nThe original number can be recovered by `sign * mantissa * 2 ^ exponent`.\nThe floating point encoding is documented in the [Reference][floating-point].",11,null],[0,"cast","num_traits","",null,null],[5,"cast","num_traits::cast","Cast from one machine scalar to another.",null,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",12,null],[11,"to_i8","","Converts the value of `self` to an `i8`.",12,null],[11,"to_i16","","Converts the value of `self` to an `i16`.",12,null],[11,"to_i32","","Converts the value of `self` to an `i32`.",12,null],[10,"to_i64","","Converts the value of `self` to an `i64`.",12,null],[11,"to_usize","","Converts the value of `self` to a `usize`.",12,null],[11,"to_u8","","Converts the value of `self` to an `u8`.",12,null],[11,"to_u16","","Converts the value of `self` to an `u16`.",12,null],[11,"to_u32","","Converts the value of `self` to an `u32`.",12,null],[10,"to_u64","","Converts the value of `self` to an `u64`.",12,null],[11,"to_f32","","Converts the value of `self` to an `f32`.",12,null],[11,"to_f64","","Converts the value of `self` to an `f64`.",12,null],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the\nvalue cannot be represented by this value, the `None` is returned.",13,{"inputs":[{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",13,{"inputs":[{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",13,{"inputs":[{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",13,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",13,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",13,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",13,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",13,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",13,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",13,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",13,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",13,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into\na primitive via the `ToPrimitive` trait.",14,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[0,"int","num_traits","",null,null],[8,"PrimInt","num_traits::int","",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",15,null],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",15,null],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation\nof `self`.",15,null],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation\nof `self`.",15,null],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping\nthe truncated bits to the end of the resulting integer.",15,null],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping\nthe truncated bits to the beginning of the resulting integer.",15,null],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling\nzeros in the least significant bits.",15,null],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying\nthe &quot;sign bit&quot; in the most significant bits even for unsigned types.",15,null],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling\nzeros in the least significant bits.",15,null],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling\nzeros in the most significant bits.",15,null],[10,"swap_bytes","","Reverses the byte order of the integer.",15,null],[10,"from_be","","Convert an integer from big endian to the target&#39;s endianness.",15,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"from_le","","Convert an integer from little endian to the target&#39;s endianness.",15,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_be","","Convert `self` to big endian from the target&#39;s endianness.",15,null],[10,"to_le","","Convert `self` to little endian from the target&#39;s endianness.",15,null],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",15,null],[8,"Num","num_traits","The base trait for numeric types",null,null],[16,"FromStrRadixErr","","",16,null],[10,"from_str_radix","","Convert from a string and radix &lt;= 36.",16,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"fmt","","",1,null],[11,"fmt","","",0,null]],"paths":[[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Saturating"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"Bounded"],[8,"Float"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"PrimInt"],[8,"Num"]]};
searchIndex["libc"] = {"doc":"Crate docs","items":[[3,"utimbuf","libc","",null,null],[12,"actime","","",0,null],[12,"modtime","","",0,null],[3,"timeval","","",null,null],[12,"tv_sec","","",1,null],[12,"tv_usec","","",1,null],[3,"timespec","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_nsec","","",2,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",3,null],[12,"rlim_max","","",3,null],[3,"rusage","","",null,null],[12,"ru_utime","","",4,null],[12,"ru_stime","","",4,null],[12,"ru_maxrss","","",4,null],[12,"ru_ixrss","","",4,null],[12,"ru_idrss","","",4,null],[12,"ru_isrss","","",4,null],[12,"ru_minflt","","",4,null],[12,"ru_majflt","","",4,null],[12,"ru_nswap","","",4,null],[12,"ru_inblock","","",4,null],[12,"ru_oublock","","",4,null],[12,"ru_msgsnd","","",4,null],[12,"ru_msgrcv","","",4,null],[12,"ru_nsignals","","",4,null],[12,"ru_nvcsw","","",4,null],[12,"ru_nivcsw","","",4,null],[3,"in_addr","","",null,null],[12,"s_addr","","",5,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",6,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",7,null],[12,"imr_interface","","",7,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",8,null],[12,"ipv6mr_interface","","",8,null],[3,"hostent","","",null,null],[12,"h_name","","",9,null],[12,"h_aliases","","",9,null],[12,"h_addrtype","","",9,null],[12,"h_length","","",9,null],[12,"h_addr_list","","",9,null],[3,"iovec","","",null,null],[12,"iov_base","","",10,null],[12,"iov_len","","",10,null],[3,"pollfd","","",null,null],[12,"fd","","",11,null],[12,"events","","",11,null],[12,"revents","","",11,null],[3,"winsize","","",null,null],[12,"ws_row","","",12,null],[12,"ws_col","","",12,null],[12,"ws_xpixel","","",12,null],[12,"ws_ypixel","","",12,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",13,null],[12,"sa_data","","",13,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",14,null],[12,"sin_port","","",14,null],[12,"sin_addr","","",14,null],[12,"sin_zero","","",14,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",15,null],[12,"sin6_port","","",15,null],[12,"sin6_flowinfo","","",15,null],[12,"sin6_addr","","",15,null],[12,"sin6_scope_id","","",15,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",16,null],[12,"sun_path","","",16,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",17,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",18,null],[12,"ai_family","","",18,null],[12,"ai_socktype","","",18,null],[12,"ai_protocol","","",18,null],[12,"ai_addrlen","","",18,null],[12,"ai_addr","","",18,null],[12,"ai_canonname","","",18,null],[12,"ai_next","","",18,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",19,null],[12,"nl_pid","","",19,null],[12,"nl_groups","","",19,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",20,null],[12,"sll_protocol","","",20,null],[12,"sll_ifindex","","",20,null],[12,"sll_hatype","","",20,null],[12,"sll_pkttype","","",20,null],[12,"sll_halen","","",20,null],[12,"sll_addr","","",20,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",21,null],[12,"tm_min","","",21,null],[12,"tm_hour","","",21,null],[12,"tm_mday","","",21,null],[12,"tm_mon","","",21,null],[12,"tm_year","","",21,null],[12,"tm_wday","","",21,null],[12,"tm_yday","","",21,null],[12,"tm_isdst","","",21,null],[12,"tm_gmtoff","","",21,null],[12,"tm_zone","","",21,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",22,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",23,null],[12,"dli_fbase","","",23,null],[12,"dli_sname","","",23,null],[12,"dli_saddr","","",23,null],[3,"epoll_event","","",null,null],[12,"events","","",24,null],[12,"u64","","",24,null],[3,"utsname","","",null,null],[12,"sysname","","",25,null],[12,"nodename","","",25,null],[12,"release","","",25,null],[12,"version","","",25,null],[12,"machine","","",25,null],[12,"domainname","","",25,null],[3,"lconv","","",null,null],[12,"decimal_point","","",26,null],[12,"thousands_sep","","",26,null],[12,"grouping","","",26,null],[12,"int_curr_symbol","","",26,null],[12,"currency_symbol","","",26,null],[12,"mon_decimal_point","","",26,null],[12,"mon_thousands_sep","","",26,null],[12,"mon_grouping","","",26,null],[12,"positive_sign","","",26,null],[12,"negative_sign","","",26,null],[12,"int_frac_digits","","",26,null],[12,"frac_digits","","",26,null],[12,"p_cs_precedes","","",26,null],[12,"p_sep_by_space","","",26,null],[12,"n_cs_precedes","","",26,null],[12,"n_sep_by_space","","",26,null],[12,"p_sign_posn","","",26,null],[12,"n_sign_posn","","",26,null],[12,"int_p_cs_precedes","","",26,null],[12,"int_p_sep_by_space","","",26,null],[12,"int_n_cs_precedes","","",26,null],[12,"int_n_sep_by_space","","",26,null],[12,"int_p_sign_posn","","",26,null],[12,"int_n_sign_posn","","",26,null],[3,"dirent","","",null,null],[12,"d_ino","","",27,null],[12,"d_off","","",27,null],[12,"d_reclen","","",27,null],[12,"d_type","","",27,null],[12,"d_name","","",27,null],[3,"dirent64","","",null,null],[12,"d_ino","","",28,null],[12,"d_off","","",28,null],[12,"d_reclen","","",28,null],[12,"d_type","","",28,null],[12,"d_name","","",28,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",29,null],[12,"rlim_max","","",29,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",30,null],[12,"gl_pathv","","",30,null],[12,"gl_offs","","",30,null],[12,"gl_flags","","",30,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",31,null],[12,"ifa_name","","",31,null],[12,"ifa_flags","","",31,null],[12,"ifa_addr","","",31,null],[12,"ifa_netmask","","",31,null],[12,"ifa_ifu","","",31,null],[12,"ifa_data","","",31,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"passwd","","",null,null],[12,"pw_name","","",32,null],[12,"pw_passwd","","",32,null],[12,"pw_uid","","",32,null],[12,"pw_gid","","",32,null],[12,"pw_gecos","","",32,null],[12,"pw_dir","","",32,null],[12,"pw_shell","","",32,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",33,null],[12,"f_frsize","","",33,null],[12,"f_blocks","","",33,null],[12,"f_bfree","","",33,null],[12,"f_bavail","","",33,null],[12,"f_files","","",33,null],[12,"f_ffree","","",33,null],[12,"f_favail","","",33,null],[12,"f_fsid","","",33,null],[12,"f_flag","","",33,null],[12,"f_namemax","","",33,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",34,null],[12,"dqb_bsoftlimit","","",34,null],[12,"dqb_curspace","","",34,null],[12,"dqb_ihardlimit","","",34,null],[12,"dqb_isoftlimit","","",34,null],[12,"dqb_curinodes","","",34,null],[12,"dqb_btime","","",34,null],[12,"dqb_itime","","",34,null],[12,"dqb_valid","","",34,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",35,null],[12,"ssi_errno","","",35,null],[12,"ssi_code","","",35,null],[12,"ssi_pid","","",35,null],[12,"ssi_uid","","",35,null],[12,"ssi_fd","","",35,null],[12,"ssi_tid","","",35,null],[12,"ssi_band","","",35,null],[12,"ssi_overrun","","",35,null],[12,"ssi_trapno","","",35,null],[12,"ssi_status","","",35,null],[12,"ssi_int","","",35,null],[12,"ssi_ptr","","",35,null],[12,"ssi_utime","","",35,null],[12,"ssi_stime","","",35,null],[12,"ssi_addr","","",35,null],[3,"fsid_t","","",null,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",36,null],[12,"mq_maxmsg","","",36,null],[12,"mq_msgsize","","",36,null],[12,"mq_curmsgs","","",36,null],[3,"cpu_set_t","","",null,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",37,null],[12,"sa_mask","","",37,null],[12,"sa_flags","","",37,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",38,null],[12,"ss_flags","","",38,null],[12,"ss_size","","",38,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",39,null],[12,"si_errno","","",39,null],[12,"si_code","","",39,null],[12,"_pad","","",39,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",40,null],[12,"gl_pathv","","",40,null],[12,"gl_offs","","",40,null],[12,"gl_flags","","",40,null],[3,"ucred","","",null,null],[12,"pid","","",41,null],[12,"uid","","",41,null],[12,"gid","","",41,null],[3,"statfs","","",null,null],[12,"f_type","","",42,null],[12,"f_bsize","","",42,null],[12,"f_blocks","","",42,null],[12,"f_bfree","","",42,null],[12,"f_bavail","","",42,null],[12,"f_files","","",42,null],[12,"f_ffree","","",42,null],[12,"f_fsid","","",42,null],[12,"f_namelen","","",42,null],[12,"f_frsize","","",42,null],[3,"msghdr","","",null,null],[12,"msg_name","","",43,null],[12,"msg_namelen","","",43,null],[12,"msg_iov","","",43,null],[12,"msg_iovlen","","",43,null],[12,"msg_control","","",43,null],[12,"msg_controllen","","",43,null],[12,"msg_flags","","",43,null],[3,"termios","","",null,null],[12,"c_iflag","","",44,null],[12,"c_oflag","","",44,null],[12,"c_cflag","","",44,null],[12,"c_lflag","","",44,null],[12,"c_line","","",44,null],[12,"c_cc","","",44,null],[12,"c_ispeed","","",44,null],[12,"c_ospeed","","",44,null],[3,"flock","","",null,null],[12,"l_type","","",45,null],[12,"l_whence","","",45,null],[12,"l_start","","",45,null],[12,"l_len","","",45,null],[12,"l_pid","","",45,null],[3,"ipc_perm","","",null,null],[12,"__key","","",46,null],[12,"uid","","",46,null],[12,"gid","","",46,null],[12,"cuid","","",46,null],[12,"cgid","","",46,null],[12,"mode","","",46,null],[12,"__seq","","",46,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",47,null],[12,"shm_segsz","","",47,null],[12,"shm_atime","","",47,null],[12,"shm_dtime","","",47,null],[12,"shm_ctime","","",47,null],[12,"shm_cpid","","",47,null],[12,"shm_lpid","","",47,null],[12,"shm_nattch","","",47,null],[3,"sigset_t","","",null,null],[3,"stat","","",null,null],[12,"st_dev","","",48,null],[12,"st_ino","","",48,null],[12,"st_nlink","","",48,null],[12,"st_mode","","",48,null],[12,"st_uid","","",48,null],[12,"st_gid","","",48,null],[12,"st_rdev","","",48,null],[12,"st_size","","",48,null],[12,"st_blksize","","",48,null],[12,"st_blocks","","",48,null],[12,"st_atime","","",48,null],[12,"st_atime_nsec","","",48,null],[12,"st_mtime","","",48,null],[12,"st_mtime_nsec","","",48,null],[12,"st_ctime","","",48,null],[12,"st_ctime_nsec","","",48,null],[3,"stat64","","",null,null],[12,"st_dev","","",49,null],[12,"st_ino","","",49,null],[12,"st_nlink","","",49,null],[12,"st_mode","","",49,null],[12,"st_uid","","",49,null],[12,"st_gid","","",49,null],[12,"st_rdev","","",49,null],[12,"st_size","","",49,null],[12,"st_blksize","","",49,null],[12,"st_blocks","","",49,null],[12,"st_atime","","",49,null],[12,"st_atime_nsec","","",49,null],[12,"st_mtime","","",49,null],[12,"st_mtime_nsec","","",49,null],[12,"st_ctime","","",49,null],[12,"st_ctime_nsec","","",49,null],[3,"pthread_attr_t","","",null,null],[3,"mcontext_t","","",null,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",50,null],[12,"uc_link","","",50,null],[12,"uc_stack","","",50,null],[12,"uc_mcontext","","",50,null],[12,"uc_sigmask","","",50,null],[4,"c_void","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"DIR","","",null,null],[4,"locale_t","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"FD_CLR","","",null,null],[5,"FD_ISSET","","",null,null],[5,"FD_SET","","",null,null],[5,"FD_ZERO","","",null,null],[5,"WIFEXITED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WEXITSTATUS","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WTERMSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"CPU_ZERO","","",null,null],[5,"CPU_SET","","",null,null],[5,"CPU_ISSET","","",null,{"inputs":[{"name":"usize"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"CPU_EQUAL","","",null,{"inputs":[{"name":"cpu_set_t"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memcmp","","",null,null],[5,"memchr","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"bind","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"popen","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"chown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[5,"getdtablesize","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"gettimeofday","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_create","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"pthread_kill","","",null,null],[5,"strerror_r","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"sigaltstack","","",null,null],[5,"sigwait","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"mknod","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"uname","","",null,null],[5,"daemon","","",null,null],[5,"gethostname","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"getsid","","",null,null],[5,"madvise","","",null,null],[5,"readlink","","",null,null],[5,"msync","","",null,null],[5,"sysconf","","",null,null],[5,"recvfrom","","",null,null],[5,"mkfifo","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"timegm","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkstemps","","",null,null],[5,"mkdtemp","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"getpwuid_r","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"prctl","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_ctl","","",null,null],[5,"epoll_wait","","",null,null],[5,"pipe2","","",null,null],[5,"mount","","",null,null],[5,"umount","","",null,null],[5,"umount2","","",null,null],[5,"clone","","",null,null],[5,"statfs","","",null,null],[5,"fstatfs","","",null,null],[5,"memrchr","","",null,null],[5,"syscall","","",null,null],[5,"sendfile","","",null,null],[5,"splice","","",null,null],[5,"tee","","",null,null],[5,"vmsplice","","",null,null],[5,"posix_fadvise","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"creat64","","",null,null],[5,"fstat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"getrlimit64","","",null,null],[5,"lseek64","","",null,null],[5,"lstat64","","",null,null],[5,"mmap64","","",null,null],[5,"open64","","",null,null],[5,"pread64","","",null,null],[5,"pwrite64","","",null,null],[5,"readdir64_r","","",null,null],[5,"setrlimit64","","",null,null],[5,"stat64","","",null,null],[5,"eventfd","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"posix_fallocate","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"unshare","","",null,null],[5,"sethostname","","",null,null],[5,"setns","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"nl_langinfo_l","","",null,null],[5,"getnameinfo","","",null,null],[5,"prlimit","","",null,null],[5,"prlimit64","","",null,null],[5,"sysctl","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[11,"is_some","core::option","Returns `true` if the option is a `Some` value",51,null],[11,"is_none","","Returns `true` if the option is a `None` value",51,null],[11,"as_ref","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`",51,null],[11,"as_mut","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;mut T&gt;`",51,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",51,null],[11,"unwrap","","Moves the value `v` out of the `Option&lt;T&gt;` if it is `Some(v)`.",51,null],[11,"unwrap_or","","Returns the contained value or a default.",51,null],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",51,null],[11,"map","","Maps an `Option&lt;T&gt;` to `Option&lt;U&gt;` by applying a function to a contained value",51,null],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",51,null],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",51,null],[11,"ok_or","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",51,null],[11,"ok_or_else","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",51,null],[11,"iter","","Returns an iterator over the possibly contained value.",51,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",51,null],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",51,null],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",51,null],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",51,null],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",51,null],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",51,null],[11,"cloned","","Maps an `Option&lt;&amp;T&gt;` to an `Option&lt;T&gt;` by cloning the contents of the\noption.",51,null],[11,"unwrap_or_default","","Returns the contained value or a default",51,null],[11,"hash","core::num","",52,null],[11,"default","","",52,{"inputs":[],"output":{"name":"wrapping"}}],[11,"clone","","",52,null],[11,"cmp","","",52,null],[11,"partial_cmp","","",52,null],[11,"lt","","",52,null],[11,"le","","",52,null],[11,"gt","","",52,null],[11,"ge","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"fmt","","",52,null],[11,"fmt","","",52,null],[11,"fmt","","",52,null],[11,"fmt","","",52,null],[11,"fmt","","",52,null],[11,"fmt","","",52,null],[11,"shl","","",52,null],[11,"shl_assign","","",52,null],[11,"shr","","",52,null],[11,"shr_assign","","",52,null],[11,"shl","","",52,null],[11,"shl_assign","","",52,null],[11,"shr","","",52,null],[11,"shr_assign","","",52,null],[11,"shl","","",52,null],[11,"shl_assign","","",52,null],[11,"shr","","",52,null],[11,"shr_assign","","",52,null],[11,"shl","","",52,null],[11,"shl_assign","","",52,null],[11,"shr","","",52,null],[11,"shr_assign","","",52,null],[11,"shl","","",52,null],[11,"shl_assign","","",52,null],[11,"shr","","",52,null],[11,"shr_assign","","",52,null],[11,"shl","","",52,null],[11,"shl_assign","","",52,null],[11,"shr","","",52,null],[11,"shr_assign","","",52,null],[11,"shl","","",52,null],[11,"shl_assign","","",52,null],[11,"shr","","",52,null],[11,"shr_assign","","",52,null],[11,"shl","","",52,null],[11,"shl_assign","","",52,null],[11,"shr","","",52,null],[11,"shr_assign","","",52,null],[11,"shl","","",52,null],[11,"shl_assign","","",52,null],[11,"shr","","",52,null],[11,"shr_assign","","",52,null],[11,"shl","","",52,null],[11,"shl_assign","","",52,null],[11,"shr","","",52,null],[11,"shr_assign","","",52,null],[11,"add","","",52,null],[11,"add_assign","","",52,null],[11,"sub","","",52,null],[11,"sub_assign","","",52,null],[11,"mul","","",52,null],[11,"mul_assign","","",52,null],[11,"div","","",52,null],[11,"div_assign","","",52,null],[11,"rem","","",52,null],[11,"rem_assign","","",52,null],[11,"not","","",52,null],[11,"bitxor","","",52,null],[11,"bitxor_assign","","",52,null],[11,"bitor","","",52,null],[11,"bitor_assign","","",52,null],[11,"bitand","","",52,null],[11,"bitand_assign","","",52,null],[11,"neg","","",52,null],[11,"add","","",52,null],[11,"add_assign","","",52,null],[11,"sub","","",52,null],[11,"sub_assign","","",52,null],[11,"mul","","",52,null],[11,"mul_assign","","",52,null],[11,"div","","",52,null],[11,"div_assign","","",52,null],[11,"rem","","",52,null],[11,"rem_assign","","",52,null],[11,"not","","",52,null],[11,"bitxor","","",52,null],[11,"bitxor_assign","","",52,null],[11,"bitor","","",52,null],[11,"bitor_assign","","",52,null],[11,"bitand","","",52,null],[11,"bitand_assign","","",52,null],[11,"neg","","",52,null],[11,"add","","",52,null],[11,"add_assign","","",52,null],[11,"sub","","",52,null],[11,"sub_assign","","",52,null],[11,"mul","","",52,null],[11,"mul_assign","","",52,null],[11,"div","","",52,null],[11,"div_assign","","",52,null],[11,"rem","","",52,null],[11,"rem_assign","","",52,null],[11,"not","","",52,null],[11,"bitxor","","",52,null],[11,"bitxor_assign","","",52,null],[11,"bitor","","",52,null],[11,"bitor_assign","","",52,null],[11,"bitand","","",52,null],[11,"bitand_assign","","",52,null],[11,"neg","","",52,null],[11,"add","","",52,null],[11,"add_assign","","",52,null],[11,"sub","","",52,null],[11,"sub_assign","","",52,null],[11,"mul","","",52,null],[11,"mul_assign","","",52,null],[11,"div","","",52,null],[11,"div_assign","","",52,null],[11,"rem","","",52,null],[11,"rem_assign","","",52,null],[11,"not","","",52,null],[11,"bitxor","","",52,null],[11,"bitxor_assign","","",52,null],[11,"bitor","","",52,null],[11,"bitor_assign","","",52,null],[11,"bitand","","",52,null],[11,"bitand_assign","","",52,null],[11,"neg","","",52,null],[11,"add","","",52,null],[11,"add_assign","","",52,null],[11,"sub","","",52,null],[11,"sub_assign","","",52,null],[11,"mul","","",52,null],[11,"mul_assign","","",52,null],[11,"div","","",52,null],[11,"div_assign","","",52,null],[11,"rem","","",52,null],[11,"rem_assign","","",52,null],[11,"not","","",52,null],[11,"bitxor","","",52,null],[11,"bitxor_assign","","",52,null],[11,"bitor","","",52,null],[11,"bitor_assign","","",52,null],[11,"bitand","","",52,null],[11,"bitand_assign","","",52,null],[11,"neg","","",52,null],[11,"add","","",52,null],[11,"add_assign","","",52,null],[11,"sub","","",52,null],[11,"sub_assign","","",52,null],[11,"mul","","",52,null],[11,"mul_assign","","",52,null],[11,"div","","",52,null],[11,"div_assign","","",52,null],[11,"rem","","",52,null],[11,"rem_assign","","",52,null],[11,"not","","",52,null],[11,"bitxor","","",52,null],[11,"bitxor_assign","","",52,null],[11,"bitor","","",52,null],[11,"bitor_assign","","",52,null],[11,"bitand","","",52,null],[11,"bitand_assign","","",52,null],[11,"neg","","",52,null],[11,"add","","",52,null],[11,"add_assign","","",52,null],[11,"sub","","",52,null],[11,"sub_assign","","",52,null],[11,"mul","","",52,null],[11,"mul_assign","","",52,null],[11,"div","","",52,null],[11,"div_assign","","",52,null],[11,"rem","","",52,null],[11,"rem_assign","","",52,null],[11,"not","","",52,null],[11,"bitxor","","",52,null],[11,"bitxor_assign","","",52,null],[11,"bitor","","",52,null],[11,"bitor_assign","","",52,null],[11,"bitand","","",52,null],[11,"bitand_assign","","",52,null],[11,"neg","","",52,null],[11,"add","","",52,null],[11,"add_assign","","",52,null],[11,"sub","","",52,null],[11,"sub_assign","","",52,null],[11,"mul","","",52,null],[11,"mul_assign","","",52,null],[11,"div","","",52,null],[11,"div_assign","","",52,null],[11,"rem","","",52,null],[11,"rem_assign","","",52,null],[11,"not","","",52,null],[11,"bitxor","","",52,null],[11,"bitxor_assign","","",52,null],[11,"bitor","","",52,null],[11,"bitor_assign","","",52,null],[11,"bitand","","",52,null],[11,"bitand_assign","","",52,null],[11,"neg","","",52,null],[11,"add","","",52,null],[11,"add_assign","","",52,null],[11,"sub","","",52,null],[11,"sub_assign","","",52,null],[11,"mul","","",52,null],[11,"mul_assign","","",52,null],[11,"div","","",52,null],[11,"div_assign","","",52,null],[11,"rem","","",52,null],[11,"rem_assign","","",52,null],[11,"not","","",52,null],[11,"bitxor","","",52,null],[11,"bitxor_assign","","",52,null],[11,"bitor","","",52,null],[11,"bitor_assign","","",52,null],[11,"bitand","","",52,null],[11,"bitand_assign","","",52,null],[11,"neg","","",52,null],[11,"add","","",52,null],[11,"add_assign","","",52,null],[11,"sub","","",52,null],[11,"sub_assign","","",52,null],[11,"mul","","",52,null],[11,"mul_assign","","",52,null],[11,"div","","",52,null],[11,"div_assign","","",52,null],[11,"rem","","",52,null],[11,"rem_assign","","",52,null],[11,"not","","",52,null],[11,"bitxor","","",52,null],[11,"bitxor_assign","","",52,null],[11,"bitor","","",52,null],[11,"bitor_assign","","",52,null],[11,"bitand","","",52,null],[11,"bitand_assign","","",52,null],[11,"neg","","",52,null],[11,"eq","core::num::dec2flt","",53,null],[11,"ne","","",53,null],[11,"clone","","",53,null],[11,"fmt","","",53,null],[11,"fmt","","",53,null],[11,"fmt","core::num","",54,null],[11,"eq","","",54,null],[11,"clone","","",54,null],[11,"clone","","",55,null],[11,"fmt","","",55,null],[11,"fmt","","",55,null],[11,"eq","","",56,null],[11,"ne","","",56,null],[11,"clone","","",56,null],[11,"fmt","","",56,null],[11,"fmt","","",56,null],[11,"hash","core::nonzero","",57,null],[11,"fmt","","",57,null],[11,"partial_cmp","","",57,null],[11,"lt","","",57,null],[11,"le","","",57,null],[11,"gt","","",57,null],[11,"ge","","",57,null],[11,"cmp","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"clone","","",57,null],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually &quot;non-zero&quot;.",57,{"inputs":[{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",57,null],[11,"new","core::ptr","Creates a new `Unique`.",58,null],[11,"get","","Dereferences the content.",58,null],[11,"get_mut","","Mutably dereferences the content.",58,null],[11,"deref","","",58,null],[11,"fmt","","",58,null],[11,"new","","Creates a new `Shared`.",59,null],[11,"clone","","",59,null],[11,"deref","","",59,null],[11,"fmt","","",59,null],[11,"hash","core::marker","",60,null],[11,"eq","","",60,null],[11,"partial_cmp","","",60,null],[11,"cmp","","",60,null],[11,"clone","","",60,null],[11,"default","","",60,{"inputs":[],"output":{"name":"phantomdata"}}],[11,"hash","core::ops","",61,null],[11,"eq","","",61,null],[11,"clone","","",61,null],[11,"fmt","","",61,null],[11,"hash","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"clone","","",62,null],[11,"fmt","","",62,null],[11,"contains","","# Examples",62,null],[11,"hash","","",63,null],[11,"eq","","",63,null],[11,"ne","","",63,null],[11,"clone","","",63,null],[11,"fmt","","",63,null],[11,"contains","","# Examples",63,null],[11,"hash","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"clone","","",64,null],[11,"fmt","","",64,null],[11,"contains","","# Examples",64,null],[11,"hash","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"clone","","",65,null],[11,"fmt","","",65,null],[11,"contains","","# Examples",65,null],[11,"hash","","",66,null],[11,"eq","","",66,null],[11,"ne","","",66,null],[11,"clone","","",66,null],[11,"fmt","","",66,null],[11,"contains","","# Examples",66,null],[11,"hash","core::cmp","",67,null],[11,"fmt","","",67,null],[11,"eq","","",67,null],[11,"clone","","",67,null],[11,"reverse","","Reverse the `Ordering`.",67,null],[11,"cmp","","",67,null],[11,"partial_cmp","","",67,null],[11,"fmt","libc","",68,null],[11,"fmt","","",68,null],[11,"is","","Returns true if the boxed type is the same as `T`",68,null],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",68,null],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",68,null],[11,"is","","Forwards to the method defined on the type `Any`.",68,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",68,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",68,null],[11,"hash","core::any","",69,null],[11,"fmt","","",69,null],[11,"eq","","",69,null],[11,"ne","","",69,null],[11,"clone","","",69,null],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",69,{"inputs":[],"output":{"name":"typeid"}}],[11,"default","core::sync::atomic","",70,{"inputs":[],"output":{"name":"atomicbool"}}],[11,"default","","",71,{"inputs":[],"output":{"name":"atomicptr"}}],[11,"fmt","","",72,null],[11,"clone","","",72,null],[11,"new","","Creates a new `AtomicBool`.",70,{"inputs":[{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",70,null],[11,"store","","Stores a value into the bool.",70,null],[11,"swap","","Stores a value into the bool, returning the old value.",70,null],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",70,null],[11,"compare_exchange","","Stores a value into the `bool` if the current value is the same as the `current` value.",70,null],[11,"compare_exchange_weak","","Stores a value into the `bool` if the current value is the same as the `current` value.",70,null],[11,"fetch_and","","Logical &quot;and&quot; with a boolean value.",70,null],[11,"fetch_nand","","Logical &quot;nand&quot; with a boolean value.",70,null],[11,"fetch_or","","Logical &quot;or&quot; with a boolean value.",70,null],[11,"fetch_xor","","Logical &quot;xor&quot; with a boolean value.",70,null],[11,"new","","Creates a new `AtomicPtr`.",71,null],[11,"load","","Loads a value from the pointer.",71,null],[11,"store","","Stores a value into the pointer.",71,null],[11,"swap","","Stores a value into the pointer, returning the old value.",71,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",71,null],[11,"compare_exchange","","Stores a value into the pointer if the current value is the same as the `current` value.",71,null],[11,"compare_exchange_weak","","Stores a value into the pointer if the current value is the same as the `current` value.",71,null],[11,"default","","",73,{"inputs":[],"output":{"name":"atomici8"}}],[11,"fmt","","",73,null],[11,"new","","Creates a new atomic integer.",73,{"inputs":[{"name":"i8"}],"output":{"name":"atomici8"}}],[11,"load","","Loads a value from the atomic integer.",73,null],[11,"store","","Stores a value into the atomic integer.",73,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",73,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",73,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",73,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",73,null],[11,"fetch_add","","Add to the current value, returning the previous value.",73,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",73,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",73,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",73,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",73,null],[11,"default","","",74,{"inputs":[],"output":{"name":"atomicu8"}}],[11,"fmt","","",74,null],[11,"new","","Creates a new atomic integer.",74,{"inputs":[{"name":"u8"}],"output":{"name":"atomicu8"}}],[11,"load","","Loads a value from the atomic integer.",74,null],[11,"store","","Stores a value into the atomic integer.",74,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",74,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",74,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",74,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",74,null],[11,"fetch_add","","Add to the current value, returning the previous value.",74,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",74,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",74,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",74,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",74,null],[11,"default","","",75,{"inputs":[],"output":{"name":"atomici16"}}],[11,"fmt","","",75,null],[11,"new","","Creates a new atomic integer.",75,{"inputs":[{"name":"i16"}],"output":{"name":"atomici16"}}],[11,"load","","Loads a value from the atomic integer.",75,null],[11,"store","","Stores a value into the atomic integer.",75,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",75,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",75,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",75,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",75,null],[11,"fetch_add","","Add to the current value, returning the previous value.",75,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",75,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",75,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",75,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",75,null],[11,"default","","",76,{"inputs":[],"output":{"name":"atomicu16"}}],[11,"fmt","","",76,null],[11,"new","","Creates a new atomic integer.",76,{"inputs":[{"name":"u16"}],"output":{"name":"atomicu16"}}],[11,"load","","Loads a value from the atomic integer.",76,null],[11,"store","","Stores a value into the atomic integer.",76,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",76,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",76,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",76,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",76,null],[11,"fetch_add","","Add to the current value, returning the previous value.",76,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",76,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",76,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",76,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",76,null],[11,"default","","",77,{"inputs":[],"output":{"name":"atomici32"}}],[11,"fmt","","",77,null],[11,"new","","Creates a new atomic integer.",77,{"inputs":[{"name":"i32"}],"output":{"name":"atomici32"}}],[11,"load","","Loads a value from the atomic integer.",77,null],[11,"store","","Stores a value into the atomic integer.",77,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",77,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",77,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",77,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",77,null],[11,"fetch_add","","Add to the current value, returning the previous value.",77,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",77,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",77,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",77,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",77,null],[11,"default","","",78,{"inputs":[],"output":{"name":"atomicu32"}}],[11,"fmt","","",78,null],[11,"new","","Creates a new atomic integer.",78,{"inputs":[{"name":"u32"}],"output":{"name":"atomicu32"}}],[11,"load","","Loads a value from the atomic integer.",78,null],[11,"store","","Stores a value into the atomic integer.",78,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",78,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",78,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",78,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",78,null],[11,"fetch_add","","Add to the current value, returning the previous value.",78,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",78,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",78,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",78,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",78,null],[11,"default","","",79,{"inputs":[],"output":{"name":"atomici64"}}],[11,"fmt","","",79,null],[11,"new","","Creates a new atomic integer.",79,{"inputs":[{"name":"i64"}],"output":{"name":"atomici64"}}],[11,"load","","Loads a value from the atomic integer.",79,null],[11,"store","","Stores a value into the atomic integer.",79,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",79,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",79,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",79,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",79,null],[11,"fetch_add","","Add to the current value, returning the previous value.",79,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",79,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",79,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",79,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",79,null],[11,"default","","",80,{"inputs":[],"output":{"name":"atomicu64"}}],[11,"fmt","","",80,null],[11,"new","","Creates a new atomic integer.",80,{"inputs":[{"name":"u64"}],"output":{"name":"atomicu64"}}],[11,"load","","Loads a value from the atomic integer.",80,null],[11,"store","","Stores a value into the atomic integer.",80,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",80,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",80,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",80,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",80,null],[11,"fetch_add","","Add to the current value, returning the previous value.",80,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",80,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",80,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",80,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",80,null],[11,"default","","",81,{"inputs":[],"output":{"name":"atomicisize"}}],[11,"fmt","","",81,null],[11,"new","","Creates a new atomic integer.",81,{"inputs":[{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the atomic integer.",81,null],[11,"store","","Stores a value into the atomic integer.",81,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",81,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",81,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",81,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",81,null],[11,"fetch_add","","Add to the current value, returning the previous value.",81,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",81,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",81,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",81,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",81,null],[11,"default","","",82,{"inputs":[],"output":{"name":"atomicusize"}}],[11,"fmt","","",82,null],[11,"new","","Creates a new atomic integer.",82,{"inputs":[{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the atomic integer.",82,null],[11,"store","","Stores a value into the atomic integer.",82,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",82,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",82,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",82,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",82,null],[11,"fetch_add","","Add to the current value, returning the previous value.",82,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",82,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",82,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",82,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",82,null],[11,"fmt","","",70,null],[11,"fmt","","",71,null],[11,"new","core::cell","Creates a new `Cell` containing the given value.",83,{"inputs":[{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",83,null],[11,"set","","Sets the contained value.",83,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",83,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",83,null],[11,"clone","","",83,null],[11,"default","","",83,{"inputs":[],"output":{"name":"cell"}}],[11,"eq","","",83,null],[11,"partial_cmp","","",83,null],[11,"lt","","",83,null],[11,"le","","",83,null],[11,"gt","","",83,null],[11,"ge","","",83,null],[11,"cmp","","",83,null],[11,"fmt","","",84,null],[11,"eq","","",84,null],[11,"clone","","",84,null],[11,"new","","Creates a new `RefCell` containing `value`.",85,{"inputs":[{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",85,null],[11,"borrow_state","","Query the current state of this `RefCell`",85,null],[11,"borrow","","Immutably borrows the wrapped value.",85,null],[11,"borrow_mut","","Mutably borrows the wrapped value.",85,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",85,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",85,null],[11,"clone","","",85,null],[11,"default","","",85,{"inputs":[],"output":{"name":"refcell"}}],[11,"eq","","",85,null],[11,"partial_cmp","","",85,null],[11,"lt","","",85,null],[11,"le","","",85,null],[11,"gt","","",85,null],[11,"ge","","",85,null],[11,"cmp","","",85,null],[11,"deref","","",86,null],[11,"clone","","Copies a `Ref`.",86,{"inputs":[{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",86,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",87,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"deref","","",87,null],[11,"deref_mut","","",87,null],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",88,{"inputs":[{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",88,null],[11,"get","","Gets a mutable pointer to the wrapped value.",88,null],[11,"default","","",88,{"inputs":[],"output":{"name":"unsafecell"}}],[11,"fmt","core::char","",89,null],[11,"clone","","",89,null],[11,"next","","",89,null],[11,"size_hint","","",89,null],[11,"count","","",89,null],[11,"last","","",89,null],[11,"len","","",89,null],[11,"fmt","","",90,null],[11,"clone","","",90,null],[11,"next","","",90,null],[11,"size_hint","","",90,null],[11,"count","","",90,null],[11,"nth","","",90,null],[11,"last","","",90,null],[11,"len","","",90,null],[11,"fmt","","",91,null],[11,"as_slice","","Returns the remaining bytes of this iterator as a slice.",91,null],[11,"next","","",91,null],[11,"size_hint","","",91,null],[11,"fmt","","",92,null],[11,"as_slice","","Returns the remaining bytes of this iterator as a slice.",92,null],[11,"next","","",92,null],[11,"size_hint","","",92,null],[11,"fmt","core::iter::range","",93,null],[11,"clone","","",93,null],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",63,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",62,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",65,null],[11,"next","core::iter::range","",93,null],[11,"size_hint","","",93,null],[11,"next","","",93,null],[11,"size_hint","","",93,null],[11,"next","","",93,null],[11,"size_hint","","",93,null],[11,"next","core::ops","",62,null],[11,"size_hint","","",62,null],[11,"next_back","","",62,null],[11,"next","","",63,null],[11,"next","","",65,null],[11,"size_hint","","",65,null],[11,"next_back","","",65,null],[11,"fmt","core::iter::sources","",94,null],[11,"clone","","",94,null],[11,"next","","",94,null],[11,"size_hint","","",94,null],[11,"next_back","","",94,null],[11,"fmt","","",95,null],[11,"next","","",95,null],[11,"size_hint","","",95,null],[11,"next_back","","",95,null],[11,"len","","",95,null],[11,"clone","","",95,null],[11,"default","","",95,{"inputs":[],"output":{"name":"empty"}}],[11,"fmt","","",96,null],[11,"clone","","",96,null],[11,"next","","",96,null],[11,"size_hint","","",96,null],[11,"next_back","","",96,null],[11,"len","","",96,null],[11,"fmt","core::iter","",97,null],[11,"clone","","",97,null],[11,"next","","",97,null],[11,"size_hint","","",97,null],[11,"next_back","","",97,null],[11,"fmt","","",98,null],[11,"clone","","",98,null],[11,"next","","",98,null],[11,"size_hint","","",98,null],[11,"next_back","","",98,null],[11,"fmt","","",99,null],[11,"clone","","",99,null],[11,"next","","",99,null],[11,"size_hint","","",99,null],[11,"fmt","","",100,null],[11,"clone","","",100,null],[11,"next","","",100,null],[11,"count","","",100,null],[11,"nth","","",100,null],[11,"find","","",100,null],[11,"last","","",100,null],[11,"size_hint","","",100,null],[11,"next_back","","",100,null],[11,"fmt","","",101,null],[11,"clone","","",101,null],[11,"next","","",101,null],[11,"size_hint","","",101,null],[11,"next_back","","",101,null],[11,"clone","","",102,null],[11,"fmt","","",102,null],[11,"next","","",102,null],[11,"size_hint","","",102,null],[11,"next_back","","",102,null],[11,"clone","","",103,null],[11,"fmt","","",103,null],[11,"next","","",103,null],[11,"size_hint","","",103,null],[11,"next_back","","",103,null],[11,"clone","","",104,null],[11,"fmt","","",104,null],[11,"next","","",104,null],[11,"size_hint","","",104,null],[11,"next_back","","",104,null],[11,"fmt","","",105,null],[11,"clone","","",105,null],[11,"next","","# Overflow Behavior",105,null],[11,"size_hint","","",105,null],[11,"nth","","",105,null],[11,"count","","",105,null],[11,"next_back","","",105,null],[11,"fmt","","",106,null],[11,"clone","","",106,null],[11,"next","","",106,null],[11,"count","","",106,null],[11,"nth","","",106,null],[11,"last","","",106,null],[11,"size_hint","","",106,null],[11,"peek","","Returns a reference to the next() value without advancing the iterator.",106,null],[11,"is_empty","","Checks if the iterator has finished iterating.",106,null],[11,"clone","","",107,null],[11,"fmt","","",107,null],[11,"next","","",107,null],[11,"size_hint","","",107,null],[11,"clone","","",108,null],[11,"fmt","","",108,null],[11,"next","","",108,null],[11,"size_hint","","",108,null],[11,"fmt","","",109,null],[11,"clone","","",109,null],[11,"next","","",109,null],[11,"nth","","",109,null],[11,"count","","",109,null],[11,"last","","",109,null],[11,"size_hint","","",109,null],[11,"next_back","","",109,null],[11,"fmt","","",110,null],[11,"clone","","",110,null],[11,"next","","",110,null],[11,"nth","","",110,null],[11,"size_hint","","",110,null],[11,"clone","","",111,null],[11,"fmt","","",111,null],[11,"next","","",111,null],[11,"size_hint","","",111,null],[11,"clone","","",112,null],[11,"fmt","","",112,null],[11,"next","","",112,null],[11,"size_hint","","",112,null],[11,"next_back","","",112,null],[11,"fmt","","",113,null],[11,"clone","","",113,null],[11,"next","","",113,null],[11,"nth","","",113,null],[11,"last","","",113,null],[11,"count","","",113,null],[11,"size_hint","","",113,null],[11,"next_back","","",113,null],[11,"clone","","",114,null],[11,"fmt","","",114,null],[11,"next","","",114,null],[11,"size_hint","","",114,null],[11,"next_back","","",114,null],[11,"hash","core::option","",51,null],[11,"fmt","","",51,null],[11,"cmp","","",51,null],[11,"partial_cmp","","",51,null],[11,"lt","","",51,null],[11,"le","","",51,null],[11,"gt","","",51,null],[11,"ge","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"clone","","",51,null],[11,"default","","",51,{"inputs":[],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",51,null],[11,"fmt","","",115,null],[11,"next","","",115,null],[11,"size_hint","","",115,null],[11,"next_back","","",115,null],[11,"clone","","",115,null],[11,"fmt","","",116,null],[11,"next","","",116,null],[11,"size_hint","","",116,null],[11,"next_back","","",116,null],[11,"fmt","","",117,null],[11,"clone","","",117,null],[11,"next","","",117,null],[11,"size_hint","","",117,null],[11,"next_back","","",117,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",51,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[11,"clone","core::raw","",118,null],[11,"hash","core::result","",119,null],[11,"fmt","","",119,null],[11,"cmp","","",119,null],[11,"partial_cmp","","",119,null],[11,"lt","","",119,null],[11,"le","","",119,null],[11,"gt","","",119,null],[11,"ge","","",119,null],[11,"eq","","",119,null],[11,"ne","","",119,null],[11,"clone","","",119,null],[11,"is_ok","","Returns true if the result is `Ok`",119,null],[11,"is_err","","Returns true if the result is `Err`",119,null],[11,"ok","","Converts from `Result&lt;T, E&gt;` to `Option&lt;T&gt;`",119,null],[11,"err","","Converts from `Result&lt;T, E&gt;` to `Option&lt;E&gt;`",119,null],[11,"as_ref","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;T, &amp;E&gt;`",119,null],[11,"as_mut","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;mut T, &amp;mut E&gt;`",119,null],[11,"map","","Maps a `Result&lt;T, E&gt;` to `Result&lt;U, E&gt;` by applying a function to a\ncontained `Ok` value, leaving an `Err` value untouched.",119,null],[11,"map_err","","Maps a `Result&lt;T, E&gt;` to `Result&lt;T, F&gt;` by applying a function to a\ncontained `Err` value, leaving an `Ok` value untouched.",119,null],[11,"iter","","Returns an iterator over the possibly contained value.",119,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",119,null],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",119,null],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",119,null],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",119,null],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",119,null],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",119,null],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",119,null],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",119,null],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",119,null],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",119,null],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",119,null],[11,"fmt","","",120,null],[11,"next","","",120,null],[11,"size_hint","","",120,null],[11,"next_back","","",120,null],[11,"clone","","",120,null],[11,"fmt","","",121,null],[11,"next","","",121,null],[11,"size_hint","","",121,null],[11,"next_back","","",121,null],[11,"fmt","","",122,null],[11,"next","","",122,null],[11,"size_hint","","",122,null],[11,"next_back","","",122,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",119,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","core::slice","",123,null],[11,"as_slice","","View the underlying data as a subslice of the original data.",123,null],[11,"next","","",123,null],[11,"size_hint","","",123,null],[11,"count","","",123,null],[11,"nth","","",123,null],[11,"last","","",123,null],[11,"next_back","","",123,null],[11,"clone","","",123,null],[11,"fmt","","",124,null],[11,"into_slice","","View the underlying data as a subslice of the original data.",124,null],[11,"next","","",124,null],[11,"size_hint","","",124,null],[11,"count","","",124,null],[11,"nth","","",124,null],[11,"last","","",124,null],[11,"next_back","","",124,null],[11,"fmt","","",125,null],[11,"clone","","",125,null],[11,"next","","",125,null],[11,"size_hint","","",125,null],[11,"next_back","","",125,null],[11,"fmt","","",126,null],[11,"next","","",126,null],[11,"size_hint","","",126,null],[11,"next_back","","",126,null],[11,"fmt","","",127,null],[11,"fmt","","",128,null],[11,"fmt","","",129,null],[11,"fmt","","",130,null],[11,"next","","",127,null],[11,"size_hint","","",127,null],[11,"next","","",128,null],[11,"size_hint","","",128,null],[11,"next","","",129,null],[11,"size_hint","","",129,null],[11,"next","","",130,null],[11,"size_hint","","",130,null],[11,"fmt","","",131,null],[11,"clone","","",131,null],[11,"next","","",131,null],[11,"size_hint","","",131,null],[11,"count","","",131,null],[11,"nth","","",131,null],[11,"last","","",131,null],[11,"next_back","","",131,null],[11,"fmt","","",132,null],[11,"clone","","",132,null],[11,"next","","",132,null],[11,"size_hint","","",132,null],[11,"count","","",132,null],[11,"nth","","",132,null],[11,"last","","",132,null],[11,"next_back","","",132,null],[11,"fmt","","",133,null],[11,"next","","",133,null],[11,"size_hint","","",133,null],[11,"count","","",133,null],[11,"nth","","",133,null],[11,"last","","",133,null],[11,"next_back","","",133,null],[11,"fmt","core::str::pattern","",134,null],[11,"eq","","",134,null],[11,"ne","","",134,null],[11,"clone","","",134,null],[11,"fmt","","",135,null],[11,"clone","","",135,null],[11,"haystack","","",135,null],[11,"next","","",135,null],[11,"next_match","","",135,null],[11,"next_reject","","",135,null],[11,"next_back","","",135,null],[11,"next_match_back","","",135,null],[11,"next_reject_back","","",135,null],[11,"fmt","","",136,null],[11,"clone","","",136,null],[11,"haystack","","",136,null],[11,"next","","",136,null],[11,"next_match","","",136,null],[11,"next_reject","","",136,null],[11,"next_back","","",136,null],[11,"next_match_back","","",136,null],[11,"next_reject_back","","",136,null],[11,"clone","","",137,null],[11,"fmt","","",137,null],[11,"haystack","","",137,null],[11,"next","","",137,null],[11,"next_match","","",137,null],[11,"next_reject","","",137,null],[11,"next_back","","",137,null],[11,"next_match_back","","",137,null],[11,"next_reject_back","","",137,null],[11,"fmt","","",138,null],[11,"clone","","",138,null],[11,"haystack","","",138,null],[11,"next","","",138,null],[11,"next_match","","",138,null],[11,"next_back","","",138,null],[11,"next_match_back","","",138,null],[11,"eq","core::str","",139,null],[11,"ne","","",139,null],[11,"clone","","",139,null],[11,"fmt","","",139,null],[11,"fmt","","",139,null],[11,"fmt","","",140,null],[11,"clone","","",140,null],[11,"eq","","",140,null],[11,"ne","","",140,null],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",140,null],[11,"fmt","","",140,null],[11,"fmt","","",141,null],[11,"clone","","",141,null],[11,"next","","",141,null],[11,"size_hint","","",141,null],[11,"next_back","","",141,null],[11,"as_str","","View the underlying data as a subslice of the original data.",141,null],[11,"fmt","","",142,null],[11,"clone","","",142,null],[11,"next","","",142,null],[11,"size_hint","","",142,null],[11,"next_back","","",142,null],[11,"as_str","","View the underlying data as a subslice of the original data.",142,null],[11,"fmt","","",143,null],[11,"clone","","",143,null],[11,"next","","",143,null],[11,"size_hint","","",143,null],[11,"count","","",143,null],[11,"last","","",143,null],[11,"nth","","",143,null],[11,"next_back","","",143,null],[11,"len","","",143,null],[11,"fmt","","",144,null],[11,"next","","",144,null],[11,"clone","","",144,null],[11,"fmt","","",145,null],[11,"next","","",145,null],[11,"clone","","",145,null],[11,"next_back","","",144,null],[11,"next_back","","",145,null],[11,"fmt","","",146,null],[11,"next","","",146,null],[11,"clone","","",146,null],[11,"fmt","","",147,null],[11,"next","","",147,null],[11,"clone","","",147,null],[11,"next_back","","",146,null],[11,"next_back","","",147,null],[11,"fmt","","",148,null],[11,"next","","",148,null],[11,"clone","","",148,null],[11,"fmt","","",149,null],[11,"next","","",149,null],[11,"clone","","",149,null],[11,"fmt","","",150,null],[11,"next","","",150,null],[11,"clone","","",150,null],[11,"fmt","","",151,null],[11,"next","","",151,null],[11,"clone","","",151,null],[11,"next_back","","",150,null],[11,"next_back","","",151,null],[11,"fmt","","",152,null],[11,"next","","",152,null],[11,"clone","","",152,null],[11,"fmt","","",153,null],[11,"next","","",153,null],[11,"clone","","",153,null],[11,"next_back","","",152,null],[11,"next_back","","",153,null],[11,"fmt","","",154,null],[11,"clone","","",154,null],[11,"next","","",154,null],[11,"size_hint","","",154,null],[11,"next_back","","",154,null],[11,"fmt","","",155,null],[11,"clone","","",155,null],[11,"next","","",155,null],[11,"size_hint","","",155,null],[11,"next_back","","",155,null],[11,"default","core::hash::sip","",156,{"inputs":[],"output":{"name":"siphasher13"}}],[11,"clone","","",156,null],[11,"fmt","","",156,null],[11,"default","","",157,{"inputs":[],"output":{"name":"siphasher24"}}],[11,"clone","","",157,null],[11,"fmt","","",157,null],[11,"default","","",158,{"inputs":[],"output":{"name":"siphasher"}}],[11,"clone","","",158,null],[11,"fmt","","",158,null],[11,"new","","Creates a new `SipHasher` with the two initial keys set to 0.",158,{"inputs":[],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",158,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"new","","Creates a new `SipHasher13` with the two initial keys set to 0.",156,{"inputs":[],"output":{"name":"siphasher13"}}],[11,"new_with_keys","","Creates a `SipHasher13` that is keyed off the provided keys.",156,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher13"}}],[11,"new","","Creates a new `SipHasher24` with the two initial keys set to 0.",157,{"inputs":[],"output":{"name":"siphasher24"}}],[11,"new_with_keys","","Creates a `SipHasher24` that is keyed off the provided keys.",157,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher24"}}],[11,"write","","",158,null],[11,"finish","","",158,null],[11,"write","","",156,null],[11,"finish","","",156,null],[11,"write","","",157,null],[11,"finish","","",157,null],[11,"fmt","core::hash","",159,null],[11,"build_hasher","","",159,null],[11,"clone","","",159,null],[11,"default","","",159,{"inputs":[],"output":{"name":"buildhasherdefault"}}],[11,"fmt","core::fmt","",160,null],[11,"field","core::fmt::builders","Adds a new field to the generated struct output.",161,null],[11,"finish","","Finishes output and returns any error encountered.",161,null],[11,"field","","Adds a new field to the generated tuple struct output.",162,null],[11,"finish","","Finishes output and returns any error encountered.",162,null],[11,"entry","","Adds a new entry to the set output.",163,null],[11,"entries","","Adds the contents of an iterator of entries to the set output.",163,null],[11,"finish","","Finishes output and returns any error encountered.",163,null],[11,"entry","","Adds a new entry to the list output.",164,null],[11,"entries","","Adds the contents of an iterator of entries to the list output.",164,null],[11,"finish","","Finishes output and returns any error encountered.",164,null],[11,"entry","","Adds a new entry to the map output.",165,null],[11,"entries","","Adds the contents of an iterator of entries to the map output.",165,null],[11,"finish","","Finishes output and returns any error encountered.",165,null],[11,"partial_cmp","core::fmt","",166,null],[11,"eq","","",166,null],[11,"cmp","","",166,null],[11,"hash","","",166,null],[11,"default","","",166,{"inputs":[],"output":{"name":"error"}}],[11,"fmt","","",166,null],[11,"clone","","",166,null],[11,"clone","","",167,null],[11,"fmt","","",167,null],[11,"fmt","","",167,null],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",168,null],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",168,null],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",168,null],[11,"write_fmt","","Writes some formatted information into this instance",168,null],[11,"flags","","Flags for formatting (packed version of rt::Flag)",168,null],[11,"fill","","Character used as &#39;fill&#39; whenever there is alignment",168,null],[11,"align","","Flag indicating what form of alignment was requested",168,null],[11,"width","","Optionally specified integer width that the output should be",168,null],[11,"precision","","Optionally specified precision for numeric types",168,null],[11,"sign_plus","","Determines if the `+` flag was specified.",168,null],[11,"sign_minus","","Determines if the `-` flag was specified.",168,null],[11,"alternate","","Determines if the `#` flag was specified.",168,null],[11,"sign_aware_zero_pad","","Determines if the `0` flag was specified.",168,null],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",168,null],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",168,null],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",168,null],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",168,null],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",168,null],[11,"write_str","","",168,null],[11,"write_char","","",168,null],[11,"write_fmt","","",168,null],[11,"fmt","","",166,null],[11,"fmt","core::marker","",60,null],[11,"fmt","core::cell","",83,null],[11,"fmt","","",85,null],[11,"fmt","","",86,null],[11,"fmt","","",87,null],[11,"fmt","","",88,null],[11,"clone_from","libc::dox","Performs copy-assignment from `source`.",169,null],[11,"clone_from","libc::dox::imp","Performs copy-assignment from `source`.",169,null],[11,"clone","libc","",48,null],[11,"clone","","",49,null],[11,"clone","","",170,null],[11,"clone","","",171,null],[11,"clone","","",50,null],[11,"clone","","",172,null],[11,"clone","","",37,null],[11,"clone","","",38,null],[11,"clone","","",39,null],[11,"clone","","",40,null],[11,"clone","","",41,null],[11,"clone","","",42,null],[11,"clone","","",43,null],[11,"clone","","",44,null],[11,"clone","","",45,null],[11,"clone","","",46,null],[11,"clone","","",47,null],[11,"clone","","",27,null],[11,"clone","","",28,null],[11,"clone","","",29,null],[11,"clone","","",30,null],[11,"clone","","",31,null],[11,"clone","","",173,null],[11,"clone","","",174,null],[11,"clone","","",175,null],[11,"clone","","",176,null],[11,"clone","","",32,null],[11,"clone","","",33,null],[11,"clone","","",34,null],[11,"clone","","",35,null],[11,"clone","","",177,null],[11,"clone","","",36,null],[11,"clone","","",178,null],[11,"clone","","",13,null],[11,"clone","","",14,null],[11,"clone","","",15,null],[11,"clone","","",16,null],[11,"clone","","",17,null],[11,"clone","","",18,null],[11,"clone","","",19,null],[11,"clone","","",20,null],[11,"clone","","",179,null],[11,"clone","","",21,null],[11,"clone","","",22,null],[11,"clone","","",23,null],[11,"clone","","",24,null],[11,"clone","","",25,null],[11,"clone","","",26,null],[11,"clone","","",0,null],[11,"clone","","",1,null],[11,"clone","","",2,null],[11,"clone","","",3,null],[11,"clone","","",4,null],[11,"clone","","",5,null],[11,"clone","","",6,null],[11,"clone","","",7,null],[11,"clone","","",8,null],[11,"clone","","",9,null],[11,"clone","","",10,null],[11,"clone","","",11,null],[11,"clone","","",12,null],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"loff_t","","",null,null],[6,"clockid_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"pthread_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"key_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"mqd_t","","",null,null],[6,"nfds_t","","",null,null],[6,"nl_item","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"AF_PACKET","","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"CBAUD","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR0","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF0","","",null,null],[17,"FF1","","",null,null],[17,"BS0","","",null,null],[17,"BS1","","",null,null],[17,"VT0","","",null,null],[17,"VT1","","",null,null],[17,"VERASE","","",null,null],[17,"VWERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VREPRINT","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VLNEXT","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS5","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHO","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"WNOHANG","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"CODESET","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"NCCS","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"LC_PAPER","","",null,null],[17,"LC_NAME","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"VEOF","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"IUTF8","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"EXTPROC","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"FIONREAD","","",null,null],[17,"TIOCCONS","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_perf_event_open","","",null,null]],"paths":[[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"passwd"],[3,"statvfs"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"mq_attr"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"termios"],[3,"flock"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"stat"],[3,"stat64"],[3,"ucontext_t"],[4,"Option"],[3,"Wrapping"],[3,"ParseFloatError"],[4,"FpCategory"],[3,"TryFromIntError"],[3,"ParseIntError"],[3,"NonZero"],[3,"Unique"],[3,"Shared"],[3,"PhantomData"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"RangeInclusive"],[3,"RangeToInclusive"],[4,"Ordering"],[8,"Any"],[3,"TypeId"],[3,"AtomicBool"],[3,"AtomicPtr"],[4,"Ordering"],[3,"AtomicI8"],[3,"AtomicU8"],[3,"AtomicI16"],[3,"AtomicU16"],[3,"AtomicI32"],[3,"AtomicU32"],[3,"AtomicI64"],[3,"AtomicU64"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"Ref"],[3,"RefMut"],[3,"UnsafeCell"],[3,"EscapeUnicode"],[3,"EscapeDefault"],[3,"EncodeUtf8"],[3,"EncodeUtf16"],[3,"StepBy"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[4,"SearchStep"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"SipHasher13"],[3,"SipHasher24"],[3,"SipHasher"],[3,"BuildHasherDefault"],[4,"Alignment"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Error"],[3,"Arguments"],[3,"Formatter"],[8,"Clone"],[3,"pthread_attr_t"],[3,"mcontext_t"],[3,"sigset_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"fd_set"]]};
searchIndex["stb_truetype"] = {"doc":"","items":[[3,"FontInfo","stb_truetype","",null,null],[3,"Vertex","","",null,null],[12,"x","","",0,null],[12,"y","","",0,null],[12,"cx","","",0,null],[12,"cy","","",0,null],[3,"Rect","","",null,null],[12,"x0","","",1,null],[12,"y0","","",1,null],[12,"x1","","",1,null],[12,"y1","","",1,null],[3,"HMetrics","","",null,null],[12,"advance_width","","",2,null],[12,"left_side_bearing","","",2,null],[3,"VMetrics","","",null,null],[12,"ascent","","",3,null],[12,"descent","","",3,null],[12,"line_gap","","",3,null],[4,"VertexType","","",null,null],[13,"MoveTo","","",4,null],[13,"LineTo","","",4,null],[13,"CurveTo","","",4,null],[5,"is_font","","",null,null],[5,"get_font_offset_for_index","","Each .ttf/.ttc file may have more than one font. Each font has a sequential\nindex number starting from 0. Call this function to get the font offset for\na given index; it returns None if the index is out of range. A regular .ttf\nfile will only define one font and it always be at offset 0, so it will\nreturn Some(0) for index 0, and None for all other indices. You can just skip\nthis step if you know it&#39;s that kind of font.",null,null],[11,"clone","","",5,null],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"vertex_type","","",0,null],[11,"fmt","","",4,null],[11,"clone","","",4,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"fmt","","",2,null],[11,"clone","","",2,null],[11,"fmt","","",3,null],[11,"clone","","",3,null],[11,"new","","Given an offset into the file that defines a font, this function builds\nthe necessary cached info for the rest of the system.",5,{"inputs":[{"name":"data"},{"name":"usize"}],"output":{"name":"option"}}],[11,"get_num_glyphs","","",5,null],[11,"find_glyph_index","","If you&#39;re going to perform multiple operations on the same character\nand you want a speed-up, call this function with the character you&#39;re\ngoing to process, then use glyph-based functions instead of the\ncodepoint-based functions.",5,null],[11,"get_codepoint_shape","","Returns the series of vertices encoding the shape of the glyph for this codepoint.",5,null],[11,"get_glyph_box","","Like `get_codepoint_box`, but takes a glyph index. Use this if you have cached the glyph index for\na codepoint.",5,null],[11,"get_codepoint_box","","Gets the bounding box of the visible part of the glyph, in unscaled coordinates",5,null],[11,"is_glyph_empty","","returns true if nothing is drawn for this glyph",5,null],[11,"get_glyph_shape","","Like `get_codepoint_shape`, but takes a glyph index instead. Use this if you have cached the\nglyph index for a codepoint.",5,null],[11,"get_glyph_h_metrics","","like `get_codepoint_h_metrics`, but takes a glyph index instead. Use this if you have cached the\nglyph index for a codepoint.",5,null],[11,"get_glyph_kern_advance","","like `get_codepoint_kern_advance`, but takes glyph indices instead. Use this if you have cached the\nglyph indices for the codepoints.",5,null],[11,"get_codepoint_kern_advance","","an additional amount to add to the &#39;advance&#39; value between cp1 and cp2",5,null],[11,"get_codepoint_h_metrics","","`left_side_bearing` is the offset from the current horizontal position to the left edge of the character\n`advance_width` is the offset from the current horizontal position to the next horizontal position\nthese are expressed in unscaled coordinates",5,null],[11,"get_v_metrics","","`ascent` is the coordinate above the baseline the font extends; descent\nis the coordinate below the baseline the font extends (i.e. it is typically negative)\n`line_gap` is the spacing between one row&#39;s descent and the next row&#39;s ascent...\nso you should advance the vertical position by `ascent - descent + line_gap`\nthese are expressed in unscaled coordinates, so you must multiply by\nthe scale factor for a given size",5,null],[11,"get_bounding_box","","the bounding box around all possible characters",5,null],[11,"scale_for_pixel_height","","computes a scale factor to produce a font whose &quot;height&quot; is &#39;pixels&#39; tall.\nHeight is measured as the distance from the highest ascender to the lowest\ndescender; in other words, it&#39;s equivalent to calling GetFontVMetrics\nand computing:\n      scale = pixels / (ascent - descent)\nso if you prefer to measure height by the ascent only, use a similar calculation.",5,null],[11,"scale_for_mapping_em_to_pixels","","computes a scale factor to produce a font whose EM size is mapped to\n`pixels` tall. This is probably what traditional APIs compute, but\nI&#39;m not positive.",5,null],[11,"get_glyph_bitmap_box_subpixel","","like `get_codepoint_bitmap_box_subpixel`, but takes a glyph index instead of a codepoint.",5,null],[11,"get_glyph_bitmap_box","","like `get_codepoint_bitmap_box`, but takes a glyph index instead of a codepoint.",5,null],[11,"get_codepoint_bitmap_box_subpixel","","same as get_codepoint_bitmap_box, but you can specify a subpixel\nshift for the character",5,null],[11,"get_codepoint_bitmap_box","","get the bounding box of the bitmap centered around the glyph origin; so the\nbitmap width is x1-x0, height is y1-y0, and location to place\nthe bitmap top left is (left_side_bearing*scale, y0).\n(Note that the bitmap uses y-increases-down, but the shape uses\ny-increases-up, so CodepointBitmapBox and CodepointBox are inverted.)",5,null]],"paths":[[3,"Vertex"],[3,"Rect"],[3,"HMetrics"],[3,"VMetrics"],[4,"VertexType"],[3,"FontInfo"]]};
searchIndex["clock_ticks"] = {"doc":"","items":[[5,"precise_time_ns","clock_ticks","Returns the current value of a high-resolution performance counter\nin nanoseconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"u64"}}],[5,"precise_time_s","","Returns the current value of a high-resolution performance counter\nin seconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"f64"}}],[5,"precise_time_ms","","Returns the current value of a high-resolution performance counter\nin milliseconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"u64"}}]],"paths":[]};
searchIndex["arrayvec"] = {"doc":"**arrayvec** provides the types `ArrayVec` and `ArrayString`:\narray-backed vector and string types, which store their contents inline.","items":[[11,"start","core::ops","",0,null],[11,"end","","",1,null],[11,"start","","",2,null],[11,"end","","",2,null],[11,"call","odds::fix","",3,null],[11,"clone","","",3,null],[11,"clone","odds::string","",4,null],[11,"next","","",4,null],[11,"clone","","",5,null],[11,"next","","",5,null],[11,"clone","","",6,null],[11,"next","","",6,null],[11,"insert_str","collections::string","**Panics** if `index` is out of bounds.",7,null],[11,"splice","collections::vec","",8,null],[11,"retain_mut","","",8,null],[8,"RangeArgument","arrayvec","**IndexRange** is implemented by Rust&#39;s built-in range types, produced\nby range syntax like `..`, `a..`, `..b` or `c..d`.",null,null],[11,"start","","Start index (inclusive)",9,null],[11,"end","","End index (exclusive)",9,null],[3,"ArrayString","","A string with a fixed capacity.",null,null],[3,"ArrayVec","","A vector with a fixed capacity.",null,null],[3,"IntoIter","","By-value iterator for `ArrayVec`.",null,null],[3,"Drain","","A draining iterator for `ArrayVec`.",null,null],[3,"CapacityError","","Error value indicating insufficient capacity",null,null],[11,"new","","Create a new empty `ArrayString`.",10,{"inputs":[],"output":{"name":"arraystring"}}],[11,"from","","Create a new `ArrayString` from a `str`.",10,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"capacity","","Return the capacity of the `ArrayString`.",10,null],[11,"push","","Adds the given char to the end of the string.",10,null],[11,"push_str","","Adds the given string slice to the end of the string.",10,null],[11,"clear","","Make the string empty.",10,null],[11,"set_len","","Set the strings&#39;s length.",10,null],[11,"as_str","","Return a string slice of the whole `ArrayString`.",10,null],[11,"deref","","",10,null],[11,"deref_mut","","",10,null],[11,"eq","","",10,null],[11,"eq","","",10,null],[11,"hash","","",10,null],[11,"borrow","","",10,null],[11,"as_ref","","",10,null],[11,"fmt","","",10,null],[11,"fmt","","",10,null],[11,"write_str","","",10,null],[11,"clone","","",10,null],[11,"clone_from","","",10,null],[8,"Array","","Trait for fixed size arrays.",null,null],[16,"Item","","The array&#39;s element type",11,null],[11,"drop","","",12,null],[11,"new","","Create a new empty `ArrayVec`.",12,{"inputs":[],"output":{"name":"arrayvec"}}],[11,"len","","Return the number of elements in the `ArrayVec`.",12,null],[11,"capacity","","Return the capacity of the `ArrayVec`.",12,null],[11,"push","","Push `element` to the end of the vector.",12,null],[11,"insert","","Insert `element` in position `index`.",12,null],[11,"pop","","Remove the last element in the vector.",12,null],[11,"swap_remove","","Remove the element at `index` and swap the last element into its place.",12,null],[11,"remove","","Remove the element at `index` and shift down the following elements.",12,null],[11,"clear","","Remove all elements in the vector.",12,null],[11,"retain","","Retains only the elements specified by the predicate.",12,null],[11,"set_len","","Set the vector&#39;s length without dropping or moving out elements",12,null],[11,"drain","","Create a draining iterator that removes the specified range in the vector\nand yields the removed items from start to end. The element range is\nremoved even if the iterator is not consumed until the end.",12,null],[11,"into_inner","","Return the inner fixed size array, if it is full to its capacity.",12,null],[11,"dispose","","Dispose of `self` without the overwriting that is needed in Drop.",12,null],[11,"as_slice","","Return a slice containing all elements of the vector.",12,null],[11,"as_mut_slice","","Return a mutable slice containing all elements of the vector.",12,null],[11,"deref","","",12,null],[11,"deref_mut","","",12,null],[11,"from","","",12,{"inputs":[{"name":"a"}],"output":{"name":"self"}}],[11,"into_iter","","",12,null],[11,"next","","",13,null],[11,"size_hint","","",13,null],[11,"next_back","","",13,null],[11,"drop","","",13,null],[11,"next","","",14,null],[11,"size_hint","","",14,null],[11,"next_back","","",14,null],[11,"drop","","",14,null],[11,"extend","","",12,null],[11,"from_iter","","",12,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"clone","","",12,null],[11,"clone_from","","",12,null],[11,"hash","","",12,null],[11,"eq","","",12,null],[11,"eq","","",12,null],[11,"borrow","","",12,null],[11,"borrow_mut","","",12,null],[11,"as_ref","","",12,null],[11,"as_mut","","",12,null],[11,"fmt","","",12,null],[11,"default","","",12,{"inputs":[],"output":{"name":"arrayvec"}}],[11,"partial_cmp","","",12,null],[11,"lt","","",12,null],[11,"le","","",12,null],[11,"ge","","",12,null],[11,"gt","","",12,null],[11,"cmp","","",12,null],[11,"write","","",12,null],[11,"flush","","",12,null],[11,"partial_cmp","","",15,null],[11,"lt","","",15,null],[11,"le","","",15,null],[11,"gt","","",15,null],[11,"ge","","",15,null],[11,"eq","","",15,null],[11,"ne","","",15,null],[11,"cmp","","",15,null],[11,"clone","","",15,null],[11,"element","","Extract the overflowing element",15,null],[11,"simplify","","Convert into a `CapacityError` that does not carry an element.",15,null],[11,"description","","",15,null],[11,"fmt","","",15,null],[11,"fmt","","",15,null]],"paths":[[3,"RangeFrom"],[3,"RangeTo"],[3,"Range"],[3,"Fix"],[3,"Prefixes"],[3,"Suffixes"],[3,"Substrings"],[3,"String"],[3,"Vec"],[8,"RangeArgument"],[3,"ArrayString"],[8,"Array"],[3,"ArrayVec"],[3,"IntoIter"],[3,"Drain"],[3,"CapacityError"]]};
searchIndex["crossbeam"] = {"doc":"Support for concurrent and parallel programming.","items":[[3,"Scope","crossbeam","",null,null],[3,"ScopedJoinHandle","","A handle to a scoped thread",null,null],[5,"scope","","Create a new `scope`, for deferred destructors.",null,{"inputs":[{"name":"f"}],"output":{"name":"r"}}],[5,"spawn_unsafe","","Like `std::thread::spawn`, but without the closure bounds.",null,{"inputs":[{"name":"f"}],"output":{"name":"joinhandle"}}],[0,"mem","","Memory management for concurrent data structures",null,null],[3,"CachePadded","crossbeam::mem","Pad `T` to the length of a cacheline.",null,null],[0,"epoch","","Epoch-based memory management",null,null],[3,"Atomic","crossbeam::mem::epoch","Like `std::sync::atomic::AtomicPtr`.",null,null],[3,"Guard","","An RAII-style guard for pinning the current epoch.",null,null],[3,"Owned","","Like `Box&lt;T&gt;`: an owned, heap-allocated data value of type `T`.",null,null],[3,"Shared","","Like `&amp;&#39;a T`: a shared reference valid for lifetime `&#39;a`.",null,null],[5,"pin","","Pin the current epoch.",null,{"inputs":[],"output":{"name":"guard"}}],[11,"null","","",0,{"inputs":[],"output":{"name":"atomic"}}],[11,"new","","Create a new atomic pointer",0,{"inputs":[{"name":"t"}],"output":{"name":"atomic"}}],[11,"load","","Do an atomic load with the given memory ordering.",0,null],[11,"store","","Do an atomic store with the given memory ordering.",0,null],[11,"store_and_ref","","Do an atomic store with the given memory ordering, immediately yielding\na shared reference to the pointer that was stored.",0,null],[11,"store_shared","","Do an atomic store of a `Shared` pointer with the given memory ordering.",0,null],[11,"cas","","Do a compare-and-set from a `Shared` to an `Owned` pointer with the\ngiven memory ordering.",0,null],[11,"cas_and_ref","","Do a compare-and-set from a `Shared` to an `Owned` pointer with the\ngiven memory ordering, immediatley acquiring a new `Shared` reference to\nthe previously-owned pointer if successful.",0,null],[11,"cas_shared","","Do a compare-and-set from a `Shared` to another `Shared` pointer with\nthe given memory ordering.",0,null],[11,"swap","","Do an atomic swap with an `Owned` pointer with the given memory ordering.",0,null],[11,"swap_shared","","Do an atomic swap with a `Shared` pointer with the given memory ordering.",0,null],[11,"unlinked","","Assert that the value is no longer reachable from a lock-free data\nstructure and should be collected when sufficient epochs have passed.",1,null],[11,"migrate_garbage","","Move the thread-local garbage into the global set of garbage.",1,null],[11,"drop","","",1,null],[11,"new","","Move `t` to a new heap allocation.",2,{"inputs":[{"name":"t"}],"output":{"name":"owned"}}],[11,"into_inner","","Move data out of the owned box, deallocating the box.",2,null],[11,"deref","","",2,null],[11,"deref_mut","","",2,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"clone","","",3,null],[11,"deref","","",3,null],[11,"as_raw","","",3,null],[11,"zeroed","crossbeam::mem","A const fn equivalent to mem::zeroed().",4,{"inputs":[],"output":{"name":"cachepadded"}}],[11,"new","","Wrap `t` with cacheline padding.",4,{"inputs":[{"name":"t"}],"output":{"name":"cachepadded"}}],[11,"deref","","",4,null],[11,"deref_mut","","",4,null],[8,"ZerosValid","","Types for which mem::zeroed() is safe.",null,null],[0,"sync","crossbeam","Synchronization primitives.",null,null],[3,"MsQueue","crossbeam::sync","A Michael-Scott lock-free queue, with support for blocking `pop`s.",null,null],[3,"AtomicOption","","",null,null],[3,"TreiberStack","","Treiber&#39;s lock-free stack.",null,null],[3,"SegQueue","","A Michael-Scott queue that allocates &quot;segments&quot; (arrays of nodes)\nfor efficiency.",null,null],[3,"ArcCell","","A type providing atomic storage and retrieval of an `Arc&lt;T&gt;`.",null,null],[11,"new","","",5,{"inputs":[],"output":{"name":"atomicoption"}}],[11,"swap_box","","",5,null],[11,"swap","","",5,null],[11,"take","","",5,null],[11,"new","","Create a new, empty queue.",6,{"inputs":[],"output":{"name":"msqueue"}}],[11,"push","","Add `t` to the back of the queue, possibly waking up threads\nblocked on `pop`.",6,null],[11,"is_empty","","Check if this queue is empty.",6,null],[11,"try_pop","","Attempt to dequeue from the front.",6,null],[11,"pop","","Dequeue an element from the front of the queue, blocking if the queue is\nempty.",6,null],[11,"new","","Create a new, empty stack.",7,{"inputs":[],"output":{"name":"treiberstack"}}],[11,"push","","Push `t` on top of the stack.",7,null],[11,"pop","","Attempt to pop the top element of the stack.",7,null],[11,"is_empty","","Check if this queue is empty.",7,null],[11,"new","","Create a new, empty queue.",8,{"inputs":[],"output":{"name":"segqueue"}}],[11,"push","","Add `t` to the back of the queue.",8,null],[11,"try_pop","","Attempt to dequeue from the front.",8,null],[0,"chase_lev","","A lock-free concurrent work-stealing deque",null,null],[3,"Worker","crossbeam::sync::chase_lev","Worker half of the work-stealing deque. This worker has exclusive access to\none side of the deque, and uses `push` and `try_pop` method to manipulate it.",null,null],[3,"Stealer","","The stealing half of the work-stealing deque. Stealers have access to the\nopposite end of the deque from the worker, and they only have access to the\n`steal` method.",null,null],[4,"Steal","","When stealing some data, this is an enumeration of the possible outcomes.",null,null],[13,"Empty","","The deque was empty at the time of stealing",9,null],[13,"Abort","","The stealer lost the race for stealing data, and a retry may return more\ndata.",9,null],[13,"Data","","The stealer has successfully stolen some data.",9,null],[5,"deque","","Creates a new empty deque",null,null],[11,"fmt","","",9,null],[11,"eq","","",9,null],[11,"ne","","",9,null],[11,"push","","Pushes data onto the front of this work queue.",10,null],[11,"try_pop","","Pops data off the front of the work queue, returning `None` on an empty\nqueue.",10,null],[11,"steal","","Steals work off the end of the queue (opposite of the worker&#39;s end)",11,null],[11,"clone","","",11,null],[11,"drop","crossbeam::sync","",12,null],[11,"new","","Creates a new `ArcCell`.",12,{"inputs":[{"name":"arc"}],"output":{"name":"arccell"}}],[11,"set","","Stores a new value in the `ArcCell`, returning the previous\nvalue.",12,null],[11,"get","","Returns a copy of the value stored by the `ArcCell`.",12,null],[11,"defer","crossbeam","Schedule code to be executed when exiting the scope.",13,null],[11,"spawn","","Create a scoped thread.",13,null],[11,"join","","Join the scoped thread, returning the result it produced.",14,null],[11,"thread","","Get the underlying thread handle.",14,null],[11,"drop","","",13,null]],"paths":[[3,"Atomic"],[3,"Guard"],[3,"Owned"],[3,"Shared"],[3,"CachePadded"],[3,"AtomicOption"],[3,"MsQueue"],[3,"TreiberStack"],[3,"SegQueue"],[4,"Steal"],[3,"Worker"],[3,"Stealer"],[3,"ArcCell"],[3,"Scope"],[3,"ScopedJoinHandle"]]};
searchIndex["kernel32"] = {"doc":"","items":[],"paths":[]};
searchIndex["ws2_32"] = {"doc":"","items":[],"paths":[]};
searchIndex["dbghelp"] = {"doc":"","items":[],"paths":[]};
searchIndex["byteorder"] = {"doc":"This crate provides convenience methods for encoding and decoding numbers\nin either big-endian or little-endian order.","items":[[4,"BigEndian","byteorder","Defines big-endian serialization.",null,null],[4,"LittleEndian","","Defines little-endian serialization.",null,null],[6,"NetworkEndian","","Defines network byte order serialization.",null,null],[6,"NativeEndian","","Defines system native-endian serialization.",null,null],[8,"ReadBytesExt","","Extends `Read` with methods for reading numbers. (For `std::io`.)",null,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,null],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,null],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,null],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,null],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,null],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,null],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,null],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,null],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying reader.",0,null],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,null],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number from\nthe underlying reader.",0,null],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number from\nthe underlying reader.",0,null],[8,"WriteBytesExt","","Extends `Write` with methods for writing numbers. (For `std::io`.)",null,null],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,null],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,null],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,null],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,null],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,null],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,null],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,null],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,null],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,null],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,null],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number to\nthe underlying writer.",1,null],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number to\nthe underlying writer.",1,null],[8,"ByteOrder","","ByteOrder describes types that can serialize integers as bytes.",null,null],[10,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",2,null],[10,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",2,null],[10,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",2,null],[10,"read_uint","","Reads an unsigned n-bytes integer from `buf`.",2,null],[10,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",2,null],[10,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",2,null],[10,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",2,null],[10,"write_uint","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",2,null],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",2,null],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",2,null],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",2,null],[11,"read_int","","Reads a signed n-bytes integer from `buf`.",2,null],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number.",2,null],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number.",2,null],[11,"write_i16","","Writes a signed 16 bit integer `n` to `buf`.",2,null],[11,"write_i32","","Writes a signed 32 bit integer `n` to `buf`.",2,null],[11,"write_i64","","Writes a signed 64 bit integer `n` to `buf`.",2,null],[11,"write_int","","Writes a signed integer `n` to `buf` using only `nbytes`.",2,null],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number.",2,null],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number.",2,null],[11,"read_u16","","",3,null],[11,"read_u32","","",3,null],[11,"read_u64","","",3,null],[11,"read_uint","","",3,null],[11,"write_u16","","",3,null],[11,"write_u32","","",3,null],[11,"write_u64","","",3,null],[11,"write_uint","","",3,null],[11,"read_u16","","",4,null],[11,"read_u32","","",4,null],[11,"read_u64","","",4,null],[11,"read_uint","","",4,null],[11,"write_u16","","",4,null],[11,"write_u32","","",4,null],[11,"write_u64","","",4,null],[11,"write_uint","","",4,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,null],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,null],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,null],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,null],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,null],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,null],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,null],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,null],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying reader.",0,null],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,null],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number from\nthe underlying reader.",0,null],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number from\nthe underlying reader.",0,null],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,null],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,null],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,null],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,null],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,null],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,null],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,null],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,null],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,null],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,null],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number to\nthe underlying writer.",1,null],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number to\nthe underlying writer.",1,null]],"paths":[[8,"ReadBytesExt"],[8,"WriteBytesExt"],[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]};
searchIndex["utf8_ranges"] = {"doc":"Crate `utf8-ranges` converts ranges of Unicode scalar values to equivalent\nranges of UTF-8 bytes. This is useful for constructing byte based automatons\nthat need to embed UTF-8 decoding.","items":[[3,"Utf8Range","utf8_ranges","A single inclusive range of UTF-8 bytes.",null,null],[12,"start","","Start of byte range (inclusive).",0,null],[12,"end","","End of byte range (inclusive).",0,null],[3,"Utf8Sequences","","An iterator over ranges of matching UTF-8 byte sequences.",null,null],[4,"Utf8Sequence","","Utf8Sequence represents a sequence of byte ranges.",null,null],[13,"One","","One byte range.",1,null],[13,"Two","","Two successive byte ranges.",1,null],[13,"Three","","Three successive byte ranges.",1,null],[13,"Four","","Four successive byte ranges.",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"clone","","",1,null],[11,"as_slice","","Returns the underlying sequence of byte ranges as a slice.",1,null],[11,"len","","Returns the number of byte ranges in this sequence.",1,null],[11,"matches","","Returns true if and only if a prefix of `bytes` matches this sequence\nof byte ranges.",1,null],[11,"fmt","","",1,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"clone","","",0,null],[11,"matches","","Returns true if and only if the given byte is in this range.",0,null],[11,"fmt","","",0,null],[11,"new","","Create a new iterator over UTF-8 byte ranges for the scalar value range\ngiven.",2,{"inputs":[{"name":"char"},{"name":"char"}],"output":{"name":"self"}}],[11,"next","","",2,null]],"paths":[[3,"Utf8Range"],[4,"Utf8Sequence"],[3,"Utf8Sequences"]]};
searchIndex["winapi"] = {"doc":"","items":[],"paths":[]};
searchIndex["lazy_static"] = {"doc":"A macro for declaring lazily evaluated statics.","items":[[11,"hash","core::num","",0,null],[11,"default","","",0,{"inputs":[],"output":{"name":"wrapping"}}],[11,"clone","","",0,null],[11,"cmp","","",0,null],[11,"partial_cmp","","",0,null],[11,"lt","","",0,null],[11,"le","","",0,null],[11,"gt","","",0,null],[11,"ge","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"fmt","","",0,null],[11,"fmt","","",0,null],[11,"fmt","","",0,null],[11,"fmt","","",0,null],[11,"fmt","","",0,null],[11,"fmt","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"eq","core::num::dec2flt","",1,null],[11,"ne","","",1,null],[11,"clone","","",1,null],[11,"fmt","","",1,null],[11,"fmt","","",1,null],[11,"fmt","core::num","",2,null],[11,"eq","","",2,null],[11,"clone","","",2,null],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"fmt","","",3,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"clone","","",4,null],[11,"fmt","","",4,null],[11,"fmt","","",4,null],[11,"hash","core::nonzero","",5,null],[11,"fmt","","",5,null],[11,"partial_cmp","","",5,null],[11,"lt","","",5,null],[11,"le","","",5,null],[11,"gt","","",5,null],[11,"ge","","",5,null],[11,"cmp","","",5,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"clone","","",5,null],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually &quot;non-zero&quot;.",5,{"inputs":[{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",5,null],[11,"new","core::ptr","Creates a new `Unique`.",6,null],[11,"get","","Dereferences the content.",6,null],[11,"get_mut","","Mutably dereferences the content.",6,null],[11,"deref","","",6,null],[11,"fmt","","",6,null],[11,"new","","Creates a new `Shared`.",7,null],[11,"clone","","",7,null],[11,"deref","","",7,null],[11,"fmt","","",7,null],[11,"hash","core::marker","",8,null],[11,"eq","","",8,null],[11,"partial_cmp","","",8,null],[11,"cmp","","",8,null],[11,"clone","","",8,null],[11,"default","","",8,{"inputs":[],"output":{"name":"phantomdata"}}],[11,"hash","core::ops","",9,null],[11,"eq","","",9,null],[11,"clone","","",9,null],[11,"fmt","","",9,null],[11,"hash","","",10,null],[11,"eq","","",10,null],[11,"ne","","",10,null],[11,"clone","","",10,null],[11,"fmt","","",10,null],[11,"contains","","# Examples",10,null],[11,"hash","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"clone","","",11,null],[11,"fmt","","",11,null],[11,"contains","","# Examples",11,null],[11,"hash","","",12,null],[11,"eq","","",12,null],[11,"ne","","",12,null],[11,"clone","","",12,null],[11,"fmt","","",12,null],[11,"contains","","# Examples",12,null],[11,"hash","","",13,null],[11,"eq","","",13,null],[11,"ne","","",13,null],[11,"clone","","",13,null],[11,"fmt","","",13,null],[11,"contains","","# Examples",13,null],[11,"hash","","",14,null],[11,"eq","","",14,null],[11,"ne","","",14,null],[11,"clone","","",14,null],[11,"fmt","","",14,null],[11,"contains","","# Examples",14,null],[11,"hash","core::cmp","",15,null],[11,"fmt","","",15,null],[11,"eq","","",15,null],[11,"clone","","",15,null],[11,"reverse","","Reverse the `Ordering`.",15,null],[11,"cmp","","",15,null],[11,"partial_cmp","","",15,null],[11,"fmt","","",16,null],[11,"fmt","","",16,null],[11,"is","","Returns true if the boxed type is the same as `T`",16,null],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",16,null],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",16,null],[11,"is","","Forwards to the method defined on the type `Any`.",16,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",16,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",16,null],[11,"hash","core::any","",17,null],[11,"fmt","","",17,null],[11,"eq","","",17,null],[11,"ne","","",17,null],[11,"clone","","",17,null],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",17,{"inputs":[],"output":{"name":"typeid"}}],[11,"default","core::sync::atomic","",18,{"inputs":[],"output":{"name":"atomicbool"}}],[11,"default","","",19,{"inputs":[],"output":{"name":"atomicptr"}}],[11,"fmt","","",20,null],[11,"clone","","",20,null],[11,"new","","Creates a new `AtomicBool`.",18,{"inputs":[{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",18,null],[11,"store","","Stores a value into the bool.",18,null],[11,"swap","","Stores a value into the bool, returning the old value.",18,null],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",18,null],[11,"compare_exchange","","Stores a value into the `bool` if the current value is the same as the `current` value.",18,null],[11,"compare_exchange_weak","","Stores a value into the `bool` if the current value is the same as the `current` value.",18,null],[11,"fetch_and","","Logical &quot;and&quot; with a boolean value.",18,null],[11,"fetch_nand","","Logical &quot;nand&quot; with a boolean value.",18,null],[11,"fetch_or","","Logical &quot;or&quot; with a boolean value.",18,null],[11,"fetch_xor","","Logical &quot;xor&quot; with a boolean value.",18,null],[11,"new","","Creates a new `AtomicPtr`.",19,null],[11,"load","","Loads a value from the pointer.",19,null],[11,"store","","Stores a value into the pointer.",19,null],[11,"swap","","Stores a value into the pointer, returning the old value.",19,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",19,null],[11,"compare_exchange","","Stores a value into the pointer if the current value is the same as the `current` value.",19,null],[11,"compare_exchange_weak","","Stores a value into the pointer if the current value is the same as the `current` value.",19,null],[11,"default","","",21,{"inputs":[],"output":{"name":"atomici8"}}],[11,"fmt","","",21,null],[11,"new","","Creates a new atomic integer.",21,{"inputs":[{"name":"i8"}],"output":{"name":"atomici8"}}],[11,"load","","Loads a value from the atomic integer.",21,null],[11,"store","","Stores a value into the atomic integer.",21,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",21,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",21,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",21,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",21,null],[11,"fetch_add","","Add to the current value, returning the previous value.",21,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",21,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",21,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",21,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",21,null],[11,"default","","",22,{"inputs":[],"output":{"name":"atomicu8"}}],[11,"fmt","","",22,null],[11,"new","","Creates a new atomic integer.",22,{"inputs":[{"name":"u8"}],"output":{"name":"atomicu8"}}],[11,"load","","Loads a value from the atomic integer.",22,null],[11,"store","","Stores a value into the atomic integer.",22,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",22,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",22,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",22,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",22,null],[11,"fetch_add","","Add to the current value, returning the previous value.",22,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",22,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",22,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",22,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",22,null],[11,"default","","",23,{"inputs":[],"output":{"name":"atomici16"}}],[11,"fmt","","",23,null],[11,"new","","Creates a new atomic integer.",23,{"inputs":[{"name":"i16"}],"output":{"name":"atomici16"}}],[11,"load","","Loads a value from the atomic integer.",23,null],[11,"store","","Stores a value into the atomic integer.",23,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",23,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",23,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",23,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",23,null],[11,"fetch_add","","Add to the current value, returning the previous value.",23,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",23,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",23,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",23,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",23,null],[11,"default","","",24,{"inputs":[],"output":{"name":"atomicu16"}}],[11,"fmt","","",24,null],[11,"new","","Creates a new atomic integer.",24,{"inputs":[{"name":"u16"}],"output":{"name":"atomicu16"}}],[11,"load","","Loads a value from the atomic integer.",24,null],[11,"store","","Stores a value into the atomic integer.",24,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",24,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",24,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",24,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",24,null],[11,"fetch_add","","Add to the current value, returning the previous value.",24,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",24,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",24,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",24,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",24,null],[11,"default","","",25,{"inputs":[],"output":{"name":"atomici32"}}],[11,"fmt","","",25,null],[11,"new","","Creates a new atomic integer.",25,{"inputs":[{"name":"i32"}],"output":{"name":"atomici32"}}],[11,"load","","Loads a value from the atomic integer.",25,null],[11,"store","","Stores a value into the atomic integer.",25,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",25,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",25,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",25,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",25,null],[11,"fetch_add","","Add to the current value, returning the previous value.",25,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",25,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",25,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",25,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",25,null],[11,"default","","",26,{"inputs":[],"output":{"name":"atomicu32"}}],[11,"fmt","","",26,null],[11,"new","","Creates a new atomic integer.",26,{"inputs":[{"name":"u32"}],"output":{"name":"atomicu32"}}],[11,"load","","Loads a value from the atomic integer.",26,null],[11,"store","","Stores a value into the atomic integer.",26,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",26,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",26,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",26,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",26,null],[11,"fetch_add","","Add to the current value, returning the previous value.",26,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",26,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",26,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",26,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",26,null],[11,"default","","",27,{"inputs":[],"output":{"name":"atomici64"}}],[11,"fmt","","",27,null],[11,"new","","Creates a new atomic integer.",27,{"inputs":[{"name":"i64"}],"output":{"name":"atomici64"}}],[11,"load","","Loads a value from the atomic integer.",27,null],[11,"store","","Stores a value into the atomic integer.",27,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",27,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",27,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",27,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",27,null],[11,"fetch_add","","Add to the current value, returning the previous value.",27,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",27,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",27,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",27,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",27,null],[11,"default","","",28,{"inputs":[],"output":{"name":"atomicu64"}}],[11,"fmt","","",28,null],[11,"new","","Creates a new atomic integer.",28,{"inputs":[{"name":"u64"}],"output":{"name":"atomicu64"}}],[11,"load","","Loads a value from the atomic integer.",28,null],[11,"store","","Stores a value into the atomic integer.",28,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",28,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",28,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",28,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",28,null],[11,"fetch_add","","Add to the current value, returning the previous value.",28,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",28,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",28,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",28,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",28,null],[11,"default","","",29,{"inputs":[],"output":{"name":"atomicisize"}}],[11,"fmt","","",29,null],[11,"new","","Creates a new atomic integer.",29,{"inputs":[{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the atomic integer.",29,null],[11,"store","","Stores a value into the atomic integer.",29,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",29,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",29,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",29,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",29,null],[11,"fetch_add","","Add to the current value, returning the previous value.",29,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",29,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",29,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",29,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",29,null],[11,"default","","",30,{"inputs":[],"output":{"name":"atomicusize"}}],[11,"fmt","","",30,null],[11,"new","","Creates a new atomic integer.",30,{"inputs":[{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the atomic integer.",30,null],[11,"store","","Stores a value into the atomic integer.",30,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",30,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",30,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",30,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",30,null],[11,"fetch_add","","Add to the current value, returning the previous value.",30,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",30,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",30,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",30,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",30,null],[11,"fmt","","",18,null],[11,"fmt","","",19,null],[11,"new","core::cell","Creates a new `Cell` containing the given value.",31,{"inputs":[{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",31,null],[11,"set","","Sets the contained value.",31,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",31,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",31,null],[11,"clone","","",31,null],[11,"default","","",31,{"inputs":[],"output":{"name":"cell"}}],[11,"eq","","",31,null],[11,"partial_cmp","","",31,null],[11,"lt","","",31,null],[11,"le","","",31,null],[11,"gt","","",31,null],[11,"ge","","",31,null],[11,"cmp","","",31,null],[11,"fmt","","",32,null],[11,"eq","","",32,null],[11,"clone","","",32,null],[11,"new","","Creates a new `RefCell` containing `value`.",33,{"inputs":[{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",33,null],[11,"borrow_state","","Query the current state of this `RefCell`",33,null],[11,"borrow","","Immutably borrows the wrapped value.",33,null],[11,"borrow_mut","","Mutably borrows the wrapped value.",33,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",33,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",33,null],[11,"clone","","",33,null],[11,"default","","",33,{"inputs":[],"output":{"name":"refcell"}}],[11,"eq","","",33,null],[11,"partial_cmp","","",33,null],[11,"lt","","",33,null],[11,"le","","",33,null],[11,"gt","","",33,null],[11,"ge","","",33,null],[11,"cmp","","",33,null],[11,"deref","","",34,null],[11,"clone","","Copies a `Ref`.",34,{"inputs":[{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",34,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",35,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"deref","","",35,null],[11,"deref_mut","","",35,null],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",36,{"inputs":[{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",36,null],[11,"get","","Gets a mutable pointer to the wrapped value.",36,null],[11,"default","","",36,{"inputs":[],"output":{"name":"unsafecell"}}],[11,"fmt","core::char","",37,null],[11,"clone","","",37,null],[11,"next","","",37,null],[11,"size_hint","","",37,null],[11,"count","","",37,null],[11,"last","","",37,null],[11,"len","","",37,null],[11,"fmt","","",38,null],[11,"clone","","",38,null],[11,"next","","",38,null],[11,"size_hint","","",38,null],[11,"count","","",38,null],[11,"nth","","",38,null],[11,"last","","",38,null],[11,"len","","",38,null],[11,"fmt","","",39,null],[11,"as_slice","","Returns the remaining bytes of this iterator as a slice.",39,null],[11,"next","","",39,null],[11,"size_hint","","",39,null],[11,"fmt","","",40,null],[11,"as_slice","","Returns the remaining bytes of this iterator as a slice.",40,null],[11,"next","","",40,null],[11,"size_hint","","",40,null],[11,"fmt","core::iter::range","",41,null],[11,"clone","","",41,null],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",11,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",10,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",13,null],[11,"next","core::iter::range","",41,null],[11,"size_hint","","",41,null],[11,"next","","",41,null],[11,"size_hint","","",41,null],[11,"next","","",41,null],[11,"size_hint","","",41,null],[11,"next","core::ops","",10,null],[11,"size_hint","","",10,null],[11,"next_back","","",10,null],[11,"next","","",11,null],[11,"next","","",13,null],[11,"size_hint","","",13,null],[11,"next_back","","",13,null],[11,"fmt","core::iter::sources","",42,null],[11,"clone","","",42,null],[11,"next","","",42,null],[11,"size_hint","","",42,null],[11,"next_back","","",42,null],[11,"fmt","","",43,null],[11,"next","","",43,null],[11,"size_hint","","",43,null],[11,"next_back","","",43,null],[11,"len","","",43,null],[11,"clone","","",43,null],[11,"default","","",43,{"inputs":[],"output":{"name":"empty"}}],[11,"fmt","","",44,null],[11,"clone","","",44,null],[11,"next","","",44,null],[11,"size_hint","","",44,null],[11,"next_back","","",44,null],[11,"len","","",44,null],[11,"fmt","core::iter","",45,null],[11,"clone","","",45,null],[11,"next","","",45,null],[11,"size_hint","","",45,null],[11,"next_back","","",45,null],[11,"fmt","","",46,null],[11,"clone","","",46,null],[11,"next","","",46,null],[11,"size_hint","","",46,null],[11,"next_back","","",46,null],[11,"fmt","","",47,null],[11,"clone","","",47,null],[11,"next","","",47,null],[11,"size_hint","","",47,null],[11,"fmt","","",48,null],[11,"clone","","",48,null],[11,"next","","",48,null],[11,"count","","",48,null],[11,"nth","","",48,null],[11,"find","","",48,null],[11,"last","","",48,null],[11,"size_hint","","",48,null],[11,"next_back","","",48,null],[11,"fmt","","",49,null],[11,"clone","","",49,null],[11,"next","","",49,null],[11,"size_hint","","",49,null],[11,"next_back","","",49,null],[11,"clone","","",50,null],[11,"fmt","","",50,null],[11,"next","","",50,null],[11,"size_hint","","",50,null],[11,"next_back","","",50,null],[11,"clone","","",51,null],[11,"fmt","","",51,null],[11,"next","","",51,null],[11,"size_hint","","",51,null],[11,"next_back","","",51,null],[11,"clone","","",52,null],[11,"fmt","","",52,null],[11,"next","","",52,null],[11,"size_hint","","",52,null],[11,"next_back","","",52,null],[11,"fmt","","",53,null],[11,"clone","","",53,null],[11,"next","","# Overflow Behavior",53,null],[11,"size_hint","","",53,null],[11,"nth","","",53,null],[11,"count","","",53,null],[11,"next_back","","",53,null],[11,"fmt","","",54,null],[11,"clone","","",54,null],[11,"next","","",54,null],[11,"count","","",54,null],[11,"nth","","",54,null],[11,"last","","",54,null],[11,"size_hint","","",54,null],[11,"peek","","Returns a reference to the next() value without advancing the iterator.",54,null],[11,"is_empty","","Checks if the iterator has finished iterating.",54,null],[11,"clone","","",55,null],[11,"fmt","","",55,null],[11,"next","","",55,null],[11,"size_hint","","",55,null],[11,"clone","","",56,null],[11,"fmt","","",56,null],[11,"next","","",56,null],[11,"size_hint","","",56,null],[11,"fmt","","",57,null],[11,"clone","","",57,null],[11,"next","","",57,null],[11,"nth","","",57,null],[11,"count","","",57,null],[11,"last","","",57,null],[11,"size_hint","","",57,null],[11,"next_back","","",57,null],[11,"fmt","","",58,null],[11,"clone","","",58,null],[11,"next","","",58,null],[11,"nth","","",58,null],[11,"size_hint","","",58,null],[11,"clone","","",59,null],[11,"fmt","","",59,null],[11,"next","","",59,null],[11,"size_hint","","",59,null],[11,"clone","","",60,null],[11,"fmt","","",60,null],[11,"next","","",60,null],[11,"size_hint","","",60,null],[11,"next_back","","",60,null],[11,"fmt","","",61,null],[11,"clone","","",61,null],[11,"next","","",61,null],[11,"nth","","",61,null],[11,"last","","",61,null],[11,"count","","",61,null],[11,"size_hint","","",61,null],[11,"next_back","","",61,null],[11,"clone","","",62,null],[11,"fmt","","",62,null],[11,"next","","",62,null],[11,"size_hint","","",62,null],[11,"next_back","","",62,null],[11,"hash","core::option","",63,null],[11,"fmt","","",63,null],[11,"cmp","","",63,null],[11,"partial_cmp","","",63,null],[11,"lt","","",63,null],[11,"le","","",63,null],[11,"gt","","",63,null],[11,"ge","","",63,null],[11,"eq","","",63,null],[11,"ne","","",63,null],[11,"clone","","",63,null],[11,"is_some","","Returns `true` if the option is a `Some` value",63,null],[11,"is_none","","Returns `true` if the option is a `None` value",63,null],[11,"as_ref","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`",63,null],[11,"as_mut","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;mut T&gt;`",63,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",63,null],[11,"unwrap","","Moves the value `v` out of the `Option&lt;T&gt;` if it is `Some(v)`.",63,null],[11,"unwrap_or","","Returns the contained value or a default.",63,null],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",63,null],[11,"map","","Maps an `Option&lt;T&gt;` to `Option&lt;U&gt;` by applying a function to a contained value",63,null],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",63,null],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",63,null],[11,"ok_or","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",63,null],[11,"ok_or_else","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",63,null],[11,"iter","","Returns an iterator over the possibly contained value.",63,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",63,null],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",63,null],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",63,null],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",63,null],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",63,null],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",63,null],[11,"cloned","","Maps an `Option&lt;&amp;T&gt;` to an `Option&lt;T&gt;` by cloning the contents of the\noption.",63,null],[11,"unwrap_or_default","","Returns the contained value or a default",63,null],[11,"default","","",63,{"inputs":[],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",63,null],[11,"fmt","","",64,null],[11,"next","","",64,null],[11,"size_hint","","",64,null],[11,"next_back","","",64,null],[11,"clone","","",64,null],[11,"fmt","","",65,null],[11,"next","","",65,null],[11,"size_hint","","",65,null],[11,"next_back","","",65,null],[11,"fmt","","",66,null],[11,"clone","","",66,null],[11,"next","","",66,null],[11,"size_hint","","",66,null],[11,"next_back","","",66,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",63,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[11,"clone","core::raw","",67,null],[11,"hash","core::result","",68,null],[11,"fmt","","",68,null],[11,"cmp","","",68,null],[11,"partial_cmp","","",68,null],[11,"lt","","",68,null],[11,"le","","",68,null],[11,"gt","","",68,null],[11,"ge","","",68,null],[11,"eq","","",68,null],[11,"ne","","",68,null],[11,"clone","","",68,null],[11,"is_ok","","Returns true if the result is `Ok`",68,null],[11,"is_err","","Returns true if the result is `Err`",68,null],[11,"ok","","Converts from `Result&lt;T, E&gt;` to `Option&lt;T&gt;`",68,null],[11,"err","","Converts from `Result&lt;T, E&gt;` to `Option&lt;E&gt;`",68,null],[11,"as_ref","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;T, &amp;E&gt;`",68,null],[11,"as_mut","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;mut T, &amp;mut E&gt;`",68,null],[11,"map","","Maps a `Result&lt;T, E&gt;` to `Result&lt;U, E&gt;` by applying a function to a\ncontained `Ok` value, leaving an `Err` value untouched.",68,null],[11,"map_err","","Maps a `Result&lt;T, E&gt;` to `Result&lt;T, F&gt;` by applying a function to a\ncontained `Err` value, leaving an `Ok` value untouched.",68,null],[11,"iter","","Returns an iterator over the possibly contained value.",68,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",68,null],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",68,null],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",68,null],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",68,null],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",68,null],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",68,null],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",68,null],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",68,null],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",68,null],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",68,null],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",68,null],[11,"fmt","","",69,null],[11,"next","","",69,null],[11,"size_hint","","",69,null],[11,"next_back","","",69,null],[11,"clone","","",69,null],[11,"fmt","","",70,null],[11,"next","","",70,null],[11,"size_hint","","",70,null],[11,"next_back","","",70,null],[11,"fmt","","",71,null],[11,"next","","",71,null],[11,"size_hint","","",71,null],[11,"next_back","","",71,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",68,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","core::slice","",72,null],[11,"as_slice","","View the underlying data as a subslice of the original data.",72,null],[11,"next","","",72,null],[11,"size_hint","","",72,null],[11,"count","","",72,null],[11,"nth","","",72,null],[11,"last","","",72,null],[11,"next_back","","",72,null],[11,"clone","","",72,null],[11,"fmt","","",73,null],[11,"into_slice","","View the underlying data as a subslice of the original data.",73,null],[11,"next","","",73,null],[11,"size_hint","","",73,null],[11,"count","","",73,null],[11,"nth","","",73,null],[11,"last","","",73,null],[11,"next_back","","",73,null],[11,"fmt","","",74,null],[11,"clone","","",74,null],[11,"next","","",74,null],[11,"size_hint","","",74,null],[11,"next_back","","",74,null],[11,"fmt","","",75,null],[11,"next","","",75,null],[11,"size_hint","","",75,null],[11,"next_back","","",75,null],[11,"fmt","","",76,null],[11,"fmt","","",77,null],[11,"fmt","","",78,null],[11,"fmt","","",79,null],[11,"next","","",76,null],[11,"size_hint","","",76,null],[11,"next","","",77,null],[11,"size_hint","","",77,null],[11,"next","","",78,null],[11,"size_hint","","",78,null],[11,"next","","",79,null],[11,"size_hint","","",79,null],[11,"fmt","","",80,null],[11,"clone","","",80,null],[11,"next","","",80,null],[11,"size_hint","","",80,null],[11,"count","","",80,null],[11,"nth","","",80,null],[11,"last","","",80,null],[11,"next_back","","",80,null],[11,"fmt","","",81,null],[11,"clone","","",81,null],[11,"next","","",81,null],[11,"size_hint","","",81,null],[11,"count","","",81,null],[11,"nth","","",81,null],[11,"last","","",81,null],[11,"next_back","","",81,null],[11,"fmt","","",82,null],[11,"next","","",82,null],[11,"size_hint","","",82,null],[11,"count","","",82,null],[11,"nth","","",82,null],[11,"last","","",82,null],[11,"next_back","","",82,null],[11,"fmt","core::str::pattern","",83,null],[11,"eq","","",83,null],[11,"ne","","",83,null],[11,"clone","","",83,null],[11,"fmt","","",84,null],[11,"clone","","",84,null],[11,"haystack","","",84,null],[11,"next","","",84,null],[11,"next_match","","",84,null],[11,"next_reject","","",84,null],[11,"next_back","","",84,null],[11,"next_match_back","","",84,null],[11,"next_reject_back","","",84,null],[11,"fmt","","",85,null],[11,"clone","","",85,null],[11,"haystack","","",85,null],[11,"next","","",85,null],[11,"next_match","","",85,null],[11,"next_reject","","",85,null],[11,"next_back","","",85,null],[11,"next_match_back","","",85,null],[11,"next_reject_back","","",85,null],[11,"clone","","",86,null],[11,"fmt","","",86,null],[11,"haystack","","",86,null],[11,"next","","",86,null],[11,"next_match","","",86,null],[11,"next_reject","","",86,null],[11,"next_back","","",86,null],[11,"next_match_back","","",86,null],[11,"next_reject_back","","",86,null],[11,"fmt","","",87,null],[11,"clone","","",87,null],[11,"haystack","","",87,null],[11,"next","","",87,null],[11,"next_match","","",87,null],[11,"next_back","","",87,null],[11,"next_match_back","","",87,null],[11,"eq","core::str","",88,null],[11,"ne","","",88,null],[11,"clone","","",88,null],[11,"fmt","","",88,null],[11,"fmt","","",88,null],[11,"fmt","","",89,null],[11,"clone","","",89,null],[11,"eq","","",89,null],[11,"ne","","",89,null],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",89,null],[11,"fmt","","",89,null],[11,"fmt","","",90,null],[11,"clone","","",90,null],[11,"next","","",90,null],[11,"size_hint","","",90,null],[11,"next_back","","",90,null],[11,"as_str","","View the underlying data as a subslice of the original data.",90,null],[11,"fmt","","",91,null],[11,"clone","","",91,null],[11,"next","","",91,null],[11,"size_hint","","",91,null],[11,"next_back","","",91,null],[11,"as_str","","View the underlying data as a subslice of the original data.",91,null],[11,"fmt","","",92,null],[11,"clone","","",92,null],[11,"next","","",92,null],[11,"size_hint","","",92,null],[11,"count","","",92,null],[11,"last","","",92,null],[11,"nth","","",92,null],[11,"next_back","","",92,null],[11,"len","","",92,null],[11,"fmt","","",93,null],[11,"next","","",93,null],[11,"clone","","",93,null],[11,"fmt","","",94,null],[11,"next","","",94,null],[11,"clone","","",94,null],[11,"next_back","","",93,null],[11,"next_back","","",94,null],[11,"fmt","","",95,null],[11,"next","","",95,null],[11,"clone","","",95,null],[11,"fmt","","",96,null],[11,"next","","",96,null],[11,"clone","","",96,null],[11,"next_back","","",95,null],[11,"next_back","","",96,null],[11,"fmt","","",97,null],[11,"next","","",97,null],[11,"clone","","",97,null],[11,"fmt","","",98,null],[11,"next","","",98,null],[11,"clone","","",98,null],[11,"fmt","","",99,null],[11,"next","","",99,null],[11,"clone","","",99,null],[11,"fmt","","",100,null],[11,"next","","",100,null],[11,"clone","","",100,null],[11,"next_back","","",99,null],[11,"next_back","","",100,null],[11,"fmt","","",101,null],[11,"next","","",101,null],[11,"clone","","",101,null],[11,"fmt","","",102,null],[11,"next","","",102,null],[11,"clone","","",102,null],[11,"next_back","","",101,null],[11,"next_back","","",102,null],[11,"fmt","","",103,null],[11,"clone","","",103,null],[11,"next","","",103,null],[11,"size_hint","","",103,null],[11,"next_back","","",103,null],[11,"fmt","","",104,null],[11,"clone","","",104,null],[11,"next","","",104,null],[11,"size_hint","","",104,null],[11,"next_back","","",104,null],[11,"default","core::hash::sip","",105,{"inputs":[],"output":{"name":"siphasher13"}}],[11,"clone","","",105,null],[11,"fmt","","",105,null],[11,"default","","",106,{"inputs":[],"output":{"name":"siphasher24"}}],[11,"clone","","",106,null],[11,"fmt","","",106,null],[11,"default","","",107,{"inputs":[],"output":{"name":"siphasher"}}],[11,"clone","","",107,null],[11,"fmt","","",107,null],[11,"new","","Creates a new `SipHasher` with the two initial keys set to 0.",107,{"inputs":[],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",107,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"new","","Creates a new `SipHasher13` with the two initial keys set to 0.",105,{"inputs":[],"output":{"name":"siphasher13"}}],[11,"new_with_keys","","Creates a `SipHasher13` that is keyed off the provided keys.",105,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher13"}}],[11,"new","","Creates a new `SipHasher24` with the two initial keys set to 0.",106,{"inputs":[],"output":{"name":"siphasher24"}}],[11,"new_with_keys","","Creates a `SipHasher24` that is keyed off the provided keys.",106,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher24"}}],[11,"write","","",107,null],[11,"finish","","",107,null],[11,"write","","",105,null],[11,"finish","","",105,null],[11,"write","","",106,null],[11,"finish","","",106,null],[11,"fmt","core::hash","",108,null],[11,"build_hasher","","",108,null],[11,"clone","","",108,null],[11,"default","","",108,{"inputs":[],"output":{"name":"buildhasherdefault"}}],[11,"fmt","core::fmt","",109,null],[11,"field","core::fmt::builders","Adds a new field to the generated struct output.",110,null],[11,"finish","","Finishes output and returns any error encountered.",110,null],[11,"field","","Adds a new field to the generated tuple struct output.",111,null],[11,"finish","","Finishes output and returns any error encountered.",111,null],[11,"entry","","Adds a new entry to the set output.",112,null],[11,"entries","","Adds the contents of an iterator of entries to the set output.",112,null],[11,"finish","","Finishes output and returns any error encountered.",112,null],[11,"entry","","Adds a new entry to the list output.",113,null],[11,"entries","","Adds the contents of an iterator of entries to the list output.",113,null],[11,"finish","","Finishes output and returns any error encountered.",113,null],[11,"entry","","Adds a new entry to the map output.",114,null],[11,"entries","","Adds the contents of an iterator of entries to the map output.",114,null],[11,"finish","","Finishes output and returns any error encountered.",114,null],[11,"partial_cmp","core::fmt","",115,null],[11,"eq","","",115,null],[11,"cmp","","",115,null],[11,"hash","","",115,null],[11,"default","","",115,{"inputs":[],"output":{"name":"error"}}],[11,"fmt","","",115,null],[11,"clone","","",115,null],[11,"clone","","",116,null],[11,"fmt","","",116,null],[11,"fmt","","",116,null],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",117,null],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",117,null],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",117,null],[11,"write_fmt","","Writes some formatted information into this instance",117,null],[11,"flags","","Flags for formatting (packed version of rt::Flag)",117,null],[11,"fill","","Character used as &#39;fill&#39; whenever there is alignment",117,null],[11,"align","","Flag indicating what form of alignment was requested",117,null],[11,"width","","Optionally specified integer width that the output should be",117,null],[11,"precision","","Optionally specified precision for numeric types",117,null],[11,"sign_plus","","Determines if the `+` flag was specified.",117,null],[11,"sign_minus","","Determines if the `-` flag was specified.",117,null],[11,"alternate","","Determines if the `#` flag was specified.",117,null],[11,"sign_aware_zero_pad","","Determines if the `0` flag was specified.",117,null],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",117,null],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",117,null],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",117,null],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",117,null],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",117,null],[11,"write_str","","",117,null],[11,"write_char","","",117,null],[11,"write_fmt","","",117,null],[11,"fmt","","",115,null],[11,"fmt","core::marker","",8,null],[11,"fmt","core::cell","",31,null],[11,"fmt","","",33,null],[11,"fmt","","",34,null],[11,"fmt","","",35,null],[11,"fmt","","",36,null],[8,"__Deref","lazy_static","The `Deref` trait is used to specify the functionality of dereferencing\noperations, like `*v`.",null,null],[16,"Target","","The resulting type after dereferencing",118,null],[10,"deref","","The method called to dereference a value",118,null],[0,"lazy","","",null,null],[3,"Lazy","lazy_static::lazy","",null,null],[12,"0","","",119,null],[12,"1","","",119,null],[11,"get","","",119,null],[14,"__lazy_static_create!","lazy_static","",null,null],[14,"lazy_static!","","",null,null]],"paths":[[3,"Wrapping"],[3,"ParseFloatError"],[4,"FpCategory"],[3,"TryFromIntError"],[3,"ParseIntError"],[3,"NonZero"],[3,"Unique"],[3,"Shared"],[3,"PhantomData"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"RangeInclusive"],[3,"RangeToInclusive"],[4,"Ordering"],[8,"Any"],[3,"TypeId"],[3,"AtomicBool"],[3,"AtomicPtr"],[4,"Ordering"],[3,"AtomicI8"],[3,"AtomicU8"],[3,"AtomicI16"],[3,"AtomicU16"],[3,"AtomicI32"],[3,"AtomicU32"],[3,"AtomicI64"],[3,"AtomicU64"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"Ref"],[3,"RefMut"],[3,"UnsafeCell"],[3,"EscapeUnicode"],[3,"EscapeDefault"],[3,"EncodeUtf8"],[3,"EncodeUtf16"],[3,"StepBy"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[4,"Option"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[4,"SearchStep"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"SipHasher13"],[3,"SipHasher24"],[3,"SipHasher"],[3,"BuildHasherDefault"],[4,"Alignment"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Error"],[3,"Arguments"],[3,"Formatter"],[8,"__Deref"],[3,"Lazy"]]};
searchIndex["debug_builders"] = {"doc":"","items":[[3,"DebugStruct","debug_builders","A struct to help with `fmt::Debug` implementations.",null,null],[3,"DebugTuple","","A struct to help with `fmt::Debug` implementations.",null,null],[3,"DebugSet","","A struct to help with `fmt::Debug` implementations.",null,null],[3,"DebugList","","A struct to help with `fmt::Debug` implementations.",null,null],[3,"DebugMap","","A struct to help with `fmt::Debug` implementations.",null,null],[11,"new","","Creates a new `DebugStruct`.",0,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugstruct"}}],[11,"field","","Adds a new field to the generated struct output.",0,null],[11,"finish","","Consumes the `DebugStruct`, finishing output and returning any error\nencountered.",0,null],[11,"new","","Creates a new `DebugTuple`.",1,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugtuple"}}],[11,"field","","Adds a new field to the generated tuple struct output.",1,null],[11,"finish","","Consumes the `DebugTuple`, finishing output and returning any error\nencountered.",1,null],[11,"new","","Creates a new `DebugSet`.",2,{"inputs":[{"name":"formatter"}],"output":{"name":"debugset"}}],[11,"entry","","Adds a new entry to the set output.",2,null],[11,"finish","","Consumes the `DebugSet`, finishing output and returning any error\nencountered.",2,null],[11,"new","","Creates a new `DebugList`.",3,{"inputs":[{"name":"formatter"}],"output":{"name":"debuglist"}}],[11,"entry","","Adds a new entry to the set output.",3,null],[11,"finish","","Consumes the `DebugSet`, finishing output and returning any error\nencountered.",3,null],[11,"new","","Creates a new `DebugMap`.",4,{"inputs":[{"name":"formatter"}],"output":{"name":"debugmap"}}],[11,"entry","","Adds a new entry to the map output.",4,null],[11,"finish","","Consumes the `DebugMap`, finishing output and returning any error\nencountered.",4,null]],"paths":[[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"]]};
searchIndex["nodrop"] = {"doc":"","items":[[3,"NoDrop","nodrop","A type holding **T** that will not call its destructor on drop",null,null],[11,"new","","Create a new **NoDrop**.",0,{"inputs":[{"name":"t"}],"output":{"name":"nodrop"}}],[11,"into_inner","","Extract the inner value.",0,null],[11,"drop","","",0,null],[11,"deref","","",0,null],[11,"deref_mut","","",0,null]],"paths":[[3,"NoDrop"]]};
searchIndex["smallvec"] = {"doc":"Small vectors in various sizes. These store a certain number of elements inline and fall back\nto the heap for larger allocations.","items":[[3,"SmallVecMoveIterator","smallvec","",null,null],[3,"SmallVec","","",null,null],[6,"SmallVec1","","Deprecated alias to ease transition from an earlier version.",null,null],[6,"SmallVec2","","Deprecated alias to ease transition from an earlier version.",null,null],[6,"SmallVec4","","Deprecated alias to ease transition from an earlier version.",null,null],[6,"SmallVec8","","Deprecated alias to ease transition from an earlier version.",null,null],[6,"SmallVec16","","Deprecated alias to ease transition from an earlier version.",null,null],[6,"SmallVec24","","Deprecated alias to ease transition from an earlier version.",null,null],[6,"SmallVec32","","Deprecated alias to ease transition from an earlier version.",null,null],[8,"VecLike","","",null,null],[10,"len","","",0,null],[10,"push","","",0,null],[8,"Array","","",null,null],[16,"Item","","",1,null],[10,"size","","",1,{"inputs":[],"output":{"name":"usize"}}],[10,"ptr","","",1,null],[10,"ptr_mut","","",1,null],[11,"len","collections::vec","",2,null],[11,"push","","",2,null],[11,"next","smallvec","",3,null],[11,"drop","","",3,null],[11,"set_len","","",4,null],[11,"inline_size","","",4,null],[11,"len","","",4,null],[11,"is_empty","","",4,null],[11,"capacity","","",4,null],[11,"spilled","","",4,null],[11,"into_iter","","NB: For efficiency reasons (avoiding making a second copy of the inline elements), this\nactually clears out the original array instead of moving it.\nFIXME: Rename this to `drain`? It’s more like `Vec::drain` than `Vec::into_iter`.",4,null],[11,"push","","",4,null],[11,"push_all_move","","",4,null],[11,"pop","","",4,null],[11,"grow","","",4,null],[11,"reserve","","",4,null],[11,"reserve_exact","","",4,null],[11,"shrink_to_fit","","",4,null],[11,"truncate","","",4,null],[11,"swap_remove","","",4,null],[11,"clear","","",4,null],[11,"remove","","",4,null],[11,"insert","","",4,null],[11,"deref","","",4,null],[11,"deref_mut","","",4,null],[11,"index","","",4,null],[11,"index_mut","","",4,null],[11,"index","","",4,null],[11,"index_mut","","",4,null],[11,"index","","",4,null],[11,"index_mut","","",4,null],[11,"index","","",4,null],[11,"index_mut","","",4,null],[11,"index","","",4,null],[11,"index_mut","","",4,null],[11,"len","","",4,null],[11,"push","","",4,null],[11,"from_iter","","",4,{"inputs":[{"name":"i"}],"output":{"name":"smallvec"}}],[11,"extend","","",4,null],[11,"fmt","","",4,null],[11,"new","","",4,{"inputs":[],"output":{"name":"smallvec"}}],[11,"drop","","",4,null],[11,"clone","","",4,null]],"paths":[[8,"VecLike"],[8,"Array"],[3,"Vec"],[3,"SmallVecMoveIterator"],[3,"SmallVec"]]};
searchIndex["vec_map"] = {"doc":"A simple map based on a vector for small integer keys. Space requirements\nare O(highest integer key).","items":[[3,"VecMap","vec_map","A map optimized for small integer keys.",null,null],[3,"VacantEntry","","A vacant Entry.",null,null],[3,"OccupiedEntry","","An occupied Entry.",null,null],[3,"Iter","","An iterator over the key-value pairs of a map.",null,null],[3,"IterMut","","An iterator over the key-value pairs of a map, with the\nvalues being mutable.",null,null],[3,"Keys","","An iterator over the keys of a map.",null,null],[3,"Values","","An iterator over the values of a map.",null,null],[3,"IntoIter","","A consuming iterator over the key-value pairs of a map.",null,null],[3,"Drain","","A draining iterator over the key-value pairs of a map.",null,null],[4,"Entry","","A view into a single entry in a map, which may either be vacant or occupied.",null,null],[13,"Vacant","","A vacant Entry",0,null],[13,"Occupied","","An occupied Entry",0,null],[11,"clone","","",1,null],[11,"default","","",1,{"inputs":[],"output":{"name":"self"}}],[11,"hash","","",1,null],[11,"new","","Creates an empty `VecMap`.",1,{"inputs":[],"output":{"name":"self"}}],[11,"with_capacity","","Creates an empty `VecMap` with space for at least `capacity`\nelements before resizing.",1,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"capacity","","Returns the number of elements the `VecMap` can hold without\nreallocating.",1,null],[11,"reserve_len","","Reserves capacity for the given `VecMap` to contain `len` distinct keys.\nIn the case of `VecMap` this means reallocations will not occur as long\nas all inserted keys are less than `len`.",1,null],[11,"reserve_len_exact","","Reserves the minimum capacity for the given `VecMap` to contain `len` distinct keys.\nIn the case of `VecMap` this means reallocations will not occur as long as all inserted\nkeys are less than `len`.",1,null],[11,"keys","","Returns an iterator visiting all keys in ascending order of the keys.\nThe iterator&#39;s element type is `usize`.",1,null],[11,"values","","Returns an iterator visiting all values in ascending order of the keys.\nThe iterator&#39;s element type is `&amp;&#39;r V`.",1,null],[11,"iter","","Returns an iterator visiting all key-value pairs in ascending order of the keys.\nThe iterator&#39;s element type is `(usize, &amp;&#39;r V)`.",1,null],[11,"iter_mut","","Returns an iterator visiting all key-value pairs in ascending order of the keys,\nwith mutable references to the values.\nThe iterator&#39;s element type is `(usize, &amp;&#39;r mut V)`.",1,null],[11,"append","","Moves all elements from `other` into the map while overwriting existing keys.",1,null],[11,"split_off","","Splits the collection into two at the given key.",1,null],[11,"drain","","Returns an iterator visiting all key-value pairs in ascending order of\nthe keys, emptying (but not consuming) the original `VecMap`.\nThe iterator&#39;s element type is `(usize, &amp;&#39;r V)`. Keeps the allocated memory for reuse.",1,null],[11,"len","","Returns the number of elements in the map.",1,null],[11,"is_empty","","Returns true if the map contains no elements.",1,null],[11,"clear","","Clears the map, removing all key-value pairs.",1,null],[11,"get","","Returns a reference to the value corresponding to the key.",1,null],[11,"contains_key","","Returns true if the map contains a value for the specified key.",1,null],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",1,null],[11,"insert","","Inserts a key-value pair into the map. If the key already had a value\npresent in the map, that value is returned. Otherwise, `None` is returned.",1,null],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",1,null],[11,"entry","","Gets the given key&#39;s corresponding entry in the map for in-place manipulation.",1,null],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and\nreturns a mutable reference to the value in the entry.",0,null],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default\nfunction if empty, and returns a mutable reference to the value in the\nentry.",0,null],[11,"insert","","Sets the value of the entry with the VacantEntry&#39;s key,\nand returns a mutable reference to it.",2,null],[11,"get","","Gets a reference to the value in the entry.",3,null],[11,"get_mut","","Gets a mutable reference to the value in the entry.",3,null],[11,"into_mut","","Converts the entry into a mutable reference to its value.",3,null],[11,"insert","","Sets the value of the entry with the OccupiedEntry&#39;s key,\nand returns the entry&#39;s old value.",3,null],[11,"remove","","Takes the value of the entry out of the map, and returns it.",3,null],[11,"eq","","",1,null],[11,"partial_cmp","","",1,null],[11,"cmp","","",1,null],[11,"fmt","","",1,null],[11,"from_iter","","",1,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"into_iter","","Returns an iterator visiting all key-value pairs in ascending order of\nthe keys, consuming the original `VecMap`.\nThe iterator&#39;s element type is `(usize, &amp;&#39;r V)`.",1,null],[11,"extend","","",1,null],[11,"extend","","",1,null],[11,"index","","",1,null],[11,"index","","",1,null],[11,"index_mut","","",1,null],[11,"index_mut","","",1,null],[11,"clone","","",4,null],[11,"next","","",4,null],[11,"size_hint","","",4,null],[11,"next_back","","",4,null],[11,"next","","",5,null],[11,"size_hint","","",5,null],[11,"next_back","","",5,null],[11,"clone","","",6,null],[11,"clone","","",7,null],[11,"next","","",8,null],[11,"size_hint","","",8,null],[11,"next_back","","",8,null],[11,"next","","",6,null],[11,"size_hint","","",6,null],[11,"next_back","","",6,null],[11,"next","","",7,null],[11,"size_hint","","",7,null],[11,"next_back","","",7,null],[11,"next","","",9,null],[11,"size_hint","","",9,null],[11,"next_back","","",9,null]],"paths":[[4,"Entry"],[3,"VecMap"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"Iter"],[3,"IterMut"],[3,"Keys"],[3,"Values"],[3,"Drain"],[3,"IntoIter"]]};
searchIndex["ansi_term"] = {"doc":"This is a library for controlling colours and formatting, such as\nred bold text or blue underlined text, on ANSI terminals.","items":[[3,"ANSIString","ansi_term","An ANSI String is a string coupled with the Style to display it\nin a terminal.",null,null],[3,"Style","","A style is a collection of properties that can format a string\nusing ANSI escape codes.",null,null],[3,"ANSIStrings","","A set of `ANSIString`s collected together, in order to be written with a\nminimum of control characters.",null,null],[12,"0","","",0,null],[4,"Colour","","A colour is one specific type of ANSI escape code, and can refer\nto either the foreground or background colour.",null,null],[13,"Black","","Colour #0 (foreground code `30`, background code `40`).",1,null],[13,"Red","","Colour #1 (foreground code `31`, background code `41`).",1,null],[13,"Green","","Colour #2 (foreground code `32`, background code `42`).",1,null],[13,"Yellow","","Colour #3 (foreground code `33`, background code `43`).",1,null],[13,"Blue","","Colour #4 (foreground code `34`, background code `44`).",1,null],[13,"Purple","","Colour #5 (foreground code `35`, background code `45`).",1,null],[13,"Cyan","","Colour #6 (foreground code `36`, background code `46`).",1,null],[13,"White","","Colour #7 (foreground code `37`, background code `47`).",1,null],[13,"Fixed","","A colour number from 0 to 255, for use in 256-colour terminal\nenvironments.",1,null],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"fmt","","",2,null],[11,"from","","",2,{"inputs":[{"name":"s"}],"output":{"name":"ansistring"}}],[11,"deref","","",2,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"normal","","Return a Style with the foreground colour set to this colour.",1,null],[11,"paint","","Paints the given text with this colour, returning an ANSI string.\nThis is a short-cut so you don&#39;t have to use Blue.normal() just\nto get blue text.",1,null],[11,"bold","","Returns a Style with the bold property set.",1,null],[11,"dimmed","","Returns a Style with the dimmed property set.",1,null],[11,"italic","","Returns a Style with the italic property set.",1,null],[11,"underline","","Returns a Style with the underline property set.",1,null],[11,"blink","","Returns a Style with the blink property set.",1,null],[11,"reverse","","Returns a Style with the reverse property set.",1,null],[11,"hidden","","Returns a Style with the hidden property set.",1,null],[11,"on","","Returns a Style with the background colour property set.",1,null],[11,"fmt","","",3,null],[11,"clone","","",3,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"new","","Creates a new Style with no differences.",3,{"inputs":[],"output":{"name":"style"}}],[11,"paint","","Paints the given text with this colour, returning an ANSI string.",3,null],[11,"bold","","Returns a Style with the bold property set.",3,null],[11,"dimmed","","Returns a Style with the dimmed property set.",3,null],[11,"italic","","Returns a Style with the italic property set.",3,null],[11,"underline","","Returns a Style with the underline property set.",3,null],[11,"blink","","Returns a Style with the blink property set.",3,null],[11,"reverse","","Returns a Style with the reverse property set.",3,null],[11,"hidden","","Returns a Style with the hidden property set.",3,null],[11,"on","","Returns a Style with the background colour property set.",3,null],[11,"default","","",3,{"inputs":[],"output":{"name":"style"}}],[11,"fmt","","",0,null]],"paths":[[3,"ANSIStrings"],[4,"Colour"],[3,"ANSIString"],[3,"Style"]]};
searchIndex["odds"] = {"doc":"Odds and ends — collection miscellania.","items":[[3,"Fix","odds","Fixpoint combinator for rust closures, generalized over the return type.",null,null],[12,"0","","",0,null],[5,"ref_eq","","Compare if **a** and **b** are equal *as pointers*.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"bool"}}],[5,"ptr_eq","","Compare if **a** and **b** are equal pointers.",null,null],[5,"raw_byte_repr","","Safe to use with any wholly initialized memory `ptr`",null,null],[5,"get_unchecked","","Use `debug_assert!` to check indexing in debug mode. In release mode, no checks are done.",null,null],[5,"get_unchecked_mut","","Use `debug_assert!` to check indexing in debug mode. In release mode, no checks are done.",null,null],[5,"debug_assert_unreachable","","Act as `debug_assert!` in debug mode, asserting that this point is not reached.",null,{"inputs":[],"output":null}],[5,"slice_unchecked","","Check slicing bounds in debug mode, otherwise just act as an unchecked\nslice call.",null,null],[5,"slice_unchecked_mut","","Check slicing bounds in debug mode, otherwise just act as an unchecked\nslice call.",null,null],[5,"ref_slice","","Create a length 1 slice out of a reference",null,null],[5,"ref_slice_mut","","Create a length 1 mutable slice out of a reference",null,null],[11,"start","core::ops","",1,null],[11,"end","","",2,null],[11,"start","","",3,null],[11,"end","","",3,null],[11,"call","odds","",0,null],[11,"clone","","",0,null],[0,"string","","Extensions to `&amp;str` and `String`",null,null],[3,"Prefixes","odds::string","Iterator of all non-empty prefixes",null,null],[3,"Suffixes","","Iterator of all non-empty suffixes",null,null],[3,"Substrings","","Iterator of all non-empty substrings",null,null],[8,"StrExt","","Extra methods for `str`",null,null],[10,"rep","","Repeat the string `n` times.",4,null],[10,"append","","Requires `feature=&quot;std&quot;`",4,null],[10,"prefixes","","All non-empty prefixes",4,null],[10,"suffixes","","All non-empty suffixes",4,null],[10,"substrings","","Produce all non-empty substrings",4,null],[10,"is_acceptable_index","","Return `true` if `index` is acceptable for slicing the string.",4,null],[8,"StrSlice","","Extension trait for `str` for string slicing without panicking",null,null],[10,"get_slice","","Return a slice of the string, if it is in bounds /and on character boundaries/,\notherwise return `None`",5,null],[8,"StringExt","","Extra methods for `String`",null,null],[10,"insert_str","","**Panics** if `index` is out of bounds.",6,null],[11,"clone","","",7,null],[11,"next","","",7,null],[11,"clone","","",8,null],[11,"next","","",8,null],[11,"clone","","",9,null],[11,"next","","",9,null],[11,"insert_str","collections::string","**Panics** if `index` is out of bounds.",10,null],[0,"vec","odds","Extensions to `Vec`",null,null],[8,"VecExt","odds::vec","Extra methods for `Vec&lt;T&gt;`",null,null],[10,"splice","","Remove elements in a range, and insert from an iterator in their place.",11,null],[10,"retain_mut","","Retains only the elements specified by the predicate.",11,null],[11,"splice","collections::vec","",12,null],[11,"retain_mut","","",12,null],[8,"IndexRange","odds","**IndexRange** is implemented by Rust&#39;s built-in range types, produced\nby range syntax like `..`, `a..`, `..b` or `c..d`.",null,null],[11,"start","","Start index (inclusive)",13,null],[11,"end","","End index (exclusive)",13,null],[11,"start","","Start index (inclusive)",13,null],[11,"end","","End index (exclusive)",13,null]],"paths":[[3,"Fix"],[3,"RangeFrom"],[3,"RangeTo"],[3,"Range"],[8,"StrExt"],[8,"StrSlice"],[8,"StringExt"],[3,"Prefixes"],[3,"Suffixes"],[3,"Substrings"],[3,"String"],[8,"VecExt"],[3,"Vec"],[8,"IndexRange"]]};
searchIndex["strsim"] = {"doc":"This library implements string similarity metrics. Currently includes\nHamming, Levenshtein, Jaro, and Jaro-Winkler.","items":[[4,"StrSimError","strsim","",null,null],[13,"DifferentLengthArgs","","",0,null],[5,"hamming","","Calculates the number of positions in the two strings where the characters\ndiffer. Returns an error if the strings have different lengths.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"hammingresult"}}],[5,"jaro","","Calculates the Jaro similarity between two strings. The returned value\nis between 0.0 and 1.0 (higher value means more similar).",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"f64"}}],[5,"jaro_against_vec","","Calculates the Jaro distance between a string and each string in a vector.\nReturns a vector of corresponding values between 0.0 and 1.0 (higher value\nmeans more similar).",null,{"inputs":[{"name":"str"},{"name":"vec"}],"output":{"name":"vec"}}],[5,"jaro_winkler","","Like Jaro but gives a boost to strings that have a common prefix.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"f64"}}],[5,"jaro_winkler_against_vec","","Calculates the Jaro-Winkler distances between a string and each string\nin a vector. Returns a vector of corresponding values.",null,{"inputs":[{"name":"str"},{"name":"vec"}],"output":{"name":"vec"}}],[5,"levenshtein","","Calculates the minimum number of insertions, deletions, and substitutions\nrequired to change one string into the other.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"usize"}}],[5,"levenshtein_against_vec","","Calculates the Levenshtein distance between a string and each string in a\nvector. Returns a vector of corresponding values.",null,{"inputs":[{"name":"str"},{"name":"vec"}],"output":{"name":"vec"}}],[5,"damerau_levenshtein","","Same as Levenshtein but allows for adjacent transpositions.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"usize"}}],[5,"damerau_levenshtein_against_vec","","Calculates the Damerau-Levenshtein distance between a string and each string\nin a vector. Returns a vector of corresponding values.",null,{"inputs":[{"name":"str"},{"name":"vec"}],"output":{"name":"vec"}}],[6,"HammingResult","","",null,null],[11,"eq","","",0,null],[11,"fmt","","",0,null]],"paths":[[4,"StrSimError"]]};
searchIndex["unicode_width"] = {"doc":"Determine displayed width of `char` and `str` types according to\n[Unicode Standard Annex #11](http://www.unicode.org/reports/tr11/)\nrules.","items":[[17,"UNICODE_VERSION","unicode_width","The version of [Unicode](http://www.unicode.org/)\nthat this version of unicode-width is based on.",null,null],[8,"UnicodeWidthChar","","Methods for determining displayed width of Unicode characters.",null,null],[10,"width","","Returns the character&#39;s displayed width in columns, or `None` if the\ncharacter is a control character other than `&#39;\\x00&#39;`.",0,null],[10,"width_cjk","","Returns the character&#39;s displayed width in columns, or `None` if the\ncharacter is a control character other than `&#39;\\x00&#39;`.",0,null],[8,"UnicodeWidthStr","","Methods for determining displayed width of Unicode strings.",null,null],[10,"width","","Returns the string&#39;s displayed width in columns.",1,null],[10,"width_cjk","","Returns the string&#39;s displayed width in columns.",1,null]],"paths":[[8,"UnicodeWidthChar"],[8,"UnicodeWidthStr"]]};
searchIndex["linked_hash_map"] = {"doc":"A HashMap wrapper that holds key-value pairs in insertion order.","items":[[3,"LinkedHashMap","linked_hash_map","A linked hash map.",null,null],[3,"Iter","","An insertion-order iterator over a `LinkedHashMap`&#39;s entries, with immutable references to the\nvalues.",null,null],[3,"IterMut","","An insertion-order iterator over a `LinkedHashMap`&#39;s entries, with mutable references to the\nvalues.",null,null],[3,"Keys","","An insertion-order iterator over a `LinkedHashMap`&#39;s keys.",null,null],[3,"Values","","An insertion-order iterator over a `LinkedHashMap`&#39;s values.",null,null],[11,"new","","Creates a linked hash map.",0,{"inputs":[],"output":{"name":"self"}}],[11,"with_capacity","","Creates an empty linked hash map with the given initial capacity.",0,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"with_hash_state","","Creates an empty linked hash map with the given initial hash state.",0,{"inputs":[{"name":"s"}],"output":{"name":"self"}}],[11,"with_capacity_and_hash_state","","Creates an empty linked hash map with the given initial capacity and hash state.",0,{"inputs":[{"name":"usize"},{"name":"s"}],"output":{"name":"self"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted into the map. The\nmap may reserve more space to avoid frequent allocations.",0,null],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It will drop down as much as possible\nwhile maintaining the internal rules and possibly leaving some space in accordance with the\nresize policy.",0,null],[11,"insert","","Inserts a key-value pair into the map. If the key already existed, the old value is\nreturned.",0,null],[11,"contains_key","","Checks if the map contains the given key.",0,null],[11,"get","","Returns the value corresponding to the key in the map.",0,null],[11,"get_mut","","Returns the mutable reference corresponding to the key in the map.",0,null],[11,"get_refresh","","Returns the value corresponding to the key in the map.",0,null],[11,"remove","","Removes and returns the value corresponding to the key from the map.",0,null],[11,"capacity","","Returns the maximum number of key-value pairs the map can hold without reallocating.",0,null],[11,"pop_front","","Removes the first entry.",0,null],[11,"front","","Gets the first entry.",0,null],[11,"pop_back","","Removes the last entry.",0,null],[11,"back","","Gets the last entry.",0,null],[11,"len","","Returns the number of key-value pairs in the map.",0,null],[11,"is_empty","","Returns whether the map is currently empty.",0,null],[11,"clear","","Clears the map of all key-value pairs.",0,null],[11,"iter","","Returns a double-ended iterator visiting all key-value pairs in order of insertion.\nIterator element type is `(&amp;&#39;a K, &amp;&#39;a V)`",0,null],[11,"iter_mut","","Returns a double-ended iterator visiting all key-value pairs in order of insertion.\nIterator element type is `(&amp;&#39;a K, &amp;&#39;a mut V)`\n# Examples\n```\nuse linked_hash_map::LinkedHashMap;",0,null],[11,"keys","","Returns a double-ended iterator visiting all key in order of insertion.",0,null],[11,"values","","Returns a double-ended iterator visiting all values in order of insertion.",0,null],[11,"index","","",0,null],[11,"index_mut","","",0,null],[11,"clone","","",0,null],[11,"default","","",0,{"inputs":[],"output":{"name":"self"}}],[11,"extend","","",0,null],[11,"extend","","",0,null],[11,"from_iter","","",0,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"fmt","","Returns a string that lists the key-value pairs in insertion order.",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"partial_cmp","","",0,null],[11,"lt","","",0,null],[11,"le","","",0,null],[11,"ge","","",0,null],[11,"gt","","",0,null],[11,"cmp","","",0,null],[11,"hash","","",0,null],[11,"drop","","",0,null],[11,"clone","","",1,null],[11,"next","","",1,null],[11,"size_hint","","",1,null],[11,"next","","",2,null],[11,"size_hint","","",2,null],[11,"next_back","","",1,null],[11,"next_back","","",2,null],[11,"len","","",1,null],[11,"len","","",2,null],[11,"clone","","",3,null],[11,"next","","",3,null],[11,"size_hint","","",3,null],[11,"next_back","","",3,null],[11,"len","","",3,null],[11,"clone","","",4,null],[11,"next","","",4,null],[11,"size_hint","","",4,null],[11,"next_back","","",4,null],[11,"len","","",4,null]],"paths":[[3,"LinkedHashMap"],[3,"Iter"],[3,"IterMut"],[3,"Keys"],[3,"Values"]]};
searchIndex["bitflags"] = {"doc":"A typesafe bitmask flag generator.","items":[[14,"bitflags!","bitflags","The `bitflags!` macro generates a `struct` that holds a set of C-style\nbitmask flags. It is useful for creating typesafe wrappers for C APIs.",null,null]],"paths":[]};
searchIndex["log"] = {"doc":"A lightweight logging facade.","items":[[3,"LogRecord","log","The &quot;payload&quot; of a log message.",null,null],[3,"LogMetadata","","Metadata about a log message.",null,null],[3,"LogLocation","","The location of a log message.",null,null],[3,"MaxLogLevelFilter","","A token providing read and write access to the global maximum log level\nfilter.",null,null],[3,"SetLoggerError","","The type returned by `set_logger` if `set_logger` has already been called.",null,null],[3,"ShutdownLoggerError","","The type returned by `shutdown_logger_raw` if `shutdown_logger_raw` has\nalready been called or if `set_logger_raw` has not been called yet.",null,null],[4,"LogLevel","","An enum representing the available verbosity levels of the logging framework",null,null],[13,"Error","","The &quot;error&quot; level.",0,null],[13,"Warn","","The &quot;warn&quot; level.",0,null],[13,"Info","","The &quot;info&quot; level.",0,null],[13,"Debug","","The &quot;debug&quot; level.",0,null],[13,"Trace","","The &quot;trace&quot; level.",0,null],[4,"LogLevelFilter","","An enum representing the available verbosity level filters of the logging\nframework.",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the `Error` log level.",1,null],[13,"Warn","","Corresponds to the `Warn` log level.",1,null],[13,"Info","","Corresponds to the `Info` log level.",1,null],[13,"Debug","","Corresponds to the `Debug` log level.",1,null],[13,"Trace","","Corresponds to the `Trace` log level.",1,null],[5,"max_log_level","","Returns the current maximum log level.",null,{"inputs":[],"output":{"name":"loglevelfilter"}}],[5,"set_logger","","Sets the global logger.",null,{"inputs":[{"name":"m"}],"output":{"name":"result"}}],[5,"set_logger_raw","","Sets the global logger from a raw pointer.",null,{"inputs":[{"name":"m"}],"output":{"name":"result"}}],[5,"shutdown_logger","","Shuts down the global logger.",null,{"inputs":[],"output":{"name":"result"}}],[5,"shutdown_logger_raw","","Shuts down the global logger.",null,{"inputs":[],"output":{"name":"result"}}],[8,"Log","","A trait encapsulating the operations required of a logger",null,null],[10,"enabled","","Determines if a log message with the specified metadata would be\nlogged.",2,null],[10,"log","","Logs the `LogRecord`.",2,null],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"eq","","",0,null],[11,"eq","","",0,null],[11,"partial_cmp","","",0,null],[11,"partial_cmp","","",0,null],[11,"cmp","","",0,null],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",0,null],[11,"max","","Returns the most verbose logging level.",0,{"inputs":[],"output":{"name":"loglevel"}}],[11,"to_log_level_filter","","Converts the `LogLevel` to the equivalent `LogLevelFilter`.",0,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"eq","","",1,null],[11,"eq","","",1,null],[11,"partial_cmp","","",1,null],[11,"partial_cmp","","",1,null],[11,"cmp","","",1,null],[11,"from_str","","",1,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",1,null],[11,"max","","Returns the most verbose logging level filter.",1,{"inputs":[],"output":{"name":"loglevelfilter"}}],[11,"to_log_level","","Converts `self` to the equivalent `LogLevel`.",1,null],[11,"args","","The message body.",3,null],[11,"metadata","","Metadata about the log directive.",3,null],[11,"location","","The location of the log directive.",3,null],[11,"level","","The verbosity level of the message.",3,null],[11,"target","","The name of the target of the directive.",3,null],[11,"level","","The verbosity level of the message.",4,null],[11,"target","","The name of the target of the directive.",4,null],[11,"fmt","","",5,null],[11,"clone","","",5,null],[11,"module_path","","The module path of the message.",5,null],[11,"file","","The source file containing the message.",5,null],[11,"line","","The line containing the message.",5,null],[11,"fmt","","",6,null],[11,"get","","Gets the current maximum log level filter.",6,null],[11,"set","","Sets the maximum log level.",6,null],[11,"fmt","","",7,null],[11,"fmt","","",7,null],[11,"description","","",7,null],[11,"fmt","","",8,null],[11,"fmt","","",8,null],[11,"description","","",8,null],[14,"log!","","The standard logging macro.",null,null],[14,"error!","","Logs a message at the error level.",null,null],[14,"warn!","","Logs a message at the warn level.",null,null],[14,"info!","","Logs a message at the info level.",null,null],[14,"debug!","","Logs a message at the debug level.",null,null],[14,"trace!","","Logs a message at the trace level.",null,null],[14,"log_enabled!","","Determines if a message logged at the specified level in that module will\nbe logged.",null,null]],"paths":[[4,"LogLevel"],[4,"LogLevelFilter"],[8,"Log"],[3,"LogRecord"],[3,"LogMetadata"],[3,"LogLocation"],[3,"MaxLogLevelFilter"],[3,"SetLoggerError"],[3,"ShutdownLoggerError"]]};
searchIndex["cfg_if"] = {"doc":"A macro for defining #[cfg] if-else statements.","items":[[14,"cfg_if!","cfg_if","",null,null]],"paths":[]};
initSearch(searchIndex);
